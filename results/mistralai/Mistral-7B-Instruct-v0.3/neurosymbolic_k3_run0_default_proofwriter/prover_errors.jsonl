{"timestamp": "2025-05-01T03:25:28.386878", "premises": ["Red(Anne)", "Blue(Charlie)", "Nice(Charlie)", "Red(Charlie)", "Round(Charlie)", "White(Charlie)", "Cold(Erin)", "Blue(Harry)", "Nice(Harry)", "Round(Harry)", "White(Harry)", "all x. (White(x) & Red(x) -> Blue(x))", "all x. (Red(x) -> White(x)) (Contradicts_the_previous_rule)", "all x. (Blue(x) -> Round(x))", "all x. (Blue(x) -> Nice(x))", "all x. (Green(x) & White(x) -> Cold(x))", "all x. (Nice(x) -> Green(x))", "all x. (White(x) & Green(x) -> Red(x))", "if White(Erin) & Nice(Erin) then Green(Erin)"], "conclusion": "Round(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "The function '(Red(x) -> White(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nall x. (Red(x) -> White(x)) (Contradicts_the_previous_rule)\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 521, in attempt_ApplicationExpression\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: The function '(Red(x) -> White(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: The function '(Red(x) -> White(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nall x. (Red(x) -> White(x)) (Contradicts_the_previous_rule)\n                          ^\n"}
{"timestamp": "2025-05-01T03:25:42.266957", "premises": ["BaldEagle(x) -> Red(x)", "BaldEagle(x) -> Needs(x, Cat)", "Visits(BaldEagle(x), Cat)", "Cold(Cat)", "Nice(Cat)", "Young(Cat)", "Needs(Cow, BaldEagle)", "Needs(Cow, Tiger)", "Sees(Cow, BaldEagle)", "Sees(Tiger, BaldEagle)", "Sees(Tiger, Cat)", "Visits(Tiger, Cat)", "Cold(x) -> Visits(x, Cow)", "Visits(x, Tiger) -> Sees(x, BaldEagle)", "Young(x) & Visits(x, Cow) -> Cold(Cow)", "Round(x) -> Visits(x, BaldEagle)", "Visits(x, Cow) -> Round(x)", "Visits(x, Cat) & Needs(Cat, Cow) -> Needs(x, Cow)", "Round(x) -> Nice(x)", "Sees(x, Cat) -> Needs(x, BaldEagle)"], "conclusion": "Visits(Cat, Tiger)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BaldEagle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BaldEagle/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BaldEagle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BaldEagle/1\n"}
{"timestamp": "2025-05-01T03:25:50.319206", "premises": ["BaldEagle(x) -> Color(x, Red)", "Needs(BaldEagle, Cat)", "Visits(BaldEagle, Cat)", "Cold(Cat)", "Nice(Cat)", "Young(Cat)", "Needs(Cow, BaldEagle)", "Needs(Cow, Tiger)", "Sees(Cow, BaldEagle)", "Sees(Tiger, BaldEagle)", "Sees(Tiger, Cat)", "Visits(Tiger, Cat)", "Cold(x) -> Visits(x, Cow)", "Visits(x, Tiger) -> Sees(x, BaldEagle)", "Young(x) & Visits(x, Cow) -> Cold(Cow)", "Round(x) -> Visits(x, BaldEagle)", "Visits(x, Cow) -> Round(x)", "Visits(x, Cat) & Needs(Cat, Cow) -> Needs(x, Cow)", "Round(x) -> Nice(x)", "Sees(x, Cat) -> Needs(x, BaldEagle)"], "conclusion": "Visits(Cat, Tiger)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BaldEagle/1, BaldEagle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BaldEagle/1, BaldEagle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BaldEagle/1, BaldEagle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BaldEagle/1, BaldEagle/0\n"}
{"timestamp": "2025-05-01T03:25:58.333969", "premises": ["Red(BaldEagle)", "Needs(BaldEagle, Cat)", "Visits(BaldEagle, Cat)", "Cold(Cat)", "Nice(Cat)", "Young(Cat)", "Needs(Cow, BaldEagle)", "Needs(Cow, Tiger)", "Sees(Cow, BaldEagle)", "Sees(Tiger, BaldEagle)", "Sees(Tiger, Cat)", "Visits(Tiger, Cat)", "implications(Cold(x), Visits(x, Cow))", "implications(Visits(x, Tiger), Sees(x, BaldEagle))", "implications(Young(x) & Visits(x, Cow), Cold(Cow))", "implications(Round(x), Visits(x, BaldEagle))", "implications(Visits(x, Cow), Round(x))", "implications(Visits(x, Cat) & Needs(Cat, Cow), Needs(x, Cow))", "all x. (Round(x) -> Nice(x))", "implications(Sees(x, Cat), Needs(x, BaldEagle))"], "conclusion": "Visits(Cat, Tiger)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nimplications(Young(x) & Visits(x, Cow), Cold(Cow))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nimplications(Young(x) & Visits(x, Cow), Cold(Cow))\n                      ^\n"}
{"timestamp": "2025-05-01T03:26:28.228836", "premises": ["all x. all y. (Eats(x, y) -> Red(x))", "all x. all y. (Needs(x, y) -> Red(x))", "Eats(Rabbit, BaldEagle)", "all x. (Eats(x, BaldEagle) -> Red(x))", "all x. (Eats(x, Rabbit) -> Eats(x, Tiger))"], "conclusion": "all x. all y. (Red(x) & Eats(x, y) & Rabbit(y) -> Visits(x, Bear))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Rabbit/1, Rabbit/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Rabbit/1, Rabbit/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Rabbit/1, Rabbit/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Rabbit/1, Rabbit/0\n"}
{"timestamp": "2025-05-01T03:26:53.033494", "premises": ["Round(BaldEagle)", "Needs(BaldEagle, Tiger)", "Visits(BaldEagle, Tiger)", "Eats(Bear, BaldEagle)", "Nice(Bear)", "Needs(Bear, BaldEagle)", "Eats(Rabbit, BaldEagle)", "Big(Rabbit)", "Nice(Rabbit)", "-Needs(Rabbit, BaldEagle)", "Needs(Rabbit, Bear)", "Needs(Rabbit, Tiger)", "-Visits(Rabbit, BaldEagle)", "Needs(Tiger, Rabbit)", "if (Eats(x, Tiger) & Round(x)) then Eats(Tiger, Bear)", "if Needs(x, Tiger) then Red(x)", "if Eats(x, BaldEagle) then Red(x)", "if Eats(x, Rabbit) then Eats(x, Tiger)", "if (Round(x) & -Needs(x, BaldEagle)) then Eats(x, Rabbit)", "if (Needs(x, Bear) & Young(x)) then Needs(x, Tiger)", "if (Red(x) & Eats(x, BaldEagle)) then Round(x)", "if (Red(x) & Eats(x, Rabbit)) then Visits(x, Bear)"], "conclusion": "False", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Eats(x, Tiger) & Round(x)) then Eats(Tiger, Bear)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Eats(x, Tiger) & Round(x)) then Eats(Tiger, Bear)\n                   ^\n"}
{"timestamp": "2025-05-01T03:27:29.832504", "premises": ["Blue(Bob)", "Nice(Bob)", "Round(Bob)", "Young(Bob)", "Nice(Dave)", "Smart(Dave)", "Round(Fiona)", "White(Fiona)", "Red(Gary)", "(Young(Fiona) -> Blue(Fiona))", "(Nice(Gary) -> Blue(Gary))", "all x. ((White(x) & Red(x)) -> Nice(x))", "all x. ((Nice(x) & Round(x)) -> Smart(x))", "(Smart(Fiona) -> Red(Fiona))", "all x. (Round(x) -> Young(x))", "all x. ((Blue(x) & Young(x)) -> White(x))"], "conclusion": "Smart(Bob) (This_is_the_conclusion_we_want_to_evaluateDot)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Smart/1, Smart/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Smart/1, Smart/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Smart/1, Smart/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Smart/1, Smart/2\n"}
{"timestamp": "2025-05-01T03:27:51.947231", "premises": ["Quiet(Dave)", "Big(Erin)", "Kind(Erin)", "Blue(Fiona)", "Kind(Fiona)", "Big(Gary)", "Blue(Gary)", "all x. (Furry(x) -> Quiet(x))", "all x. (Kind(x) -> Rough(x))", "all x. (Rough(x) & Furry(x) -> Quiet(x))", "all x. ((Kind(x) & Big(x)) -> Furry(x))", "if Rough(Dave) then Blue(Dave)", "if (Kind(x) & Rough(x)) then Big(x)", "if Kind(Dave) then Furry(Dave)", "if Quiet(x) then Round(x)"], "conclusion": "Blue(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Rough'.\nif Rough(Dave) then Blue(Dave)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Rough'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Rough'.\nif Rough(Dave) then Blue(Dave)\n   ^\n"}
{"timestamp": "2025-05-01T03:27:56.863465", "premises": ["Quiet(Dave)", "Big(Erin)", "Kind(Erin)", "Blue(Fiona)", "Kind(Fiona)", "Big(Gary)", "Blue(Gary)", "all x. (Furry(x) -> Quiet(x))", "all x. (Kind(x) -> Rough(x))", "all x. ((Furry(x) & Rough(x)) -> Quiet(x))", "all x. ((Kind(x) & Big(x)) -> Furry(x))", "(Rough(Dave) -> Blue(Dave))", "(and(Kind(x), Rough(x)) -> Big(x))", "(Kind(Dave) -> Furry(Dave))", "(Quiet(x) -> Round(x))"], "conclusion": "Blue(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'and'.  Expression expected.\n(and(Kind(x), Rough(x)) -> Big(x))\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'and'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'and'.  Expression expected.\n(and(Kind(x), Rough(x)) -> Big(x))\n ^\n"}
{"timestamp": "2025-05-01T03:28:41.040969", "premises": ["Nice(Anne)", "Nice(Dave)", "Rough(Dave)", "Nice(Gary)", "-Smart(Gary)", "Big(Harry)", "Round(Harry)", "all x. (White(x) -> Round(x))", "implies(Big(Dave), White(Dave))", "all x. ((Cold(x) & Round(x)) -> Rough(x))", "all x. ((White(x) & Smart(x)) -> Cold(x))", "implies((Round(Dave) & Big(Dave)), Smart(Dave))", "implies(Nice(x), Big(x))", "all x. ((White(x) & Rough(x)) -> Nice(x))"], "conclusion": "White(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Big(Dave), White(Dave))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Big(Dave), White(Dave))\n^\n"}
{"timestamp": "2025-05-01T03:29:01.006900", "premises": ["-Blue(BaldEagle)", "Likes(BaldEagle, Dog)", "Needs(BaldEagle, Tiger)", "-Sees(BaldEagle, Dog)", "Sees(BaldEagle, Tiger)", "Blue(Dog)", "Sees(Dog, Tiger)", "Green(Rabbit)", "Red(Rabbit)", "Sees(Rabbit, Dog)", "Needs(Tiger, BaldEagle)", "Needs(Tiger, Dog)", "Rough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)", "Needs(x, BaldEagle) <- Needs(x, Dog) & Likes(x, Dog)", "Needs(BaldEagle, Dog) <- Likes(x, BaldEagle)", "Needs(Dog, Tiger) <- Rough(x) & Likes(x, Dog)", "Sees(x, Tiger) <- Likes(x, Dog) & Blue(Dog)", "Needs(Tiger, BaldEagle) <- Needs(x, Tiger) & -Sees(x, Dog)", "Likes(x, BaldEagle) <- Needs(x, BaldEagle)"], "conclusion": "-Needs(Tiger, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nRough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nRough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)\n         ^\n"}
{"timestamp": "2025-05-01T03:29:10.105249", "premises": ["-Color(BaldEagle, Blue)", "Likes(BaldEagle, Dog)", "Needs(BaldEagle, Tiger)", "-Sees(BaldEagle, Dog)", "Sees(BaldEagle, Tiger)", "Color(Dog, Blue)", "Sees(Dog, Tiger)", "Color(Rabbit, Green)", "Color(Rabbit, Red)", "Sees(Rabbit, Dog)", "Needs(Tiger, BaldEagle)", "Needs(Tiger, Dog)", "Rough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)", "Needs(x, BaldEagle) <- Needs(x, Dog) & Likes(x, Dog)", "Needs(BaldEagle, Dog) <- Likes(x, BaldEagle)", "Needs(Dog, Tiger) <- Rough(x) & Likes(x, Dog)", "Sees(x, Tiger) <- Likes(x, Dog) & Color(Dog, Blue)", "Needs(Tiger, BaldEagle) <- Needs(x, Tiger) & -Sees(x, Dog)", "Likes(x, BaldEagle) <- Needs(x, BaldEagle)"], "conclusion": "-Needs(Tiger, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nRough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nRough(x) <- Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)\n         ^\n"}
{"timestamp": "2025-05-01T03:29:29.917672", "premises": ["Sees(BaldEagle, Cat)", "Round(Cat)", "Needs(Cat, Rabbit)", "Sees(Cat, Lion)", "Visits(Cat, Lion)", "Big(Lion)", "Cold(Lion)", "Nice(Lion)", "Visits(Lion, Rabbit)", "Nice(Rabbit)", "Round(Rabbit)", "Sees(Rabbit, Cat)", "all x. (Nice(x) -> Big(x))", "all x. ((Kind(x) & Sees(x, Rabbit)) -> Needs(x, Lion))", "all x. (Needs(x, Rabbit) -> Nice(x))", "all x. ((Cold(x) & Big(x)) -> Kind(x))", "all x. ((Sees(x, BaldEagle) & Nice(BaldEagle)) -> Needs(x, Rabbit))", "all x. (Sees(x, Lion) -> Visits(x, Rabbit))", "if Sees(BaldEagle, Cat) then Visits(BaldEagle, Rabbit)", "all x. (Visits(x, Rabbit) -> Needs(x, Rabbit))", "all x. (Big(x) -> Cold(x))"], "conclusion": "-Visits(Rabbit, BaldEagle)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Sees'.\nif Sees(BaldEagle, Cat) then Visits(BaldEagle, Rabbit)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Sees'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Sees'.\nif Sees(BaldEagle, Cat) then Visits(BaldEagle, Rabbit)\n   ^\n"}
{"timestamp": "2025-05-01T03:30:20.072357", "premises": ["Eats(Cat, Dog)", "Eats(Cat, Rabbit)", "Eats(Cat, Squirrel)", "Color(Cat, Red)", "Sees(Cat, Dog)", "Sees(Cat, Rabbit)", "-Sees(Cat, Squirrel)", "Eats(Dog, Cat)", "Eats(Dog, Squirrel)", "Likes(Dog, Rabbit)", "Likes(Dog, Squirrel)", "Likes(Rabbit, Dog)", "Likes(Rabbit, Squirrel)", "Sees(Rabbit, Squirrel)", "Shape(Squirrel, Round)", "Sees(Squirrel, Rabbit)", "(Big(x) -> Likes(x, Cat))", "(Round(x) -> Big(x))", "((Eats(x, Squirrel) & Eats(Squirrel, Dog)) -> Eats(x, Dog))", "(Eats(x, Cat) -> Round(x))", "((Color(Cat, Green) & Eats(Cat, Rabbit)) -> Big(Cat))", "((Likes(x, Rabbit) & Sees(Rabbit, Cat)) -> Likes(x, Dog))", "((Eats(x, Squirrel) & Eats(x, Dog)) -> Color(Dog, Red))", "((Big(x) & Sees(x, Rabbit)) -> (Eats(Rabbit, Cat)))", "(Eats(Cat, Squirrel) -> -Eats(Squirrel, Cat))"], "conclusion": "Round(Dog)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0\n"}
{"timestamp": "2025-05-01T03:30:34.792326", "premises": ["Eats(Cat, Dog)", "Eats(Cat, Rabbit)", "Eats(Cat, Squirrel)", "Color(Cat, Red)", "Sees(Cat, Dog)", "Sees(Cat, Rabbit)", "-Sees(Cat, Squirrel)", "Eats(Dog, Cat)", "Eats(Dog, Squirrel)", "Likes(Dog, Rabbit)", "Likes(Dog, Squirrel)", "Likes(Rabbit, Dog)", "Likes(Rabbit, Squirrel)", "Sees(Rabbit, Squirrel)", "Shape(Squirrel, Round)", "Sees(Squirrel, Rabbit)", "all x. (Big(x) -> Likes(x, Cat))", "all x. (Round(x) -> Big(x))", "all x. all y. ((Eats(x, Squirrel) & Eats(Squirrel, Dog)) -> Eats(x, Dog))", "all x. (Eats(x, Cat) -> Round(x))", "all x. ((Color(x, Green) & Eats(x, Rabbit)) -> Big(x))", "all x. all y. ((Likes(x, Rabbit) & Sees(Rabbit, y)) -> Likes(x, Dog))", "all x. all y. ((Eats(x, Squirrel) & Eats(x, Dog)) -> Color(Dog, Red))", "all x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))", "all x. (Eats(Cat, Squirrel) -> -Eats(Squirrel, Cat))"], "conclusion": "Round(Dog)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0\n"}
{"timestamp": "2025-05-01T03:30:46.116535", "premises": ["Eats(Cat, Dog)", "Eats(Cat, Rabbit)", "Eats(Cat, Squirrel)", "Color(Cat, Red)", "Sees(Cat, Dog)", "Sees(Cat, Rabbit)", "-Sees(Cat, Squirrel)", "Eats(Dog, Cat)", "Eats(Dog, Squirrel)", "Likes(Dog, Rabbit)", "Likes(Dog, Squirrel)", "Likes(Rabbit, Dog)", "Likes(Rabbit, Squirrel)", "Sees(Rabbit, Squirrel)", "Shape(Squirrel, Round)", "Sees(Squirrel, Rabbit)", "all x. (Big(x) -> Likes(x, Cat))", "all x. (Round(x) -> Big(x))", "all x. all y. ((Eats(x, Squirrel) & Eats(Squirrel, Dog)) -> Eats(x, Dog))", "all x. (Eats(x, Cat) -> Round(x))", "all x. (Green(x) & Eats(x, Rabbit) -> Big(x))", "all x. all y. ((Likes(x, Rabbit) & Sees(Rabbit, y)) -> Likes(x, y))", "all x. all y. ((Eats(x, Squirrel) & Eats(x, Dog)) -> Color(Dog, Red))", "all x. all y. ((Big(x) & Sees(x, Rabbit)) -> Eats(Rabbit, Cat))", "(Eats(Cat, Squirrel) -> -Eats(Squirrel, Cat))"], "conclusion": "Round(Dog)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0\n"}
{"timestamp": "2025-05-01T03:31:06.405412", "premises": ["Nice(Anne)", "White(Anne)", "Round(Charlie)", "White(Charlie)", "-Nice(Erin)", "Quiet(Erin)", "-Quiet(Gary)", "all x. (Blue(x) -> Big(x))", "all x. (White(x) -> Green(x))", "(Quiet(Anne) -> Blue(Anne))", "(Green(Anne) -> Quiet(Anne))", "all x. (Blue(x) -> Quiet(x))", "((White(Anne) & -Blue(Anne)) -> Nice(Anne))", "all x. (Big(x) -> Round(x))", "(Big(x) & -Nice(x)) -> Round(x)", "Green(Anne)", "all x. (Man(x) -> Mortal(x))", "all x. (Man(x) -> Man(x))", "Mortal(Socrates)", "Man(Socrates)", "Man(Socrates)", "all x. (EvenNumber(x) -> DivisibleBy(x, Two))", "EvenNumber(Four)", "DivisibleBy(Four, Two)", "if (Sum(a, b) = 10) then (Smaller(a, b) = 4)", "Sum(a, b) = 10", "Smaller(a, b) = 4", "all x. (WindowsComputer(x) -> RunsOn(x, WindowsOperatingSystem))", "all x. (MacintoshComputer(x) -> RunsOn(x, MacOS))", "all x. (Computer(x) -> (Count(OperatingSystem(y) | RunsOn(x, y)) <= 1))", "all x. (Computer(x) -> ((RunsOn(x, WindowsOperatingSystem) | RunsOn(x, MacOS) | RunsOn(x, Linux)))", "all x. (Smartphone(x) -> ((RunsOn(x, Android) | RunsOn(x, iOS))))", "((WindowsComputer(x) & RunsOn(x, MacOS)) -> FALSE)", "all x. (EmployeeOfXYZCorp(x) -> PaidWeekly(x))", "all x. (EmployeeOfXYZCorp(x) -> WorksIn(x, NewYorkOffice))", "all x. (WorksIn(x, NewYorkOffice) -> PaidBiweekly(x))"], "conclusion": "exists x. (-PaidBiweekly(x) & EmployeeOfXYZCorp(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif (Sum(a, b) = 10) then (Smaller(a, b) = 4)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif (Sum(a, b) = 10) then (Smaller(a, b) = 4)\n              ^\n"}
{"timestamp": "2025-05-01T03:31:54.301704", "premises": ["-Cold(Dave)", "Cold(Erin)", "Furry(Erin)", "Cold(Fiona)", "Quiet(Fiona)", "Smart(Harry)", "White(Harry)", "all x. (Smart(x) & Cold(x) -> White(x))", "if Green(Dave) then -Blue(Dave)", "if Green(Erin) then Smart(Erin)", "all x. (White(x) & Furry(x) -> Smart(x))", "if Cold(Fiona) & Quiet(Fiona) then Smart(Fiona)", "all x. Furry(x) -> Green(x)", "all x. (Green(x) & White(x) -> Furry(x))", "all x. (White(x) & Quiet(x) -> Furry(x))", "all x. (Green(x) & Quiet(x) -> Blue(x))"], "conclusion": "Furry(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Green'.\nif Green(Dave) then -Blue(Dave)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Green'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Green'.\nif Green(Dave) then -Blue(Dave)\n   ^\n"}
{"timestamp": "2025-05-01T03:32:02.226712", "premises": ["-Cold(Dave)", "Cold(Erin)", "Furry(Erin)", "Cold(Fiona)", "Quiet(Fiona)", "Smart(Harry)", "White(Harry)", "all x. ((Smart(x) & Cold(x)) -> White(x))", "if (Green(Dave)) then -Blue(Dave)", "if (Green(Erin)) then Smart(Erin)", "all x. ((White(x) & Furry(x)) -> Smart(x))", "if (And(Cold(Fiona), Quiet(Fiona))) then Smart(Fiona)", "all x. (Furry(x) -> Green(x))", "all x. ((Green(x) & White(x)) -> Furry(x))", "all x. ((White(x) & Quiet(x)) -> Furry(x))", "all x. ((Green(x) & Quiet(x)) -> Blue(x))", "Furry(Dave)", "-Cold(Dave)", "Furry(Erin)", "all x. (Furry(x) -> Green(x))"], "conclusion": "Green(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'then'.\nif (Green(Dave)) then -Blue(Dave)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'then'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'then'.\nif (Green(Dave)) then -Blue(Dave)\n                 ^\n"}
{"timestamp": "2025-05-01T03:32:31.767414", "premises": ["Green(Bob)", "White(Bob)", "Blue(Dave)", "Cold(Dave)", "Green(Dave)", "White(Dave)", "Cold(Fiona)", "Green(Fiona)", "White(Fiona)", "Young(Fiona)", "Kind(Gary)", "White(Gary)", "all x. ((White(x) & Cold(x)) -> Furry(x))", "all x. (Furry(x) -> Green(x))", "all x. (Cold(x) -> Young(x))", "all x. ((Kind(x) & Young(x)) -> Blue(x))", "all x. (Furry(x) -> Blue(x))", "all x. ((White(x) & Kind(x)) -> Young(x))", "all x. ((Kind(x) & Blue(x)) -> Cold(x))", "If Blue(Bob) then Kind(Bob)"], "conclusion": "Kind(Bob)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Blue'.\nIf Blue(Bob) then Kind(Bob)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Blue'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Blue'.\nIf Blue(Bob) then Kind(Bob)\n   ^\n"}
{"timestamp": "2025-05-01T03:34:09.552188", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "ScifiMovie(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))"], "conclusion": "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T03:34:31.931428", "premises": ["Kind(BaldEagle)", "Chases(Cat, BaldEagle)", "Young(Cat)", "Needs(Cat, BaldEagle)", "Needs(Cat, Cow)", "? (we_dont_have_a_premise_for_this)", "Red(Cow)", "Rough(Cow)", "Likes(Cow, BaldEagle)", "Rough(Rabbit)", "Needs(Rabbit, Cat)", "if Red(x) & Likes(x, Cat) then Blue(x)", "if Needs(x, Cat) then Needs(x, Cow)", "if Rough(x) & Young(x) then Likes(x, Cow)", "if Blue(x) then Needs(x, Cat)", "if Needs(x, Cow) then Chases(x, Cow)", "if Likes(x, Rabbit) & Kind(Rabbit) then Needs(x, Rabbit)", "if Chases(x, Cow) then Likes(Cow, Cat)", "?", "Likes(x, Rabbit) & -Kind(Rabbit) -> Needs(x, Rabbit)", "if Needs(x, Rabbit) then Needs(x, Cow)", "if Needs(x, Cow) then Chases(x, Cow)", "Needs(Cat, Cow)", "if Needs(x, Cow) then Chases(x, Cow)"], "conclusion": "Chases(Cat, Cow)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Red'.\nif Red(x) & Likes(x, Cat) then Blue(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Red'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Red'.\nif Red(x) & Likes(x, Cat) then Blue(x)\n   ^\n"}
{"timestamp": "2025-05-01T03:34:38.628768", "premises": ["Kind(BaldEagle)", "Chases(Cat, BaldEagle)", "Young(Cat)", "Needs(Cat, BaldEagle)", "Needs(Cat, Cow)", "Chases(Cow, Rabbit)", "Red(Cow)", "Rough(Cow)", "Likes(Cow, BaldEagle)", "Rough(Rabbit)", "Needs(Rabbit, Cat)", "if ((Red(x) & Likes(x, Cat)) then Blue(x))", "if (Needs(x, Cat) then Needs(x, Cow))", "if ((Rough(x) & Young(x)) then Likes(x, Cow))", "if (Blue(x) then Needs(x, Cat))", "if (Needs(x, Cow) then Chases(x, Cow))", "if ((Likes(x, Rabbit) & Kind(Rabbit)) then Needs(x, Rabbit))", "if (Chases(x, Cow) then Likes(Cow, Cat))"], "conclusion": "Chases(Cow, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'then'.  Expected token ')'.\nif ((Red(x) & Likes(x, Cat)) then Blue(x))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'then'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'then'.  Expected token ')'.\nif ((Red(x) & Likes(x, Cat)) then Blue(x))\n                             ^\n"}
{"timestamp": "2025-05-01T03:34:47.219113", "premises": ["Eats(BaldEagle, Lion)", "Eats(BaldEagle, Tiger)", "Big(BaldEagle)", "Round(BaldEagle)", "Likes(BaldEagle, Lion)", "Eats(Cow, Lion)", "Likes(Cow, BaldEagle)", "Sees(Cow, Tiger)", "Eats(Lion, Cow)", "Eats(Tiger, Lion)", "Red(Tiger)", "if Eats(x, Cow) then Sees(Cow, BaldEagle)", "if (Likes(x, BaldEagle) & Eats(x, BaldEagle)) then Likes(x, Cow)", "if (Likes(x, Lion) & Cold(Lion)) then Sees(x, BaldEagle)", "Young(y) -> Cold(y)", "if (Likes(x, BaldEagle) & Sees(x, BaldEagle)) then Red(BaldEagle)", "Red(x) -> Eats(x, BaldEagle)", "Eats(x, Lion) -> Likes(x, BaldEagle)", "Likes(x, Cow) -> Likes(x, Tiger)", "Sees(Lion, Cow) -> Eats(Cow, Tiger)"], "conclusion": "Sees(Tiger, Tiger)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Eats'.\nif Eats(x, Cow) then Sees(Cow, BaldEagle)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Eats'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Eats'.\nif Eats(x, Cow) then Sees(Cow, BaldEagle)\n   ^\n"}
{"timestamp": "2025-05-01T03:36:26.193273", "premises": ["Chase(Bear, Tiger)", "Kind(Bear)", "Rough(Bear)", "Round(Bear)", "Sees(Bear, Mouse)", "Chase(Lion, Tiger)", "Kind(Lion)", "Round(Lion)", "Sees(Lion, Mouse)", "Kind(Mouse)", "Rough(Mouse)", "Sees(Mouse, Bear)", "Sees(Mouse, Tiger)", "Blue(Tiger)", "Kind(Tiger)", "Visit(Tiger, Bear)", "Nice(x) <- Blue(x)", "-Chase(y, Lion) <- -Chase(y, Bear)", "Rough(x) <- Visit(x, Mouse)", "Nice(Lion) <- Chase(x, Lion)", "Chase(x, Bear) <- Nice(x)", "Visit(x, Mouse) <- Chase(x, Lion)"], "conclusion": "-Round(Lion)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nNice(x) <- Blue(x)\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nNice(x) <- Blue(x)\n        ^\n"}
{"timestamp": "2025-05-01T03:37:10.244589", "premises": ["Young(Bear)", "Likes(Bear, Cat)", "Likes(Bear, Lion)", "Likes(Bear, Tiger)", "Needs(Bear, Lion)", "Needs(Bear, Tiger)", "Visits(Bear, Lion)", "Visits(Bear, Tiger)", "Needs(Cat, Tiger)", "Young(Lion)", "Blue(Tiger)", "Likes(Tiger, Bear)", "Likes(Tiger, Cat)", "Visits(Tiger, Lion)", "if Likes(x, Bear) then Rough(x)", "if (Likes(x, Bear) & Visits(x, Bear)) then Visits(Bear, Cat)", "if (Likes(x, Bear) & Visits(x, Cat)) then Rough(x)", "if Rough(x) then Needs(x, Bear)", "if (Visits(x, Tiger) & Visits(x, Cat)) then Nice(x)", "if Likes(x, Lion) then Young(Lion)", "if Big(x) then Rough(x)", "if (Rough(x) & Needs(x, Bear)) then Visits(x, Bear)"], "conclusion": "-Nice(Cat)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Likes'.\nif Likes(x, Bear) then Rough(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Likes'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Likes'.\nif Likes(x, Bear) then Rough(x)\n   ^\n"}
{"timestamp": "2025-05-01T03:37:57.706348", "premises": ["Eats(BaldEagle, Tiger)", "Color(BaldEagle, Green)", "Chases(Bear, BaldEagle)", "Chases(Bear, Dog)", "Eats(Bear, BaldEagle)", "Eats(Bear, Dog)", "Eats(Bear, Tiger)", "Size(Bear, Big)", "Color(Bear, Green)", "Age(Bear, Young)", "Size(Dog, Big)", "Age(Dog, Young)", "Chases(Tiger, Bear)", "Chases(Tiger, Dog)", "If(And(Color(x, Red), Eats(x, Dog)), Eats(Dog, Tiger))", "If(Visits(x, Tiger), Eats(Tiger, Bear))", "If(Eats(x, Dog), Age(Dog, Young))", "If(And(Color(x, Green), Visits(x, BaldEagle)), Visits(x, Dog))", "If(Eats(x, Tiger), Eats(x, Bear))", "If(Rough(x), Eats(x, Bear))", "If(Eats(x, Bear), Color(x, Red))", "Color(Dog, Red)"], "conclusion": "Color(Dog, Red)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Color/2, Eats/2, Age/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Color/2, Eats/2, Age/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Color/2, Eats/2, Age/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Color/2, Eats/2, Age/2\n"}
{"timestamp": "2025-05-01T03:38:10.255083", "premises": ["Eats(BaldEagle, Tiger)", "Color(BaldEagle, Green)", "Chases(Bear, BaldEagle)", "Chases(Bear, Dog)", "Eats(Bear, BaldEagle)", "Eats(Bear, Dog)", "Eats(Bear, Tiger)", "Size(Bear, Big)", "Color(Bear, Green)", "Age(Bear, Young)", "Size(Dog, Big)", "Age(Dog, Young)", "Chases(Tiger, Bear)", "Chases(Tiger, Dog)", "if (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)", "if (Visits(x, Tiger)) then Eats(Tiger, Bear)", "if (Eats(x, Dog)) then Age(Dog, Young)", "if (Color(x, Green) & Visits(x, BaldEagle)) then Visits(x, Dog)", "if (Eats(x, Tiger)) then Eats(x, Bear)", "if (Rough(x)) then Eats(x, Bear)", "if (Eats(x, Bear)) then Color(x, Red)"], "conclusion": "Color(Dog, Red)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)\n                  ^\n"}
{"timestamp": "2025-05-01T03:38:18.892312", "premises": ["Eats(BaldEagle, Tiger)", "Color(BaldEagle, Green)", "Chases(Bear, BaldEagle)", "Chases(Bear, Dog)", "Eats(Bear, BaldEagle)", "Eats(Bear, Dog)", "Eats(Bear, Tiger)", "Size(Bear, Big)", "Color(Bear, Green)", "Age(Bear, Young)", "Size(Dog, Big)", "Age(Dog, Young)", "Chases(Tiger, Bear)", "Chases(Tiger, Dog)", "if (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)", "if Visits(x, Tiger) then Eats(Tiger, Bear)", "if Eats(x, Dog) then Age(Dog, Young)", "if (Color(x, Green) & Visits(x, BaldEagle)) then Visits(x, Dog)", "if Eats(x, Tiger) then Eats(x, Bear)", "if Texture(x, Rough) then Eats(x, Bear)", "if Eats(x, Bear) then Color(x, Red)"], "conclusion": "Color(Dog, Red)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Red) & Eats(x, Dog)) then Eats(Dog, Tiger)\n                  ^\n"}
{"timestamp": "2025-05-01T03:38:45.182110", "premises": ["Quiet(Charlie)", "Quiet(Dave)", "Young(Dave)", "Blue(Erin)", "Nice(Erin)", "Quiet(Erin)", "-Blue(Fiona)", "Cold(Fiona)", "Nice(Fiona)", "Round(Fiona)", "Young(Fiona)", "all x. (Kind(x) -> Round(x))", "all x. (Kind(x) & Cold(x) -> Blue(x))", "all x. ((Nice(x) & -Young(x)) -> -Blue(x))", "if Kind(Fiona) then Blue(Fiona)", "if (Kind(Dave) & Blue(Dave)) then -Nice(Dave)", "Round(x) -> Cold(x)", "Young(Dave) -> Kind(Dave)", "if (Kind(Erin) & Blue(Erin)) then Round(Erin)"], "conclusion": "-Cold(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Kind'.\nif Kind(Fiona) then Blue(Fiona)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Kind'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Kind'.\nif Kind(Fiona) then Blue(Fiona)\n   ^\n"}
{"timestamp": "2025-05-01T03:39:10.010574", "premises": ["Visits(BaldEagle, Cow)", "Chases(Cow, Rabbit)", "-Visits(Cow, Dog)", "-Big(Dog)", "Young(Dog)", "Sees(Rabbit, Dog)", "Visits(Rabbit, Cow)", "implies(Sees(x, Dog), Visits(x, Dog))", "implies(Visits(x, BaldEagle) & Round(x), Chases(BaldEagle, Cow))", "implies(Round(x), Sees(x, Rabbit))", "implies(Sees(x, Rabbit), Round(Rabbit))", "implies(Chases(x, Dog), Visits(Dog, BaldEagle))", "implies(Young(Dog), -Visits(Dog, BaldEagle))", "implies(Visits(x, Dog), Round(Dog))", "implies(Nice(Dog), Sees(Dog, Cow))", "implies((Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)), Sees(Cow, BaldEagle))"], "conclusion": "-Visits(Dog, Dog)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Sees(x, Dog), Visits(x, Dog))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Sees(x, Dog), Visits(x, Dog))\n^\n"}
{"timestamp": "2025-05-01T03:39:20.066864", "premises": ["Visits(BaldEagle, Cow)", "Chases(Cow, Rabbit)", "-Visits(Cow, Dog)", "-Big(Dog)", "Young(Dog)", "Sees(Rabbit, Dog)", "Visits(Rabbit, Cow)", "sees_dog_impl_visits_dog: forall x, (Sees(x, Dog) -> Visits(x, Dog))", "visits_bald_eagle_round_impl_chases_cow: forall x, (Visits(x, BaldEagle) & Round(x) -> Chases(BaldEagle, Cow))", "Round_impl_sees_rabbit: forall x, (Round(x) -> Sees(x, Rabbit))", "sees_rabbit_impl_round: forall x, (Sees(x, Rabbit) -> Round(Rabbit))", "chases_dog_impl_visits_bald_eagle: forall x, (Chases(x, Dog) -> Visits(Dog, BaldEagle))", "Young_dog_impl_not_visits_bald_eagle: forall x, (Young(x) -> -Visits(Dog, BaldEagle))", "visits_dog_impl_round: forall x, (Visits(x, Dog) -> Round(x))", "Nice_dog_impl_sees_cow: forall x, (Nice(x) -> Sees(x, Cow))", "sees_rabbit_bald_eagle_impl_sees_bald_eagle: forall x, (Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow) -> Sees(x, BaldEagle))"], "conclusion": "-Visits(Dog, Dog)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'forall'.\nsees_dog_impl_visits_dog: forall x, (Sees(x, Dog) -> Visits(x, Dog))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'forall'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'forall'.\nsees_dog_impl_visits_dog: forall x, (Sees(x, Dog) -> Visits(x, Dog))\n                          ^\n"}
{"timestamp": "2025-05-01T03:39:27.587015", "premises": ["Visits(BaldEagle, Cow)", "Chases(Cow, Rabbit)", "-Visits(Cow, Dog)", "-Big(Dog)", "Young(Dog)", "Sees(Rabbit, Dog)", "Visits(Rabbit, Cow)", "if Sees(x, Dog) then Visits(x, Dog)", "if (Visits(x, BaldEagle) & Round(x)) then Chases(BaldEagle, Cow)", "if Round(x) then Sees(x, Rabbit)", "if Sees(x, Rabbit) then Round(Rabbit)", "if Chases(x, Dog) then Visits(Dog, BaldEagle)", "if Young(Dog) then -Visits(Dog, BaldEagle)", "if Visits(x, Dog) then Round(Dog)", "if Nice(Dog) then Sees(Dog, Cow)", "if (Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) then Sees(Cow, BaldEagle)"], "conclusion": "-Visits(Dog, Dog)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Sees'.\nif Sees(x, Dog) then Visits(x, Dog)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Sees'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Sees'.\nif Sees(x, Dog) then Visits(x, Dog)\n   ^\n"}
{"timestamp": "2025-05-01T03:39:54.671535", "premises": ["-Nice(Anne)", "Round(Anne)", "-White(Anne)", "Young(Anne)", "Round(Erin)", "Blue(Fiona)", "Young(Gary)", "all x. (Nice(x) -> -Quiet(x))", "all x. (Round(x) -> Quiet(x))", "if Nice(Anne) then White(Anne)", "if Quiet(x) then Blue(x)", "if White(Fiona) then Blue(Fiona)", "if Rough(x) then Young(x)", "if (Nice(x) & -Blue(x)) then -Rough(x)", "if Blue(x) then Rough(x)", "if Young(Erin) then White(Erin)", "-Nice(Anne)", "Round(Anne)", "-White(Anne)", "Young(Anne)", "Round(Erin)", "Blue(Fiona)", "Young(Gary)", "all x. (Nice(x) -> -Quiet(x))", "all x. (Round(x) -> Quiet(x))", "if Nice(Anne) then White(Anne)", "if Quiet(x) then Blue(x)", "if White(Fiona) then Blue(Fiona)", "if Rough(x) then Young(x)", "if (Nice(x) & -Blue(x)) then -Rough(x)", "if Blue(x) then Rough(x)", "if Young(Erin) then White(Erin)"], "conclusion": "Quiet(Anne)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Nice'.\nif Nice(Anne) then White(Anne)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Nice'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Nice'.\nif Nice(Anne) then White(Anne)\n   ^\n"}
{"timestamp": "2025-05-01T03:40:03.269392", "premises": ["-Nice(Anne)", "Round(Anne)", "-White(Anne)", "Young(Anne)", "Round(Erin)", "Blue(Fiona)", "Young(Gary)", "all x. (-(Nice(x)) -> -Quiet(x))", "all x. (Round(x) -> Quiet(x))", "if Nice(Anne) then White(Anne)", "if Quiet(x) then Blue(x)", "if White(Fiona) then Blue(Fiona)", "if Rough(x) then Young(x)", "if (Nice(x) & -Blue(x)) then -Rough(x)", "if Blue(x) then Rough(x)", "if Young(Erin) then White(Erin)"], "conclusion": "Quiet(Anne)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Nice'.\nif Nice(Anne) then White(Anne)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Nice'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Nice'.\nif Nice(Anne) then White(Anne)\n   ^\n"}
{"timestamp": "2025-05-01T03:40:38.879182", "premises": ["Big(Bear)", "Nice(Bear)", "Rough(Bear)", "Sees(Bear, Squirrel)", "Sees(Bear, Tiger)", "Eats(Lion, Squirrel)", "-Green(Lion)", "Likes(Lion, Tiger)", "Eats(Squirrel, Tiger)", "Likes(Squirrel, Lion)", "Likes(Squirrel, Tiger)", "Eats(Tiger, Bear)", "-Nice(Tiger)", "Rough(Tiger)", "-Likes(Tiger, Squirrel)", "Sees(Tiger, Lion)", "(Likes(x, Tiger) & Eats(Tiger, Bear) & x=Bear) -> Eats(Bear, Tiger)", "Eats(x, Tiger) -> Blue(Tiger)", "Sees(x, Bear) -> -Likes(x, Lion)", "Blue(x) -> Sees(x, Bear)", "Eats(x, Bear) -> Likes(Bear, Tiger)", "Sees(x, Bear) -> Blue(Bear)", "(Likes(x, Tiger) & Sees(Tiger, Lion) & x=Person) -> Eats(Person, Lion)", "(Sees(x, Tiger) & -Blue(x) & x=Person) -> Eats(Person, Lion)", "-Likes(Bear, Lion)", "Assumption1: -Likes(Bear, Lion)"], "conclusion": "all Models of Given premises + Assumption1", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'Models' is an illegal variable name.  Constants may not be quantified.\nall Models of Given premises + Assumption1\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'Models' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'Models' is an illegal variable name.  Constants may not be quantified.\nall Models of Given premises + Assumption1\n    ^\n"}
{"timestamp": "2025-05-01T03:40:49.311642", "premises": ["Green(BaldEagle)", "Young(BaldEagle)", "Sees(BaldEagle, Dog)", "Likes(Bear, Dog)", "Needs(Bear, Cow)", "Needs(Cow, Dog)", "Sees(Cow, Dog)", "Blue(Dog)", "Green(Dog)", "Young(Dog)", "Needs(Dog, Bear)", "if (Sees(x, BaldEagle) & Nice(x)) then Needs(BaldEagle, Bear)", "if (Nice(x) & Young(x)) then Needs(x, Dog)", "if (Likes(x, Cow) & Needs(Cow, Dog)) then Kind(Cow)", "if (Young(x) & Blue(x)) then Likes(x, Bear)", "if (Blue(x) & Likes(x, Bear)) then Likes(Bear, Cow)", "if (Green(x) & Needs(x, Bear)) then Needs(x, Dog)", "if Sees(x, Bear) then Nice(x)"], "conclusion": "if Kind(x) then Sees(x, Bear)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Kind'.\nif Kind(x) then Sees(x, Bear)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Kind'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Kind'.\nif Kind(x) then Sees(x, Bear)\n   ^\n"}
{"timestamp": "2025-05-01T03:41:01.949017", "premises": ["BaldEagle(x) -> Green(x)", "BaldEagle(x) -> Young(x)", "Sees(BaldEagle, Dog)", "Likes(Bear, Dog)", "Needs(Bear, Cow)", "Needs(Cow, Dog)", "Sees(Cow, Dog)", "Dog(x) -> Blue(x)", "Dog(x) -> Green(x)", "Dog(x) -> Young(x)", "Needs(Dog, Bear)", "Sees(y, BaldEagle) & Nice(y) -> Needs(BaldEagle, Bear)", "Nice(x) & Young(x) -> Needs(x, Dog)", "Likes(x, Cow) & Needs(Cow, Dog) -> Kind(Cow)", "Young(x) & Blue(x) -> Likes(x, Bear)", "Blue(x) & Likes(x, Bear) -> Likes(Bear, Cow)", "Green(x) & Needs(x, Bear) -> Needs(x, Dog)", "Sees(x, Bear) -> Nice(x)", "Kind(x) -> Sees(x, Bear)"], "conclusion": "Likes(Bear, Cow)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dog/1, Dog/0, BaldEagle/1, BaldEagle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dog/1, Dog/0, BaldEagle/1, BaldEagle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dog/1, Dog/0, BaldEagle/1, BaldEagle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dog/1, Dog/0, BaldEagle/1, BaldEagle/0\n"}
{"timestamp": "2025-05-01T03:41:25.095632", "premises": ["Kind(Anne)", "Nice(Anne)", "Kind(Charlie)", "Quiet(Charlie)", "Red(Charlie)", "Furry(Erin)", "Quiet(Erin)", "Red(Erin)", "Kind(Harry)", "Nice(Harry)", "Quiet(Harry)", "all x. (Cold(x) & Nice(x) -> Furry(x))", "if Quiet(Harry) then Furry(Harry)", "all x. (Red(x) & Cold(x) -> Big(x))", "all x. (Kind(x) -> Quiet(x))", "all x. (Kind(x) & Nice(x) -> Quiet(x))", "all x. (Furry(x) & Cold(x) -> Red(x))", "if Quiet(Anne) & Kind(Anne) then Cold(Anne)"], "conclusion": "-Quiet(Anne)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Quiet'.\nif Quiet(Harry) then Furry(Harry)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Quiet'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Quiet'.\nif Quiet(Harry) then Furry(Harry)\n   ^\n"}
{"timestamp": "2025-05-01T03:41:49.534479", "premises": ["Cold(Bob)", "Green(Bob)", "-Red(Bob)", "Round(Bob)", "Green(Fiona)", "Smart(Fiona)", "Green(Gary)", "Red(Gary)", "Green(Harry)", "Smart(Harry)", "all x. (Smart(x) -> Cold(x))", "all x. (Red(x) -> Rough(x))", "all x. ((Nice(x) & Red(x)) -> Green(x))", "all x. ((Red(x) & Rough(x)) -> Round(x))", "all x. ((Rough(x) & Round(x)) -> Smart(x))", "if (Smart(Gary) & Cold(Gary)) then Nice(Gary)", "if (Green(x) & Smart(x)) then Red(x)"], "conclusion": "-Smart(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Smart(Gary) & Cold(Gary)) then Nice(Gary)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Smart(Gary) & Cold(Gary)) then Nice(Gary)\n                ^\n"}
{"timestamp": "2025-05-01T03:42:25.769144", "premises": ["Chases(Bear, Cow)", "Eats(Bear, Rabbit)", "Big(Bear)", "Round(Bear)", "Sees(Bear, Cow)", "Sees(Bear, Dog)", "Eats(Cow, Rabbit)", "Chases(Dog, Rabbit)", "Eats(Dog, Rabbit)", "Chases(Rabbit, Bear)", "Chases(Rabbit, Cow)", "Big(Rabbit)", "Red(Rabbit)", "Round(Rabbit)", "if Sees(x, Bear), then Cold(x)", "if Eats(x, Rabbit), then Round(Rabbit)", "if (Sees(x, Rabbit) & Chases(Rabbit, Cow)) then Eats(Cow, Bear)", "if (Sees(x, Bear) & Chases(Bear, Dog)) then Eats(Dog, Bear)", "if Eats(x, Bear), then Sees(x, Rabbit)", "if (Sees(x, Rabbit) & Chases(Rabbit, Cow)), then Big(x)", "if (Sees(x, Dog) & Eats(Dog, Rabbit)), then Round(Rabbit)", "if Chases(x, Bear), then Eats(x, Bear)"], "conclusion": "Sees(Cow, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Sees'.\nif Sees(x, Bear), then Cold(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Sees'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Sees'.\nif Sees(x, Bear), then Cold(x)\n   ^\n"}
{"timestamp": "2025-05-01T03:42:34.125139", "premises": ["Chases(Bear, Cow)", "Eats(Bear, Rabbit)", "Big(Bear)", "Round(Bear)", "See(Bear, Cow)", "See(Bear, Dog)", "Eats(Cow, Rabbit)", "Chases(Dog, Rabbit)", "Eats(Dog, Rabbit)", "Chases(Rabbit, Bear)", "Chases(Rabbit, Cow)", "Big(Rabbit)", "Red(Rabbit)", "Round(Rabbit)", "if See(x, Bear) then Cold(x)", "if Eats(x, Rabbit) then Round(Rabbit)", "if See(x, Rabbit) and Chases(Rabbit, Cow) then Eats(Cow, Bear)", "if See(x, Bear) and Chases(Bear, Dog) then Eats(Dog, Bear)", "if Eats(x, Bear) then See(x, Rabbit)", "if See(x, Rabbit) and Chases(Rabbit, Cow) then Big(x)", "if See(x, Dog) and Eats(Dog, Rabbit) then Round(Rabbit)", "if Chases(x, Bear) then Eats(x, Bear)"], "conclusion": "See(Cow, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'See'.\nif See(x, Bear) then Cold(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'See'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'See'.\nif See(x, Bear) then Cold(x)\n   ^\n"}
{"timestamp": "2025-05-01T03:43:11.812558", "premises": ["Chases(BaldEagle, Lion)", "Sees(Bear, Dog)", "Rough(Dog)", "-Visits(Dog, BaldEagle)", "Visits(Dog, Bear)", "Chases(Lion, Dog)", "Visits(Lion, BaldEagle)", "sees_bear_implies_sees_lion: forall x, (Sees(x, Bear) implies Sees(Bear, Lion))", "does_not_see_lion_implies_visits_bear: forall x, (-Sees(x, Lion) implies Visits(Lion, Bear))", "Young(x) implies Kind(x)", "Kind(x) implies -Visits(x, Lion)", "visits_lion_and_young_implies_not_chases_baldEagle: forall x, ((Visits(x, Lion) and Young(x)) implies -Chases(x, BaldEagle))", "chases_bear_implies_young_bear: forall x, (Chases(x, Bear) implies Young(Bear))", "visits_bear_implies_chases_baldEagle: forall x, (Visits(x, Bear) implies Chases(Bear, BaldEagle))", "chases_bear_implies_visits_baldEagle: forall x, (Chases(x, Bear) implies Visits(x, BaldEagle))", "chases_baldEagle_implies_chases_bear: forall x, (Chases(x, BaldEagle) implies Chases(BaldEagle, Bear))"], "conclusion": "Rough(BaldEagle)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'forall'.\nsees_bear_implies_sees_lion: forall x, (Sees(x, Bear) implies Sees(Bear, Lion))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'forall'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'forall'.\nsees_bear_implies_sees_lion: forall x, (Sees(x, Bear) implies Sees(Bear, Lion))\n                             ^\n"}
{"timestamp": "2025-05-01T03:43:18.845872", "premises": ["Chases(BaldEagle, Lion)", "Sees(Bear, Dog)", "Rough(Dog)", "-Visits(Dog, BaldEagle)", "Visits(Dog, Bear)", "Chases(Lion, Dog)", "Visits(Lion, BaldEagle)", "sees_bear(x) -> sees_lion(Bear)", "-sees_lion(Bear) -> Visits(Lion, Bear)", "Kind(Young)", "Kind(x) -> -Visits(x, Lion)", "(Visits(x, Lion) & Young(x)) -> -Chases(x, BaldEagle)", "Chases(x, Bear) -> Young(Bear)", "Visits(x, Bear) -> Chases(Bear, BaldEagle)", "Chases(x, Bear) -> Visits(x, BaldEagle)", "Chases(x, BaldEagle) -> Chases(BaldEagle, Bear)"], "conclusion": "Rough(BaldEagle)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Young/1, Young/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Young/1, Young/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Young/1, Young/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Young/1, Young/0\n"}
{"timestamp": "2025-05-01T03:43:25.750493", "premises": ["Chases(BaldEagle, Lion)", "Sees(Bear, Dog)", "Rough(Dog)", "-Visits(Dog, BaldEagle)", "Visits(Dog, Bear)", "Chases(Lion, Dog)", "Visits(Lion, BaldEagle)", "SeeingBear(x) -> SeeingLion(Bear)", "-SeeingLion(Bear) -> Visits(Lion, Bear)", "Kind(Young)", "Kind(x) -> -Visits(x, Lion)", "Visits(x, Lion) & Young(x) -> -Chases(x, BaldEagle)", "Chases(x, Bear) -> Young(Bear)", "Visits(x, Bear) -> Chases(Bear, BaldEagle)", "Chases(x, Bear) -> Visits(x, BaldEagle)", "Chases(x, BaldEagle) -> Chases(BaldEagle, Bear)"], "conclusion": "Rough(BaldEagle)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Young/1, Young/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Young/1, Young/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Young/1, Young/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Young/1, Young/0\n"}
{"timestamp": "2025-05-01T03:43:33.800408", "premises": ["Chases(BaldEagle, Cat)", "Chases(BaldEagle, Dog)", "-Eats(BaldEagle, Cat)", "Eats(BaldEagle, Dog)", "-Chases(Cat, BaldEagle)", "-(Young(Cat) -> -Chases(Cat, BaldEagle))", "Young(Cat)", "Sees(Cat, BaldEagle)", "Sees(Cat, Tiger)", "Chases(Dog, Cat)", "-(If(Chases(Dog, BaldEagle) & Eats(Dog, BaldEagle), Nice(Dog)) -> Nice(Dog))", "Blue(Dog)", "Chases(Tiger, BaldEagle)", "Chases(Tiger, Cat)", "-(Young(x) -> Chases(x, Cat))", "If(Chases(Cat, Tiger), Nice(Tiger))", "If(Nice(x), Big(x))", "If(And(Chases(x, Dog), Eats(Dog, BaldEagle)), Nice(x))", "If(And(Big(x), Chases(x, Cat)), Chases(Cat, Dog))"], "conclusion": "-Chases(Cat, Dog)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n-(If(Chases(Dog, BaldEagle) & Eats(Dog, BaldEagle), Nice(Dog)) -> Nice(Dog))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n-(If(Chases(Dog, BaldEagle) & Eats(Dog, BaldEagle), Nice(Dog)) -> Nice(Dog))\n                            ^\n"}
{"timestamp": "2025-05-01T03:44:52.935433", "premises": ["-Big(Cow)", "-Green(Cow)", "Eats(Lion, Tiger)", "Sees(Lion, Cow)", "Visits(Lion, Cow)", "-Visits(Lion, Squirrel)", "Visits(Lion, Tiger)", "Big(Squirrel)", "Round(Squirrel)", "-Green(Tiger)", "-Sees(Tiger, Cow)", "implies((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))", "implies(Green(x) -> Eats(x, Tiger))", "implies(Round(Squirrel) -> Visits(Squirrel, Cow))", "implies(Eats(x, Cow) -> Sees(x, Squirrel))", "implies((Sees(x, Tiger) & Visits(Tiger, Squirrel)) -> Nice(x))", "implies(Round(x) -> Eats(x, Cow))", "implies(Kind(x) -> Eats(x, Cow))", "implies(Visits(Tiger, Cow) -> Sees(Cow, Squirrel))", "implies(Sees(x, Cow) -> Eats(Cow, Tiger))"], "conclusion": "Sees(Cow, Squirrel)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\n^\n"}
{"timestamp": "2025-05-01T03:45:22.882790", "premises": ["Chases(Cow, Squirrel)", "Eats(Cow, Dog)", "Needs(Cow, Squirrel)", "Eats(Dog, Squirrel)", "Big(Dog)", "Cold(Dog)", "Needs(Dog, Tiger)", "Eats(Squirrel, Dog)", "Cold(Squirrel)", "Needs(Squirrel, Cow)", "Eats(Tiger, Squirrel)", "if Chases(x, Tiger) then Kind(Tiger)", "if Kind(x) then Chases(x, Tiger)", "if Cold(x) then Chases(x, Tiger)", "if Chases(Dog, Squirrel) then Needs(Squirrel, Tiger)", "if And(Cold(x), Needs(x, Dog)) then not Chases(x, Squirrel)", "if Eats(x, Cow) then Big(x)", "if And(Chases(x, Cow), Kind(x)) then Big(x)", "if And(Eats(x, Squirrel), Needs(Squirrel, Tiger)) then Needs(x, Squirrel)", "if Chases(x, Tiger) then Chases(x, Cow)"], "conclusion": "Needs(Squirrel, Squirrel)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Chases'.\nif Chases(x, Tiger) then Kind(Tiger)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Chases'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Chases'.\nif Chases(x, Tiger) then Kind(Tiger)\n   ^\n"}
{"timestamp": "2025-05-01T03:46:12.370480", "premises": ["Blue(Lion)", "Need(Lion, Mouse)", "Sees(Lion, Squirrel)", "Eats(Mouse, Tiger)", "Rough(Mouse)", "Need(Mouse, Lion)", "Need(Mouse, Squirrel)", "-Sees(Mouse, Tiger)", "Need(Squirrel, Mouse)", "Need(Squirrel, Tiger)", "-Eats(Tiger, Mouse)", "Nice(Tiger)", "implies(Need(Squirrel, Tiger) & Eats(Tiger, Lion), Nice(Lion))", "implies(Cold(x), Eats(x, Mouse))", "implies(Sees(x, Squirrel) & Sees(x, Tiger), Sees(Tiger, Squirrel))", "implies(Cold(x), Rough(x))", "implies(Eats(x, Lion), Rough(x))", "implies(Nice(x), Eats(x, Lion))", "implies(Need(Lion, Squirrel) & Eats(Lion, Tiger), Green(Lion))", "implies(Rough(Lion), -Eats(Lion, Mouse))", "implies(Eats(x, Lion), Eats(Lion, Tiger))"], "conclusion": "-Need(Lion, Squirrel)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Need(Squirrel, Tiger) & Eats(Tiger, Lion), Nice(Lion))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Need(Squirrel, Tiger) & Eats(Tiger, Lion), Nice(Lion))\n^\n"}
{"timestamp": "2025-05-01T03:46:21.850081", "premises": ["Color(Lion, Blue)", "Needs(Lion, Mouse)", "Sees(Lion, Squirrel)", "Eats(Mouse, Tiger)", "Rough(Mouse)", "Needs(Mouse, Lion)", "Needs(Mouse, Squirrel)", "-Sees(Mouse, Tiger)", "Needs(Squirrel, Mouse)", "Needs(Squirrel, Tiger)", "-Eats(Tiger, Mouse)", "Nice(Tiger)", "implies(Needs(Squirrel, Tiger) & Eats(Tiger, Lion) --> Nice(Lion))", "implies(Cold(x) --> Eats(x, Mouse))", "implies(Sees(x, Squirrel) & Sees(x, Tiger) --> Sees(Tiger, Squirrel))", "implies(Cold(x) --> Rough(x))", "implies(Eats(x, Lion) --> Rough(x))", "implies(Nice(x) --> Eats(x, Lion))", "implies(Needs(Lion, Squirrel) & Eats(Lion, Tiger) --> Color(Lion, Green))", "implies(Rough(Lion) --> -Eats(Lion, Mouse))", "implies(Eats(x, Lion) --> Eats(Lion, Tiger))"], "conclusion": "-Needs(Lion, Squirrel)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Needs(Squirrel, Tiger) & Eats(Tiger, Lion) --> Nice(Lion))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Needs(Squirrel, Tiger) & Eats(Tiger, Lion) --> Nice(Lion))\n^\n"}
{"timestamp": "2025-05-01T03:47:14.852996", "premises": ["Chases(BaldEagle, Mouse)", "Round(BaldEagle)", "Needs(BaldEagle, Cat)", "Needs(BaldEagle, Mouse)", "Visits(BaldEagle, Cow)", "Visits(Cat, Cow)", "Chases(Cow, Cat)", "Nice(Cow)", "Needs(Cow, BaldEagle)", "Visits(Cow, BaldEagle)", "Visits(Mouse, Cat)", "If (Chases(x, Cat) & Chases(x, Cow)) then Visits(Mouse, x)", "If Visits(y, Mouse) then Chases(Mouse, Cow)", "If Color(Cow, Blue) then Needs(Cow, Cat)", "If (Visits(z, Cow) & Needs(z, Cat)) then Color(Cat, Blue)", "If (Visits(w, Mouse) & Visits(w, BaldEagle)) then Nice(Mouse)", "If Cold(x) then Needs(x, Mouse)", "If (Nice(z) & Needs(z, BaldEagle)) then Chases(z, Cow)", "If Chases(Mouse, BaldEagle) then Visits(BaldEagle, Mouse)", "If Nice(Mouse) then Chases(Mouse, BaldEagle)"], "conclusion": "-Chases(Mouse, BaldEagle)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nIf (Chases(x, Cat) & Chases(x, Cow)) then Visits(Mouse, x)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nIf (Chases(x, Cat) & Chases(x, Cow)) then Visits(Mouse, x)\n                   ^\n"}
{"timestamp": "2025-05-01T03:48:59.910652", "premises": ["-Cold(Anne)", "Rough(Anne)", "Round(Bob)", "Rough(Erin)", "Round(Erin)", "Furry(Gary)", "Green(Gary)", "all x. (Nice(x) -> Green(x))", "all x. (Furry(x) -> Green(x))", "all x. ((Green(x) & -Round(x)) -> White(x))", "all x. ((Cold(x) & Round(x)) -> Nice(x))", "Furry(Bob) -> White(Bob)", "Round(x) -> Cold(x)", "White(Anne) -> Furry(Anne)", "all x. (Nice(x) -> Rough(x))", "all x. (Rough(x) -> Furry(x))", "-Round(Gary)", "Man(John)", "all x. (Man(x) -> Mortal(x))", "Mortal(John)", "Mortal(Socrates)", "Identical(John, Socrates)", "JohnRunsTrack(x) -> Fast(x)", "-JohnRunsTrack()", "-Fast(John)", "Triangle(x) -> Polygon(x)", "Polygon(x) -> ThreeOrMoreSides(x)", "Hexagon(x) -> Polygon(x)", "Hexagon(x) -> SixSides(x)", "Hexagon(x) -> ThreeOrMoreSides(x)", "Smokes(x) -> HigherChanceOfLungCancer(x)", "DrinksExcessively(x) -> HigherChanceOfLiverDisease(x)", "-Smokes(x) & -DrinksExcessively(x) -> NoHigherChanceOfLungCancerOrLiverDisease(x)", "Smokes(John)", "HigherChanceOfLungCancer(John)", "all x. (Human(x) -> Mortal(x))", "Human(Socrates)", "Mortal(Socrates)", "all x. (Soul(x) -> Immortal(x))", "-Soul(Socrates)", "-Immortal(Socrates)", "PrimeNumberGreaterThan2(x) -> Odd(x)", "-PrimeNumberGreaterThan2(Six)", "-Odd(Six)", "DrinksAlcohol(x) -> FeelsEffects(x)", "DrinksCaffeine(x) -> FeelsEffects(x)", "(DrinksAlcohol(x) & DrinksCaffeine(x)) -> (FeelsEffects(x) & FeelsEffects(x))", "-(DrinksAlcohol(x) | DrinksCaffeine(x)) -> NoEffects(x)", "DrinksCaffeine(Emma)", "FeelsEffects(Emma)", "Triangle(x) -> ThreeSides(x)", "Quadrilateral(x) -> FourSides(x)", "Pentagon(x) -> FiveSides(x)", "Hexagon(x) -> SixSides(x)", "Heptagon(x) -> SevenSides(x)", "Pentagon(x) -> LessThan(FiveSides(x), SevenSides(x))", "Triangle(x) -> SumOfAngles(x, OneEightZero)", "Quadrilateral(x) -> SumOfAngles(x, ThreeSixZero)", "RegularHexagon(x) -> CongruentAngles(x)", "RegularHexagon(x) -> SumOfAngles(x, SevenTwoZero)", "RegularHexagon(x) & SumOfAngles(x, OneEightZero) -> False", "Triangle(x) -> Polygon(x)", "Rectangle(x) -> Polygon(x)", "Parallelogram(x) -> Quadrilateral(x)", "Trapezoid(x) -> Quadrilateral(x)", "Pentagon(x) -> Polygon(x)", "Pentagon(x) & -Triangle(x) & -Rectangle(x) & -Parallelogram(x) & -Trapezoid(x)", "RequiresGasoline(x) -> InternalCombustionEngine(x)", "RequiresElectricity(x) -> ElectricEngine(x)", "RequiresDiesel(x) -> InternalCombustionEngine(x)", "Hybrid(x) -> (RequiresGasoline(x) & RequiresElectricity(x))", "RequiresElectricity(ToyotaPrius)", "-InternalCombustionEngine(ToyotaPrius)", "EatsFood(x) & DoesNotExcrete(x) -> RottingFoodInBody(x)", "EatsFood(x) & Excretes(x) -> NoRottingFoodInBody(x)", "DeadBody(x) -> DoesNotExcrete(x)", "Alive(x) -> EatsFood(x)", "DeadBody(x) & EatsFood(x) & DoesNotExcrete(x) -> RottingFoodInBody(x)", "GoodStudent(x) -> GoodGrades(x)", "StudiesHard(x) -> GoodStudent(x)", "DoesNotStudyAtAll(x) -> PoorStudent(x)", "StudiesHard(x) -> GoodStudent(x) & GoodStudent(x) -> GoodGrades(x)", "GoodGrade(x, y) -> Understands(x, y)", "CanExplain(x, y) -> Understands(x, y)", "CanApply(x, y) -> Understands(x, y)", "(CanExplain(x, y) & CanApply(x, y)) -> Understands(x, y)", "Smokes(x) -> HigherRiskOfLungCancer(x)", "DrinksExcessively(x) -> HigherRiskOfLiverDisease(x)", "(Smokes(x) & DrinksExcessively(x)) -> (HigherRiskOfLungCancer(x) & HigherRiskOfLiverDisease(x))", "-(Smokes(x) | DrinksExcessively(x)) -> NoHigherRiskOfLungCancerOrLiverDisease(x)", "Smokes(John)", "HigherRiskOfLungCancer(John)", "DrinksAlcohol(x) -> HigherRiskOfLiverDisease(x)", "DrinksCaffeine(x) -> HigherRiskOfHeartDisease(x)", "(DrinksAlcohol(x) & DrinksCaffeine(x)) -> (HigherRiskOfLiverDisease(x) & HigherRiskOfHeartDisease(x))", "-(DrinksAlcohol(x) | DrinksCaffeine(x)) -> NoHigherRiskOfLiverDiseaseOrHeartDisease(x)", "DrinksAlcohol(Mary)", "HigherRiskOfLiverDisease(Mary)", "Vegetarian(x) -> DoesNotEatMeat(x)", "EatsMeat(x) -> ConsumesAnimalProtein(x)", "ConsumesAnimalProtein(x) -> HigherCholesterol(x)", "ConsumesLessCholesterol(x) -> LowerRiskOfHeartDisease(x)", "Vegetarian(Mary)", "LowerRiskOfHeartDisease(Mary)", "Adult(x) -> Over18YearsOld(x)", "Minor(x) -> Under18YearsOld(x)", "Adult(x) -> AllowedToVote(x)", "Minor(x) -> NotAllowedToVote(x)", "Over18YearsOld(x) -> AllowedToVote(x)", "Vegetarian(x) -> DoesNotEatMeat(x)", "Vegan(x) -> DoesNotEatAnimalProducts(x)", "EatsMeat(x) -> DoesNotEatVeganDiet(x)", "EatsAnimalProducts(x) -> DoesNotEatVegetarianDiet(x)", "Vegetarian(Laura)", "DoesNotEatVeganDiet(Laura)", "Student(x) -> EnrolledInSchool(x)", "EnrolledInSchool(x) -> Learner(x)", "Learner(x) -> Studying(x)", "Studying(x) -> ActivelyEngagedInLearningProcess(x)", "Student(John)"], "conclusion": "ActivelyEngagedInLearningProcess(John)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n-JohnRunsTrack()\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n-JohnRunsTrack()\n               ^\n"}
{"timestamp": "2025-05-01T03:49:06.866717", "premises": ["-Kind(Anne)", "Quiet(Anne)", "-Green(Dave)", "Rough(Dave)", "Round(Dave)", "Smart(Dave)", "Quiet(Fiona)", "Round(Fiona)", "Smart(Gary)", "Young(Gary)", "all x. (Round(x) -> Rough(x))", "all x. (Smart(x) -> Rough(x))", "all x. ((Young(x) & Rough(x)) -> Smart(x))", "all x. (Rough(x) -> Kind(x))", "all x. (Rough(x) -> Kind(x))", "((Smart(Fiona) & Kind(Fiona)) -> Green(Fiona))", "((Round(Anne) -> Quiet(Anne))", "all x. ((Round(x) & Rough(x)) -> Quiet(x))", "all x. (Kind(x) -> Young(x))"], "conclusion": "-Quiet(Gary)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n((Round(Anne) -> Quiet(Anne))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n((Round(Anne) -> Quiet(Anne))\n                             ^\n"}
{"timestamp": "2025-05-01T03:49:21.336305", "premises": ["-Kind(Anne)", "Quiet(Anne)", "-Green(Dave)", "Rough(Dave)", "Round(Dave)", "Smart(Dave)", "Quiet(Fiona)", "Round(Fiona)", "Smart(Gary)", "Young(Gary)", "all x. (Round(x) -> Rough(x))", "all x. (Smart(x) -> Rough(x))", "all x. ((Young(x) & Rough(x)) -> Smart(x))", "all x. (Rough(x) -> Kind(x))", "all x. (Rough(x) -> Kind(x))", "if Smart(Fiona) & Kind(Fiona) then Green(Fiona)", "if Round(Anne) then Quiet(Anne)", "all x. ((Round(x) & Rough(x)) -> Quiet(x))", "all x. (Kind(x) -> Young(x))"], "conclusion": "-Quiet(Gary)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Smart'.\nif Smart(Fiona) & Kind(Fiona) then Green(Fiona)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Smart'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Smart'.\nif Smart(Fiona) & Kind(Fiona) then Green(Fiona)\n   ^\n"}
{"timestamp": "2025-05-01T03:50:24.339418", "premises": ["Chases(BaldEagle, Dog)", "Color(BaldEagle, Red)", "-Likes(BaldEagle, Bear)", "-Chases(Bear, BaldEagle)", "-Chases(Bear, Dog)", "-Chases(Bear, Tiger)", "Color(Bear, Green)", "Likes(Bear, Dog)", "Visits(Bear, Tiger)", "-Chases(Dog, Bear)", "Chases(Dog, Tiger)", "Color(Dog, Blue)", "Color(Tiger, Red)", "Rough(Tiger)", "if (Visits(x, BaldEagle) & Likes(x, Tiger)) then Chases(BaldEagle, Tiger)", "if (Likes(x, Bear) & -Color(x, Green)) then Chases(Bear, Tiger)", "if (Chases(x, Dog) & -Nice(Dog)) then -Chases(x, Tiger)", "if (Chases(x, Bear) & Color(x, Red)) then Visits(x, Dog)", "if Chases(x, Bear) then Color(Bear, Red)", "if Visits(x, Dog) then Visits(Dog, Tiger)", "if (Color(x, Blue) & Visits(x, Tiger)) then Rough(Tiger)", "if (Color(x, Green) & Visits(x, Tiger)) then Chases(Bear, Tiger)"], "conclusion": "-Visits(BaldEagle, Dog)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Visits(x, BaldEagle) & Likes(x, Tiger)) then Chases(BaldEagle, Tiger)\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Visits(x, BaldEagle) & Likes(x, Tiger)) then Chases(BaldEagle, Tiger)\n                         ^\n"}
{"timestamp": "2025-05-01T03:51:04.902512", "premises": ["Chases(BaldEagle, Cow)", "Kind(BaldEagle)", "Rough(BaldEagle)", "Needs(BaldEagle, Rabbit)", "Chases(Cow, Rabbit)", "Cold(Cow)", "Green(Cow)", "Red(Cow)", "-Chases(Rabbit, BaldEagle)", "Chases(Rabbit, Cow)", "-Eats(Rabbit, BaldEagle)", "Eats(Rabbit, Cow)", "Cold(Rabbit)", "Green(Rabbit)", "Eats(Squirrel, Cow)", "-Eats(Squirrel, Rabbit)", "if (Needs(x, BaldEagle) then Chases(BaldEagle, Rabbit))", "if ((Rough(Squirrel) & -Kind(Squirrel)) then Green(Squirrel))", "if (Chases(x, BaldEagle) then Needs(x, Squirrel))", "if (Needs(x, Rabbit) then Chases(x, BaldEagle))", "if (Chases(x, Cow) then Eats(Cow, BaldEagle))", "if ((Chases(x, BaldEagle) & -Needs(x, BaldEagle)) then Red(x))", "if (Needs(x, Squirrel) then Needs(Squirrel, Rabbit))", "-Chases(Cow, BaldEagle)", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Biodegradable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)"], "conclusion": "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'then'.  Expected token ')'.\nif (Needs(x, BaldEagle) then Chases(BaldEagle, Rabbit))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'then'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'then'.  Expected token ')'.\nif (Needs(x, BaldEagle) then Chases(BaldEagle, Rabbit))\n                        ^\n"}
{"timestamp": "2025-05-01T03:51:21.553349", "premises": ["Kind(Bear)", "Visits(Bear, Mouse)", "Sees(Cow, Lion)", "Visits(Cow, Mouse)", "Round(Lion)", "Sees(Lion, Bear)", "Visits(Lion, Bear)", "Visits(Lion, Mouse)", "Needs(Mouse, Bear)", "forall x. (Needs(x, Bear) -> Green(x))", "if (Sees(Bear, Lion)) then (Big(Lion))", "if (Sees(x, Mouse) and Sees(Mouse, Cow)) then (Needs(x, Cow))", "forall x. (Needs(x, Cow) -> Round(x))", "forall x. (Green(x) -> Sees(x, Mouse))", "forall x. (Green(x) -> Visits(x, Bear))", "if (Sees(x, Mouse) and Sees(x, Bear)) then (Green(Bear))", "if (Sees(x, Cow) and Round(x)) then (Visits(Cow, Lion))", "if (Color(x, Blue) and Visits(x, Cow)) then (Sees(Cow, Bear))"], "conclusion": "-Green(Mouse)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'then'.\nif (Sees(Bear, Lion)) then (Big(Lion))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'then'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'then'.\nif (Sees(Bear, Lion)) then (Big(Lion))\n                      ^\n"}
{"timestamp": "2025-05-01T03:58:26.998462", "premises": ["-Smart(Anne)", "White(Charlie)", "Big(Dave)", "Nice(Dave)", "Furry(Gary)", "Kind(Gary)", "White(Gary)", "all x. (Kind(x) -> -Young(x))", "all x. (Nice(x) -> Smart(x))", "all x. (Young(x) & Kind(x) -> Smart(x))", "all x. ((White(x) & Young(x)) -> Kind(x))", "all x. (Kind(x) -> Big(x))", "all x. (Smart(x) -> Furry(x))", "all x. (White(x) -> Nice(x))", "if Smart(Anne) then Young(Anne)", "if Furry(Charlie) then Kind(Charlie)", "Kind(Dave)", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Whale(x) -> Mammal(x))", "all x. (Whale(x) -> -HasHair(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Human(x) -> HasHair(x))", "all x. (Bald(x) & Human(x) -> Mammal(x))", "all x. (Whale(x) -> WarmBlooded(x))", "all x. (Doctor(x) -> HasMedicalKnowledge(x))", "all x. (MedicalProfessional(x) -> Doctor(x))", "all x. (MedicalResearcher(x) -> MedicalProfessional(x))", "MedicalResearcher(Joe)", "HasMedicalKnowledge(Joe)", "all x. (Doctor(x) -> CanDiagnose(x, illness))", "all x. (Doctor(x) -> HasMedicalDegree(x))", "all x. (HasMedicalDegree(x) -> HasEducationForAtLeastEightYears(x))", "Doctor(Sarah)", "GraduatedFromMedicalSchoolInSixYears(Sarah)", "-CanDiagnose(Sarah, illness)", "all x. (Bachelor(x) -> UnmarriedMan(x))", "all x. (UnmarriedMan(x) -> EligibleToVote(x))", "Bachelor(John)", "EligibleToVote(John)", "all x. (Human(x) -> Mortal(x))", "Human(Socrates)", "Mortal(Socrates)", "all x. (Mammal(x) -> HasFur(x))", "all x. (Whale(x) -> Mammal(x))", "all x. (Whale(x) -> -HasFur(x))", "-(all x. (Mammal(x) -> HasFur(x)) & all x. (Whale(x) -> Mammal(x)) & all x. (Whale(x) -> -HasFur(x)))", "all x. (Human(x) -> UniqueDNA(x))", "all x. (Monkey(x) -> UniqueDNA(x))", "-(Human(x) & Monkey(x))", "(all x. (Human(x) -> UniqueDNA(x)) & all x. (Monkey(x) -> UniqueDNA(x)) & -(Human(x) & Monkey(x)))", "all x. (Cat(x) -> Mammal(x))", "all x. (Dog(x) -> Mammal(x))", "-(Cat(x) & Dog(x))", "Dog(Pet)", "(all x. (Cat(x) -> Mammal(x)) & all x. (Dog(x) -> Mammal(x)) & -(Cat(x) & Dog(x)) & Dog(Pet))", "all x. (Dog(x) -> Canine(x))", "all x. (Canine(x) -> Mammal(x))", "-(Cat(x) & Canine(x))", "-(Cat(x) & Dog(x))", "Cat(Mammal)", "(Mammal(Cat) & -(Cat(x) & Canine(x)))", "all x. (Socratic(x) -> Philosopher(x))", "all x. (Philosopher(x) -> Human(x))", "Socratic(Socrates)", "Human(Socrates)", "all x. (EvenNumber(x) -> DivisibleBy2(x))", "EvenNumber(Six)", "DivisibleBy2(Six)", "all x. (PrimeNumber(x) -> Odd(x))", "PrimeNumber(Seven)", "Odd(Seven)", "all x. (Triangle(x) -> HasThreeSides(x))", "all x. (Rectangle(x) -> HasFourSides(x))", "-(Triangle(x) & HasThreeSides(x) & Rectangle(x))", "all x. (Snows(x) -> SlipperyRoads(x))", "SlipperyRoadsYesterday", "SnowedYesterday", "all x. (FasterThan(Car(x), Train) -> Fast(x))", "FasterThan(BugattiVeyron, Train) & Speed(BugattiVeyron, FourThreeOne) & Speed(Train, OneTwoZero)", "Fast(BugattiVeyron)", "all x. (Doctor(x) -> HasMedicalKnowledge(x))", "-Doctor(MedicalResearcher)", "-HasAllMedicalKnowledge(MedicalResearcher)", "all x. (MedicalResearcher(x) -> HasSomeMedicalKnowledge(x))", "-HasAllMedicalKnowledge(MedicalResearcher)", "(all x. (MedicalResearcher(x) -> HasSomeMedicalKnowledge(x)) & -(HasAllMedicalKnowledge(MedicalResearcher)))", "all x. (Mammal(x) -> HasFur(x))", "Mammal(Whale)", "-HasFur(Whale)", "-(all x. (Mammal(x) -> HasFur(x)) & Mammal(Whale) & -HasFur(Whale))", "all x. (Bird(x) -> CanFly(x))", "Bird(Penguin)", "-CanFly(Penguin)", "(Bird(Penguin) & -CanFly(Penguin))", "all x. (Human(x) -> Mortal(x))", "Human(Socrates)", "all x. (Human(x) -> Mortal(x))", "Mortal(Socrates)", "all x. (Mammal(x) -> HasFourLimbs(x))", "Mammal(Dolphin)", "HasTwoLimbs(Dolphin)", "-(all x. (Mammal(x) -> HasFourLimbs(x)) & Mammal(Dolphin) & HasTwoLimbs(Dolphin))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Dog(Rover)", "Animal(Rover)", "all x. (Mammal(x) -> HasFur(x))", "all x. (Whale(x) -> Mammal(x))", "-HasFur(Whale)", "-(all x. (Mammal(x) -> HasFur(x)) & all x. (Whale(x) -> Mammal(x)) & -HasFur(Whale))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "WarmBlooded(Cat)", "WarmBlooded(Cat)", "all x. (EvenNumber(x) -> DivisibleBy2(x))", "EvenNumber(Four)", "DivisibleBy2(Four)", "DivisibleBy2(Four)", "all x. (PrimeNumber(x) -> Odd(x))", "PrimeNumber(Five)", "Odd(Five)", "Odd(Five)", "all x. (Rains(x) -> WetGrass(x))", "RainedYesterday", "WetGrassYesterday", "all x. (Doctor(x) -> CanPrescribeMedicine(x))", "Doctor(John)", "CanPrescribeMedicine(John)", "all x. (HasDriverLicense(x) -> CanDriveCar(x))", "HasDriverLicense(John)", "CanDriveCar(John)", "all x. (Plant(x) -> HasChlorophyll(x))", "all x. (Grass(x) -> Plant(x))", "HasChlorophyll(Grass)", "HasChlorophyll(Grass)", "all x. (Mammal(x) -> HasFourLimbs(x))", "all x. (Whale(x) -> Mammal(x))", "-HasFourLimbs(Whale)", "-(all x. (Mammal(x) -> HasFourLimbs(x)) & all x. (Whale(x) -> Mammal(x)) & -HasFourLimbs(Whale))", "all x. (PrimeNumber(x) -> Odd(x))", "PrimeNumber(Two)", "-Odd(Two)", "PrimeNumber(Two) & -Odd(Two)", "all x. (EvenNumber(x) -> DivisibleBy2(x))", "EvenNumber(Six)", "DivisibleBy2(Six)", "DivisibleBy2(Six)", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Whale(x) -> Mammal(x))", "WarmBlooded(Whale)", "WarmBlooded(Whale)", "all x. (Cat(x) -> HasFur(x))", "all x. (Cat(x) -> Meows(x))", "all x. (Lion(x) -> Cat(x))", "HasFur(Lion) & Meows(Lion)", "HasFur(Lion) & Meows(Lion)", "all x. (Raining(x) -> WetGrass(x))", "-Raining(x)", "-WetGrass(x)", "all x. (Studies(John, x) -> PassesTest(John, x))", "-Studies(John, x)", "-PassesTest(John, x)", "all x. (EvenNumber(x) -> DivisibleBy2(x))", "sumOf5and7(OneTwo)", "EvenNumber(OneTwo)", "-DivisibleBy2(sumOf5and7(OneTwo))", "-(all x. (EvenNumber(x) -> DivisibleBy2(x)) & EvenNumber(OneTwo) & -DivisibleBy2(sumOf5and7(OneTwo)))", "all x. (EvenNumber(x) -> DivisibleBy2(x))", "DivisibleBy2(Six)", "EvenNumber(Six)", "-DivisibleBy3(Six)", "DivisibleBy2(Six) & -DivisibleBy3(Six)", "all x. (Doctor(x) -> CanPrescribeMedicine(x))", "Doctor(John)", "CanPrescribeMedicine(John)", "CanPerformSurgery(John)", "CanPrescribeMedicine(John) & CanPerformSurgery(John)", "all x. (HasDriverLicense(x) -> CanDriveCar(x))", "HasDriverLicense(John)", "CanDriveCar(John)", "CanDriveBike(John)", "CanDriveCar(John) & CanDriveBike(John)", "all x. (EatsMoreThan3000CaloriesADay(x) -> GainsWeight(x))", "GainsWeight(PersonEatsTwoFiveZeroZeroCaloriesADay)", "-(EatsLessThan1000CaloriesADay(x) -> GainsWeight(x))", "-(all x. (EatsMoreThan3000CaloriesADay(x) -> GainsWeight(x)) & GainsWeight(PersonEatsTwoFiveZeroZeroCaloriesADay) & -(EatsLessThan1000CaloriesADay(x) -> GainsWeight(x)))", "all x. (DrinksAlcohol(x) -> FeelsEffectsOfAlcohol(x))", "all x. (DrinksNonAlcoholicBeverage(x) -> -FeelsEffectsOfAlcohol(x))", "all x. (DrinksOnlyWater(x) -> -FeelsEffectsOfAlcohol(x))", "DrinksOnlyWater(x) -> -FeelsEffectsOfAlcohol(x)", "all x. (Vegetarian(x) -> DoesNotEatMeat(x))", "all x. (EatsFish(x) -> -Vegetarian(x))", "all x. (EatsOnlyPlants(x) -> Vegetarian(x))", "EatsOnlyPlants(x) -> Vegetarian(x) & EatsFish(x) -> -Vegetarian(x)", "all x. (StudiesForMoreThan4HoursADay(x) -> HasGoodGrades(x))", "HasGoodGrades(StudiesForThreeHoursADay)", "all x. (StudiesForLessThan2HoursADay(x) -> HasPoorGrades(x))", "HasExcellentGrades(StudiesForFourHoursADay)", "-(all x. (StudiesForMoreThan4HoursADay(x) -> HasGoodGrades(x)) & HasGoodGrades(StudiesForThreeHoursADay) & HasPoorGrades(StudiesForLessThanTwoHoursADay) & HasExcellentGrades(StudiesForFourHoursADay))", "all x. (EatsDairyProducts(x) -> HasStrongBones(x))", "all x. (HasPlentyOfCalciumInDiet(x) -> HasStrongBones(x))", "HasPlentyOfCalciumInDiet(EatsSpinach)", "all x. (EatsOnlyFruitsAndVegetables(x) -> -HasStrongBones(x))", "HasPlentyOfCalciumInDiet(EatsSpinach) -> HasStrongBones(x)", "all x. (Drinks8GlassesOfWaterADay(x) -> ProperlyHydrated(x))", "-ProperlyHydrated(DrinksSevenGlassesOfWaterADay)", "all x. (DrinksMoreThan8GlassesOfWaterADay(x) -> AtRiskOfWaterIntoxication(x))", "all x. (DrinksOnlyCoffee(x) -> -GetsEnoughWater(x))", "DrinksOnlyCoffee(x) -> -GetsEnoughWater(x) & -ProperlyHydrated(x)", "all x. (ExercisesForMoreThan30MinutesADay(x) -> MaintainsHealthyWeight(x))", "-MaintainsHealthyWeight(ExercisesForTwoZeroMinutesADay)", "MaintainsHealthyWeight(ExercisesForThreeZeroMinutesADay)", "IdealWeight(ExercisesForOneHourADay)", "ExercisesFor30MinutesADay -> MaintainsHealthyWeight(x) & ExercisesFor1HourADay -> IdealWeight(x)", "all x. (EatsLessThan1200CaloriesADay(x) -> LosesWeight(x))", "all x. (EatsExactly1200CaloriesADay(x) -> MaintainsCurrentWeight(x))", "all x. (EatsMoreThan2000CaloriesADay(x) -> GainsWeight(x))", "all x. (EatsMoreThan3000CaloriesADay(x) -> GainsWeightQuickly(x))", "EatsLessThan1200CaloriesADay(x) -> LosesWeight(x) & EatsExactly1200CaloriesADay(x) -> MaintainsCurrentWeight(x) & EatsMoreThan2000CaloriesADay(x) -> GainsWeight(x) & -(EatsMoreThan3000CaloriesADay(x) -> GainsWeightQuickly(x))", "all x. (DrinksCoffeeInTheMorning(x) -> FeelsAlert(x))", "-FeelsAlert(DrinksCoffeeInTheEvening)", "all x. (DrinksOnlyDecaffeinatedCoffee(x) -> -FeelsAlert(x))", "all x. (TakesANapInTheAfternoon(x) -> FeelsAlertWhenTheyWakeUp(x))", "DrinksCoffeeInTheMorning(x) -> FeelsAlert(x) & -FeelsAlert(DrinksCoffeeInTheEvening) & TakesANapInTheAfternoon(x) -> FeelsAlertWhenTheyWakeUp(x) & -(DrinksOnlyDecaffeinatedCoffee(x) -> FeelsAlert(x))", "all x. (ExercisesForMoreThan60MinutesADay(x) -> BurnsALotOfCalories(x))", "A moderate amount of calories burned when ExercisesFor60MinutesADay(x)", "all x. (ExercisesForLessThan30MinutesADay(x) -> BurnsASmallAmountOfCalories(x))", "BurnsMoreCalories(ExercisesForOneHourAndOneZeroMinutesADay, ExercisesForFourFiveMinutesADay)", "ExercisesForMoreThan60MinutesADay(x) -> BurnsALotOfCalories(x) & ExercisesFor60MinutesADay(x) -> A moderate amount of calories burned when ExercisesFor60MinutesADay(x) & ExercisesForLessThan30MinutesADay(x) -> BurnsASmallAmountOfCalories(x) & BurnsMoreCalories(ExercisesForOneHourAndOneZeroMinutesADay, ExercisesForFourFiveMinutesADay) & -(ExercisesForOneHourAndOneZeroMinutesADay(x) -> BurnsACertainNumberOfCalories(x))", "all x. (DrinksAlcohol(x) -> FeelsEffectsOfAlcohol(x))", "all x. (DrinksNonAlcoholicBeverage(x) -> -FeelsEffectsOfAlcohol(x))", "all x. (DrinksOnlyCoffee(x) -> -FeelsEffectsOfAlcohol(x))", "all x. (DrinksAlcoholAndCoffee(x) -> (FeelsEffectsOfAlcohol(x) & FeelsEffectsOfCaffeine(x)))", "DrinksOnlyCoffee(x) -> -FeelsEffectsOfAlcohol(x) & DrinksAlcoholAndCoffee(x) -> (FeelsEffectsOfAlcohol(x) & FeelsEffectsOfCaffeine(x))", "all x. (StudiesForMoreThan4HoursADay(x) -> HasGoodGrades(x))", "all x. (StudiesForLessThan2HoursADay(x) -> HasPoorGrades(x))", "HasExcellentGrades(StudiesForFourHoursADay)", "HasBetterGrades(StudiesForThreeHoursAndThreeZeroMinutesADay,StudiesForThreeHoursADay)", "all x. (StudiesForMoreThan4HoursADay(x) -> HasGoodGrades(x)) & all x. (StudiesForLessThan2HoursADay(x) -> HasPoorGrades(x)) & HasExcellentGrades(StudiesForFourHoursADay) & HasBetterGrades(StudiesForThreeHoursAndThreeZeroMinutesADay,StudiesForThreeHoursADay) & -(StudiesForThreeHoursAndThreeZeroMinutesADay(x) -> HasACertainGrade(x))", "all x. (EatsADietHighInFiber(x) -> HasHealthyDigestiveSystem(x))", "all x. (EatsADietLowInFiber(x) -> HasConstipation(x))", "HasHealthyDigestiveSystem(EatsABalancedDietWithPlentyOfFruitsAndVegetables)", "all x. (EatsADietHighInProcessedFoods(x) -> HasLessHealthyDigestiveSystem(x))", "all x. (EatsADietHighInFiber(x) -> HasHealthyDigestiveSystem(x)) & all x. (EatsADietLowInFiber(x) -> HasACertainDigestiveHealth(x)) & HasHealthyDigestiveSystem(EatsABalancedDietWithPlentyOfFruitsAndVegetables) & HasLessHealthyDigestiveSystem(EatsADietHighInProcessedFoods(x)) & -(EatsADietLowInFiber(x) -> HasHealthyDigestiveSystem(x))", "all x. (DrinksWaterBeforeAMeal(x) -> FeelsFullAndEatsLess(x))", "all x. (DrinksSodaBeforeAMeal(x) -> FeelsThirstyAndEatsMore(x))", "all x. (EatsASmallSnackBeforeAMeal(x) -> EatsLessOverall(x))", "all x. (EatsALargeMealBeforeBedtime(x) -> HasTroubleSleeping(x))", "all x. (DrinksWaterBeforeAMeal(x) -> FeelsFullAndEatsLess(x)) & all x. (DrinksSodaBeforeAMeal(x) -> FeelsThirstyAndEatsMore(x)) & all x. (EatsASmallSnackBeforeAMeal(x) -> EatsLessOverall(x)) & all x. (EatsALargeMealBeforeBedtime(x) -> HasTroubleSleeping(x)) & -(EatsASmallSnackBeforeAMeal(x) -> EatsACertainAmount(x))", "all x. (DrinksTea(x) -> FeelsRelaxed(x))", "all x. (DrinksCoffee(x) -> FeelsAlert(x))", "all x. (DrinksEnergyDrinks(x) -> FeelsEnergized(x))", "all x. (DrinksSoda(x) -> FeelsThirsty(x))", "all x. (DrinksTea(x) -> FeelsRelaxed(x)) & all x. (DrinksCoffee(x) -> FeelsAlert(x)) & all x. (DrinksEnergyDrinks(x) -> FeelsEnergized(x)) & all x. (DrinksSoda(x) -> FeelsThirsty(x))", "all x. (DrinksAlcohol(x) -> FeelsEffectsOfAlcohol(x))", "all x. (DrinksNonAlcoholicBeverage(x) -> -FeelsEffectsOfAlcohol(x))", "all x. (DrinksOnlyCoffee(x) -> -FeelsEffectsOfAlcohol(x))", "all x. (DrinksAlcoholAndCoffee(x) -> (FeelsEffectsOfAlcohol(x) & FeelsEffectsOfCaffeine(x)))", "all x. (DrinksOnlyCoffee(x) -> -FeelsEffectsOfAlcohol(x)) & all x. (DrinksAlcoholAndCoffee(x) -> (FeelsEffectsOfAlcohol(x) & FeelsEffectsOfCaffeine(x)))", "all x. (EatsHealthyDiet(x) -> MaintainsHealthyWeight(x))", "all x. (EatsADietHighInProcessedFoods(x) -> GainsWeight(x))", "all x. (EatsADietHighInFat(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsADietHighInSugar(x) -> HasHigherRiskOfDiabetes(x))", "all x. (EatsHealthyDiet(x) -> MaintainsHealthyWeight(x)) & all x. (EatsADietHighInProcessedFoods(x) -> GainsWeight(x)) & all x. (EatsADietHighInFat(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsADietHighInSugar(x) -> HasHigherRiskOfDiabetes(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsADietHighInSalt(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (EatsADietHighInCholesterol(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsADietHighInSalt(x) -> HasHigherRiskOfHighBloodPressure(x)) & all x. (EatsADietHighInCholesterol(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfFruitsAndVegetables(x) -> HasHealthyDiet(x))", "all x. (EatsALotOfFastFood(x) -> HasUnhealthyDiet(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfProcessedFoods(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfFruitsAndVegetables(x) -> HasHealthyDiet(x)) & all x. (EatsALotOfFastFood(x) -> HasUnhealthyDiet(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfProcessedFoods(x) -> HasHigherRiskOfObesity(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x))", "all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x))", "all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x))", "all x. (DrinksALotOfAlcohol(x) -> HasHigherRiskOfAlcoholRelatedHealthProblems(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x)) & all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x)) & all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x)) & all x. (DrinksALotOfAlcohol(x) -> HasHigherRiskOfAlcoholRelatedHealthProblems(x))", "all x. (EatsABalancedDiet(x) -> HasHealthyWeight(x))", "all x. (EatsADietHighInProcessedFoods(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsADietHighInFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsADietHighInSugar(x) -> HasHigherRiskOfDiabetes(x))", "all x. (EatsABalancedDiet(x) -> HasHealthyWeight(x)) & all x. (EatsADietHighInProcessedFoods(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsADietHighInFastFood(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsADietHighInSugar(x) -> HasHigherRiskOfDiabetes(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x))", "all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x))", "all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x))", "all x. (DrinksALotOfSugarFreeDrinks(x) -> HasLowerRiskOfToothDecay(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x)) & all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x)) & all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x)) & all x. (DrinksALotOfSugarFreeDrinks(x) -> HasLowerRiskOfToothDecay(x))", "all x. (EatsALotOfFruitsAndVegetables(x) -> HasHealthyDiet(x))", "all x. (EatsALotOfFastFood(x) -> HasUnhealthyDiet(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (EatsALotOfFruitsAndVegetables(x) -> HasHealthyDiet(x)) & all x. (EatsALotOfFastFood(x) -> HasUnhealthyDiet(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (EatsALotOfRedMeat(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x)) & all x. (EatsALotOfRedMeat(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x))", "all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x))", "all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x))", "all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x)) & all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x)) & all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x)) & all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (EatsALotOfRedMeat(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x)) & all x. (EatsALotOfRedMeat(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x))", "all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x))", "all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x))", "all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x)) & all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x)) & all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x)) & all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (EatsABalancedDiet(x) -> HasHealthyWeight(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (EatsABalancedDiet(x) -> HasHealthyWeight(x)) & all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))", "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x)) & all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x)) & all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x))", "all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x))", "all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x))", "all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (DrinksALotOfWater(x) -> StaysHydrated(x)) & all x. (DrinksALotOfSoda(x) -> HasHigherRiskOfToothDecay(x)) & all x. (DrinksALotOfCoffee(x) -> HasHigherRiskOfDehydration(x)) & all x. (DrinksALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x))", "all x. (Smokes(x) -> HasUnhealthyHeart(x))", "all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x))", "all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (ExercisesRegularly(x) -> HasHealthyHeart(x)) & all x. (Smokes(x) -> HasUnhealthyHeart(x)) & all x. (EatsALotOfFattyFoods(x) -> HasHigherRiskOfHeartDisease(x)) & all x. (EatsALotOfSodium(x) -> HasHigherRiskOfHighBloodPressure(x))", "all x. (EatsABalancedDiet(x) -> HasHealthyWeight(x))", "all x. (EatsALotOfFastFood(x) -> HasHigherRiskOfObesity(x))", "all x. (EatsALotOfSweets(x) -> HasHigherRiskOfToothDecay(x))"], "conclusion": "all x. (EatsALotOfDairyProducts(x) -> HasHigherRiskOfLactoseIntolerance(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Smart'.\nif Smart(Anne) then Young(Anne)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Smart'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Smart'.\nif Smart(Anne) then Young(Anne)\n   ^\n"}
{"timestamp": "2025-05-01T03:58:56.347371", "premises": ["Blue(Anne)", "Cold(Anne)", "Blue(Bob)", "Smart(Bob)", "-Blue(Gary)", "Kind(Gary)", "Cold(Gary)", "Blue(Harry)", "all x. (Smart(x) -> Kind(x))", "(Smart(x) -> Kind(x))", "(And(Smart(x), Blue(x)) -> Kind(x))", "all x. (Nice(x) -> Red(x))", "(And(Kind(x), Cold(x)) -> Furry(x))", "all x. (And(Furry(x), Kind(x)) -> Smart(x))", "all x. (And(Smart(x), Furry(x)) -> Nice(x))", "(And(Kind(Gary), -Blue(Gary)) -> Cold(Gary))", "Kind(Gary)", "Cold(Gary)", "-Blue(Gary)", "all x. (And(Furry(x), Kind(x)) -> Smart(x))", "all x. (And(Smart(x), Furry(x)) -> Nice(x))", "(And(Kind(Gary), -Blue(Gary)) -> Cold(Gary))"], "conclusion": "Nice(Gary)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Smart/1, Blue/1, Kind/1, Cold/1, Furry/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Smart/1, Blue/1, Kind/1, Cold/1, Furry/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Smart/1, Blue/1, Kind/1, Cold/1, Furry/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Smart/1, Blue/1, Kind/1, Cold/1, Furry/1\n"}
{"timestamp": "2025-05-01T03:59:53.984394", "premises": ["Big(Anne)", "Green(Anne)", "Big(Charlie)", "Green(Charlie)", "White(Charlie)", "Red(Erin)", "White(Fiona)", "all x. (White(x) -> Blue(x))", "if Big(Anne) then -White(Anne)", "if (Cold(Charlie) & Blue(Charlie)) then White(Charlie)", "all x. (Big(x) -> -Smart(x))", "if Cold(x) then Big(x)", "if Red(x) then Big(x)", "if Blue(Fiona) then Green(Fiona)", "if (Smart(x) & Cold(x)) then Green(x)", "all x. (Green(x) -> Red(x))"], "conclusion": "Big(Fiona)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Big'.\nif Big(Anne) then -White(Anne)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Big'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Big'.\nif Big(Anne) then -White(Anne)\n   ^\n"}
{"timestamp": "2025-05-01T04:00:38.897633", "premises": ["Big(Anne)", "Quiet(Anne)", "-Smart(Anne)", "Blue(Bob)", "Quiet(Bob)", "Blue(Dave)", "Big(Fiona)", "Cold(Fiona)", "Quiet(Fiona)", "Smart(Fiona)", "all x. (Smart(x) -> Big(x))", "(Blue(x) | Red(x)) -> Big(x)", "all x. ((Cold(x) & -Blue(x)) -> Red(x))", "all x. (Cold(x) -> Smart(x))", "all x. (Blue(x) -> Cold(x))", "-((Big(Bob) & Cold(Bob)) -> Red(Bob))", "all x. ((Smart(x) & -Red(x)) -> White(x))", "-Big(Fiona) -> -Red(Fiona)", "Cold(Fiona)", "all x. (Cold(x) -> Smart(x))", "-Smart(Fiona)", "all x. ((-Smart(x) & -Red(x)) -> White(x))", "White(Fiona)", "White(Fiona) -> -Red(Fiona)"], "conclusion": "Red(Fiona) (*Contradiction_with_earlier_conclusions*)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Red(%%START ERROR%%Fiona,*Contradiction_with_earlier_conclusions*%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Red(%%START ERROR%%Fiona,*Contradiction_with_earlier_conclusions*%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T04:00:51.801644", "premises": ["Big(Anne)", "Quiet(Anne)", "-Smart(Anne)", "Blue(Bob)", "Quiet(Bob)", "Blue(Dave)", "Big(Fiona)", "Cold(Fiona)", "Quiet(Fiona)", "Smart(Fiona)", "all x. (Smart(x) -> Big(x))", "all x. (or(Blue(x), Red(x)) -> Big(x))", "all x. (Cold(x) & -Blue(x) -> Red(x))", "all x. (Cold(x) -> Smart(x))", "all x. (Blue(x) -> Cold(x))", "if (Big(Bob) & Cold(Bob)) then -Red(Bob)", "all x. (Smart(x) & -Red(x) -> White(x))"], "conclusion": "Red(Fiona)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'or'.  Expression expected.\nall x. (or(Blue(x), Red(x)) -> Big(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'or'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'or'.  Expression expected.\nall x. (or(Blue(x), Red(x)) -> Big(x))\n        ^\n"}
{"timestamp": "2025-05-01T04:02:41.853055", "premises": ["Eats(Cat, Mouse)", "Likes(Cat, Tiger)", "Eats(Cow, Tiger)", "Likes(Cow, Cat)", "Chases(Mouse, Cat)", "Chases(Mouse, Cow)", "Eats(Mouse, Tiger)", "Color(Mouse, Green)", "Shape(Mouse, Round)", "Chases(Tiger, Cat)", "Eats(Tiger, Cow)", "Likes(Tiger, Mouse)", "(Chases(x, Cow) & Chases(x, Mouse)) -> Color(Mouse, Blue)", "Eats(x, Cat) -> Nice(x)", "(Eats(Cat, Mouse) -> Likes(Mouse, Cow))", "(Chases(x, Mouse) & Round(x)) -> Big(x)", "(Chases(x, Tiger) & Chases(Tiger, Cat)) -> Round(Tiger)", "(Eats(x, Tiger) & Likes(x, Cat)) -> Likes(Cat, Cow)", "(Likes(Mouse, Cow) & Chases(Mouse, Cow)) -> Eats(Cow, Cat)", "(Eats(x, Cow) & Eats(x, Cat)) -> Chases(x, Tiger)", "(Eats(x, Tiger) & Eats(x, Cat)) -> Eats(Tiger, Cat)"], "conclusion": "Big(Cow)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Round/1, Round/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Round/1, Round/0\n"}
{"timestamp": "2025-05-01T04:10:06.260135", "premises": ["red(bear) <- does_not_see(bear, dog)", "eats(rabbit, bear) <- eats(something, rabbit)", "needs(bear, lion) <- eats(something, bear)", "does_not_see(bear, lion) <- eats(lion, bear)", "sees(dog, rabbit) <- red(something) & does_not_eat(something, dog)", "-big(something) <- sees(something, rabbit)", "eats(rabbit, lion) <- rough(something) & does_not_see(something, rabbit)", "red(bear) & does_not_see(bear, dog)", "exists x. (rough(x) & does_not_see(x, rabbit))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "exists x. (Dog(x) & Terrier(x))", "-Terrier(Labrador)", "Dog(Labrador)", "Terrier(BullTerrier)", "-Terrier(GermanShepherd)", "Dog(Dalmatian)", "exists x. (Dog(x) & -Terrier(x))", "all x. (Human(x) -> LivingCreature(x))", "exists x. (Human(x) & GoodAtSports(x))", "all x. (Athlete(x) -> GoodAtSports(x))", "exists x. (Person(x) & GoodAtScience(x))", "exists x. (Scientist(x) & -GoodAtSports(x))", "Human(Carl)", "GoodAtSports(Carl)", "Scientist(Maria)", "-GoodAtSports(Maria)", "Athlete(Carl)", "all x. (Man(x) -> Human(x))", "all x. (Woman(x) -> Human(x))", "all x. (Human(x) -> Mortal(x))", "all x. ((Man(x) | Woman(x)) -> Mortal(x))", "Young(John) <- Student(John)", "Student(John)", "Young(John)", "earns_at_least_15(Jane) <- works_at(Jane, store)", "-works_at(Jane, store)", "-earns_at_least_15(Jane)", "divisible_by_2(number) <- even(number)", "even(Four)", "divisible_by_2(Four)", "not divisible_by_2(number) <- odd(number)", "odd(Five)", "not divisible_by_2(Five)", "greater_than_1(number) <- prime(number)", "prime(Two)", "greater_than_1(Two)", "divisible_by(first, second) <- factor_of(second, first)", "factor_of(Two, Four)", "divisible_by(Two, Four)", "divisible_by(first, second) <- multiple_of(second, first)", "multiple_of(Two, Six)", "divisible_by(Two, Six)", "divisible_by_2(number) <- even(number)", "even(Six)", "odd(Six)", "contradiction", "not even(number) <- prime(number) & greater_than_2(number)", "prime(Three) & greater_than_2(Three)", "even(Three)", "contradiction", "either even(number) or multiple_of_4(number) <- divisible_by_4(number)", "divisible_by_4(OneFive)", "either even(OneFive) or multiple_of_4(OneFive)", "less_than_or_equal_to(factor, number) <- factor_of(number, factor)", "factor_of(OneFive, Five)", "less_than_or_equal_to(Five, OneFive)", "not divisible_by_3(number) <- perfect_square(number)", "perfect_square(Nine)", "not divisible_by_3(Nine)", "divisible_by_21(number) <- divisible_by_3(number) & divisible_by_7(number)", "divisible_by_3(OneZeroFive) & divisible_by_7(OneZeroFive)", "divisible_by_21(OneZeroFive)", "either divisible_by_2(number) or divisible_by_3(number) <- divisible_by_6(number)", "divisible_by_6(OneEight)", "either divisible_by_2(OneEight) or divisible_by_3(OneEight)", "divisible_by_9(number) <- sum_of_digits(number, sum) & divisible_by_9(sum)", "divisible_by_9(OneTwoFive)", "divisible_by_9(sum_of_digits(OneTwoFive))", "multiple_of_4(number) <- multiple_of_8(number)", "multiple_of_8(ThreeTwo)", "multiple_of_4(ThreeTwo)", "multiple_of_3(number) & multiple_of_4(number) <- multiple_of_12(number)", "multiple_of_12(FourEight)", "multiple_of_3(FourEight) & multiple_of_4(FourEight)", "multiple_of_3(number) & multiple_of_5(number) <- multiple_of_15(number)", "multiple_of_15(SixZero)", "multiple_of_3(SixZero) & multiple_of_5(SixZero)", "multiple_of_4(number) & multiple_of_5(number) <- multiple_of_20(number)", "multiple_of_20(OneZeroZero)", "multiple_of_4(OneZeroZero) & multiple_of_5(OneZeroZero)", "(multiple_of_2(number) & multiple_of_3(number)) | (multiple_of_2(number) & multiple_of_4(number)) | (multiple_of_3(number) & multiple_of_4(number)) <- multiple_of_24(number)", "multiple_of_24(FourEight)", "(multiple_of_2(FourEight) & multiple_of_3(FourEight)) | (multiple_of_2(FourEight) & multiple_of_4(FourEight)) | (multiple_of_3(FourEight) & multiple_of_4(FourEight))", "divisible_by_5(number) & divisible_by_5(number) <- multiple_of_25(number)", "multiple_of_25(OneTwoFive)", "divisible_by_5(OneTwoFive) & divisible_by_5(OneTwoFive)", "(multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) <- multiple_of_32(number)", "multiple_of_32(TwoFiveSix)", "(multiple_of_2(TwoFiveSix) & multiple_of_2(TwoFiveSix)) | (multiple_of_4(TwoFiveSix)) | (multiple_of_8(TwoFiveSix))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_6(number)) | (multiple_of_16(number))) <- multiple_of_48(number)", "multiple_of_48(FiveSevenSix)", "((multiple_of_2(FiveSevenSix) & multiple_of_2(FiveSevenSix)) | (multiple_of_2(FiveSevenSix)) | (multiple_of_4(FiveSevenSix)) | (multiple_of_8(FiveSevenSix)) | (multiple_of_6(FiveSevenSix)) | (multiple_of_16(FiveSevenSix)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_4(number))) <- multiple_of_64(number)", "multiple_of_64(OneZeroTwoFour)", "((multiple_of_2(OneZeroTwoFour) & multiple_of_2(OneZeroTwoFour)) | (multiple_of_2(OneZeroTwoFour)) | (multiple_of_4(OneZeroTwoFour)) | (multiple_of_8(OneZeroTwoFour)) | (multiple_of_2(OneZeroTwoFour)) | (multiple_of_4(OneZeroTwoFour)) | (multiple_of_16(OneZeroTwoFour)) | (multiple_of_2(OneZeroTwoFour)) | (multiple_of_32(OneZeroTwoFour)) | (multiple_of_4(OneZeroTwoFour)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_4(number))) <- multiple_of_96(number)", "multiple_of_96(OneFiveThreeSix)", "((multiple_of_2(OneFiveThreeSix) & multiple_of_2(OneFiveThreeSix)) | (multiple_of_2(OneFiveThreeSix)) | (multiple_of_4(OneFiveThreeSix)) | (multiple_of_8(OneFiveThreeSix)) | (multiple_of_2(OneFiveThreeSix)) | (multiple_of_4(OneFiveThreeSix)) | (multiple_of_16(OneFiveThreeSix)) | (multiple_of_2(OneFiveThreeSix)) | (multiple_of_32(OneFiveThreeSix)) | (multiple_of_2(OneFiveThreeSix)) | (multiple_of_64(OneFiveThreeSix)) | (multiple_of_4(OneFiveThreeSix)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_4(number))) <- multiple_of_128(number)", "multiple_of_128(TwoZeroFourEight)", "((multiple_of_2(TwoZeroFourEight) & multiple_of_2(TwoZeroFourEight)) | (multiple_of_2(TwoZeroFourEight)) | (multiple_of_4(TwoZeroFourEight)) | (multiple_of_8(TwoZeroFourEight)) | (multiple_of_2(TwoZeroFourEight)) | (multiple_of_4(TwoZeroFourEight)) | (multiple_of_16(TwoZeroFourEight)) | (multiple_of_2(TwoZeroFourEight)) | (multiple_of_32(TwoZeroFourEight)) | (multiple_of_2(TwoZeroFourEight)) | (multiple_of_64(TwoZeroFourEight)) | (multiple_of_4(TwoZeroFourEight)) | (multiple_of_128(TwoZeroFourEight)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_96(number)) | (multiple_of_4(number)) | (multiple_of_128(number)) | (multiple_of_4(number))) <- multiple_of_192(number)", "multiple_of_192(ThreeZeroSevenTwo)", "((multiple_of_2(ThreeZeroSevenTwo) & multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_4(ThreeZeroSevenTwo)) | (multiple_of_8(ThreeZeroSevenTwo)) | (multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_4(ThreeZeroSevenTwo)) | (multiple_of_16(ThreeZeroSevenTwo)) | (multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_32(ThreeZeroSevenTwo)) | (multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_64(ThreeZeroSevenTwo)) | (multiple_of_2(ThreeZeroSevenTwo)) | (multiple_of_96(ThreeZeroSevenTwo)) | (multiple_of_4(ThreeZeroSevenTwo)) | (multiple_of_128(ThreeZeroSevenTwo)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_192(number)) | (multiple_of_4(number)) | (multiple_of_256(number)) | (multiple_of_4(number))) <- multiple_of_288(number)", "multiple_of_288(FourZeroNineSix)", "((multiple_of_2(FourZeroNineSix) & multiple_of_2(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_4(FourZeroNineSix)) | (multiple_of_8(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_4(FourZeroNineSix)) | (multiple_of_16(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_32(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_64(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_128(FourZeroNineSix)) | (multiple_of_2(FourZeroNineSix)) | (multiple_of_192(FourZeroNineSix)) | (multiple_of_4(FourZeroNineSix)) | (multiple_of_256(FourZeroNineSix)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_192(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_4(number)) | (multiple_of_384(number)) | (multiple_of_4(number))) <- multiple_of_384(number)", "multiple_of_384(FiveOneTwoZero)", "((multiple_of_2(FiveOneTwoZero) & multiple_of_2(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_4(FiveOneTwoZero)) | (multiple_of_8(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_4(FiveOneTwoZero)) | (multiple_of_16(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_32(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_64(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_128(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_192(FiveOneTwoZero)) | (multiple_of_2(FiveOneTwoZero)) | (multiple_of_256(FiveOneTwoZero)) | (multiple_of_4(FiveOneTwoZero)) | (multiple_of_384(FiveOneTwoZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_4(number)) | (multiple_of_512(number)) | (multiple_of_4(number))) <- multiple_of_512(number)", "multiple_of_512(SixOneFourFour)", "((multiple_of_2(SixOneFourFour) & multiple_of_2(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_4(SixOneFourFour)) | (multiple_of_8(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_4(SixOneFourFour)) | (multiple_of_16(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_32(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_64(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_128(SixOneFourFour)) | (multiple_of_2(SixOneFourFour)) | (multiple_of_256(SixOneFourFour)) | (multiple_of_4(SixOneFourFour)) | (multiple_of_512(SixOneFourFour)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_4(number)) | (multiple_of_768(number)) | (multiple_of_4(number))) <- multiple_of_768(number)", "multiple_of_768(EightOneNineTwo)", "((multiple_of_2(EightOneNineTwo) & multiple_of_2(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_4(EightOneNineTwo)) | (multiple_of_8(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_4(EightOneNineTwo)) | (multiple_of_16(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_32(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_64(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_128(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_256(EightOneNineTwo)) | (multiple_of_2(EightOneNineTwo)) | (multiple_of_512(EightOneNineTwo)) | (multiple_of_4(EightOneNineTwo)) | (multiple_of_768(EightOneNineTwo)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_4(number)) | (multiple_of_1024(number)) | (multiple_of_4(number))) <- multiple_of_1024(number)", "multiple_of_1024(OneTwoTwoEightEight)", "((multiple_of_2(OneTwoTwoEightEight) & multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_4(OneTwoTwoEightEight)) | (multiple_of_8(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_4(OneTwoTwoEightEight)) | (multiple_of_16(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_32(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_64(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_128(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_256(OneTwoTwoEightEight)) | (multiple_of_2(OneTwoTwoEightEight)) | (multiple_of_512(OneTwoTwoEightEight)) | (multiple_of_4(OneTwoTwoEightEight)) | (multiple_of_1024(OneTwoTwoEightEight)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_768(number)) | (multiple_of_4(number)) | (multiple_of_1024(number)) | (multiple_of_4(number)) | (multiple_of_1536(number)) | (multiple_of_4(number))) <- multiple_of_1536(number)", "multiple_of_1536(OneEightFourThreeTwo)", "((multiple_of_2(OneEightFourThreeTwo) & multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_4(OneEightFourThreeTwo)) | (multiple_of_8(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_4(OneEightFourThreeTwo)) | (multiple_of_16(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_32(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_64(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_128(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_256(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_512(OneEightFourThreeTwo)) | (multiple_of_2(OneEightFourThreeTwo)) | (multiple_of_768(OneEightFourThreeTwo)) | (multiple_of_4(OneEightFourThreeTwo)) | (multiple_of_1024(OneEightFourThreeTwo)) | (multiple_of_4(OneEightFourThreeTwo)) | (multiple_of_1536(OneEightFourThreeTwo)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_4(number)) | (multiple_of_2048(number)) | (multiple_of_4(number))) <- multiple_of_2048(number)", "multiple_of_2048(TwoFourFiveSevenSix)", "((multiple_of_2(TwoFourFiveSevenSix) & multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_4(TwoFourFiveSevenSix)) | (multiple_of_8(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_4(TwoFourFiveSevenSix)) | (multiple_of_16(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_32(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_64(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_128(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_256(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_512(TwoFourFiveSevenSix)) | (multiple_of_2(TwoFourFiveSevenSix)) | (multiple_of_1024(TwoFourFiveSevenSix)) | (multiple_of_4(TwoFourFiveSevenSix)) | (multiple_of_2048(TwoFourFiveSevenSix)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_4(number)) | (multiple_of_2560(number)) | (multiple_of_4(number))) <- multiple_of_2560(number)", "multiple_of_2560(ThreeZeroSevenTwoZero)", "((multiple_of_2(ThreeZeroSevenTwoZero) & multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_4(ThreeZeroSevenTwoZero)) | (multiple_of_8(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_4(ThreeZeroSevenTwoZero)) | (multiple_of_16(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_32(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_64(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_128(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_256(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_512(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_1024(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_1536(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_2048(ThreeZeroSevenTwoZero)) | (multiple_of_2(ThreeZeroSevenTwoZero)) | (multiple_of_3072(ThreeZeroSevenTwoZero)) | (multiple_of_4(ThreeZeroSevenTwoZero)) | (multiple_of_2560(ThreeZeroSevenTwoZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_4(number)) | (multiple_of_3072(number)) | (multiple_of_4(number))) <- multiple_of_3072(number)", "multiple_of_3072(ThreeSixEightSixFour)", "((multiple_of_2(ThreeSixEightSixFour) & multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_4(ThreeSixEightSixFour)) | (multiple_of_8(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_4(ThreeSixEightSixFour)) | (multiple_of_16(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_32(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_64(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_128(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_256(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_512(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_1024(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_1536(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_2048(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_2560(ThreeSixEightSixFour)) | (multiple_of_2(ThreeSixEightSixFour)) | (multiple_of_3840(ThreeSixEightSixFour)) | (multiple_of_4(ThreeSixEightSixFour)) | (multiple_of_3072(ThreeSixEightSixFour)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_2(number)) | (multiple_of_4096(number)) | (multiple_of_4(number)) | (multiple_of_36864(number)) | (multiple_of_4(number))) <- multiple_of_36864(number)", "multiple_of_36864(FourZeroNineSixZero)", "((multiple_of_2(FourZeroNineSixZero) & multiple_of_2(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_4(FourZeroNineSixZero)) | (multiple_of_8(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_4(FourZeroNineSixZero)) | (multiple_of_16(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_32(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_64(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_128(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_256(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_512(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_1024(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_1536(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_2048(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_2560(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_3072(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_3840(FourZeroNineSixZero)) | (multiple_of_2(FourZeroNineSixZero)) | (multiple_of_4096(FourZeroNineSixZero)) | (multiple_of_4(FourZeroNineSixZero)) | (multiple_of_36864(FourZeroNineSixZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_2(number)) | (multiple_of_4096(number)) | (multiple_of_2(number)) | (multiple_of_49152(number)) | (multiple_of_4(number)) | (multiple_of_40960(number)) | (multiple_of_4(number))) <- multiple_of_40960(number)", "multiple_of_40960(FourSixZeroEightZero)", "((multiple_of_2(FourSixZeroEightZero) & multiple_of_2(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_4(FourSixZeroEightZero)) | (multiple_of_8(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_4(FourSixZeroEightZero)) | (multiple_of_16(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_32(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_64(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_128(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_256(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_512(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_1024(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_1536(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_2048(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_2560(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_3072(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_3840(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_4096(FourSixZeroEightZero)) | (multiple_of_2(FourSixZeroEightZero)) | (multiple_of_49152(FourSixZeroEightZero)) | (multiple_of_4(FourSixZeroEightZero)) | (multiple_of_40960(FourSixZeroEightZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_2(number)) | (multiple_of_4096(number)) | (multiple_of_2(number)) | (multiple_of_49152(number)) | (multiple_of_4(number)) | (multiple_of_49152(number)) | (multiple_of_8(number)) | (multiple_of_16(number)) | (multiple_of_32(number)) | (multiple_of_64(number)) | (multiple_of_128(number)) | (multiple_of_256(number)) | (multiple_of_512(number)) | (multiple_of_1024(number)) | (multiple_of_2048(number)) | (multiple_of_2560(number)) | (multiple_of_3072(number)) | (multiple_of_3840(number)) | (multiple_of_4096(number)) | (multiple_of_49152(number))) <- multiple_of_49152(number)", "multiple_of_49152(FiveOneTwoZeroZero)", "((multiple_of_2(FiveOneTwoZeroZero) & multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_4(FiveOneTwoZeroZero)) | (multiple_of_8(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_4(FiveOneTwoZeroZero)) | (multiple_of_16(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_32(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_64(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_128(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_256(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_512(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_1024(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_1536(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_2048(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_2560(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_3072(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_3840(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_4096(FiveOneTwoZeroZero)) | (multiple_of_2(FiveOneTwoZeroZero)) | (multiple_of_49152(FiveOneTwoZeroZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_2(number)) | (multiple_of_4096(number)) | (multiple_of_2(number)) | (multiple_of_49152(number)) | (multiple_of_2(number)) | (multiple_of_98304(number)) | (multiple_of_4(number)) | (multiple_of_491520(number)) | (multiple_of_4(number))) <- multiple_of_491520(number)", "multiple_of_491520(FiveZeroZeroZeroZeroZero)", "((multiple_of_2(FiveZeroZeroZeroZeroZero) & multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZero)) | (multiple_of_8(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZero)) | (multiple_of_16(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_32(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_64(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_128(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_256(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_512(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_1024(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_1536(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_2048(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_2560(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_3072(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_3840(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_4096(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_49152(FiveZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZero)) | (multiple_of_98304(FiveZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZero)) | (multiple_of_491520(FiveZeroZeroZeroZeroZero)))", "((multiple_of_2(number) & multiple_of_2(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_8(number)) | (multiple_of_2(number)) | (multiple_of_4(number)) | (multiple_of_16(number)) | (multiple_of_2(number)) | (multiple_of_32(number)) | (multiple_of_2(number)) | (multiple_of_64(number)) | (multiple_of_2(number)) | (multiple_of_128(number)) | (multiple_of_2(number)) | (multiple_of_256(number)) | (multiple_of_2(number)) | (multiple_of_512(number)) | (multiple_of_2(number)) | (multiple_of_1024(number)) | (multiple_of_2(number)) | (multiple_of_1536(number)) | (multiple_of_2(number)) | (multiple_of_2048(number)) | (multiple_of_2(number)) | (multiple_of_2560(number)) | (multiple_of_2(number)) | (multiple_of_3072(number)) | (multiple_of_2(number)) | (multiple_of_3840(number)) | (multiple_of_2(number)) | (multiple_of_4096(number)) | (multiple_of_2(number)) | (multiple_of_49152(number)) | (multiple_of_2(number)) | (multiple_of_98304(number)) | (multiple_of_2(number)) | (multiple_of_196608(number)) | (multiple_of_4(number)) | (multiple_of_4915232(number)) | (multiple_of_4(number))) <- multiple_of_4915232(number)", "multiple_of_4915232(FiveZeroZeroZeroZeroZeroZero)"], "conclusion": "((multiple_of_2(FiveZeroZeroZeroZeroZeroZero) & multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_8(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_16(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_32(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_64(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_128(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_256(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_512(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1024(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1536(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2048(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2560(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3072(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3840(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4096(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_49152(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_98304(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_196608(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4915232(500", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n((multiple_of_2(FiveZeroZeroZeroZeroZeroZero) & multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_8(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_16(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_32(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_64(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_128(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_256(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_512(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1024(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1536(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2048(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2560(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3072(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3840(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4096(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_49152(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_98304(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_196608(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4915232(500\nstack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n((multiple_of_2(FiveZeroZeroZeroZeroZeroZero) & multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_8(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_16(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_32(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_64(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_128(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_256(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_512(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1024(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_1536(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2048(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2560(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3072(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_3840(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4096(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_49152(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_98304(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_2(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_196608(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4(FiveZeroZeroZeroZeroZeroZero)) | (multiple_of_4915232(500\nn"}
{"timestamp": "2025-05-01T04:10:14.528989", "premises": ["Eats(Cat, Tiger)", "Likes(Cat, Tiger)", "Likes(Lion, Cat)", "Red(Rabbit)", "-Young(Rabbit)", "Likes(Rabbit, Lion)", "if Cold(x) & Likes(x, Tiger) then -Likes(Tiger, Lion)", "if Chases(x, Tiger) then Likes(Tiger, Lion)", "if Cold(Tiger) then Chases(Tiger, Rabbit)", "if Chases(Lion, Cat) then Chases(Cat, Tiger)", "if Eats(x, Tiger) then Cold(Tiger)", "if Young(x) then Chases(x, Tiger)", "if Chases(x, Tiger) then -Likes(Tiger, Rabbit)", "if (Likes(Tiger, Cat) & Chases(Tiger, Rabbit)) then Young(Tiger)", "if Rough(Lion) & -Red(Lion) then -Likes(Lion, Rabbit)"], "conclusion": "-Chases(Tiger, Tiger)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Cold'.\nif Cold(x) & Likes(x, Tiger) then -Likes(Tiger, Lion)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Cold'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Cold'.\nif Cold(x) & Likes(x, Tiger) then -Likes(Tiger, Lion)\n   ^\n"}
{"timestamp": "2025-05-01T04:10:26.013826", "premises": ["Eats(TheCat, TheTiger)", "Likes(TheCat, TheTiger)", "Likes(TheLion, TheCat)", "Color(TheRabbit, Red)", "-Young(TheRabbit)", "Likes(TheRabbit, TheLion)", "if ((Cold(x) & Likes(x, TheTiger)) then -Likes(TheTiger, TheLion))", "if (Chases(x, TheTiger) then Likes(TheTiger, TheLion))", "if (Cold(TheTiger) then Chases(TheTiger, TheRabbit))", "if (Chases(TheLion, TheCat) then Chases(TheCat, TheTiger))", "if (Eats(x, TheTiger) then Cold(TheTiger))", "if (Young(x) then Chases(x, TheTiger))", "if (Chases(x, TheTiger) then -Likes(TheTiger, TheRabbit))", "if ((Likes(TheTiger, TheCat) & Chases(TheTiger, TheRabbit)) then Young(TheTiger))"], "conclusion": "if ((Rough(TheLion) & -Color(TheLion, Red)) then -Likes(TheLion, TheRabbit))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'then'.  Expected token ')'.\nif ((Rough(TheLion) & -Color(TheLion, Red)) then -Likes(TheLion, TheRabbit))\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'then'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'then'.  Expected token ')'.\nif ((Rough(TheLion) & -Color(TheLion, Red)) then -Likes(TheLion, TheRabbit))\n                                            ^\n"}
{"timestamp": "2025-05-01T04:11:11.644088", "premises": ["R(x, y) <-> Needs(x, y)", "lion(L) & rabbit(R)", "Needs(L, R)", "mouse(M) & squirrel(S)", "Rough(M)", "Young(M)", "Visits(M, L)", "Needs(R, M)", "Needs(R, S)", "-Blue(S)", "Young(x) -> Needs(x, L)", "Round(x) -> Needs(x, L)", "Needs(x, L) -> Needs(x, R)", "Rough(x) & Visits(x, M) -> Red(M)", "Visits(R, S) & Chases(S, L) -> Needs(S, R)", "Red(x) -> -Blue(x)", "Young(x) & -Needs(x, M) -> Visits(x, R)", "Needs(x, R) -> Visits(x, M)"], "conclusion": "Visits(L, M) & Blue(L) -> Chases(M, S)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: R/2, R/0.\n\n\nFatal error:  The following symbols are used with multiple arities: R/2, R/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: R/2, R/0.\n\n\nFatal error:  The following symbols are used with multiple arities: R/2, R/0\n"}
{"timestamp": "2025-05-01T04:11:19.186156", "premises": ["Needs(Lion, Rabbit)", "Rough(Mouse)", "Young(Mouse)", "Visits(Mouse, Lion)", "Needs(Rabbit, Mouse)", "Needs(Rabbit, Squirrel)", "-Blue(Squirrel)", "Young(x) -> Needs(x, Lion)", "Round(x) -> Needs(x, Lion)", "Needs(x, Lion) -> Needs(x, Rabbit)", "And(Rough(x), Visits(x, Mouse)) -> Red(Mouse)", "Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion) -> Needs(Squirrel, Rabbit)", "Red(x) -> -Blue(x)", "Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit)", "Needs(x, Rabbit) -> Visits(x, Mouse)", "Visits(Lion, Mouse) & Blue(Lion) -> Chases(Mouse, Squirrel)"], "conclusion": "-Chases(Rabbit, Squirrel)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Rough/1, Visits/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Rough/1, Visits/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Rough/1, Visits/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Rough/1, Visits/2\n"}
{"timestamp": "2025-05-01T04:12:56.346638", "premises": ["Kind(Bob)", "Quiet(Charlie)", "Big(Fiona)", "Blue(Fiona)", "Kind(Fiona)", "Quiet(Fiona)", "White(Gary)", "all x. ((Blue(x) & Quiet(x)) -> Big(x))", "all x. (Quiet(x) -> Blue(x))", "all x. ((Quiet(x) & Rough(x)) -> Big(x))", "all x. (Rough(x) -> Quiet(x))", "all x. (Big(x) -> Red(x))", "Implies(White(Gary), Rough(Gary))", "Implies((White(x) & Big(x)), Blue(x))", "all x. ((Rough(x) & Blue(x)) -> White(x))", "Implies((Quiet(x) & Red(x)), Kind(x))"], "conclusion": "White(Charlie)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: White/1, Rough/1, Big/1, Blue/1, Quiet/1, Red/1, Kind/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: White/1, Rough/1, Big/1, Blue/1, Quiet/1, Red/1, Kind/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: White/1, Rough/1, Big/1, Blue/1, Quiet/1, Red/1, Kind/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: White/1, Rough/1, Big/1, Blue/1, Quiet/1, Red/1, Kind/1\n"}
{"timestamp": "2025-05-01T04:13:36.238377", "premises": ["Kind(Bob)", "Quiet(Charlie)", "Big(Fiona)", "Blue(Fiona)", "Kind(Fiona)", "Quiet(Fiona)", "White(Gary)", "all x. (Blue(x) & Quiet(x) -> Big(x))", "all x. (Quiet(x) -> Blue(x))", "all x. ((Quiet(x) & Rough(x)) -> Big(x))", "all x. (Rough(x) -> Quiet(x))", "all x. (Big(x) -> Red(x))", "implies(White(Gary), Rough(Gary))", "implies((White(x) & Big(x)), Blue(x))", "all x. ((Rough(x) & Blue(x)) -> White(x))", "implies((Quiet(x) & Red(x)), Kind(x))"], "conclusion": "White(Charlie)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(White(Gary), Rough(Gary))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(White(Gary), Rough(Gary))\n^\n"}
{"timestamp": "2025-05-01T04:14:15.952585", "premises": ["Cold(Charlie)", "Furry(Charlie)", "Smart(Charlie)", "Furry(Dave)", "Young(Dave)", "Quiet(Gary)", "Smart(Gary)", "Furry(Harry)", "Quiet(Harry)", "Young(Harry)", "if (Cold(x) & Quiet(x)) then White(x)", "if (Cold(x) & Big(x)) then Young(x)", "all x. (Furry(x) -> White(x))", "all x. (Quiet(x) -> Cold(x))", "if Furry(x) then White(x)", "if (Smart(x) & White(x)) then Furry(x)", "all x. (Furry(x) -> Big(x))"], "conclusion": "-Cold(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Cold(x) & Quiet(x)) then White(x)\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Cold(x) & Quiet(x)) then White(x)\n            ^\n"}
{"timestamp": "2025-05-01T04:14:29.160305", "premises": ["Nice(Bob)", "Round(Charlie)", "Blue(Gary)", "Nice(Gary)", "Rough(Gary)", "Round(Gary)", "Blue(Harry)", "Nice(Harry)", "Quiet(Harry)", "Rough(Harry)", "all x. ((Quiet(x) & Round(x)) -> Young(x))", "all x. ((Young(x) & Blue(x)) -> Rough(x))", "all x. ((Round(x) & Big(x)) -> Young(x))", "all x. (Blue(x) -> Round(x))", "all x. (Rough(x) -> Quiet(x))", "implies(Big(x), Rough(x))", "implies((Quiet(x) & Big(x)), Round(x))", "implies((Nice(Charlie) & Big(Charlie)), Blue(Charlie))", "all x. (Nice(x) -> Big(x))"], "conclusion": "Blue(Bob)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Big(x), Rough(x))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Big(x), Rough(x))\n^\n"}
{"timestamp": "2025-05-01T04:14:58.102477", "premises": ["Cold(Anne)", "Furry(Charlie)", "Round(Charlie)", "Quiet(Fiona)", "Nice(Gary)", "Quiet(Gary)", "Round(Gary)", "all x. (Nice(x) -> White(x))", "all x. all y. ((Round(x) & Cold(x)) -> Nice(x))", "all x. ((Furry(x) & Round(x)) -> Cold(x))", "all x. all y. ((Cold(x) & Green(y)) -> Quiet(x))", "if Cold(Charlie) then Nice(Charlie)", "if (Furry(x) & White(x)) then Green(x)", "if (White(Anne) & Quiet(Anne)) then Green(Anne)"], "conclusion": "White(Charlie)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Cold'.\nif Cold(Charlie) then Nice(Charlie)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Cold'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Cold'.\nif Cold(Charlie) then Nice(Charlie)\n   ^\n"}
{"timestamp": "2025-05-01T04:15:13.688851", "premises": ["Cat(c) & Color(c, Red)", "Needs(c, Cow(cw))", "Color(cw, Red)", "Needs(cw, Cat(c))", "Sees(cw, c)", "-Sees(cw, Dog(d))", "Sees(cw, Tiger(t))", "Color(d, Blue)", "Needs(d, Cow(cw))", "-Needs(d, Tiger(t))", "Sees(d, t)", "Visits(d, c)", "Visits(d, cw)", "Color(t, Cold)", "Sees(t, c)", "Sees(t, cw)", "Implies(cold_and_blue(x), Sees(x, d))", "Implies(Visits(x, d), Visits(d, t))", "Implies(Needs(x, Cat(c)), Visits(c, d))", "Implies(Visits(x, t), Color(t, Blue))", "Implies(And(Needs(x, Dog(d)), Needs(d, Cat(c))), Sees(c, t))", "Implies(Sees(x, d), Visits(x, c))", "Implies(And(Sees(x, t), Sees(t, d)), Visits(t, d))"], "conclusion": "Implies(And(Sees(t, c), Sees(c, t)), Needs(t, Cat(c)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Sees/2, Needs/2, Cat/1, Visits/2, Color/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Sees/2, Needs/2, Cat/1, Visits/2, Color/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Sees/2, Needs/2, Cat/1, Visits/2, Color/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Sees/2, Needs/2, Cat/1, Visits/2, Color/2\n"}
{"timestamp": "2025-05-01T04:15:34.121200", "premises": ["Color(cat, Red)", "Needs(cat, cow)", "Color(cow, Red)", "Needs(cow, cat)", "Sees(cow, cat)", "-Sees(cow, dog)", "Sees(cow, tiger)", "Color(dog, Blue)", "Needs(dog, cow)", "-Needs(dog, tiger)", "Sees(dog, tiger)", "Visits(dog, cat)", "Visits(dog, cow)", "Temperature(tiger, Cold)", "Sees(tiger, cat)", "Sees(tiger, cow)", "if (Color(x, Blue) & Temperature(x, Cold)) then Sees(x, dog)", "if Visits(x, dog) then Visits(dog, tiger)", "if Needs(x, cat) then Visits(cat, dog)", "if Visits(x, tiger) then Color(tiger, Blue)", "if (Needs(x, dog) & Needs(dog, cat)) then Sees(cat, tiger)", "if Sees(x, dog) then Visits(x, cat)", "if (Sees(x, tiger) & Sees(tiger, dog)) then Visits(tiger, dog)", "if (Sees(x, tiger) & Color(tiger, Red)) then Needs(x, cat)"], "conclusion": "Needs(tiger, cat)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Blue) & Temperature(x, Cold)) then Sees(x, dog)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Color(x, Blue) & Temperature(x, Cold)) then Sees(x, dog)\n                   ^\n"}
{"timestamp": "2025-05-01T04:15:52.229683", "premises": ["Likes(Cow, Lion)", "Likes(Cow, Mouse)", "Likes(Cow, Squirrel)", "Eats(Lion, Mouse)", "Color(Lion, Green)", "Likes(Lion, Squirrel)", "Color(Mouse, Blue)", "Likes(Mouse, Cow)", "Visits(Mouse, Lion)", "Visits(Squirrel, Cow)", "Forall x. (Visits(x, Cow) => Eats(x, Mouse))", "Forall x. (Likes(x, Mouse) => Visits(x, Lion))", "Forall x. (Visits(x, Cow) => Eats(x, Cow))", "Forall x. (Visits(x, Squirrel) and Color(Squirrel, Blue) => Likes(Squirrel, Cow))", "Forall x. (Cold(x) => Eats(x, Cow))", "Forall x. (Color(x, Green) => Big(x))", "Forall x. (And(Big(x), Color(x, Green)) => Likes(x, Lion))", "Forall x. (Likes(x, Lion) => Cold(x))", "Forall x. (Eats(x, Cow) => Visits(x, Cow))"], "conclusion": "Forall x. (Likes(Mouse, Cow) => Cold(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nForall x. (Likes(Mouse, Cow) => Cold(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nForall x. (Likes(Mouse, Cow) => Cold(x))\n       ^\n"}
{"timestamp": "2025-05-01T04:16:19.691702", "premises": ["Chases(BaldEagle, Dog)", "Color(BaldEagle, Green)", "Visits(BaldEagle, Squirrel)", "Chases(Dog, Rabbit)", "Likes(Dog, Squirrel)", "Chases(Rabbit, BaldEagle)", "Texture(Rabbit, Rough)", "Likes(Rabbit, Squirrel)", "Visits(Rabbit, Squirrel)", "Likes(Squirrel, BaldEagle)", "if (Likes(x, Dog), Round(Dog))", "if (Chases(x, Rabbit), -Visits(Rabbit, Dog))", "if (Likes(x, Dog), Rough(x))", "if (Likes(x, Dog), Color(x, Green))", "if (Visits(x, Squirrel), Round(x))", "if (Chases(x, Rabbit), Round(Rabbit))", "if (Round(x), Likes(x, Dog))", "if ((Likes(Squirrel, BaldEagle) & -Round(Squirrel)), Likes(BaldEagle, Rabbit))"], "conclusion": "-Likes(Rabbit, Dog)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Likes/2, Chases/2, Visits/2, Color/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Likes/2, Chases/2, Visits/2, Color/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Likes/2, Chases/2, Visits/2, Color/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Likes/2, Chases/2, Visits/2, Color/2\n"}
{"timestamp": "2025-05-01T04:17:06.778836", "premises": ["Big(Anne)", "Cold(Anne)", "Quiet(Dave)", "Smart(Dave)", "Big(Gary)", "Cold(Gary)", "Quiet(Gary)", "-Red(Gary)", "Rough(Gary)", "Round(Gary)", "Red(Harry)", "Rough(Harry)", "all x. (Big(x) -> Cold(x))", "all x. (And(Round(x), Rough(x)) -> Cold(x))", "implies(Cold(x), Rough(x))", "implies(And(Big(x), Cold(x)), Quiet(x))", "implies(Cold(x), Quiet(x))", "all x. (Quiet(x) -> Round(x))", "all x. (And(Round(x), Cold(x)) -> Big(x))", "all x. (And(Red(x), Rough(x)) -> Big(x))", "all x. (Round(x) -> Smart(x))"], "conclusion": "-Cold(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Cold(x), Rough(x))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Cold(x), Rough(x))\n^\n"}
{"timestamp": "2025-05-01T04:17:31.250176", "premises": ["Green(Anne)", "Nice(Anne)", "Quiet(Anne)", "Big(Erin)", "Nice(Erin)", "Quiet(Erin)", "Blue(Gary)", "Green(Gary)", "Blue(Harry)", "Green(Harry)", "Kind(Harry)", "Round(Harry)", "if And(Kind(x), Blue(x)) then Nice(x)", "if Nice(x) then Round(x)", "if Round(x) then Quiet(x)", "if Blue(x) then Round(x)", "if Nice(x) then Big(x)", "if And(Round(x), Quiet(x)) then Kind(x)"], "conclusion": "-Blue(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'And'.\nif And(Kind(x), Blue(x)) then Nice(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'And'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'And'.\nif And(Kind(x), Blue(x)) then Nice(x)\n   ^\n"}
{"timestamp": "2025-05-01T04:17:58.011395", "premises": ["Chases(Bear, Rabbit)", "Chases(Bear, Tiger)", "Red(Bear)", "Needs(Bear, Lion)", "Needs(Bear, Rabbit)", "Sees(Bear, Lion)", "Nice(Lion)", "Red(Lion)", "Round(Lion)", "Sees(Lion, Bear)", "Chases(Rabbit, Tiger)", "Round(Rabbit)", "Young(Rabbit)", "Chases(Tiger, Rabbit)", "Round(Tiger)", "Sees(Tiger, Bear)", "forall x. (Sees(x, Tiger) -> Sees(x, Bear))", "forall x. ((Chases(x, Tiger) and Red(Tiger)) -> Round(x))", "forall x. (Needs(Bear, x) -> Needs(x, Lion))", "forall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))", "forall x. (Round(x) -> Needs(x, Rabbit))", "forall x. (Chases(x, Bear) -> Sees(x, Rabbit))", "if (Red(Lion) and Needs(Lion, Bear)) then Chases(Bear, Lion)", "forall x. (Sees(x, Lion) -> Chases(x, Bear))"], "conclusion": "Needs(Rabbit, Rabbit)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'and'.  Expected token ')'.\nif (Red(Lion) and Needs(Lion, Bear)) then Chases(Bear, Lion)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'and'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'and'.  Expected token ')'.\nif (Red(Lion) and Needs(Lion, Bear)) then Chases(Bear, Lion)\n              ^\n"}
{"timestamp": "2025-05-01T04:18:34.625996", "premises": ["Eats(Cat, Rabbit)", "Round(Cat)", "Likes(Cat, Dog)", "Needs(Cat, Dog)", "Eats(Dog, Cat)", "Big(Dog)", "Likes(Dog, Cat)", "Likes(Dog, Rabbit)", "Needs(Dog, Mouse)", "Eats(Mouse, Cat)", "Needs(Mouse, Cat)", "Eats(Rabbit, Cat)", "Big(Rabbit)", "Rough(Rabbit)", "Needs(Rabbit, Cat)", "Needs(Rabbit, Dog)", "Cond(Likes(x, Dog) -> Eats(Dog, Cat), x)", "Cond(Rough(Dog) -> Eats(Dog, Cat), Dog)", "Cond((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x), x)", "Cond(Kind(x) -> Likes(x, Cat), x)", "Cond((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat), x)", "Cond(Big(Rabbit) -> Eats(Rabbit, Cat), Rabbit)", "Cond(Needs(x, Cat) -> Round(x), x)", "Cond(Big(x) -> Likes(x, Rabbit), x)", "Cond(Likes(x, Rabbit) -> Rough(x), x)"], "conclusion": "Likes(Mouse, Cat)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nCond(Likes(x, Dog) -> Eats(Dog, Cat), x)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nCond(Likes(x, Dog) -> Eats(Dog, Cat), x)\n                   ^\n"}
{"timestamp": "2025-05-01T04:18:44.053700", "premises": ["Eats(Cat, Rabbit)", "Round(Cat)", "Likes(Cat, Dog)", "Needs(Cat, Dog)", "Eats(Dog, Cat)", "Big(Dog)", "Likes(Dog, Cat)", "Likes(Dog, Rabbit)", "Needs(Dog, Mouse)", "Eats(Mouse, Cat)", "Needs(Mouse, Cat)", "Eats(Rabbit, Cat)", "Big(Rabbit)", "Rough(Rabbit)", "Needs(Rabbit, Cat)", "Needs(Rabbit, Dog)", "implies(Likes(x, Dog), Eats(Dog, Cat))", "implies(Rough(Dog), Eats(Dog, Cat))", "implies((Eats(x, Cat) & Likes(Cat, Rabbit)), Big(x))", "implies(Kind(x), Likes(x, Cat))", "implies((Likes(x, Rabbit) & Eats(Rabbit, Cat)), Big(Cat))", "implies(Big(Rabbit), Eats(Rabbit, Cat))", "implies(Needs(x, Cat), Round(x))", "implies(Big(x), Likes(x, Rabbit))", "implies(Likes(x, Rabbit), Rough(x))"], "conclusion": "Likes(Mouse, Cat)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'implies'.  Expression expected.\nimplies(Likes(x, Dog), Eats(Dog, Cat))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'implies'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'implies'.  Expression expected.\nimplies(Likes(x, Dog), Eats(Dog, Cat))\n^\n"}
{"timestamp": "2025-05-01T04:18:49.447492", "premises": ["Green(Bob)", "Rough(Bob)", "White(Bob)", "Rough(Charlie)", "Quiet(Dave)", "Cold(Gary)", "Rough(Gary)", "all x. (Quiet(x) & Kind(x) -> Young(x))", "(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)", "all x. ((Green(x) & White(x)) -> Cold(x))", "all x. (Quiet(x) -> Rough(x))", "all x. ((Rough(x) & Green(x)) -> White(x))", "all x. (Young(x) -> Green(x))", "Young(x) <- Rough(x)"], "conclusion": "-Young(Dave)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nYoung(x) <- Rough(x)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nYoung(x) <- Rough(x)\n         ^\n"}
{"timestamp": "2025-05-01T04:19:32.657484", "premises": ["Furry(Bob)", "Nice(Bob)", "Rough(Bob)", "Red(Fiona)", "Furry(Gary)", "-White(Gary)", "Nice(Harry)", "(Furry(Fiona) -> Nice(Fiona))", "((Nice(Fiona) & Red(Fiona)) -> Furry(Fiona))", "all x. (White(x) -> Red(x))", "all x. (White(x) -> Furry(x))", "all x. (Big(x) -> White(x))", "all x. (Nice(x) -> Big(x))", "all x. (Furry(x) -> Quiet(x))", "if (-Nice(Fiona) & -Furry(Fiona)) then Quiet(Fiona)", "all x. ((Big(x) & Quiet(x)) -> Rough(x))"], "conclusion": "Rough(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (-Nice(Fiona) & -Furry(Fiona)) then Quiet(Fiona)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (-Nice(Fiona) & -Furry(Fiona)) then Quiet(Fiona)\n                 ^\n"}
