{"timestamp": "2025-05-11T19:18:34.259297", "premises": ["exists x. (Reptile(x) & ExplodeOn(x, People))", "Reptile(Stonefish)", "ExplodeOn(Stonefish, SteppedOn)", "(ExplodeOn(Stonefish, x) & Not(Treated(x)) -> CanCauseDeath(x))", "exists x. (Treatment(x) & (RemoveHeat(x, AffectedArea) | UseAntivenom(x)))"], "conclusion": "exists x. (Reptile(x) & ExplodeOn(x, y) & -Treated(y) -> CanCauseDeath(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1\n"}
{"timestamp": "2025-05-11T19:18:34.254788", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, People))", "Reptile(Stonefish)", "ExplodesOn(Stonefish, Person)", "(ExplodesOn(Stonefish, x) & -Treated(x) -> CanCauseDeath(x))", "-"], "conclusion": "exists x. (Reptile(x) & ExplodesOn(x, y) & -Treated(y) -> CanCauseDeath(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\n-\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\n-\n ^\n"}
{"timestamp": "2025-05-11T19:18:34.268276", "premises": ["exists x. (Reptile(x) & ExplosesOn(x, People))", "Reptile(Stonefish)", "exists x. (SteppedOn(x, Stonefish) & ExplosesOn(x, People))", "(ExplosesOn(x, People) & Not(Treated(x)) -> CanCauseDeath(x, People))", "(RemoveHeat(x, Area) | UseAntivenom(x)) & Treated(x)"], "conclusion": "exists x. (Reptile(x) & ExplosesOn(x, People) & CanCauseDeath(x, People) & Not(Treated(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1\n"}
{"timestamp": "2025-05-11T19:18:34.263985", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, Person))", "Reptile(Stonefish)", "SteppedOn(Stonefish) -> ExplodesOn(Stonefish, Person)", "(ExplodesOn(Stonefish, x) & -Treated(x)) -> CauseDeath(x)", "-"], "conclusion": "exists x. (Reptile(x) & ExplodesOn(x, Person) & -Treated(Person) -> CauseDeath(Person))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\n-\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\n-\n ^\n"}
{"timestamp": "2025-05-11T19:19:25.637206", "premises": ["MammalGenus(Ambiortus)", "exists x. (Species(x, Ambiortus) & (forall y, -Species(y, Ambiortus) | x=y))", "exists x. (LivedIn(x, Mars) & Species(x, AmbiortusDementjevi))", "Discoverer(Adele, Ambiortus)"], "conclusion": "MammalGenus(Discover(Adele, ?x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nexists x. (Species(x, Ambiortus) & (forall y, -Species(y, Ambiortus) | x=y))\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nexists x. (Species(x, Ambiortus) & (forall y, -Species(y, Ambiortus) | x=y))\n                                            ^\n"}
{"timestamp": "2025-05-11T19:19:25.639502", "premises": ["MammalGenus(Ambiortus) & Prehistoric(Ambiortus)", "exists x. (SpeciesOf(AmbiortusDementjevi, Ambiortus) & Not(exists y. (SpeciesOf(y, Ambiortus) & y \u2260 AmbiortusDementjevi)))", "Lived(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "exists x. (MammalGenus(x) & Not(exists y. (MammalGenus(y) & y = x) & exists z. (Discoverer(z, x) & z = Adele)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nexists x. (MammalGenus(x) & Not(exists y. (MammalGenus(y) & y = x) & exists z. (Discoverer(z, x) & z = Adele)))\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nexists x. (MammalGenus(x) & Not(exists y. (MammalGenus(y) & y = x) & exists z. (Discoverer(z, x) & z = Adele)))\n                                                                   ^\n"}
{"timestamp": "2025-05-11T19:19:51.285833", "premises": ["MammalGenus(Ambiortus)", "exists x. (Species(x) & (Name(x) = \"Ambiortus Dementjevi\") & -exists y. (Species(y) & (Name(y) = \"Ambiortus Dementjevi\") & (y_!=_x)))", "(LivesOn(Ambiortus_Dementjevi, Mars))", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Dementjevi\"'.  Expected token ')'.\nexists x. (Species(x) & (Name(x) = \"Ambiortus Dementjevi\") & -exists y. (Species(y) & (Name(y) = \"Ambiortus Dementjevi\") & (y_!=_x)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Dementjevi\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Dementjevi\"'.  Expected token ')'.\nexists x. (Species(x) & (Name(x) = \"Ambiortus Dementjevi\") & -exists y. (Species(y) & (Name(y) = \"Ambiortus Dementjevi\") & (y_!=_x)))\n                                              ^\n"}
{"timestamp": "2025-05-11T19:19:51.305680", "premises": ["MammalGenus(Ambiortus)", "exists x. SpeciesOf(Ambiortus, x) & ForAll y. (SpeciesOf(Ambiortus, y) -> x=y)", "LivedOn(Mars, AmbiortusDementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Mars, Adele)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\nexists x. SpeciesOf(Ambiortus, x) & ForAll y. (SpeciesOf(Ambiortus, y) -> x=y)\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\nexists x. SpeciesOf(Ambiortus, x) & ForAll y. (SpeciesOf(Ambiortus, y) -> x=y)\n                                           ^\n"}
{"timestamp": "2025-05-11T19:20:11.650140", "premises": ["FormerName(FortTiconderoga, FortCarillon)", "Destroyed(ChrisHemsworth, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Destroyed(ChrisHemsworth, ?x) & LocatedIn(?x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Destroyed(%%START ERROR%%ChrisHemsworth,?x%%END ERROR%%) & LocatedIn(?x,NewFrance)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Destroyed(%%START ERROR%%ChrisHemsworth,?x%%END ERROR%%) & LocatedIn(?x,NewFrance)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:20:11.664398", "premises": ["FormerName(FortTiconderoga, FortCarillon)", "Destroyed(ChrisHemsworth, FortCarillon)", "Located(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Destroyed(ChrisHemsworth, ?x) & Located(?x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Destroyed(%%START ERROR%%ChrisHemsworth,?x%%END ERROR%%) & Located(?x,NewFrance)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Destroyed(%%START ERROR%%ChrisHemsworth,?x%%END ERROR%%) & Located(?x,NewFrance)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:21:11.523966", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -LivesIn(x) -> In(x, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-11T19:21:11.523388", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "In(x, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-11T19:21:46.529603", "premises": ["BritishTVSeries(Westworld) & SciFiThrillerTVSeries(Westworld)", "exists x. (TVSeries(x) & Named(x, Westworld) & -OnTV(x) & OnHBO(x) & InYear(x, TwoZeroOneSix))", "-UnrelatedTo(Westworld, FilmIn(1973, WrittenBy(MichaelCrichton) & ActedBy(MichaelCrichton)))", "FilmIn(1973, WrittenBy(MichaelCrichton) & ActedBy(MichaelCrichton) & About(RobotsMalfunctioningAndHealingHumanVisitors))"], "conclusion": "ActedBy(MichaelCrichton) & About(RobotsMalfunctioningAndHealingHumanVisitors)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n-UnrelatedTo(Westworld, FilmIn(1973, WrittenBy(MichaelCrichton) & ActedBy(MichaelCrichton)))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n-UnrelatedTo(Westworld, FilmIn(1973, WrittenBy(MichaelCrichton) & ActedBy(MichaelCrichton)))\n                                                                ^\n"}
{"timestamp": "2025-05-11T19:21:46.554400", "premises": ["BritishTVSeries(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "exists x. (TVSeries(x) & Named(x, Westworld) & VanishedOn(x, HBO, TwoZeroOneSix))", "-Related(TVSeries(Westworld), Film(WrittenAndActedBy(MichaelCrichton, OneNineSevenThree)))", "About(Film(WrittenAndActedBy(MichaelCrichton, OneNineSevenThree)), RobotsThatMalfunctionAndHealHumanVisitors)"], "conclusion": "ActedIn(FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1\n"}
{"timestamp": "2025-05-11T19:21:46.552131", "premises": ["(TVSeries(Westworld) & British(Westworld) & SciFiThriller(Westworld))", "exists x. (TVSeries(x) & (Name(x, Westworld) & Year(x, TwoZeroOneSix) & VanishedOn(x, HBO)))", "-Related(TVSeries(Westworld), OriginalFilm(OneNineSevenThree)) & WrittenAndActed(OriginalFilm(OneNineSevenThree), MichaelCrichton)", "exists x. (Film(x) & Year(x, OneNineSevenThree) & (About(x, RobotsThatMalfunction) & About(x, RobotsThatHealHumanVisitors)))"], "conclusion": "exists x. (ActedIn(x, MichaelCrichton) & (Film(x) & About(x, RobotsThatMalfunction)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1\n"}
{"timestamp": "2025-05-11T19:21:46.572409", "premises": ["TVSeries(Westworld) & British(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "-exists x. (TVSeries(x) & SameAs(x, Westworld) & Year(x, TwoZeroOneSix) & AiredOn(x, HBO))", "-exists x. (TVSeries(x) & SameAs(x, Westworld) & Year(x, OneNineSevenThree) & WrittenBy(x, MichaelCrichton) & ActedBy(x, MichaelCrichton))", "exists x. (Film(x) & SameAs(x, Westworld) & Year(x, OneNineSevenThree) & About(x, RobotsMalfunctioning))"], "conclusion": "ActedIn(MichaelCrichton, exists x. (Film(x) & About(x, RobotsMalfunctioning)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ActedIn(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ActedIn(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:21:46.573087", "premises": ["BritishTVSeries(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "(exists x. (Year(x) & x=2016)) & exists y. (TelevisionSeries(y) & y=Westworld) & Vansished(y, HBO)", "-Related(TVWestworld, WestworldFilm) & Year(WestworldFilm, OneNineSevenThree) & WrittenBy(WestworldFilm, MichaelCrichton) & ActedBy(WestworldFilm, MichaelCrichton)", "(Year(WestworldFilm, OneNineSevenThree)) & (About(WestworldFilm, RobotsMalfunctioning)) & (About(WestworldFilm, HealingHumanVisitors))"], "conclusion": "ActedIn(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Year/2, Year/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Year/2, Year/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Year/2, Year/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Year/2, Year/1\n"}
{"timestamp": "2025-05-11T19:21:46.573632", "premises": ["British(Series(Westworld)) & ScienceFiction(Series(Westworld)) & Thriller(Series(Westworld))", "exists x. (Year(x, TwoZeroOneSix) & Series(x, Westworld) & -OnAir(x))", "-Related(TVSeries(Westworld), Film(OneNineSevenThree)) & WrittenBy(Film(OneNineSevenThree), MichaelCrichton) & ActedBy(Film(OneNineSevenThree), MichaelCrichton)", "exists x. (Year(x, OneNineSevenThree) & Film(x, Westworld) & About(x, RobotsMalfunctioning))"], "conclusion": "ActedIn(MichaelCrichton, exists x. (Year(x, OneNineSevenThree) & Film(x, Westworld) & About(x, RobotsMalfunctioning)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ActedIn(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ActedIn(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:24:55.902664", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman) & LifetimeSeries(WizardsOfEastEnd) & ShowrunnerOf(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "HBOSeries(Eastwick)"], "conclusion": "exists x. (HBOSeries(x) & DestroyedBy(x, ShowrunnerOf(MaggieFriedman, WizardsOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2\n"}
{"timestamp": "2025-05-11T19:24:55.910582", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Destroyed(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-11T19:24:55.921733", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman) & Series(WizardsOfEastEnd) & LifetimeTVSeries(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "Series(Eastwick) & ByHBO(Eastwick)"], "conclusion": "exists x. (Series(x) & ByHBO(x) & Destroyed(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-05-11T19:24:55.934498", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & DemolishedBy(x, Showrunner(WizardsOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-11T19:24:55.941162", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman) & LifetimeSeries(WizardsOfEastEndConst) & WizardsOfEastEnd(seriesBy(MaggieFriedman))", "FantasyDramaSeries(WizardsOfEastEndConst)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "HBO(Series(Eastwick))"], "conclusion": "exists x. (Series(x) & HBO(x) & DemolishedBy(ShowrunnerOf(WizardsOfEastEndConst), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-05-11T19:24:55.941669", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Destroyed(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-11T19:25:24.055702", "premises": ["exists x. (Artist(BoneyM) & #1Single(x) & In(x, AmericanCharts))", "Hit(\"Uptown_Funk\", America)", "-#1Single(\"Uptown_Funk\")", "all x. ((PeaksBelow(x, #One) & In(x, AmericanCharts)) -> -#OneSingle(x))"], "conclusion": "PeaksBelow(\"Uptown_Funk\", #One)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((%%START ERROR%%Artist(BoneyM) & #1Single(x)%%END ERROR%%) & In(x,AmericanCharts)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((%%START ERROR%%Artist(BoneyM) & #1Single(x)%%END ERROR%%) & In(x,AmericanCharts)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:25:24.085614", "premises": ["exists x. (Artist(BoneyM) & AmericanSingle(x) & #1Single(x))", "BigHit(UptownFunk, Ameirca)", "-AmericanSingle(UptownFunk)", "all x. (PeaksBelow(x, AmericanChart) -> Not#1Single(x))"], "conclusion": "PeaksBelow(UptownFunk, AmericanChart)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(Artist(BoneyM) & AmericanSingle(x)) & #1Single(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(Artist(BoneyM) & AmericanSingle(x)) & #1Single(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:27:14.043945", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(In(CrotonRiverWatershed, Bronx))", "In(Bronx, California)"], "conclusion": "exists x. (Freezes(In(CrotonRiverWatershed, x)) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-11T19:27:14.063484", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(In(CrotonRiverWatershed, Bronx))", "In(Bronx, California)"], "conclusion": "exists x. (Freezes(In(CrotonRiverWatershed, x)) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-11T19:27:14.040857", "premises": ["Basin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(In(CrotonRiverWatershed, Bronx))", "In(Bronx, California)"], "conclusion": "exists x. (Freezes(In(CrotonRiverWatershed, x)) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-11T19:27:14.066911", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(In(TheBronx), WaterFrom(CrotonRiverWatershed))", "In(TheBronx, California)"], "conclusion": "exists x. (Freezes(In(x), WaterFrom(CrotonRiverWatershed)) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: In/2, In/1.\n\n\nFatal error:  The following symbols are used with multiple arities: In/2, In/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: In/2, In/1.\n\n\nFatal error:  The following symbols are used with multiple arities: In/2, In/1\n"}
{"timestamp": "2025-05-11T19:27:14.070170", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(In(CrotonRiverWatershed, Bronx))", "In(Bronx, California)"], "conclusion": "exists x. (Freezes(x) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-11T19:27:52.267630", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & x = y+1) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-05-11T19:27:52.270295", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y+1 -> x < y)", "all x. all y. (x_>_y__>__y_>_x)", "Seven = Six+1", "Eight = Seven+1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-05-11T19:27:52.270625", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=y+One) -> x < y)", "all x. all y. (x_>_y__>__y_>_x)", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2*6", "6 = 2*2"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-05-11T19:27:52.270931", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 6", "6 = 2 * 2"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-05-11T19:27:52.268074", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=y+One) -> (x_<_y))", "all x. all y. (x > y -> -(y_>_x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-05-11T19:27:52.273293", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, One)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> Not Larger(y, x))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Add(x, x)))", "Equal(Eight, Add(Six, Six))", "Equal(Six, Add(Two, Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Larger'.  Expected token ')'.\nall x. all y. (Larger(x, y) -> Not Larger(y, x))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Larger'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Larger'.  Expected token ')'.\nall x. all y. (Larger(x, y) -> Not Larger(y, x))\n                                   ^\n"}
{"timestamp": "2025-05-11T19:27:52.285072", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x=y+1 -> x<y)", "all x. all y. (x>y__>__y>x)", "Seven=Six+1", "Eight=Seven+1", "Positive(Two)", "all x. Positive(x) -> Positive(Two*x)", "Eight=2*Six", "Six=2*Two"], "conclusion": "Eight<Seven", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x all y x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x all y x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:28:32.232762", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two*x))", "Nine = 2*Six", "Six = 2*Two"], "conclusion": "-Nine", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T19:28:32.244823", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. Larger(x, y) -> -Larger(y, x)", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. Negative(x) -> Negative(Two_*_x)", "Nine = 2 * Six", "Six = 2 * Two", "Negative(Nine)"], "conclusion": "-Larger(Nine, Six) & -Larger(Six, Nine) & Larger(Nine, Six) | Larger(Six, Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Larger(x, y))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Larger(x, y))\n                                                               ^\n"}
{"timestamp": "2025-05-11T19:28:32.250620", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=y+One) -> Larger(x,y))", "all x. all y. (Larger(x,y) -> -Larger(y,x))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two*x))", "Nine = 2*Six", "Six = 2*Two"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T19:29:11.183343", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=y+One) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-05-11T19:29:11.185788", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> (x_<_y))", "all x. all y. (x > y -> -(y_>_x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-05-11T19:29:11.189140", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))\n                                                               ^\n"}
{"timestamp": "2025-05-11T19:29:11.234651", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & equals(x, y+One)) -> smaller(x, y))", "all x. all y. (larger(x, y) -> -larger(y, x))", "equals(Seven, Six+One)", "equals(Eight, Seven+One)", "positive(Two)", "all x. (positive(x) -> positive(double(x)))", "double(Eight, Six)", "double(Six, Two)", "smaller(Six, Seven)"], "conclusion": "smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: double/2, double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: double/2, double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: double/2, double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: double/2, double/1\n"}
{"timestamp": "2025-05-11T19:29:11.239826", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x=y+1 -> x<y)", "all x. all y. (x>y__>__y>x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-05-11T19:29:55.818623", "premises": ["Danced(DengXiaoping, ParamountLeaderOfThePeoplesRepublicOfChina)", "Praised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign_&_PartySecretaryGeneral_&_VicePremier)", "Detrimental(DengXiaoping, FrancesMusicIndustry_&_GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "GraduallyRose(DengXiaoping, SupremePower & After(MaoZedong, BornConst))"], "conclusion": "Detrimental(x, FrancesMusicIndustry) & GraduallyRose(x, SupremePower)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-05-11T19:29:55.830664", "premises": ["exists x. (DancedAs(x, ParamountLeader, China) & x = DengXiaoping)", "Praised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)", "-Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "exists x. (Born(MaoZedong, x) & GradualRise(DengXiaoping, SupremePower))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry, GreatLeapForward) & GradualRise(x, SupremePower))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                         ^\n"}
{"timestamp": "2025-05-11T19:29:55.829092", "premises": ["Dance(DengXiaoping, ParamountLeaderOfPeopleRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign) & SecretaryGeneralOfParty(DengXiaoping, Mao) & VicePremier(DengXiaoping, OneNineFiveZeros)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Follows(GreatLeapForward, DengXiaoping)", "Born(MaoZedong, OneNineSevenSix)", "RoseToSupremePower(DengXiaoping)"], "conclusion": "Detrimental(x, FrancesMusicIndustry) & RoseToSupremePower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                                   ^\n"}
{"timestamp": "2025-05-11T19:29:55.836122", "premises": ["DancesAs(paramountLeaderOfPeopleRepublicOfChina, DengXiaoping)", "PraisedFor(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign) & UnderMaoSecretaryGeneral(DengXiaoping) & VicePremier(DengXiaoping, OneNineFiveZeros)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Following(DengXiaoping, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "GraduallyRose(DengXiaoping, SupremePower) & After(BirthOfMaoZedong)"], "conclusion": "Detrimental(x, FrancesMusicIndustry) & GraduallyRose(x, SupremePower)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraisedFor(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraisedFor(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                       ^\n"}
{"timestamp": "2025-05-11T19:29:55.836912", "premises": ["DancedAs(DengXiaoping, ParamountLeader, PeoplesRepublicOfChina)", "Praised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)", "OpposedBy(DengXiaoping, AntiRightistCampaign_&_Mao)", "BecameDetrimental(DengXiaoping, FrancesMusicIndustry, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "GraduallyRose(DengXiaoping, SupremePower, After(MaoZedong, BornConst))"], "conclusion": "GraduallyRose(DetremimentalToFrancesMusicIndustry, SupremePower)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, AftOfReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                         ^\n"}
{"timestamp": "2025-05-11T19:29:55.837731", "premises": ["Danced(DengXiaoping, ParamountLeaderOf(China))", "Praised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign, Mao)", "Detrimental(DengXiaoping, FrancesMusicIndustry, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "(Born(MaoZedong, ?) & ? < 1976) -> GraduallyRoseToSupremePower(DengXiaoping)"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry, ?) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-05-11T19:29:55.838570", "premises": ["Dance(DengXiaoping, ParamountLeader, PeopleRepublicOfChina)", "Praised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "exists x. (Birth(MaoZedong, x) & GradualRise(DengXiaoping, SupremePower))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry, GreatLeapForward) & GradualRise(x, SupremePower))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKong_&_ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-05-11T19:29:55.839316", "premises": ["Danced(DengXiaoping, ParamountLeaderOfChina)", "Praised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)", "-Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Following(DengXiaoping, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "-Born(DengXiaoping, OneNineSevenSix) -> GraduallyRose(DengXiaoping, SupremePower)"], "conclusion": "Detrimental(x, FrancesMusicIndustry) & GraduallyRose(x, SupremePower)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-05-11T19:30:31.201442", "premises": ["all x. (Robot(x) -> IntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (RegularlySleep(x) | OnAnAsNeededBasis(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroup(x) | SleepsIndividually(x)))", "all x. (Robot(x) & EnvironmentalRobot(x) -> Prevent(x, EnvironmentalManagementOrConservation))", "Example(DisasterResponse, (Robot(x) & SleepsInGroup(x) & OnAnAsNeededBasis(x)))", "all x. (Robot(x) & ParticipateIn(x, DisasterResponse) -> IntangibleBenefitsForSleep(x))"], "conclusion": "all x. (Robot(x) & ParticipateIn(x, DisasterResponse) -> IntangibleBenefitsForSleep(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Robot/1, SleepsInGroup/1, OnAnAsNeededBasis/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Robot/1, SleepsInGroup/1, OnAnAsNeededBasis/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Robot/1, SleepsInGroup/1, OnAnAsNeededBasis/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Robot/1, SleepsInGroup/1, OnAnAsNeededBasis/1\n"}
{"timestamp": "2025-05-11T19:30:31.206198", "premises": ["all x. Robot(x) -> IntangibleBenefitsForSleep(x)", "all x. Robot(x) -> (RegularlySleeps(x) | AsNeededBasis(x))", "exists x. Robot(x) & Trained(x)", "all x. Robot(x) -> (SleepsInGroup(x) | SleepsIndividually(x))", "all x. (Robot(x) & EnvironmentalRobot(x)) -> Prevent(x, EnvironmentalManagementOrConservation)", "Example(ParticipatingInNaturalDisasterResponseConst, (SleepsInGroup(x) & AsNeededBasis(x)))"], "conclusion": "(Exists x. Robot(x) & ParticipatingInNaturalDisasterResponse(x) -> IntangibleBenefitsForSleep(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n(Exists x. Robot(x) & ParticipatingInNaturalDisasterResponse(x) -> IntangibleBenefitsForSleep(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n(Exists x. Robot(x) & ParticipatingInNaturalDisasterResponse(x) -> IntangibleBenefitsForSleep(x))\n        ^\n"}
{"timestamp": "2025-05-11T19:31:59.983558", "premises": ["Trilogy(x) -> (exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & (y<>z) & (z<>w) & (y<>w) & (x = (y_|_z_|_w))))", "DistinctWork(BookOne) & DistinctWork(BookTwo) & DistinctWork(BookThree) & DistinctWork(BookFour) & (BookOne<>BookTwo) & (BookTwo<>BookThree) & (BookThree<>BookFour) & (BookFour<>BookOne) & (exists x. exists y. exists z. exists w. (HarryPotterSeries = (x_|_y_|_z_|_w))))", "DistinctWork(CSOne) & DistinctWork(CSTwo) & DistinctWork(CSThree) & DistinctWork(CSFour) & (CSOne<>CSTwo) & (CSTwo<>CSThree) & (CSThree<>CSFour) & (CSFour<>CSOne) & (exists x. exists y. exists z. exists w. (ChroniclesOfNarnia = (x_|_y_|_z_|_w))))"], "conclusion": "HarryPotterSeries = TrilogyConst", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nDistinctWork(BookOne) & DistinctWork(BookTwo) & DistinctWork(BookThree) & DistinctWork(BookFour) & (BookOne<>BookTwo) & (BookTwo<>BookThree) & (BookThree<>BookFour) & (BookFour<>BookOne) & (exists x. exists y. exists z. exists w. (HarryPotterSeries = (x_|_y_|_z_|_w))))\n                                                                                                                                                                                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nDistinctWork(BookOne) & DistinctWork(BookTwo) & DistinctWork(BookThree) & DistinctWork(BookFour) & (BookOne<>BookTwo) & (BookTwo<>BookThree) & (BookThree<>BookFour) & (BookFour<>BookOne) & (exists x. exists y. exists z. exists w. (HarryPotterSeries = (x_|_y_|_z_|_w))))\n                                                                                                                                                                                                                                                                            ^\n"}
{"timestamp": "2025-05-11T19:31:59.984930", "premises": ["Trilogy(X) :- CompoundLiteraryWork(X), Distinct(Four, X)", "Distinct(Four, HarryPotterSeries)", "Distinct(Four, ChroniclesOfNarnia)"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.\nTrilogy(X) :- CompoundLiteraryWork(X), Distinct(Four, X)\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.\nTrilogy(X) :- CompoundLiteraryWork(X), Distinct(Four, X)\n           ^\n"}
{"timestamp": "2025-05-11T19:31:59.987214", "premises": ["Trilogy(x) -> exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & Not(y=z) & Not(z=w) & Not(w=y) & MadeUpOf(x, y, z, w))", "exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & Not(y=z) & Not(z=w) & Not(w=y) & MadeUpOf(HarryPotterSeries, y, z, w))", "exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & Not(y=z) & Not(z=w) & Not(w=y) & MadeUpOf(ChroniclesOfNarnia, y, z, w))"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nTrilogy(x) -> exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & Not(y=z) & Not(z=w) & Not(w=y) & MadeUpOf(x, y, z, w))\n                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nTrilogy(x) -> exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & Not(y=z) & Not(z=w) & Not(w=y) & MadeUpOf(x, y, z, w))\n                                                                                                        ^\n"}
{"timestamp": "2025-05-11T19:32:00.020913", "premises": ["Trilogy(x) -> exists y. exists z. exists w. (x = y+z+w & Distinct(y, z) & Distinct(z, w) & Distinct(w, y))", "exists x. exists y. exists z. exists w. (HarryPotterSeriesConst = x+y+z+w & Distinct(x, y) & Distinct(y, z) & Distinct(z, w) & Distinct(w, x))", "exists x. exists y. exists z. exists w. (ChroniclesOfNarnia = x+y+z+w & Distinct(x, y) & Distinct(y, z) & Distinct(z, w) & Distinct(w, x))"], "conclusion": "HarryPotterSeries(x) & Trilogy(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Trilogy(x) -> exists y exists z exists w ((((%%START ERROR%%x = y+z+w%%END ERROR%%) & Distinct(y,z)) & Distinct(z,w)) & Distinct(w,y))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Trilogy(x) -> exists y exists z exists w ((((%%START ERROR%%x = y+z+w%%END ERROR%%) & Distinct(y,z)) & Distinct(z,w)) & Distinct(w,y))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:32:33.317699", "premises": ["Trilogy(X) <-> exists xOne. exists xTwo. exists xThree. exists xFour. (X = (xOne,xTwo,xThree,xFour) & Distinct(xOne) & Distinct(xTwo) & Distinct(xThree) & Distinct(xFour))", "Trilogy((HarryPotterOne,HarryPotterTwo,HarryPotterThree,HarryPotterFour))", "Trilogy((NarniaOne,NarniaTwo,NarniaThree,NarniaFour))"], "conclusion": "-Trilogy((NarniaOne,NarniaTwo,NarniaThree,NarniaFour))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n-Trilogy((NarniaOne,NarniaTwo,NarniaThree,NarniaFour))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n-Trilogy((NarniaOne,NarniaTwo,NarniaThree,NarniaFour))\n                   ^\n"}
{"timestamp": "2025-05-11T19:32:33.346864", "premises": ["Trilogy(X) :- exists Y, Z, W, V. (Distinct(Y, Z) & Distinct(Y, W) & Distinct(Y, V) & Distinct(Z, W) & Distinct(Z, V) & Distinct(W, V) & Component(X, Y) & Component(X, Z) & Component(X, W) & Component(X, V))", "exists Y, Z, W, V. (Distinct(Y, Z) & Distinct(Y, W) & Distinct(Y, V) & Distinct(Z, W) & Distinct(Z, V) & Distinct(W, V) & Component(HarryPotter, Y) & Component(HarryPotter, Z) & Component(HarryPotter, W) & Component(HarryPotter, V))", "exists Y, Z, W, V. (Distinct(Y, Z) & Distinct(Y, W) & Distinct(Y, V) & Distinct(Z, W) & Distinct(Z, V) & Distinct(W, V) & Component(ChroniclesOfNarnia, Y) & Component(ChroniclesOfNarnia, Z) & Component(ChroniclesOfNarnia, W) & Component(ChroniclesOfNarnia, V))"], "conclusion": "-Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.\nTrilogy(X) :- exists Y, Z, W, V. (Distinct(Y, Z) & Distinct(Y, W) & Distinct(Y, V) & Distinct(Z, W) & Distinct(Z, V) & Distinct(W, V) & Component(X, Y) & Component(X, Z) & Component(X, W) & Component(X, V))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.\nTrilogy(X) :- exists Y, Z, W, V. (Distinct(Y, Z) & Distinct(Y, W) & Distinct(Y, V) & Distinct(Z, W) & Distinct(Z, V) & Distinct(W, V) & Component(X, Y) & Component(X, Z) & Component(X, W) & Component(X, V))\n           ^\n"}
{"timestamp": "2025-05-11T19:32:33.355023", "premises": ["exists x. (CompoundLiteraryWork(x) & NarrativeWork(x) & -DistinctWork(x, Four) & (exists y. (exists z. (exists u. (x=y & y=z & z=u & DistinctWork(u, Four)))))))", "exists x. (Series(x) & (exists y. (exists z. (exists u. (x=y & y=z & z=u & DistinctWork(u, Four))))))", "exists x. (Series(x) & (exists y. (exists z. (exists u. (x=y & y=z & z=u & DistinctWork(u, Four))))))"], "conclusion": "-Trilogy(TheChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nexists x. (CompoundLiteraryWork(x) & NarrativeWork(x) & -DistinctWork(x, Four) & (exists y. (exists z. (exists u. (x=y & y=z & z=u & DistinctWork(u, Four)))))))\n                                                                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nexists x. (CompoundLiteraryWork(x) & NarrativeWork(x) & -DistinctWork(x, Four) & (exists y. (exists z. (exists u. (x=y & y=z & z=u & DistinctWork(u, Four)))))))\n                                                                                                                                                               ^\n"}
{"timestamp": "2025-05-11T19:35:05.279415", "premises": ["ChineseComputerScientist(Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity))", "Called(Knuth, EnemyOfAnalysisOfAlgorithm)"], "conclusion": "exists x. (ChineseScientist(x) & Called(x, EnemyOfAnalysisOfAlgorithm))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nChineseComputerScientist(Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nChineseComputerScientist(Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity))\n                                                         ^\n"}
{"timestamp": "2025-05-11T19:36:51.996439", "premises": ["all x. all y. (Score(x, UCLSemifinal, RegularTime) & Score(y, UCLSemifinal, RegularTime) & -Score(x, UCLSemifinal, RegularTime) - Score(y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (Score(x, UCLSemifinal, RegularTime) & Score(y, UCLSemifinal, RegularTime) & Score(x, UCLSemifinal, ExtraTime) & Score(y, UCLSemifinal, ExtraTime) & -Score(x, UCLSemifinal, ExtraTime) - Score(y, UCLSemifinal, ExtraTime) -> NeedToPlayVictoryShootout(x, y))", "Score(RealMadrid, UCLSemifinalOneNineNineZero, RegularTime) & Score(AtleticoMadrid, UCLSemifinalOneNineNineZero, RegularTime) & Score(RealMadrid, UCLSemifinalOneNineNineZero, RegularTime) & Score(AtleticoMadrid, UCLSemifinalOneNineNineZero, RegularTime) & -(Score(RealMadrid, UCLSemifinalOneNineNineZero, RegularTime) & Score(AtleticoMadrid, UCLSemifinalOneNineNineZero, RegularTime))", "Score(RealMadrid, UCLSemifinalOneNineNineZero, ExtraTime) & Score(AtleticoMadrid, UCLSemifinalOneNineNineZero, ExtraTime) & -(Score(RealMadrid, UCLSemifinalOneNineNineZero, ExtraTime) | Score(AtleticoMadrid, UCLSemifinalOneNineNineZero, ExtraTime))"], "conclusion": "NeedToPlayVictoryShootout(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nall x. all y. (Score(x, UCLSemifinal, RegularTime) & Score(y, UCLSemifinal, RegularTime) & -Score(x, UCLSemifinal, RegularTime) - Score(y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))\n                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nall x. all y. (Score(x, UCLSemifinal, RegularTime) & Score(y, UCLSemifinal, RegularTime) & -Score(x, UCLSemifinal, RegularTime) - Score(y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))\n                                                                                                                                ^\n"}
{"timestamp": "2025-05-11T19:36:52.000037", "premises": ["all x. all y. all z. ((ScoreIn(x, y, z, UCLSemifinal, RegularTime) & ScoreIn(x, y, z, UCLSemifinal, RegularTime)) -> PlayExtraTime(x, y, z))", "all x. all y. all z. ((ScoreIn(x, y, z, UCLSemifinal, RegularTime) & ScoreIn(x, y, z, UCLSemifinal, ExtraTime)) -> PlayVictoryShootOut(x, y, z))", "ScoreIn(RealMadrid, Atl\u00e9ticoMadrid, One990, UCLSemifinal, RegularTime) & ScoreIn(Atl\u00e9ticoMadrid, RealMadrid, One990, UCLSemifinal, RegularTime) & One(One) & One(One) & Same(ScoreIn(RealMadrid, Atl\u00e9ticoMadrid, One990, UCLSemifinal, RegularTime), ScoreIn(Atl\u00e9ticoMadrid, RealMadrid, One990, UCLSemifinal, RegularTime))", "ScoreIn(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, ExtraTime) & ScoreIn(Atl\u00e9ticoMadrid, RealMadrid, OneNineNineZero, UCLSemifinal, ExtraTime) & Zero(Zero) & Zero(Zero) & Same(ScoreIn(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, ExtraTime), ScoreIn(Atl\u00e9ticoMadrid, RealMadrid, OneNineNineZero, UCLSemifinal, ExtraTime))"], "conclusion": "PlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.011895", "premises": ["all x. all y. all z. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(z) & Score(x, z, SameAs(y, z)) & RegularTime(z) -> ExtraTime(z, x, y))", "all x. all y. all z. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(z) & Score(x, z, SameAs(y, z)) & RegularTime(z) & ExtraTime(z, x, y) -> VictoryShootOut(z, x, y))", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, SameAs(Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal)) & RegularTime(OneNineNineZeroUCLSemifinal)", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, SameAs(Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal)) & ExtraTime(OneNineNineZeroUCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "VictoryShootOut(OneNineNineZeroUCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 654: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 654: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.014512", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScore(x, y, RegularTime, UCLSemifinal) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScore(x, y, RegularTime, UCLSemifinal) & SameScore(x, y, ExtraTime, UCLSemifinal) -> NeedVictoryShootout(x, y))", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, One, RegularTime, One990UCLSemifinal)", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, Zero, ExtraTime, 199ZeroUCLSemifinal)", "NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.032503", "premises": ["all x. all y. (Score(x, SamePointsInRegularTime, UCLSemifinal(x, y)) -> NeedExtraTime(x, y))", "all x. all y. (Score(x, SamePointsInBothRegularAndExtraTime, UCLSemifinal(x, y)) -> NeedVictoryShootOut(x, y))", "Score(RealMadrid, OnePoint, UCLSemifinal(OneNineNineZero, Atl\u00e9ticoMadrid)) & Score(Atl\u00e9ticoMadrid, OnePoint, UCLSemifinal(OneNineNineZero, RealMadrid))", "Score(RealMadrid, ZeroPoint, UCLSemifinal(OneNineNineZero, Atl\u00e9ticoMadrid)) & Score(Atl\u00e9ticoMadrid, ZeroPoint, UCLSemifinal(OneNineNineZero, RealMadrid))"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 657: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 657: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.037139", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePointsInRegularTime(x, y) -> ExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePointsInBothTimes(x, y) -> VictoryShootOut(x, y))", "SamePointsInRegularTime(OneNineNineZero_UCL_Semifinal, RealMadrid_Atl\u00e9ticoMadrid_OneNineNineZero) & ScoreOnePoint(OneNineNineZero_UCL_Semifinal, RealMadrid_Atl\u00e9ticoMadrid_OneNineNineZero)", "ScoreZeroPoint(OneNineNineZero_UCL_Semifinal, RealMadrid_Atl\u00e9ticoMadrid_OneNineNineZero) & SamePointsInBothTimes(OneNineNineZero_UCL_Semifinal, RealMadrid_Atl\u00e9ticoMadrid_OneNineNineZero)"], "conclusion": "VictoryShootOut(OneNineNineZero_UCL_Semifinal, RealMadrid_Atl\u00e9ticoMadrid_OneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 667: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 667: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.037642", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoredSamePoints(x, y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoredSamePoints(x, y, UCLSemifinal, RegularTime) & ScoredSamePoints(x, y, UCLSemifinal, ExtraTime) -> NeedToPlayVictoryShootout(x, y))", "ScoredSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, RegularTime)", "ScoredSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, ExtraTime)"], "conclusion": "NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:36:52.038060", "premises": ["all x. all y. (ScoreSamePoints(x, y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (ScoreSamePoints(x, y, UCLSemifinal, RegularTime) & ScoreSamePoints(x, y, UCLSemifinal, ExtraTime) -> NeedToPlayVictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, RegularTime)", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, ExtraTime)"], "conclusion": "NeedToPlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.482997", "premises": ["all x. all y. all z. (UCLSemifinal(z) & SameScore(x, y, z) & SameScore(x, y, z) & RegTime(z) -> ExtraTime(z))", "all x. all y. all z. (UCLSemifinal(z) & SameScore(x, y, z) & SameScore(x, y, z) & RegTime(z) & ExtraTime(z) -> VictoryShootout(z))", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, UCLSemifinalOneNineNineZero) & RegTime(UCLSemifinalOneNineNineZero)", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, UCLSemifinalOneNineNineZero) & ExtraTime(UCLSemifinalOneNineNineZero)"], "conclusion": "-VictoryShootout(UCLSemifinalOneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 623: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 623: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.483358", "premises": ["all x. all y. (Score(x, Points, UCLSemifinal) & Score(y, Points, UCLSemifinal) & Equal(x, y) & InTime(RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (Score(x, Points, UCLSemifinal) & Score(y, Points, UCLSemifinal) & Equal(x, y) & InTime(RegularTime) & InTime(ExtraTime) -> NeedVictoryShootout(x, y))", "Score(RealMadrid, One, UCLSemifinalOneNineNineZero) & Score(Atl\u00e9ticoMadrid, One, UCLSemifinalOneNineNineZero) & InTime(RegularTimeOne990)", "Score(RealMadrid, Zero, UCLSemifinalOneNineNineZero) & Score(Atl\u00e9ticoMadrid, Zero, UCLSemifinalOneNineNineZero) & InTime(ExtraTimeOneNineNineZero)"], "conclusion": "-NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 661: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 661: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.483676", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePointsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePointsInRegularAndExtraTime(x, y) -> NeedVictoryShootout(x, y))", "SamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid) & PointsInRegularTime(RealMadrid, One) & PointsInRegularTime(Atl\u00e9ticoMadrid, One)", "SamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid) & PointsInExtraTime(RealMadrid, Zero) & PointsInExtraTime(Atl\u00e9ticoMadrid, Zero)"], "conclusion": "-NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 638: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 638: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.497634", "premises": ["all x. all y. all z. ((ScoredIn(x, UCLSemifinal(z)) & ScoredIn(y, UCLSemifinal(z)) & SameNumberPoints(x, y, z) & DuringRegularTime(z)) -> NeedToPlayExtraTime(x, y, z))", "all x. all y. all z. ((ScoredIn(x, UCLSemifinal(z)) & ScoredIn(y, UCLSemifinal(z)) & SameNumberPoints(x, y, z) & DuringRegularAndExtraTime(z)) -> NeedToPlayVictoryShootout(x, y, z))", "ScoredIn(RealMadrid, UCLSemifinal(OneNineNineZero)) & ScoredIn(Atl\u00e9ticoMadrid, UCLSemifinal(OneNineNineZero)) & OnePoint(RealMadrid, OneNineNineZero) & OnePoint(Atl\u00e9ticoMadrid, OneNineNineZero) & DuringRegularTime(OneNineNineZero)", "ScoredIn(RealMadrid, UCLSemifinal(OneNineNineZero)) & ScoredIn(Atl\u00e9ticoMadrid, UCLSemifinal(OneNineNineZero)) & ZeroPoint(RealMadrid, OneNineNineZero) & ZeroPoint(Atl\u00e9ticoMadrid, OneNineNineZero) & DuringExtraTime(OneNineNineZero)"], "conclusion": "-NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 667: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 667: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.501695", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & SamePoints(x, y, RegularTime) ) -> NeedToPlayExtraTime(x, y))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & SamePoints(x, y, RegularTime) & SamePoints(x, y, ExtraTime) ) -> NeedToPlayVictoryShootout(x, y))", "SoccerTeam(RealMadrid) & SoccerTeam(Atl\u00e9ticoMadrid) & UCLSemifinal(RealMadrid, Atl\u00e9ticoMadrid) & SamePoints(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "SoccerTeam(RealMadrid) & SoccerTeam(Atl\u00e9ticoMadrid) & UCLSemifinal(RealMadrid, Atl\u00e9ticoMadrid) & SamePoints(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.510884", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, UCLSemifinal, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, UCLSemifinal, RegularTime) & ScoreSamePoints(x, y, UCLSemifinal, ExtraTime) -> NeedToPlayVictoryShootout(x, y))", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, RegularTime)", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZeroUCLSemifinal, ExtraTime)"], "conclusion": "-(NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.514436", "premises": ["all x. all y. ((ScoreSame(x, y, RegularTime) & UCLSemifinal(x)) -> ExtraTime(x, y))", "all x. all y. ((ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTimeConst) & UCLSemifinal(x)) -> VictoryShootout(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, RegularTime, One)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, ExtraTimeConst, Zero)"], "conclusion": "-(VictoryShootout(RealMadrid, Atl\u00e9ticoMadrid) & UCLSemifinal(OneNineNineZero))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:37:42.514701", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & Score(x, SamePointsConst) & Score(x, RegularTime) & Score(y, RegularTime) & SamePoints(x, y) -> NeedToPlayExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & Score(x, SamePointsConst) & Score(x, RegularTime) & Score(y, RegularTime) & Score(x, ExtraTime) & Score(y, ExtraTime) & SamePoints(x, y) -> NeedToPlayVictoryShootout(x, y))", "UCLSemifinal(OneNineNineZero) & Score(RealMadrid, OnePoint) & Score(AtleticoMadrid, OnePoint) & Score(RealMadrid, RegularTime) & Score(AtleticoMadrid, RegularTime) & SamePoints(RealMadrid, AtleticoMadrid)", "UCLSemifinal(OneNineNineZero) & Score(RealMadrid, ZeroPoint) & Score(AtleticoMadrid, ZeroPoint) & Score(RealMadrid, ExtraTime) & Score(AtleticoMadrid, ExtraTime) & SamePoints(RealMadrid, AtleticoMadrid)"], "conclusion": "-(NeedToPlayVictoryShootout(OneNineNineZero, RealMadrid, AtleticoMadrid))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedToPlayVictoryShootout/2, NeedToPlayVictoryShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedToPlayVictoryShootout/2, NeedToPlayVictoryShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedToPlayVictoryShootout/2, NeedToPlayVictoryShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedToPlayVictoryShootout/2, NeedToPlayVictoryShootout/3\n"}
{"timestamp": "2025-05-11T19:38:26.020375", "premises": ["Office(Ableton, Mars)", "Office(Ableton, Venus)", "different(Planet, Mars, Venus)", "all x. (Office(x, Planet(Mars)) & Office(x, Planet(Venus)) -> SmallCompany(x))", "Distracts(Ableton, MusicSoftware)"], "conclusion": "-Office(Ableton, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Planet/1, Planet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Planet/1, Planet/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Planet/1, Planet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Planet/1, Planet/0\n"}
{"timestamp": "2025-05-11T19:41:02.380372", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) <-> (BasketballPlayer(x) & CanUseVeryEfficiently(x, LeftNoseConst) & CanUseVeryEfficiently(x, RightNoseConst)))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, LeftNoseConst) -> CanUseVeryEfficiently(x, LeftNoseConst))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, RightNoseConst) -> CanUseVeryEfficiently(x, RightNoseConst))", "BasketballPlayer(CristianoRonaldo)", "CanUseVeryEfficiently(CristianoRonaldo, RightNoseConst)", "CanScoreManyGoals(CristianoRonaldo, LeftNoseConst)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & CanUseVeryEfficiently(x, LeftNoseConst) & CanUseVeryEfficiently(x, RightNoseConst))) -> all x. (TopBasketballPlayer(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & CanUseVeryEfficiently(x, LeftNoseConst) & CanUseVeryEfficiently(x, RightNoseConst))) -> all x. (TopBasketballPlayer(x))\n                        ^\n"}
{"timestamp": "2025-05-11T19:41:02.436024", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & VeryEfficient(x, LeftNose(x)) & VeryEfficient(x, RightNose(x))))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, LeftNose(x)) -> VeryEfficient(x, LeftNose(x)))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, RightNose(x)) -> VeryEfficient(x, RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(CristianoRonaldo, RightNose(CristianoRonaldo))", "CanScoreManyGoals(CristianoRonaldo, LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-05-11T19:42:56.211363", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "Ignored(DonaldKnuth, ContributionsToAnalysisOfAlgorithms)", "RecognizedFor(MarvinMinsky, ContributionsToPoleDancingConst)", "Hated(RichardHamming, NumericalMethods)", "MadeContributions(JohnMcCarthy, ContributionsToPoleDancingConst)"], "conclusion": "exists x. exists y. (NobelPrize(x) & NobelPrize(y) & (x=y) | (x\u2260y) & (ContributionsToPoleDancing(x) | ContributionsToPoleDancing(y)))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xe2 in position 1034: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 1034: invalid continuation byte\n"}
{"timestamp": "2025-05-11T19:43:34.315248", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "Contributed(DonaldKnuth, AnalysisOfAlgorithms) & -Ignored(DonaldKnuth, Contributed(DonaldKnuth, AnalysisOfAlgorithms))", "Recognized(MarvinMinsky, PoleDancingConst)", "Hated(RichardHamming, NumericalMethods)", "MadeContribution(JohnMcCarthy, PoleDancingConst)"], "conclusion": "exists x. exists y. (WonNobelPrize(x) & WonNobelPrize(y) & PoleDancing(x) & PoleDancing(y) & x != y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Contributed/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Contributed/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Contributed/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Contributed/2\n"}
{"timestamp": "2025-05-11T19:44:30.822350", "premises": ["Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)", "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "Awarded(NobelPrize, DonaldKnuth) | Awarded(NobelPrize, MarvinMinsky) | Awarded(NobelPrize, RichardHamming) | Awarded(NobelPrize, JohnMcCarthy)", "-Contributed(AnalysisOfAlgorithms, DonaldKnuth)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(PoleDancing, JohnMcCarthy)"], "conclusion": "-exists x. (Awarded(NobelPrize, x) & Hated(x, NumericalMethods))", "error_type": "<class 'KeyError'>", "error_message": "20", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 20\n"}
{"timestamp": "2025-05-11T19:45:42.210509", "premises": ["Surname(Giordano) & Chinese(Surname(Giordano))", "Uses(Surname(AlbaRoversi), Giordano)", "Uses(Surname(PaoloRoversi), Giordano)", "Uses(Surname(RobertoRoversi), Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Chinese(Uses(Surname(AlbaRoversi), Giordano))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Uses/2, Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Uses/2, Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Uses/2, Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Uses/2, Surname/1\n"}
{"timestamp": "2025-05-11T19:46:38.910143", "premises": ["Destroyed(ussSalem, UnitedStatesNavy) & HeavyCruiser(ussSalem)", "LastHeavyCruiserToSink(ussSalem)", "Battleship(ussSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Evaporated(ussSalem, Atlantic, Mediterranean)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, Mediterranean))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Evaporated/3, Evaporated/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Evaporated/3, Evaporated/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Evaporated/3, Evaporated/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Evaporated/3, Evaporated/2\n"}
{"timestamp": "2025-05-11T19:46:38.912217", "premises": ["HeavyCruiser(ussSalem) & Destroyed(ussSalem, UnitedStatesNavy)", "exists x. (HeavyCruiser(x) & -x=ussSalem -> Sunk(x, ussSalem))", "Battleship(ussSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "-Exists x. (HeavyCruiser(x) & Sunk(x, ussSalem) & -x=ussSalem)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & EvaporatedIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n-Exists x. (HeavyCruiser(x) & Sunk(x, ussSalem) & -x=ussSalem)\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n-Exists x. (HeavyCruiser(x) & Sunk(x, ussSalem) & -x=ussSalem)\n        ^\n"}
{"timestamp": "2025-05-11T19:46:38.923231", "premises": ["DestroyedBy(USNavy, USSSalem) & HeavyCruiser(USSSalem)", "LastToSink(HeavyCruiserConst, USSSalem)", "Battleship(USSSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Evaporated(USSSalem, Atlantic_&_Mediterranean)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nEvaporated(USSSalem, Atlantic_&_Mediterranean)\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nEvaporated(USSSalem, Atlantic_&_Mediterranean)\n                              ^\n"}
{"timestamp": "2025-05-11T19:46:57.356879", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbumConst))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (Astronaut(x) -> Consumes(x, RockAlbumConst))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (Astronaut(x) -> Consumes(x, RockAlbumConst))\n                   ^\n"}
{"timestamp": "2025-05-11T19:47:52.180067", "premises": ["forsome x. forsome y. (OccursIn(x, MonkeypoxVirus, y) & -y(AIDSConst))", "forsome x. (OccursIn(x, MonkeypoxVirus, PlantConst))", "forsome x. (Human(x) -> Plant(x))", "forsome x. (Plant(x) -> Unicorn(x))", "forsome x. (AIDS(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energized(x)))", "forsome x. (TheFlu(x) -> Energized(x))"], "conclusion": "Unicorn(_)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nforsome x. forsome y. (OccursIn(x, MonkeypoxVirus, y) & -y(AIDSConst))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nforsome x. forsome y. (OccursIn(x, MonkeypoxVirus, y) & -y(AIDSConst))\n        ^\n"}
{"timestamp": "2025-05-11T19:47:52.177117", "premises": ["all x. (Monkeypox(x) -> Possible(GetAIDS(x)))", "exists x. exists y. (Plant(y) & Monkeypox(x) & OccursIn(x, y))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (GetAIDS(x) -> (Fever(x) & Headache(x) & MusclePain(x) & Energized(x)))", "all x. (GetTheFlu(x) -> Energized(x))"], "conclusion": "Unicorn(Being)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GetAIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GetAIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GetAIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GetAIDS/1\n"}
{"timestamp": "2025-05-11T19:47:52.202967", "premises": ["all x. (MonkeypoxVirus(x) & In(Being, x) -> Possible(AIDS(x)))", "exists x. (MonkeypoxVirus(x) & In(PlantConst, x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energized(x)))", "all x. (Person(x) & TheFlu(x) -> Energized(x))"], "conclusion": "Unicorn(some_x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AIDS/1\n"}
{"timestamp": "2025-05-11T19:47:52.207302", "premises": ["(Occurs(MonkeypoxVirus, x) -> Possible(GetAIDS(x)))", "(Plant(x) -> Possible(Occurs(MonkeypoxVirus, x)))", "(Human(x) -> Plant(x))", "(Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energized(x)))", "(GetFlu(x) -> Energized(x))"], "conclusion": "Unicorn(_)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Occurs/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Occurs/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Occurs/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Occurs/2\n"}
{"timestamp": "2025-05-11T19:50:19.922158", "premises": ["all x. (Bird(x) & EatEggs(x) -> (Platypus(x) | Echidna(x)))", "-(Platypus(x) -> Animal(x))", "-(Echidna(x) -> Animal(x))", "all x. (Bird(x) -> -Vertebrate(x))", "all x. Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. Bird(x) -> Plant(x))", "all x. Animal(x) -> Bird(x))", "EatEggs(GrebesConst))", "-(Grebes(x) -> (Platypus(x) | Echidna(x)))"], "conclusion": "-(Bird(GrebesConst))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. Plant(x) -> (Vertebrate(x) | Vertebrate(x)))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. Plant(x) -> (Vertebrate(x) | Vertebrate(x)))\n                                                  ^\n"}
{"timestamp": "2025-05-11T19:50:19.923862", "premises": ["all x. (Birds(x) & EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(PlatypusConst)", "-Animal(EchidnaConst)", "all x. (Birds(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Birds(x) -> Plant(x))", "all x. (Animal(x) -> Birds(x))", "EatsEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Birds(Grebe)", "error_type": "<class 'KeyError'>", "error_message": "19", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 273, in token\n    tok = self._buffer[self._currentIndex + location]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 337, in handle_variable\n    if self.inRange(0) and self.token(0) == Tokens.OPEN:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 19\n"}
{"timestamp": "2025-05-11T19:50:59.391648", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "Attended(BernardaBrysonShahn, UniversityOfWashington)", "all x. (BornIn(x, Athens, Ohio) -> Japanese(x))"], "conclusion": "exists x. exists y. (Attended(BernardaBrysonShahn, x) & Attended(BernardaBrysonShahn, y) & x<>y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Attended(BernardaBrysonShahn,x) & Attended(BernardaBrysonShahn,y)) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Attended(BernardaBrysonShahn,x) & Attended(BernardaBrysonShahn,y)) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:50:59.405122", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "Attended(BernardaBrysonShahn, UniversityOfWashington)", "all x. (BornIn(x, Athens, Ohio) -> Japanese(x))"], "conclusion": "exists x. exists y. (Attended(x, y) & (x/=y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (Attended(x,y) & (%%START ERROR%%x/ = y%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (Attended(x,y) & (%%START ERROR%%x/ = y%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T19:51:50.098370", "premises": ["exists x. (Medication(x) & Acetaminophen(x) & YearOfDiscovery(x, OneNineFourSeven))", "CanUse(AcetaminophenConst, Fever)", "PreferredTreatment(Fever, Chocolate) & -exists x. (PreferredTreatment(Fever, x) & x =/= Chocolate)", "-Acetaminophen(Chocolate)"], "conclusion": "-PreferredFor(AcetaminophenConst, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2\n"}
{"timestamp": "2025-05-11T19:55:19.470496", "premises": ["WorldBestKnownArtwork(MonaLisaConst) & Painting(MonaLisaConst)", "Hair(MonaLisaConst) & ExtractedBy(MonaLisaConst, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "History | Portrait | Animal | Landscape | StillLife", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "all x. (Painting(x) & WorldBestKnownArtwork(x) <- MonaLisa(x))", "Painting(MonaLisaConst)", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (Painting(x) & Hair(x))", "-Hair(MonaLisaConst)", "all x. (Painting(x) & WorldBestKnownArtwork(x) -> MonaLisa(x))", "-Painting(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-Painting(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (Painting(x) & Hair(x))", "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "WorldBestKnownArtwork(MonaLisaConst)", "Hair(MonaLisaConst)"], "conclusion": "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n-exists x. (WorldBestKnownArtwork(x) & Hair(x))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n-exists x. (WorldBestKnownArtwork(x) & Hair(x))\n                                              ^\n"}
{"timestamp": "2025-05-11T19:55:19.478188", "premises": ["WorldBestKnownArtwork(MonaLisaConst) & Painting(MonaLisaConst)", "exists x. (Hair(x) & ExtractedBy(x, LeonardoDaVinci) & MonaLisa(x))", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingConst"], "conclusion": "-exists x. (Hair(x) & WorldBestKnownArtwork(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'PaintingConst'.\n(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingConst\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'PaintingConst'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'PaintingConst'.\n(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingConst\n                                                      ^\n"}
{"timestamp": "2025-05-11T19:55:19.470163", "premises": ["WorldBestKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingGenre"], "conclusion": "-exists x. (WorldBestKnownArtwork(x) & Hair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'PaintingGenre'.\n(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingGenre\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'PaintingGenre'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'PaintingGenre'.\n(History_|_Portrait_|_Animal_|_Landscape_|_StillLife) PaintingGenre\n                                                      ^\n"}
{"timestamp": "2025-05-11T19:55:50.127142", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & LocatedIn(Padstow, England)", "Has(NationalLobsterHatchery, Animal)", "all x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))", "all x. (ForDestruction(x) -> MayRelease(x, Animal, Wild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> Has(x, Animal))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))\n                                                           ^\n"}
{"timestamp": "2025-05-11T19:55:50.160604", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(England, Padstow)", "Has(NationalLobsterHatchery, Animal)", "all x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))", "all x. (ForDestruction(x) -> MightRelease(x, Animal, Wild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> Has(x, Animal))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Hatchery(x) -> ((ForProfit(x) | ForDestruction(x)))\n                                                           ^\n"}
{"timestamp": "2025-05-11T19:56:54.567739", "premises": ["Awarded(NobelPrize, DonaldKnuth) & Awarded(NobelPrize, MarvinMinsky) & Awarded(NobelPrize, RichardHamming) & Awarded(NobelPrize, JohnMcCarthy)", "Contribution(Science, DonaldKnuth)", "Contribution(PoleDancing, MarvinMinsky)", "-Contribution(Science, RichardHamming)", "Contribution(PoleDancing, JohnMcCarthy)"], "conclusion": "-exists x. exists y. (Awarded(NobelPrize, x) & Awarded(NobelPrize, y) & Contribution(Science, x) & Contribution(Science, y) & x \u2260 y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\n-exists x. exists y. (Awarded(NobelPrize, x) & Awarded(NobelPrize, y) & Contribution(Science, x) & Contribution(Science, y) & x \u2260 y)\n                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\n-exists x. exists y. (Awarded(NobelPrize, x) & Awarded(NobelPrize, y) & Contribution(Science, x) & Contribution(Science, y) & x \u2260 y)\n                                                                                                                                ^\n"}
{"timestamp": "2025-05-11T19:56:54.643218", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "Hates(RichardHamming, NumericalMethods)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. (NobelPrize(x) & ContributionToScience(x)) | for all x. for all y. (NobelPrize(x) & NobelPrize(y) -> x=y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) | for all x. for all y. (NobelPrize(x) & NobelPrize(y) -> x=y)\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) | for all x. for all y. (NobelPrize(x) & NobelPrize(y) -> x=y)\n                                                           ^\n"}
{"timestamp": "2025-05-11T19:57:38.368418", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum)", "exists x. exists y. exists z. (Made(x, Adjustment) & To(x, RequirementOf(AcademicPaperConst, z)) & For(x, AligningWith(y)) & y = HighSchoolCurriculum)"], "conclusion": "exists x. exists y. (AcademicPaper(x) & WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, y) & -(FirstAuthor(x) = y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. AcademicPaper(x) -> IntendedToBeProfitable(x))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. AcademicPaper(x) -> IntendedToBeProfitable(x))\n                                                    ^\n"}
{"timestamp": "2025-05-11T19:57:38.368322", "premises": ["all x. (AcademicPaper(x) -> (DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & MadeTo(x, AcademicPaperConst) & MadeTo(x, AlignedWithConst, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> exists y. (y != FirstAuthor(x) & WrittenBy(x, y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MadeTo/3, MadeTo/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MadeTo/3, MadeTo/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MadeTo/3, MadeTo/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MadeTo/3, MadeTo/2\n"}
{"timestamp": "2025-05-11T19:57:38.373684", "premises": ["all x. (AcademicPaper(x) -> (DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & MadeTo(x, AcademicPaperRequirement) & To(x, AlignWith, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) | OtherThanFirstAuthor(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) | OtherThanFirstAuthor(x)))\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) | OtherThanFirstAuthor(x)))\n                                                        ^\n"}
{"timestamp": "2025-05-11T19:57:38.379020", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & For(x, AcademicPapers) & To(x, AlignWith, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) & OtherAuthors(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) & OtherAuthors(x)))\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x) & OtherAuthors(x)))\n                                                        ^\n"}
{"timestamp": "2025-05-11T19:57:38.392645", "premises": ["all x. (AcademicPaper(x) -> (DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedToBe(x, Profitable))", "all x. (AcademicPaper(x) -> -(AlignedWith(x, HighSchoolCurriculum)))", "exists x. exists y. exists z. (AcademicPaper(x) & Adjustment(y) & MadeTo(x, y, z) & AlignWith(x, z, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> exists y. (WrittenBy(x, y) & (y = FirstAuthor(x)) | ~ (y = FirstAuthor(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. (AcademicPaper(x) -> exists y. (WrittenBy(x, y) & (y = FirstAuthor(x)) | ~ (y = FirstAuthor(x))))\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. (AcademicPaper(x) -> exists y. (WrittenBy(x, y) & (y = FirstAuthor(x)) | ~ (y = FirstAuthor(x))))\n                                                                                     ^\n"}
{"timestamp": "2025-05-11T19:57:38.395590", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjusted(x, AcademicPaperConst) & Adjusted(x, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & exists y. (WrittenBy(x, y) & -FirstAuthor(x, y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FirstAuthor/2, FirstAuthor/1.\n\n\nFatal error:  The following symbols are used with multiple arities: FirstAuthor/2, FirstAuthor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FirstAuthor/2, FirstAuthor/1.\n\n\nFatal error:  The following symbols are used with multiple arities: FirstAuthor/2, FirstAuthor/1\n"}
{"timestamp": "2025-05-11T19:58:06.141921", "premises": ["Surname(Giordano) & Chinese(Surname(Giordano))", "Uses(Giordano, AlbaRoversi)", "Uses(Giordano, PaoloRoversi)", "Uses(Giordano, RobertoRoversi)", "Photographer(PaoloRoversi)", "Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
