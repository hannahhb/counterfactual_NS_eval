{"timestamp": "2025-04-29T01:02:25.956236", "premises": ["exists x. (Fish(x) & Stings(x, Person))", "Fish(Stonefish)", "Stings(Stonefish, PersonWhenSteppedOn)", "all x. (Person(x) -> (Stings(Stonefish, x) & -Treated(x) -> Death(x)))", "all x. (Person(x) -> (Stings(Stonefish, x) -> (Treat(x, ApplyHeat) | Treat(x, UseAntivenom))))"], "conclusion": "exists x. (Fish(x) & exists y. (Person(y) & Stings(x, y) & -Treated(y) -> Death(y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0\n"}
{"timestamp": "2025-04-29T01:02:33.142959", "premises": ["exists x. (Fish(x) & Stings(x, Person))", "Fish(Stonefish)", "StingsWhenSteppedOn(Stonefish)", "all x. (Person(x) -> (StungBy(x, Stonefish) & -Treated(x) -> Death(x)))", "all x. (StungBy(x, Stonefish) -> (TreatedWithHeat(x) | TreatedWithAntivenom(x)) -> -Death(x))"], "conclusion": "exists x. (Fish(x) & all y. (Person(y) -> (StungBy(y, x) & -Treated(y) -> Death(y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0\n"}
{"timestamp": "2025-04-29T01:02:46.897466", "premises": ["exists x. (Fish(x) & Stings(x, Person))", "Fish(Stonefish)", "StingsWhenSteppedOn(Stonefish)", "all x. (Person(x) -> (Stings(Stonefish, x) & -Treated(x) -> Dies(x)))", "all x. (Person(x) -> (Stings(Stonefish, x) -> Treated(x) <-> (ApplyHeat(x) | UseAntivenom(x))))"], "conclusion": "exists x. (Fish(x) & all y. (Person(y) -> (Stings(x, y) & -Treated(y) -> Dies(y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0\n"}
{"timestamp": "2025-04-29T01:03:38.523667", "premises": ["PrehistoricBirdGenus(Ambiortus)", "all x. (SpeciesOf(x, Ambiortus) <-> x = Dementjevi)", "LivedIn(Dementjevi, Mongolia)", "Discoverer(Ambiortus, YevgenyKurochkin)"], "conclusion": "Exists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^\n"}
{"timestamp": "2025-04-29T01:03:54.555482", "premises": ["PrehistoricBirdGenus(Ambiortus)", "Species(AmbiortusDementjevi, Ambiortus) & all y. (Species(y, Ambiortus) -> y = AmbiortusDementjevi)", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(Ambiortus, YevgenyKurochkin)"], "conclusion": "Exists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^\n"}
{"timestamp": "2025-04-29T01:04:33.262151", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (Species(x, Ambiortus) <-> x = Dementjevi)", "Lived(Dementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Lived(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) <-> x = Dementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) <-> x = Dementjevi)\n     ^\n"}
{"timestamp": "2025-04-29T01:04:38.498975", "premises": ["FortTiconderoga = FortCarillon", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "Located(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Exists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T01:04:43.699680", "premises": ["Name(FortCarillon, FortTiconderoga)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "Located(FortCarillon, NewFrance)", "-Located(NewFrance, Europe)"], "conclusion": "Exists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T01:04:48.248575", "premises": ["Name(Ticonderoga, Carillon)", "Built(Vaudreuil, Carillon)", "Located(Carillon, NewFrance)", "-Located(NewFrance, Europe)"], "conclusion": "Exists x. (Built(Vaudreuil, x) & Located(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Built(Vaudreuil, x) & Located(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Built(Vaudreuil, x) & Located(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T01:04:58.855962", "premises": ["SameEntity(FortTiconderoga, FortCarillon)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-LocatedIn(NewFrance, Europe)"], "conclusion": "Exists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T01:05:17.517189", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "Located(HighlyDevelopedCity, WesternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T01:05:36.728088", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDevelopedCity(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "all x. (HighlyDevelopedCity(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T01:05:53.262924", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T01:06:11.503866", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "Located(HighlyDevelopedCity, WesternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T01:06:30.158681", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T01:06:49.516917", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "DebutIn(Westworld, Year(TwoZeroOneSix), HBO)", "AdaptedFrom(WestworldTV, WestworldFilmOneNineSevenThree) & WrittenBy(WestworldFilmOneNineSevenThree, MichaelCrichton) & DirectedBy(WestworldFilmOneNineSevenThree, MichaelCrichton)", "About(WestworldFilmOneNineSevenThree, MalfunctioningRobotsKillingHumans)"], "conclusion": "Exists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillingHumans))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillingHumans))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillingHumans))\n       ^\n"}
{"timestamp": "2025-04-29T01:06:59.243427", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFictionThriller(Westworld)", "DebutInYear(Westworld, TwoZeroOneSix) & OnNetwork(Westworld, HBO)", "AdaptedFrom(Westworld, OriginalFilm) & WrittenBy(OriginalFilm, MichaelCrichton) & DirectedBy(OriginalFilm, MichaelCrichton) & ReleaseYear(OriginalFilm, OneNineSevenThree)", "About(OriginalFilm, MalfunctionRobotsKillVisitors)"], "conclusion": "Exists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctionRobotsKillVisitors))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctionRobotsKillVisitors))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & About(x, MalfunctionRobotsKillVisitors))\n       ^\n"}
{"timestamp": "2025-04-29T01:07:07.431116", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "DebutedIn2016(Westworld, HBO)", "AdaptedFromOriginalFilm(Westworld, FilmOneNineSevenThree, WrittenBy(FilmOneNineSevenThree, MichaelCrichton), DirectedBy(FilmOneNineSevenThree, MichaelCrichton))", "AboutRobotsMalfunctionAndKillHumans(FilmOneNineSevenThree)"], "conclusion": "Exists x. (DirectedBy(x, MichaelCrichton) & AboutRobotsMalfunction(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & AboutRobotsMalfunction(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(x, MichaelCrichton) & AboutRobotsMalfunction(x))\n       ^\n"}
{"timestamp": "2025-04-29T01:07:17.334188", "premises": ["Series(Westworld, American, ScienceFictionThriller)", "DebutInYear(Series(Westworld), 2016, HBO)", "AdaptedFrom(Series(Westworld), Film(Westworld1973, DirectedBy(MichaelCrichton), WrittenBy(MichaelCrichton)))", "About(Film(WestworldOneNineSevenThree), MalfunctioningRobotsKillHumans)"], "conclusion": "Exists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillHumans))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillHumans))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobotsKillHumans))\n       ^\n"}
{"timestamp": "2025-04-29T01:07:24.956059", "premises": ["District(Guilin, Xiufeng) & District(Guilin, Xiangshan) & District(Guilin, Diecai) & District(Guilin, Qixing)", "-District(Guilin, Yangshuo)", "SameCity(District(Xiangshan), District(Diecai))"], "conclusion": "District(Guilin, Xiangshan) & District(Guilin, Diecai)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1\n"}
{"timestamp": "2025-04-29T01:07:33.710301", "premises": ["District(Guilin, Xiufeng) & District(Guilin, Xiangshan) & District(Guilin, Diecai) & District(Guilin, Qixing)", "-District(Guilin, Yangshuo)", "SameCity(District(Xiangshan), District(Diecai))"], "conclusion": "District(Guilin, Xiangshan) & District(Guilin, Diecai)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1\n"}
{"timestamp": "2025-04-29T01:07:40.812198", "premises": ["District(Xiufeng, Guilin) & District(Xiangshan, Guilin) & District(Diecai, Guilin) & District(Qixing, Guilin)", "-District(Yangshuo, Guilin)"], "conclusion": "SameCity(District(Xiangshan, Guilin), District(Diecai, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2\n"}
{"timestamp": "2025-04-29T01:07:56.376775", "premises": ["District(Xiufeng, Guilin) & District(Xiangshan, Guilin) & District(Diecai, Guilin) & District(Qixing, Guilin)", "-District(Yangshuo, Guilin)"], "conclusion": "SameCity(District(Xiangshan), District(Diecai))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/2, District/1.\n\n\nFatal error:  The following symbols are used with multiple arities: District/2, District/1\n"}
{"timestamp": "2025-04-29T01:09:41.126744", "premises": ["all x. (Mammal(x) & LaysEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LaysEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LaysEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T01:09:50.702909", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T01:10:00.418741", "premises": ["all x. (Mammal(x) & LaysEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LaysEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LaysEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T01:10:20.261771", "premises": ["all x. (Mammal(x) & LaysEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LaysEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LaysEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T01:10:29.916474", "premises": ["AmericanScreenwriterAndProducer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)", "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))"], "conclusion": "exists x. (SeriesByABC(x) & Developed(MaggieFriedman, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-04-29T01:11:08.067396", "premises": ["exists x. (Single(x) & GermanChart(x, #One) & ByArtist(x, BoneyM))", "BigHit(Europe, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "-GermanChart(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One)", "all x. (PeaksBelow(x, #One, GermanCharts) -> -GermanChart(x, #One))"], "conclusion": "PeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanCharts)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanCharts)\n                  ^\n"}
{"timestamp": "2025-04-29T01:11:16.357890", "premises": ["exists x. (Song(x) & GermanChart(x, One) & By(x, \"Boney_MDot\"))", "BigHit(Europe, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "-GermanChart(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One)", "all x. (PeakedBelowGermanChart(x, One) <-> -GermanChart(x, One))"], "conclusion": "PeakedBelowGermanChart(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedBelowGermanChart(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One)\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedBelowGermanChart(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One)\n                              ^\n"}
{"timestamp": "2025-04-29T01:11:24.292132", "premises": ["exists x. (GermanChart(x) & NumberOne(x) & ByArtist(x, BoneyM))", "BigHit(Europe, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "-NumberOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "all x. (PeaksBelowOne(GermanCharts, x) -> -NumberOne(x))"], "conclusion": "PeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                   ^\n"}
{"timestamp": "2025-04-29T01:11:31.749936", "premises": ["exists x. (GermanSingle(x) & HitBy(x, BoneyM) & ChartPosition(x, One))", "Hit(Europe, HoorayHoliHoliday)", "-GermanSingle(HoorayHoliHoliday)", "all x. (ChartPosition(x, P) & P > One -> -ChartPosition(x, One))"], "conclusion": "ChartPosition(HoorayHoliHoliday, P) & P > 1", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nChartPosition(HoorayHoliHoliday, P) & P > 1\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nChartPosition(HoorayHoliHoliday, P) & P > 1\n                                        ^\n"}
{"timestamp": "2025-04-29T01:11:39.898314", "premises": ["exists x. (Song(x) & GermanNumberOneSingle(x) & By(BoneyM, x))", "BigHit(Europe, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "-GermanNumberOneSingle(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "all x. (PeaksBelowOne(GermanCharts, x) -> -GermanNumberOneSingle(x))"], "conclusion": "PeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(GermanCharts, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                   ^\n"}
{"timestamp": "2025-04-29T01:11:52.472311", "premises": ["Develops(ETS, StandardizedTests) & PrimarilyIn(StandardizedTests, UnitedStates) & ForK12(StandardizedTests) & ForHigherEducation(StandardizedTests)", "Administers(ETS, InternationalTests) & Includes(InternationalTests, TOEFL) & Includes(InternationalTests, TOEIC) & Includes(InternationalTests, GRE) & Includes(InternationalTests, SubjectTests)", "many x. (Assessment(x) & DevelopedBy(ETS, x) -> AssociatedWithEntry(x, USTertiaryEducation) & AssociatedWithEntry(x, USQuaternaryEducation))", "Develops(ETS, KOneTwoStatewideAssessments) & UsedFor(KOneTwoStatewideAssessments, AccountabilityTesting) & InManyStates(AccountabilityTesting)"], "conclusion": "Develops(ETS, Assessments) & ForK12Statewide(Assessments) & ForEntryTo(Assessments, USTertiaryEducation) & ForEntryTo(Assessments, USQuaternaryEducation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nmany x. (Assessment(x) & DevelopedBy(ETS, x) -> AssociatedWithEntry(x, USTertiaryEducation) & AssociatedWithEntry(x, USQuaternaryEducation))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nmany x. (Assessment(x) & DevelopedBy(ETS, x) -> AssociatedWithEntry(x, USTertiaryEducation) & AssociatedWithEntry(x, USQuaternaryEducation))\n     ^\n"}
{"timestamp": "2025-04-29T01:12:42.343701", "premises": ["DevelopsTests(ETS, StandardizedTests, USA, KOneTwoAndHigherEducation)", "AdministersTests(ETS, InternationalTests, [TOEFL, TOEIC, GRE, SubjectTests])", "many x. (DevelopsAssessments(ETS, x) -> AssociatedWithEntryTo(x, USTertiaryAndQuaternaryEducation))", "DevelopsAssessments(ETS, KOneTwoStatewideAssessments, UsedForAccountabilityTesting, ManyStates)"], "conclusion": "-AdministersTestsInternationally(ETS)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nmany x. (DevelopsAssessments(ETS, x) -> AssociatedWithEntryTo(x, USTertiaryAndQuaternaryEducation))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nmany x. (DevelopsAssessments(ETS, x) -> AssociatedWithEntryTo(x, USTertiaryAndQuaternaryEducation))\n     ^\n"}
{"timestamp": "2025-04-29T01:12:50.713852", "premises": ["Develops(ETS, StandardizedTests, UnitedStates, For(KOneTwoAndHigherEducation))", "Administers(ETS, InternationalTests, Includes(TOEFL, TOEIC, GRE, SubjectTests))", "many x. (Develops(ETS, Assessments(x), UnitedStates, Entry(TertiaryAndQuaternaryEducation)))", "Develops(ETS, K12StatewideAssessments, UsedFor(AccountabilityTesting), ManyStates)"], "conclusion": "-Administers(ETS, Tests, Internationally)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nmany x. (Develops(ETS, Assessments(x), UnitedStates, Entry(TertiaryAndQuaternaryEducation)))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nmany x. (Develops(ETS, Assessments(x), UnitedStates, Entry(TertiaryAndQuaternaryEducation)))\n     ^\n"}
{"timestamp": "2025-04-29T01:13:39.484891", "premises": ["Watershed(CrotonRiverWatershed) & DrainageBasin(CrotonRiver, CrotonRiverWatershed)", "LocatedIn(CrotonRiver, SouthwesternNewYork)", "FlowsTo(WaterFrom(CrotonRiverWatershed), Bronx)", "LocatedIn(Bronx, NewYork)"], "conclusion": "Exists x. (LocatedIn(x, NewYork) & FlowsTo(WaterFrom(CrotonRiverWatershed), x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (LocatedIn(x, NewYork) & FlowsTo(WaterFrom(CrotonRiverWatershed), x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (LocatedIn(x, NewYork) & FlowsTo(WaterFrom(CrotonRiverWatershed), x))\n       ^\n"}
{"timestamp": "2025-04-29T01:14:38.409752", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-04-29T01:15:31.695214", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, Plus(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Plus(Six, One))", "Equal(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Four, Eight)", "Double(Two, Four)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-04-29T01:15:49.533533", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, Add(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Four, Eight)", "Double(Two, Four)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-04-29T01:15:58.454739", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equals(x, Plus(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Plus(Six, One))", "Equals(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Four, Eight)", "Double(Two, Four)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-04-29T01:16:21.213116", "premises": ["Leader(DengXiaoping, PRC)", "Praised(DengXiaoping, ReformProgram) & Praised(DengXiaoping, ReversionHongKong) & Praised(DengXiaoping, ReturnMacau)", "SecretaryGeneral(DengXiaoping, Party, UnderMao) & VicePremier(DengXiaoping, OneNineFiveZeros) & PresidedOver(DengXiaoping, AntiRightistCampaign)", "Instrumental(DengXiaoping, EconomicReconstruction, AfterGreatLeapForward)", "Died(MaoZedong, OneNineSevenSix)", "After(Died(MaoZedong), GraduallyRoseToPower(DengXiaoping, SupremePower))"], "conclusion": "exists x. (Instrumental(x, EconomicReconstruction, AfterGreatLeapForward) & GraduallyRoseToPower(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToPower/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToPower/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToPower/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToPower/2\n"}
{"timestamp": "2025-04-29T01:16:32.778598", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "PraisedFor(DengXiaoping, ReaffirmationOfReformProgram) & PraisedFor(DengXiaoping, ReversionHongKongToChina) & PraisedFor(DengXiaoping, ReturnMacauToChina)", "SecretaryGeneralUnderMao(DengXiaoping) & VicePremier(DengXiaoping, OneNineFiveZeros) & PresidedOverAntiRightistCampaign(DengXiaoping)", "InstrumentalInEconomicReconstruction(DengXiaoping, China)", "Died(MaoZedong, OneNineSevenSix)", "(Died(MaoZedong) -> GraduallyRoseToSupremePower(DengXiaoping))"], "conclusion": "(InstrumentalInEconomicReconstruction(x, China) -> GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2\n"}
{"timestamp": "2025-04-29T01:16:55.760069", "premises": ["ParamountLeader(DengXiaoping, PRC)", "PraisedFor(DengXiaoping, ReaffirmationOfReformProgram, ReversionOfHongKongToChina, ReturnOfMacau)", "(SecretaryGeneralUnderMao(DengXiaoping) & VicePremier(DengXiaoping, OneNineFiveZeros) -> PresidedOverAntiRightistCampaign(DengXiaoping))", "InstrumentalInEconomicReconstruction(DengXiaoping, AfterGreatLeapForward)", "Died(MaoZedong, OneNineSevenSix)", "(Died(MaoZedong) -> GraduallyRiseToSupremePower(DengXiaoping))"], "conclusion": "(InstrumentalInEconomicReconstruction(x) -> GraduallyRiseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2, InstrumentalInEconomicReconstruction/2, InstrumentalInEconomicReconstruction/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2, InstrumentalInEconomicReconstruction/2, InstrumentalInEconomicReconstruction/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2, InstrumentalInEconomicReconstruction/2, InstrumentalInEconomicReconstruction/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2, InstrumentalInEconomicReconstruction/2, InstrumentalInEconomicReconstruction/1\n"}
{"timestamp": "2025-04-29T01:17:11.936866", "premises": ["all x. (Volunteer(x) -> IntangibleBenefits(x))", "all x. (Volunteer(x) -> (RegularlyWorks(x) | AsNeededWorks(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (WorksInGroups(x) | WorksIndividually(x)))", "all x. (EnvironmentalVolunteer(x) -> (ContributesManagement(x) | ContributesConservation(x)))", "((NaturalDisasterResponse(Volunteer) & WorksInGroups(Volunteer)) -> AsNeededWorks(Volunteer))"], "conclusion": "all x. (NaturalDisasterResponse(x) -> IntangibleBenefits(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Volunteer/1, Volunteer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Volunteer/1, Volunteer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Volunteer/1, Volunteer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Volunteer/1, Volunteer/0\n"}
{"timestamp": "2025-04-29T01:19:18.319713", "premises": ["all x. (Heptalogy(x) <-> (Exist yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x) & PartOf(yFive, x) & PartOf(ySix, x) & PartOf(ySeven, x))))", "Exist yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & PartOf(yOne, HarryPotterSeries) & PartOf(yTwo, HarryPotterSeries) & PartOf(yThree, HarryPotterSeries) & PartOf(yFour, HarryPotterSeries) & PartOf(yFive, HarryPotterSeries) & PartOf(ySix, HarryPotterSeries) & PartOf(ySeven, HarryPotterSeries))", "Exist yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & PartOf(yOne, ChroniclesOfNarnia) & PartOf(yTwo, ChroniclesOfNarnia) & PartOf(yThree, ChroniclesOfNarnia) & PartOf(yFour, ChroniclesOfNarnia) & PartOf(yFive, ChroniclesOfNarnia) & PartOf(ySix, ChroniclesOfNarnia) & PartOf(ySeven, ChroniclesOfNarnia))"], "conclusion": "-Heptalogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Heptalogy(x) <-> (Exist yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x) & PartOf(yFive, x) & PartOf(ySix, x) & PartOf(ySeven, x))))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'yOne'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Heptalogy(x) <-> (Exist yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x) & PartOf(yFive, x) & PartOf(ySix, x) & PartOf(ySeven, x))))\n                                ^\n"}
{"timestamp": "2025-04-29T01:19:30.451294", "premises": ["all x. (Heptalogy(x) <-> (exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(x,yOne,yTwo,yThree,yFour,yFive,ySix,ySeven)))", "DistinctWorks(HarryPotterSeries, WOne, WTwo, WThree, WFour, WFive, WSix, WSeven)", "DistinctWorks(ChroniclesOfNarnia, COne, CTwo, CThree, CFour, CFive, CSix, CSeven)"], "conclusion": "-Heptalogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Heptalogy(x) <-> (exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(x,yOne,yTwo,yThree,yFour,yFive,ySix,ySeven)))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Heptalogy(x) <-> (exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(x,yOne,yTwo,yThree,yFour,yFive,ySix,ySeven)))\n                                 ^\n"}
{"timestamp": "2025-04-29T01:19:43.823666", "premises": ["all x. (Heptalogy(x) <-> Exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(yOne,yTwo,yThree,yFour,yFive,ySix,ySeven) & PartOf(yOne,x) & PartOf(yTwo,x) & PartOf(yThree,x) & PartOf(yFour,x) & PartOf(yFive,x) & PartOf(ySix,x) & PartOf(ySeven,x))", "Exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(yOne,yTwo,yThree,yFour,yFive,ySix,ySeven) & PartOf(yOne,HarryPotterSeries) & PartOf(yTwo,HarryPotterSeries) & PartOf(yThree,HarryPotterSeries) & PartOf(yFour,HarryPotterSeries) & PartOf(yFive,HarryPotterSeries) & PartOf(ySix,HarryPotterSeries) & PartOf(ySeven,HarryPotterSeries)", "Exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(yOne,yTwo,yThree,yFour,yFive,ySix,ySeven) & PartOf(yOne,ChroniclesOfNarnia) & PartOf(yTwo,ChroniclesOfNarnia) & PartOf(yThree,ChroniclesOfNarnia) & PartOf(yFour,ChroniclesOfNarnia) & PartOf(yFive,ChroniclesOfNarnia) & PartOf(ySix,ChroniclesOfNarnia) & PartOf(ySeven,ChroniclesOfNarnia)"], "conclusion": "-Heptalogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Heptalogy(x) <-> Exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(yOne,yTwo,yThree,yFour,yFive,ySix,ySeven) & PartOf(yOne,x) & PartOf(yTwo,x) & PartOf(yThree,x) & PartOf(yFour,x) & PartOf(yFive,x) & PartOf(ySix,x) & PartOf(ySeven,x))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'yOne'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Heptalogy(x) <-> Exists yOne,yTwo,yThree,yFour,yFive,ySix,ySeven. DistinctWorks(yOne,yTwo,yThree,yFour,yFive,ySix,ySeven) & PartOf(yOne,x) & PartOf(yTwo,x) & PartOf(yThree,x) & PartOf(yFour,x) & PartOf(yFive,x) & PartOf(ySix,x) & PartOf(ySeven,x))\n                                ^\n"}
{"timestamp": "2025-04-29T01:23:32.936350", "premises": ["Song(YourWoman) & BandMember(WhiteTown, YourWoman)", "PeakAt(YourWoman, NoOne, UKSinglesChart)", "all x. all y. (PeakAt(x, NoOne, y) -> ExtremelyPopular(x))", "PeakAt(YourWoman, NoOne, Iceland) & PeakAt(YourWoman, NoOne, Israel) & PeakAt(YourWoman, NoOne, Spain)"], "conclusion": "-Exists x. (BandMember(WhiteTown, x) & Popular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n-Exists x. (BandMember(WhiteTown, x) & Popular(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n-Exists x. (BandMember(WhiteTown, x) & Popular(x))\n        ^\n"}
{"timestamp": "2025-04-29T01:24:08.722876", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoals(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoals(x, y, RegularTime) & SameGoals(x, y, ExtraTime) -> NeedPenaltyShootout(x, y))", "UCLFinal(RealMadrid, AtleticoMadrid, TwoZeroOneSix) & SameGoals(RealMadrid, AtleticoMadrid, RegularTime, One)", "UCLFinal(RealMadrid, AtleticoMadrid, 2Zero16) & SameGoals(RealMadrid, AtleticoMadrid, ExtraTime, Zero)"], "conclusion": "NeedPenaltyShootout(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3\n"}
{"timestamp": "2025-04-29T01:24:31.005372", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) & SameGoalsExtraTime(x, y) -> NeedPenaltyShootOut(x, y))", "SameGoalsRegularTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "SameGoalsExtraTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)"], "conclusion": "NeedPenaltyShootOut(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3\n"}
{"timestamp": "2025-04-29T01:24:41.226615", "premises": ["all x. all y. (SoccerTeams(x, y) & SameGoals(x, y, RegularTime, UCLFinal) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeams(x, y) & SameGoals(x, y, RegularTime, UCLFinal) & SameGoals(x, y, ExtraTime, UCLFinal) -> NeedPenaltyShootout(x, y))", "SameGoals(RealMadrid, AtleticoMadrid, RegularTime, UCLFinalTwoZeroOneSix)", "SameGoals(RealMadrid, AtleticoMadrid, ExtraTime, UCLFinalTwoZeroOneSix)"], "conclusion": "NeedPenaltyShootout(RealMadrid, AtleticoMadrid, UCLFinalTwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPenaltyShootout/2, NeedPenaltyShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPenaltyShootout/2, NeedPenaltyShootout/3\n"}
{"timestamp": "2025-04-29T01:24:54.442042", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Match(x, y, UCLFinal) & ScoreSameGoals(x, y, RegularTime) -> NeedExtraTime(x, y, UCLFinal))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Match(x, y, UCLFinal) & ScoreSameGoals(x, y, RegularTime) & ScoreSameGoals(x, y, ExtraTime) -> NeedPenaltyShootout(x, y, UCLFinal))", "ScoredGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, RegularTime, OneGoal) & ScoredGoals(Atl\u00e9ticoMadrid, RealMadrid, TwoZeroOneSixUCLFinal, RegularTime, OneGoal)", "ScoredGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, ExtraTime, ZeroGoals) & ScoredGoals(Atl\u00e9ticoMadrid, RealMadrid, TwoZeroOneSixUCLFinal, ExtraTime, ZeroGoals)"], "conclusion": "-NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 625: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 625: invalid continuation byte\n"}
{"timestamp": "2025-04-29T01:25:04.504706", "premises": ["all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) & SameGoalsExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "SameGoalsRegularTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "SameGoalsExtraTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)"], "conclusion": "-NeedPenaltyShootout(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3\n"}
{"timestamp": "2025-04-29T01:25:15.117204", "premises": ["all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & RegularTimeGoalsEqual(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & RegularTimeGoalsEqual(x, y) & ExtraTimeGoalsEqual(x, y) -> NeedPenaltyShootout(x, y))", "RegularTimeGoalsEqual(RealMadrid, AtleticoMadrid, TwoZeroOneSixUCLFinal)", "ExtraTimeGoalsEqual(RealMadrid, AtleticoMadrid, TwoZeroOneSixUCLFinal)"], "conclusion": "-NeedPenaltyShootout(RealMadrid, AtleticoMadrid, TwoZeroOneSixUCLFinal)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTimeGoalsEqual/3, ExtraTimeGoalsEqual/2, RegularTimeGoalsEqual/3, RegularTimeGoalsEqual/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTimeGoalsEqual/3, ExtraTimeGoalsEqual/2, RegularTimeGoalsEqual/3, RegularTimeGoalsEqual/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTimeGoalsEqual/3, ExtraTimeGoalsEqual/2, RegularTimeGoalsEqual/3, RegularTimeGoalsEqual/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTimeGoalsEqual/3, ExtraTimeGoalsEqual/2, RegularTimeGoalsEqual/3, RegularTimeGoalsEqual/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3\n"}
{"timestamp": "2025-04-29T01:25:26.533152", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameNumberOfGoals(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameNumberOfGoals(x, y, RegularTime) & SameNumberOfGoals(x, y, ExtraTime) -> NeedPenaltyShootOut(x, y))", "UCLFinal(RealMadrid, AtleticoMadrid, TwoZeroOneSix) & SameNumberOfGoals(RealMadrid, AtleticoMadrid, RegularTime, TwoZeroOneSix)", "SameNumberOfGoals(RealMadrid, AtleticoMadrid, ExtraTime, TwoZeroOneSix, ZeroGoals)"], "conclusion": "-NeedPenaltyShootOut(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameNumberOfGoals/5, SameNumberOfGoals/4, SameNumberOfGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameNumberOfGoals/5, SameNumberOfGoals/4, SameNumberOfGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameNumberOfGoals/5, SameNumberOfGoals/4, SameNumberOfGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameNumberOfGoals/5, SameNumberOfGoals/4, SameNumberOfGoals/3, UCLFinal/3, UCLFinal/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3\n"}
{"timestamp": "2025-04-29T01:25:36.983855", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoals(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoals(x, y, RegularTime) & SameGoals(x, y, ExtraTime) -> NeedPenaltyShootOut(x, y))", "SameGoals(RealMadrid, AtleticoMadrid, RegularTime, TwoZeroOneSix)", "SameGoals(RealMadrid, AtleticoMadrid, ExtraTime, TwoZeroOneSix)"], "conclusion": "-NeedPenaltyShootOut(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoals/4, SameGoals/3, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3\n"}
{"timestamp": "2025-04-29T01:25:42.392456", "premises": ["OfficeIn(Ableton, Germany)", "OfficeIn(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. exists cOne. exists cTwo. (OfficeIn(x, cOne) & OfficeIn(x, cTwo) & DifferentCountries(cOne, cTwo) -> MultinationalCompany(x))", "MakesSoftware(Ableton, Music)"], "conclusion": "MultinationalCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'cOne' is an illegal variable name.  Constants may not be quantified.\nall x. exists cOne. exists cTwo. (OfficeIn(x, cOne) & OfficeIn(x, cTwo) & DifferentCountries(cOne, cTwo) -> MultinationalCompany(x))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'cOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'cOne' is an illegal variable name.  Constants may not be quantified.\nall x. exists cOne. exists cTwo. (OfficeIn(x, cOne) & OfficeIn(x, cTwo) & DifferentCountries(cOne, cTwo) -> MultinationalCompany(x))\n              ^\n"}
{"timestamp": "2025-04-29T01:26:03.771512", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))", "Makes(Ableton, MusicSoftware)"], "conclusion": "MultinationalCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T01:26:09.362237", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))", "MakesSoftware(Ableton, MusicSoftware)"], "conclusion": "-HasOffice(Ableton, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T01:26:25.626006", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))", "Makes(Ableton, MusicSoftware)"], "conclusion": "-HasOffice(Ableton, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (y != z & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T01:26:31.178003", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))", "MakesSoftware(Ableton, Music)"], "conclusion": "-HasOffice(Ableton, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (DifferentCountries(y, z) & HasOffice(x, y) & HasOffice(x, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T01:26:52.286649", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. (From(x, India))"], "conclusion": "-(exists x. (From(x, BRICS) & IndianPerson(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
{"timestamp": "2025-04-29T01:27:07.947797", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "-(exists x. (From(x, BRICS) & IndianPerson(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
{"timestamp": "2025-04-29T01:27:23.642749", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "all x. (From(x, BRICS) -> -IndianPerson(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
{"timestamp": "2025-04-29T01:27:55.189723", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
{"timestamp": "2025-04-29T01:33:34.450121", "premises": ["ItalianSurname(Roversi)", "SurnameOf(AlbaRoversi, Roversi)", "SurnameOf(PaoloRoversi, Roversi)", "SurnameOf(RobertoRoversi, Roversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ItalianSurname(SurnameOf(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1\n"}
{"timestamp": "2025-04-29T01:34:39.978897", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-04-29T01:34:43.883561", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-04-29T01:34:51.970920", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-04-29T01:34:55.893619", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-04-29T01:35:31.929759", "premises": ["all x. (Occurs(MonkeypoxVirus, x) -> MayGet(x, Monkeypox))", "exists x. (Animal(x) & Occurs(MonkeypoxVirus, x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> (HasSymptom(x, Fever) & HasSymptom(x, Headache) & HasSymptom(x, MusclePains) & HasSymptom(x, Tiredness)))", "all x. (Person(x) & Has(x, Flu) -> Feels(x, Tiredness))"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-04-29T01:35:39.750719", "premises": ["all x. (OccursIn(x, MonkeypoxVirus) -> MayGet(x, Monkeypox))", "exists x. (Animal(x) & OccursIn(x, MonkeypoxVirus))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> (Symptom(x, Fever) & Symptom(x, Headache) & Symptom(x, MusclePains) & Symptom(x, Tiredness)))", "all x. (Person(x) & Has(x, Flu) -> Feel(x, Tiredness))"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-04-29T01:35:55.779704", "premises": ["all x. (OccursIn(x, MonkeypoxVirus) -> MayGet(x, Monkeypox))", "exists x. (Animal(x) & OccursIn(x, MonkeypoxVirus))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> (SymptomOf(x, Fever) & SymptomOf(x, Headache) & SymptomOf(x, MusclePains) & SymptomOf(x, Tiredness)))", "all x. (Person(x) & HasFlu(x) -> FeelsTired(x))"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-04-29T01:40:28.910477", "premises": ["BestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "all x. (Painting(x) -> (Genre(x, History) | Genre(x, Portrait) | Genre(x, Animal) | Genre(x, Landscape) | Genre(x, StillLife)))"], "conclusion": "all x. (BestKnownArtwork(x) -> -Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-04-29T01:40:49.064424", "premises": ["BestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "all x. (Painting(x) -> (Genre(x, History) | Genre(x, Portrait) | Genre(x, Animal) | Genre(x, Landscape) | Genre(x, StillLife)))"], "conclusion": "all x. (BestKnownArtwork(x) -> -Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-04-29T01:41:53.633589", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists y. (Anxiety(y) & LeadsTo(y, Terror))"], "conclusion": "-(exists z. (Fear(z) & LeadsTo(z, Terror)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:41:56.588271", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:41:59.565019", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-(exists x. (Fear(x) & LeadsTo(x, Terror)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:42:02.510150", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-(exists x. (Fear(x) & LeadsTo(x, Terror)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:42:05.490431", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists y. (Anxiety(y) & LeadsTo(y, Terror))"], "conclusion": "all z. (Fear(z) -> -LeadsTo(z, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:42:12.385290", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligence)", "Contribution(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists! x. (TuringAward(x) & Contribution(x, AnalysisOfAlgorithms))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & Contribution(x, AnalysisOfAlgorithms))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & Contribution(x, AnalysisOfAlgorithms))\n      ^\n"}
{"timestamp": "2025-04-29T01:42:19.263516", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributionsTo(DonaldKnuth, AnalysisOfAlgorithms)", "ContributionsTo(MarvinMinsky, ArtificialIntelligence)", "ContributionsTo(RichardHamming, NumericalMethods)", "ContributionsTo(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))\n      ^\n"}
{"timestamp": "2025-04-29T01:42:26.278726", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributedTo(DonaldKnuth, AnalysisOfAlgorithms)", "ContributedTo(MarvinMinsky, ArtificialIntelligence)", "Researched(RichardHamming, NumericalMethods)", "ContributedTo(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exactlyOne x. (TuringAward(x) & ContributedTo(x, AnalysisOfAlgorithms))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nexactlyOne x. (TuringAward(x) & ContributedTo(x, AnalysisOfAlgorithms))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nexactlyOne x. (TuringAward(x) & ContributedTo(x, AnalysisOfAlgorithms))\n           ^\n"}
{"timestamp": "2025-04-29T01:42:33.316664", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contributions(DonaldKnuth, AnalysisOfAlgorithms)", "Contributions(MarvinMinsky, ArtificialIntelligence)", "Contributions(RichardHamming, NumericalMethods)", "Contributions(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists! x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms))\n      ^\n"}
{"timestamp": "2025-04-29T01:42:43.697752", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributedToAnalysisOfAlgorithms(DonaldKnuth)", "ContributedToAI(MarvinMinsky)", "ResearchedNumericalMethods(RichardHamming)", "ContributedToAI(JohnMcCarthy)"], "conclusion": "exists1 x. (TuringAward(x) & ContributedToAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nexists1 x. (TuringAward(x) & ContributedToAnalysisOfAlgorithms(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nexists1 x. (TuringAward(x) & ContributedToAnalysisOfAlgorithms(x))\n        ^\n"}
{"timestamp": "2025-04-29T01:43:04.325676", "premises": ["Owns(CollegeBoard, SATTest) & DevelopedBy(CollegeBoard, SATTest)", "IntendedToAssess(SATTest, StudentsReadinessForCollege)", "OriginalDesign(SATTest, NotAlignedWithHighSchoolCurricula)", "AdjustmentsMade(TwoZeroOneSixVersionSAT, AlignWithHighSchoolCurriculum)"], "conclusion": "Exists x. (ThirdParty(x) & Owns(x, SATTest))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (ThirdParty(x) & Owns(x, SATTest))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (ThirdParty(x) & Owns(x, SATTest))\n       ^\n"}
{"timestamp": "2025-04-29T01:43:10.762392", "premises": ["OwnedBy(SAT, CollegeBoard) & DevelopedBy(SAT, CollegeBoard)", "IntendedFor(SAT, AssessStudentsReadinessForCollege)", "-(OriginallyDesigned(SAT, AlignWithHighSchoolCurriculum))", "AdjustmentsMade(SATTwoZeroOneSix, AlignWithHighSchoolCurriculum)"], "conclusion": "OwnedBy(SAT, CollegeBoard) & Exists y. (ThirdParty(y) & OwnedBy(SAT, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\nOwnedBy(SAT, CollegeBoard) & Exists y. (ThirdParty(y) & OwnedBy(SAT, y))\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\nOwnedBy(SAT, CollegeBoard) & Exists y. (ThirdParty(y) & OwnedBy(SAT, y))\n                                    ^\n"}
{"timestamp": "2025-04-29T01:43:17.338264", "premises": ["OwnedBy(SAT, CollegeBoard) & DevelopedBy(SAT, CollegeBoard)", "IntendedFor(SAT, Assess(ReadinessForCollege))", "OriginallyDesigned(SAT, NotAlignedWith(HighSchoolCurriculum))", "Adjusted(SAT_2016, AlignWith(HighSchoolCurriculum))"], "conclusion": "OwnedBy(SAT, CollegeBoard) & Exists x. ThirdParty(x) & OwnedBy(SAT, x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nOwnedBy(SAT, CollegeBoard) & Exists x. ThirdParty(x) & OwnedBy(SAT, x)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nOwnedBy(SAT, CollegeBoard) & Exists x. ThirdParty(x) & OwnedBy(SAT, x)\n                                    ^\n"}
{"timestamp": "2025-04-29T01:43:26.679356", "premises": ["OwnedBy(SATTest, CollegeBoard) & DevelopedBy(SATTest, CollegeBoard)", "IntendedToAssess(SATTest, StudentsReadinessForCollege)", "OriginallyDesigned(SATTest, NotAlignedWithHighSchoolCurriculum)", "Adjusted(SATVersionTwoZeroOneSix, AlignWithHighSchoolCurriculum)"], "conclusion": "OwnedBy(SATTest, CollegeBoard) & ExistsThirdParties(Parties, OwnedBy(SATTest, Parties))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OwnedBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OwnedBy/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OwnedBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OwnedBy/2\n"}
{"timestamp": "2025-04-29T01:43:34.771375", "premises": ["OwnedBy(SAT, CollegeBoard) & DevelopedBy(SAT, CollegeBoard)", "IntendedFor(SAT, Assess(StudentsReadinessForCollege))", "OriginallyDesigned(SAT, -AlignedWith(HighSchoolCurriculum))", "AdjustmentsMade(SAT2016, AlignWith(HighSchoolCurriculum))"], "conclusion": "OwnedBy(SAT, CollegeBoard) & Exists x. (ThirdParty(x) & OwnedBy(SAT, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nOwnedBy(SAT, CollegeBoard) & Exists x. (ThirdParty(x) & OwnedBy(SAT, x))\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nOwnedBy(SAT, CollegeBoard) & Exists x. (ThirdParty(x) & OwnedBy(SAT, x))\n                                    ^\n"}
