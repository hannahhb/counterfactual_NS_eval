{"timestamp": "2025-05-02T01:32:48.201430", "premises": ["all x. (Pianist(x) -> Specialized(x, Hieroglyphics, MachineLearning, Badminton))", "all x. (Pianist(x) -> Chef(x))", "exists x. (Chef(x) -> EnjoyMusic(x))", "inspired(X, BookBurning(X, MethodOfStudyingGregorianChant))", "-(all x. (Pianist(x) -> Specialized(x, MachineLearning)))", "ProfessionalBasketballPlayer(MichaelJordan) & American(MichaelJordan)", "playsFor(Jordan, ChicagoBulls) & During(OneNineNineZeros, JordanPlayedForChicagoBulls)", "wonNBAChampionships(Jordan, ChicagoBulls) & Six(Championships)", "all x. (FamousLandmark(x) -> LandmarkInParis(x))", "all x. (Landmark(x) -> MadeOfIron(x))", "all x. (Landmark(x) -> Tall(x, ThreeThreeZero))", "all x. (Wall(x) -> Fortifications(x))", "all x. (Wall(x) -> Long(x, TwoZeroZeroZeroZero))", "all x. (Wall(x) -> TouristDestination(x))", "all x. (SuspensionBridge(x) -> Crosses(x, RiverThames, CentralLondon))", "all x. (Bridge(x) -> BuiltIn(x, OneEightSevenNine))", "all x. (Bridge(x) -> Long(x, TwoFourZero))", "all x. (Pyramids(x) -> PyramidsInGiza(x))", "all x. (Pyramid(x) -> Largest(x, GreatPyramidOfGiza))", "all x. (Pyramid(x) -> BuiltAsTomb(x, Khufu))"], "conclusion": "all x. (Pyramid(x) -> Oldest(x, GreatPyramidOfGiza))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Specialized/2, Specialized/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Specialized/2, Specialized/4", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Specialized/2, Specialized/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Specialized/2, Specialized/4\n"}
{"timestamp": "2025-05-02T01:33:17.804886", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:34:10.200022", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid)", "LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServeIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)"], "conclusion": "FolkSong(Inception)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:34:26.165297", "premises": ["exists x. (Reptile(x) & Explodes(x, people))", "Reptile(Stonefish)", "(Stonefish & Explodes(Stonefish, people) & SteppedOn(Stonefish))", "exists x. (Stonefish explodes on x & ~(Treats(x)) & Death(x))", "Treats(stonefish) & (HeatRemoval(stonefish) | Antivenom(stonefish))"], "conclusion": "exists x. (Reptile(x) & Explodes(x, people) & ~(Treats(x))) & Death(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'explodes'.  Expected token ')'.\nexists x. (Stonefish explodes on x & ~(Treats(x)) & Death(x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'explodes'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'explodes'.  Expected token ')'.\nexists x. (Stonefish explodes on x & ~(Treats(x)) & Death(x))\n                     ^\n"}
{"timestamp": "2025-05-02T01:34:29.918949", "premises": ["exists x. (Reptile(x) & (ExplodesOn(x) & Not(x=Stonefish)))", "Reptile(Stonefish)", "ExplodesOn(Stonefish, WhenSteppedOn)", "Not(x=Stonefish) & if (ExplodesOn(x, WhenSteppedOn) & Not(x=Stonefish)) then (CausesDeathTo(x))", "Treat(x, StonefishExplosion) & (RemovesHeatTo(x) | UsesAntivenom(x))"], "conclusion": "exists x. (CanCauseDeathTo(x) & Not(x=Stonefish) & Reptile(x) & Not(x=Stonefish))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nexists x. (CanCauseDeathTo(x) & Not(x=Stonefish) & Reptile(x) & Not(x=Stonefish))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nexists x. (CanCauseDeathTo(x) & Not(x=Stonefish) & Reptile(x) & Not(x=Stonefish))\n                                     ^\n"}
{"timestamp": "2025-05-02T01:34:35.382748", "premises": ["\\_-exists x. (Reptile(x) & ExplodesOn(x, People))", "Reptile(Stonefish)", "ExplodesOn(Stonefish, People, SteppedOn)", "\\_\\_exists x. (StonefishExplodesOn(x, People) & \\_\\_not treated(x) & CausesDeath(x))", "\\_\\_exists x. (StonefishExplodesOn(x, People) & \\_\\_Treated(x, HeatRemoval) v \\_\\_Treated(x, Antivenom))"], "conclusion": "\\_\\_exists x. (Reptile(x) & ExplodesOn(x, People) & \\_\\_not treated(x) & CausesDeath(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'_' is an illegal variable name.  Constants may not be abstracted.\n\\_\\_exists x. (Reptile(x) & ExplodesOn(x, People) & \\_\\_not treated(x) & CausesDeath(x))\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '_' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '_' is an illegal variable name.  Constants may not be abstracted.\n\\_\\_exists x. (Reptile(x) & ExplodesOn(x, People) & \\_\\_not treated(x) & CausesDeath(x))\n ^\n"}
{"timestamp": "2025-05-02T01:35:16.398130", "premises": ["all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "ContributeToCountry(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))"], "conclusion": "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:35:20.240005", "premises": ["all x. (Reptile(x) -> (Explodes(x) | -Explodes(x)))", "Reptile(Stonefish)", "all x. (Reptile(x) & Explodes(x) -> ExplodesOn(x, Step))", "all x. (Reptile(x) & Explodes(x) -> Causes(x, Death))", "all x. (Reptile(x) & Explodes(x) -> (TreatWith(x, Heat_|_Antivenom) | -TreatWith(x, Heat_|_Antivenom))"], "conclusion": "all x. (Reptile(x) & Explodes(x) -> (Causes(x, Death) | -TreatWith(x, Heat_|_Antivenom)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nall x. (Reptile(x) & Explodes(x) -> (Causes(x, Death) | -TreatWith(x, Heat_|_Antivenom)))\n                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nall x. (Reptile(x) & Explodes(x) -> (Causes(x, Death) | -TreatWith(x, Heat_|_Antivenom)))\n                                                                           ^\n"}
{"timestamp": "2025-05-02T01:35:22.958883", "premises": ["all x. (Reptile(x) -> ExplodesOn(x, People))", "Stonefish -> Reptile", "all x. (Reptile(x) & Exposes(x, People) -> ExplodesOn(x, People))", "all x. (ExplodesOn(y, x) & NotTreated(x) -> Death(x))"], "conclusion": "all x. (ExplodesOn(y, x) -> Treat(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reptile/0, Reptile/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Reptile/0, Reptile/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reptile/0, Reptile/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Reptile/0, Reptile/1\n"}
{"timestamp": "2025-05-02T01:35:43.479733", "premises": ["exists x. (Reptile(x) & Explodes(x, people))", "Reptile(Stonefish)", "exists x. (Reptile(x) & Explodes(x, people) & LikelyToExplode(x, people, step_on))", "exists x. (Reptile(x) & Explodes(x, people) & LikelyToExplode(x, people, step_on) & (Not(Treated(x, explosion)) | Death(x)))", "exists x. ((Reptile(x) & Explodes(x, people)) & (HeatRemoval(x) | Antivenom(x)))", "Death(x) & exists x. (Reptile(x) & Explodes(x, people) & LikelyToExplode(x, people, step_on) & (Not(Treated(x, explosion)) | Death(x)))", "all x. (HasLegs(x) & (MoreThanTwoLegs(x) -> Walk(x))", "all x. (Animal(x) & MoreThanTwoLegs(x))", "all x. (Animal(x) & MoreThanTwoLegs(x) & Walk(x))", "all x. (Airplane(x) -> Wings(x))", "all x. (Jet(x) -> Airplane(x))", "exists x. (Jet(x) & Supersonic(x))", "all x. ((Jet(x) | Supersonic(x)) & Wings(x))", "all x. ((Jet(x) & Supersonic(x)) -> Wings(x))", "all x. (WorksAt(x, Hospital) -> HealthcareWorker(x))", "all x. (WorksAt(x, Hospital) -> EmployeeOf(x, Hospital))", "all x. (EmployeeOf(x, Hospital) -> HealthcareWorker(x))", "all x. (Dog(x) -> Fur(x))", "all x. (Poodle(x) -> Dog(x))", "all x. (Dog(x) -> Tail(x))"], "conclusion": "all x. ((Poodle(x) | Dog(x)) -> Tail(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (HasLegs(x) & (MoreThanTwoLegs(x) -> Walk(x))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (HasLegs(x) & (MoreThanTwoLegs(x) -> Walk(x))\n                                                    ^\n"}
{"timestamp": "2025-05-02T01:35:57.827008", "premises": ["all x. (Bear(x) & In(x, Desert) -> NotAnimal(x))", "exists x. (Bear(x) & In(x, Desert))"], "conclusion": "-Exists(x. (Bear(x) & NotAnimal(x))) & Exists(x. (Bear(x) & Animal(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-Exists(x. (Bear(x) & NotAnimal(x))) & Exists(x. (Bear(x) & Animal(x)))\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-Exists(x. (Bear(x) & NotAnimal(x))) & Exists(x. (Bear(x) & Animal(x)))\n         ^\n"}
{"timestamp": "2025-05-02T01:35:59.415161", "premises": ["all x. (Bear(x) & InDesert(x) -> ~Animal(x))", "exists x. (Bear(x) & InDesert(x))"], "conclusion": "~(exists x. (Bear(x) & Animal(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Bear(x) & InDesert(x)) -> ~Animal(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Bear(x) & InDesert(x)) -> ~Animal(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T01:36:02.007343", "premises": ["for all x. (Bear(x) & InDesert(x) -> NotAnimal(x))", "for all x. (Bear(x) & InDesert(x) -> True)"], "conclusion": "for all x. (Bear(x) -> NotAnimal(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.\nfor all x. (Bear(x) -> NotAnimal(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.\nfor all x. (Bear(x) -> NotAnimal(x))\n    ^\n"}
{"timestamp": "2025-05-02T01:37:29.314166", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((A_worksheet_is_paper) | (_A_worksheet_is_environment_friendly))", "-Dispensable(A_worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. ((Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:37:47.503740", "premises": ["all x. (Woodware(x) -> Biodegradable(x) iff EnvironmentFriendly(x))", "all x. (Worksheet(x) -> (Paper(x) | EnvironmentFriendly(x)))", "all x. (Paper(x) -> Woodware(x) iff Biodegradable(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Worksheet(x) -> Biodegradable(x) iff (Paper(x) | EnvironmentFriendly(x)))", "-Dispensable(Worksheet)"], "conclusion": "-EnvironmentFriendly(Worksheet)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Worksheet/1, Worksheet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Worksheet/1, Worksheet/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Worksheet/1, Worksheet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Worksheet/1, Worksheet/0\n"}
{"timestamp": "2025-05-02T01:38:26.880682", "premises": ["all x. (Bird(x) -> -Fur(x))", "all x. (Dog(x) -> Bird(x))", "exists x. (Bird(x) & -Fur(x)) & exists y. (Dog(y) & Fur(y)) & (x=y)", "all x. (Taxpayer(x) -> ContributesTo(x, Country))", "all x. (WorksFor(x, GovernmentDepartment) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorksFor(x, GovernmentDepartment))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "all x. (Taxpayer(x) -> ContributesTo(x, Country))", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "Luke can make cookies, scrambled eggs, and muffins, but not pasta.", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develop(eTS, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develop(eTS, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "exists x. (Musical(x) & OnBroadway(x)) & not(Film(x))"], "conclusion": "Actor(DaveedDiggs)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:38:36.670273", "premises": ["all x. (Bird(x) -> -Fur(x))", "all x. (Dog(x) -> Bird(x))", "exists x. ((Bird(x) & Fur(x)) & Dog(x))", "all x. (Moon(x) -> -Bigger(x, Sun))", "all x. (Sun(x) -> Bigger(Moon, x))", "all x. (Near(x, Earth) -> Moon(x))", "Bigger(Sun, Moon)", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> PoweredBy(x, Something))", "all x. (Bicycle(x) -> Vehicle(x))", "all x. (Vehicle(x) -> PoweredBy(x, Something))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Dog(x) -> Fur(x))", "all x. (Bird(x) -> Feathers(x))", "all x. (Mammal(x) -> Fur(x))"], "conclusion": "all x. (Mammal(x) -> -Feathers(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Moon/1, Moon/0, Sun/1, Sun/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Moon/1, Moon/0, Sun/1, Sun/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Moon/1, Moon/0, Sun/1, Sun/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Moon/1, Moon/0, Sun/1, Sun/0\n"}
{"timestamp": "2025-05-02T01:38:41.113931", "premises": ["all x. Ambiortus(x) -> MammalGenus(x)", "Ambiortus", "Ambiortus Dementjevi"], "conclusion": "Ambiortus Dementjevi", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Dementjevi'.\nAmbiortus Dementjevi\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Dementjevi'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Dementjevi'.\nAmbiortus Dementjevi\n          ^\n"}
{"timestamp": "2025-05-02T01:38:45.724378", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "all x. (AmbiortusDementjevi(x) -> SpeciesOf(x, Ambiortus))", "all x. (LivesOn(x, Mars) -> AmbiortusDementjevi(x))", "all x. (DiscovererOf(x, Ambiortus) -> Adele(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> NewMammalGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T01:38:49.279545", "premises": ["all x. (Discoverer(Adele, x) & MammalGenus(x) -> True)", "all x. (Genus(x) & PrehistoricMammal(x) -> Ambiortus)", "all x. (Species(x) & Ambiortus(x) -> Ambiortus Dementjevi)", "all x. (LivedOn(x, Mars) & Ambiortus Dementjevi -> True)"], "conclusion": "all x. (Discoverer(x, Ambiortus) & Adele -> True)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Dementjevi'.  Expected token ')'.\nall x. (Species(x) & Ambiortus(x) -> Ambiortus Dementjevi)\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Dementjevi'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Dementjevi'.  Expected token ')'.\nall x. (Species(x) & Ambiortus(x) -> Ambiortus Dementjevi)\n                                               ^\n"}
{"timestamp": "2025-05-02T01:38:53.796824", "premises": ["all x. (Genus(x) -> PrehistoricMammal(x))", "all x. (Species(x) -> Ambiortus(x))", "all x. (LivedOn(x, Mars) -> Species(x, AmbiortusDementjevi))", "all x. (Discoverer(x, Ambiortus) -> Adele(x))", "all x. (Genus(x) -> NewMammalGenus(x))"], "conclusion": "all x. (Discoverer(x, Ambiortus) -> Discovered(x, NewMammalGenus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Species/2, Species/1, NewMammalGenus/1, NewMammalGenus/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Species/2, Species/1, NewMammalGenus/1, NewMammalGenus/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Species/2, Species/1, NewMammalGenus/1, NewMammalGenus/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Species/2, Species/1, NewMammalGenus/1, NewMammalGenus/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T01:39:01.273460", "premises": ["all x. (PrehistoricMammalGenus(x) -> Ambiortus(x))", "all x. (Ambiortus(x) -> SpeciesOfAmbiortus(x))", "all x. (LivesOn(x, Mars) -> SpeciesOfAmbiortus(x))", "all x. (DiscovererOf(x, Ambiortus) -> Adele(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> NewMammalGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T01:39:04.337045", "premises": ["all x. (Ambiortus(x) -> MammalGenus(x))", "all x. (Ambiortus(x) -> AmbiortusDementjevi(x))", "all x. (Mars(x) & LivedOnMars(x, AmbiortusDementjevi))", "all x. (DiscovererOf(x, Ambiortus) -> Adele(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> NewMammalGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T01:39:07.316430", "premises": ["all x. (Ambiortus(x) -> MammalGenus(x))", "all x. (Ambiortus(x) -> Species(x, Ambiortus_Dementjevi))", "all x. (LivedOn(x, Mars) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> Adele(x))"], "conclusion": "all x. (Discoverer(x, Adele) -> NewMammalGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-02T01:39:09.702182", "premises": ["exists x. (Discoverer(Adele, x) & MammalGenus(x))", "all x. (MammalGenus(x) -> Ambiortus(x))", "all x. (Lived(x, Mars) -> AmbiortusDementjevi(x))"], "conclusion": "-(exists x. (SpeciesOf(x, Ambiortus) & (x", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-(exists x. (SpeciesOf(x, Ambiortus) & (x\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-(exists x. (SpeciesOf(x, Ambiortus) & (x\n                                         ^\n"}
{"timestamp": "2025-05-02T01:39:13.591756", "premises": ["all x. (PrehistoricMammalGenus(x) -> Ambiortus(x))", "all x. (SpeciesOf(x, Ambiortus) -> AmbiortusDementjevi(x))", "all x. (LivesIn(x, Mars) -> AmbiortusDementjevi(x))"], "conclusion": "discovererOf(Adele, Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T01:39:21.898450", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "all x. (Ambiortus(x) -> AmbiortusDementjevi(x))", "all x. (LivedOn(x, AmbiortusDementjevi) -> Mars(x))", "all x. (DiscovererOf(x, Ambiortus) -> Adele(x))"], "conclusion": "all x. (LivedOn(x, AmbiortusDementjevi) -> Adele(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T01:39:47.496882", "premises": ["all x. (Ambiortus(x) -> Mammal(x))", "all x. (Ambiortus(x) -> Species(x))", "all x. (LivesOn(x, Mars) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> Adele(x))"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-02T01:40:41.382211", "premises": ["all x. (FortTiconderoga(x) -> FortCarillon(x))", "all x. (ChrisHemsworth(x) -> Destroyed(x, FortCarillon))", "all x. (FortCarillon(x) -> In(x, NewFrance))", "all x. (-In(x, Europe)) & all x. (NewFrance(x) -> x)", "all x. (ChrisHemsworth(x) -> Destroyed(x, FortInNewFrance))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> HaveFur(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Human(x) -> HaveHair(x))"], "conclusion": "all x. (Mammal(x) -> HaveHair(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T01:41:04.600236", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon)", "FortCarillon(x) -> In(x, NewFrance)", "NewFrance(x) -> -In(x, Europe)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon) & In(x, NewFrance)", "FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon)", "FortCarillon(x) -> In(x, NewFrance)", "NewFrance(x) -> -In(x, Europe)", "FortTiconderoga(x) -> BuiltBy(x, French)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon) & In(x, NewFrance) & BuiltBy(FortTiconderoga, French)", "FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon)", "FortCarillon(x) -> In(x, NewFrance)", "NewFrance(x) -> -In(x, Europe)", "FortTiconderoga(x) -> BuiltBy(x, French)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon) & In(x, NewFrance) & BuiltBy(FortTiconderoga, French)", "FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon)", "FortCarillon(x) -> In(x, NewFrance)", "NewFrance(x) -> -In(x, Europe)", "FortTiconderoga(x) -> BuiltBy(x, French)", "FortTiconderoga(x) -> OnShoreOf(x, LakeGeorge)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon) & In(x, NewFrance) & BuiltBy(FortTiconderoga, French) & OnShoreOf(FortTiconderoga, LakeGeorge)", "FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroys(x, FortCarillon)", "FortCarillon(x) -> In(x, NewFrance)", "NewFrance(x) -> -In(x, Europe)", "FortTiconderoga(x) -> BuiltBy(x, French)", "FortTiconderoga(x) -> OnShoreOf(x, LakeGeorge)", "FortTiconderoga(x) -> PopularTouristAttraction(x)"], "conclusion": "ChrisHemsworth(x) -> Destroys(x, FortCarillon) & In(x, NewFrance) & BuiltBy(FortTiconderoga, French) & OnShoreOf(FortTiconderoga, LakeGeorge) & PopularTouristAttraction(FortTiconderoga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0, NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0, NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0, NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0, NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-02T01:41:19.579660", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:41:22.294064", "premises": ["FortTiconderoga(x) = FortCarillon(x)", "ChrisHemsworth(x) = Destroy(x, FortCarillon)", "FortCarillon(x) = LocatedIn(x, NewFrance)", "NewFrance(x) = NotIn(x, Europe)"], "conclusion": "ChrisHemsworth(x) = Destroy(x, FortCarillon) & FortCarillon(x) = LocatedIn(x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-02T01:41:28.428985", "premises": ["all x. (Fort(x) -> FortTiconderoga(x) | FortCarillon(x))", "destroys(ChrisHemsworth, FortCarillon)", "all x. (Fort(x) -> For(x, NewFrance))"], "conclusion": "For(NewFrance, notIn(NewFrance, Europe))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-02T01:41:35.427584", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "Destroyed(ChrisHemsworth, FortCarillon)", "FortCarillon(x) -> locatedIn(x, NewFrance)", "notIn(NewFrance, Europe)"], "conclusion": "Destroyed(ChrisHemsworth, FortInNewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-02T01:41:38.016591", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroyed(FortCarillon(x))", "FortCarillon(x) -> LocatedIn(x, NewFrance)", "NewFrance(x) -> NotIn(x, Europe)"], "conclusion": "ChrisHemsworth(x) -> Destroyed(FortIn(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FortCarillon/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FortCarillon/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FortCarillon/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FortCarillon/1\n"}
{"timestamp": "2025-05-02T01:41:40.502189", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "ChrisHemsworth(x) -> Destroyes(x, FortCarillon)", "FortCarillon(x) -> LocatedIn(x, NewFrance)", "NewFrance(x) -> NotIn(x, Europe)"], "conclusion": "ChrisHemsworth(x) -> Destroyes(x, FortIn(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-02T01:42:18.640806", "premises": ["All x. (Biodegradable(x) -> EnvironmentFriendly(x))", "All x. (Woodware(x) -> Biodegradable(x))", "All x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "All x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)"], "conclusion": "-Biodegradable(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nAll x. (Biodegradable(x) -> EnvironmentFriendly(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nAll x. (Biodegradable(x) -> EnvironmentFriendly(x))\n    ^\n"}
{"timestamp": "2025-05-02T01:42:21.768485", "premises": ["all x. (Paris(x) -> UnitedStatesOfAmerica(x))", "all x. (UnitedStatesOfAmerica(x) -> SouthAmerica(x))", "all x. (SouthAmerica(x) -> EasternHemisphereOfTheEarth(x))", "all x. (Paris(x) -> HighlyDevelopedCity(x)) & all x. (HighlyDevelopedCity(x) -> NoOneLivesIn(x))"], "conclusion": "all x,y,z. (In(x,y) & In(y,z) -> In(x,z))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x,y,z. (In(x,y) & In(y,z) -> In(x,z))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x,y,z. (In(x,y) & In(y,z) -> In(x,z))\n     ^\n"}
{"timestamp": "2025-05-02T01:42:31.397995", "premises": ["all x. (Paris(x) & In(x, UnitedStatesOfAmerica) & In(x, France))", "all x. (UnitedStatesOfAmerica(x) & PartOf(x, SouthAmerica))", "all x. (SouthAmerica(x) & In(x, EasternHemisphereOfEarth))", "all x. (Paris(x) & HighlyDevelopedCity(x) & NotLives(x))", "all x. (In(x, PlaceA) & In(x, PlaceB) & In(x, PlaceC) -> In(x, PlaceC))"], "conclusion": "all x. (HighlyDevelopedCity(x) & NotLives(x) & In(x, EasternHemisphereOfEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthAmerica/1, SouthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthAmerica/1, SouthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthAmerica/1, SouthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthAmerica/1, SouthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0\n"}
{"timestamp": "2025-05-02T01:42:41.128085", "premises": ["all x. (TelevisionSeries(x) & British(x) & ScienceFictionThriller(x))", "exists x. (TelevisionSeries(x) & Vanished(x, TwoZeroOneSix) & Westworld(x))", "all x. ((TelevisionSeries(x) & Westworld(x)) -> -(Existed(OneNineSevenThree) & Film(x) & WrittenBy(OneNineSevenThree, MichaelCrichton) & ActedIn(OneNineSevenThree, MichaelCrichton)))", "all x. (Film(x) & 1973(x) & Robots(x) & Malfunction(x) & BeginHealing(x) & HumanVisitors(x))"], "conclusion": "all x. ((Actor(x) & MichaelCrichton(x)) & (Film(x) & Robots(x) & Malfunction(x) & BeginHealing(x) & HumanVisitors(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0\n"}
{"timestamp": "2025-05-02T01:43:06.751636", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))"], "conclusion": "all x. (", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (\n        ^\n"}
{"timestamp": "2025-05-02T01:43:11.430580", "premises": ["all x. (TVSeries(x) & British(x) & ScienceFictionThriller(x))", "all x. (TVSeries(x) & Vanished(x) & Year(x, TwoZeroOneSix) & Channel(x, HBO))", "all x. (TVSeries(x) & Unrelated(x, OneNineSevenThree_film) & WrittenBy(x, MichaelCrichton) & ActsIn(x, MichaelCrichton))", "all x. (Film(x) & Year(x, OneNineSevenThree) & AboutRobots(x) & Malfunction(x) & BeginHealing(x) & HumanVisitors(x))"], "conclusion": "all x. (Actor(x) & Films(x, OneNineSevenThree_film) & ActedIn(x, OneNineSevenThree_film) & MalfunctioningRobots(x) & BeganHealing(x) & HumanVisitors(x) & MichaelCrichton(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MichaelCrichton/1, MichaelCrichton/0\n"}
{"timestamp": "2025-05-02T01:43:39.019666", "premises": ["all x. (TVSeries(x) & Westworld(x) & British(x) & ScienceFictionThriller(x))", "all x. (TVSeries(x) & WestworldVanishes(x) & In(x, TwoZeroOneSix) & HBO(x))", "all x. (TVSeries(x) & Westworld(x) & UnrelatedTo(x, Film(x) & MichaelCrichton(x) & MalfunctioningRobots(x) & HealingHumanVisitors(x))"], "conclusion": "all x. (Film(x) & 1973(x) & Westworld(x) & MichaelCrichton(x) & MalfunctioningRobots(x) & HealingHumanVisitors(x) & WrittenBy(x, MichaelCrichton) & ActedBy(x, MichaelCrichton))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. (TVSeries(x) & Westworld(x) & UnrelatedTo(x, Film(x) & MichaelCrichton(x) & MalfunctioningRobots(x) & HealingHumanVisitors(x))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. (TVSeries(x) & Westworld(x) & UnrelatedTo(x, Film(x) & MichaelCrichton(x) & MalfunctioningRobots(x) & HealingHumanVisitors(x))\n                                                            ^\n"}
{"timestamp": "2025-05-02T01:50:48.812131", "premises": ["all x. ((Planet(x) & In(x, Guilin)) -> ERS(x))", "~(exists x. ((Planet(x) & In(x, Guilin)) & (x=Yangshuo)))", "ERS(Xiufeng) & ERS(Xiangshan) & ERS(Diecai) & ERS(Qixing)", "all x. ((Planet(x) & In(x, Guilin)) -> ERS(x))", "~(exists x. ((Planet(x) & In(x, Guilin)) & (x=Yangshuo)))"], "conclusion": "ERS(Xiufeng) & ERS(Xiangshan) & ERS(Diecai) & ERS(Qixing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T01:51:28.467112", "premises": ["all x. (Xiufeng(x) & Planet(x) & In(x, Guilin) & (Xiangshan(x) & Planet(x) & In(x, Guilin)) & (Diecai(x) & Planet(x) & In(x, Guilin)) & (Qixing(x) & Planet(x) & In(x, Guilin))", "all x. (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x) & NotPlanet(y) & NotIn(y, Guilin) & In(y, Guilin) & Yangshuo(y))"], "conclusion": "all x. (Xiufeng(x) & Planet(x) & In(x, Guilin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Xiufeng(x) & Planet(x) & In(x, Guilin) & (Xiangshan(x) & Planet(x) & In(x, Guilin)) & (Diecai(x) & Planet(x) & In(x, Guilin)) & (Qixing(x) & Planet(x) & In(x, Guilin))\n                                                                                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Xiufeng(x) & Planet(x) & In(x, Guilin) & (Xiangshan(x) & Planet(x) & In(x, Guilin)) & (Diecai(x) & Planet(x) & In(x, Guilin)) & (Qixing(x) & Planet(x) & In(x, Guilin))\n                                                                                                                                                                               ^\n"}
{"timestamp": "2025-05-02T01:52:12.504681", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(eTS, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(eTS, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:53:26.957113", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendMostOfTimeOnSports(x))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendMostOfTimeOnSports(x))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendMostOfTimeOnSports(Amy) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, ScrambledEggs) & CanMake(x, Pasta)) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, ScrambledEggs) & CanMake(x, Pasta) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Muffins) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "all x. (CanMake(x, Cookies) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))"], "conclusion": "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T01:54:03.124796", "premises": ["all x. ((Park(x) & In(x, NYC)) -> MetropolitanParkofArt(x))", "all x. ((Park(x) & In(x, NYC)) -> WhitneyParkofAmericanArt(x))", "all x. ((Park(x) & In(x, NYC)) -> MoMA(x))", "all x. ((Park(x) & In(x, NYC)) -> -ByzantineIslamicArt(x))", "all x. ((Park(x) & In(x, NYC)) -> -AmericanArt(x))", "all x. ((Park(x) & In(x, NYC)) -> -ByzantineIslamicArt(x))", "WeatherForecast(x) -> TemperatureMeasurements(x, A) & TemperatureMeasurements(x, B) & TemperatureMeasurements(x, C)", "TemperatureMeasurements(A, OneEightDotSeven)", "TemperatureMeasurements(B, OneNineDotFour)", "TemperatureMeasurements(C, TwoZeroDotTwo)", "not Determined(WeatherForecast(x))", "TheoryOfRelativity(x) -> Developer(x, AlbertEinstein)", "Developer(x, AlbertEinstein) -> Basis(x, E=mc^Two)", "Explanation(x, LawsOfSpaceAndTime) -> TheoryOfRelativity(x)", "Description(x, LawsOfGravity) -> TheoryOfRelativity(x)", "Explanation(x, BehaviorOfLight) -> TheoryOfRelativity(x)", "ScientificallyProven(x) -> TheoryOfRelativity(x)", "GCD(x, y) -> EuclideanAlgorithm(x, y)", "GCD(x, y) -> Max(Divisor(x, y), Divisor(y, x))", "EuclideanAlgorithm(x, y) -> IterativeSubtraction(x, y)", "EuclideanAlgorithm(x, y) -> Cryptography(x, y)", "EuclideanAlgorithm(x, y) -> NumberTheory(x, y)", "EuclideanAlgorithm(x, y) -> MathematicalAlgorithm(x, y)", "PythagoreanTheorem(x) -> RightTriangle(x) & (Hypotenuse(x) ^ 2) = (SideA(x) ^ 2) + (SideB(x) ^ 2)", "PythagoreanTheorem(x) -> MathematicalPrinciple(x)", "PythagoreanTheorem(x) -> EuclideanAlgorithm(x, y)", "PythagoreanTheorem(x) -> Geometry(x)", "PythagoreanTheorem(x) -> Trigonometry(x)"], "conclusion": "PythagoreanTheorem(x) -> FundamentalConcept(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nDeveloper(x, AlbertEinstein) -> Basis(x, E=mc^Two)\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nDeveloper(x, AlbertEinstein) -> Basis(x, E=mc^Two)\n                                          ^\n"}
{"timestamp": "2025-05-02T01:54:13.827186", "premises": ["exists x. (Park(x) & In(x, NYC) & ParkOfModernArt(x))", "exists x. (Park(x) & In(x, NYC) & MetropolitanParkOfArt(x) & (-ByzantineArt(x) & -IslamicArt(x)))", "exists x. (Park(x) & In(x, NYC) & WhitneyParkOfAmericanArt(x) & (-AmericanArt(x)))"], "conclusion": "exists x. (Park(x) & In(x, NYC) & Excludes(x, ByzantineArt) & Excludes(x, IslamicArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0\n"}
{"timestamp": "2025-05-02T01:54:20.149831", "premises": ["all x. (Park(x) & In(x, NYC)) & (MetropolitanArtPark(x) | ParkOfModernArt(x))", "all x. (Park(x) & In(x, NYC)) & (WhitneyArtPark(x) | ParkOfModernArt(x))", "all x. (Park(x) & In(x, NYC)) & (MoMA(x) | MetropolitanArtPark(x) | WhitneyArtPark(x))", "all x. (Park(x) & In(x, NYC)) & (MetropolitanArtPark(x) & ~(ByzantineArt(x) | IslamicArt(x)))", "all x. (Park(x) & In(x, NYC)) & (WhitneyArtPark(x) & ~(AmericanArt(x)))"], "conclusion": "all x. (Park(x) & In(x, NYC)) & (ByzantineArt(x) | IslamicArt(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nall x. (Park(x) & In(x, NYC)) & (MetropolitanArtPark(x) & ~(ByzantineArt(x) | IslamicArt(x)))\n                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nall x. (Park(x) & In(x, NYC)) & (MetropolitanArtPark(x) & ~(ByzantineArt(x) | IslamicArt(x)))\n                                                                            ^\n"}
{"timestamp": "2025-05-02T01:54:27.213032", "premises": ["Park(MoMA) & In(MoMA, NYC)", "Park(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NYC) & ExcludedFrom(Byzantine&IslamicArt, MetropolitanParkOfArt)"], "conclusion": "Park(WhitneyParkOfAmericanArt) & In(WhitneyParkOfAmericanArt, NYC) & ExcludedFrom(AmericanArt, WhitneyParkOfAmericanArt)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPark(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NYC) & ExcludedFrom(Byzantine&IslamicArt, MetropolitanParkOfArt)\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPark(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NYC) & ExcludedFrom(Byzantine&IslamicArt, MetropolitanParkOfArt)\n                                                                                     ^\n"}
{"timestamp": "2025-05-02T01:54:31.684956", "premises": ["TEXT: The Metropolitan Park of Art excludes Byzantine and Islamic Art.", "TEXT: Whitney Park of American Art excludes American art.", "TEXT: A park in NYC excludes American art."], "conclusion": "</EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nTEXT: The Metropolitan Park of Art excludes Byzantine and Islamic Art.\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nTEXT: The Metropolitan Park of Art excludes Byzantine and Islamic Art.\n      ^\n"}
{"timestamp": "2025-05-02T01:54:50.801935", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T02:00:13.503047", "premises": ["Park(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NYC)", "Park(WhitneyParkOfAmericanArt) & In(WhitneyParkOfAmericanArt, NYC)", "Park(MoMA) & In(MoMA, NYC)", "excludes(Byzantine, MetropolitanParkOfArt) & excludes(Islamic, MetropolitanParkOfArt)", "excludes(American, WhitneyParkOfAmericanArt)"], "conclusion": "all x. forall park in NYC. excludes(park, American)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'park' is an illegal variable name.  Constants may not be quantified.\nall x. forall park in NYC. excludes(park, American)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'park' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'park' is an illegal variable name.  Constants may not be quantified.\nall x. forall park in NYC. excludes(park, American)\n              ^\n"}
{"timestamp": "2025-05-02T02:00:18.972728", "premises": ["all x. (Plant(x) & EggLaying(x) -> either Bird(x) or Echidna(x))", "all x. (Bird(x) -> not Reptile(x))", "all x. (Echidna(x) -> not Reptile(x))", "all x. (Mammal(x) -> not Invertebrate(x))", "all x. (Animal(x) -> either Vertebrate(x) or Invertebrate(x))", "all x. (Reptile(x) -> Plant(x))", "Reptile(Geese)", "all x. (EggLaying(x) -> x is a bird or x is a echidna)", "all x. ((EggLaying(x) & not Bird(x)) & (not EggLaying(x) & not Echidna(x)))"], "conclusion": "all x. ((Bird(x) & not Reptile(x)) & EggLaying(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Bird'.  Expected token ')'.\nall x. (Plant(x) & EggLaying(x) -> either Bird(x) or Echidna(x))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Bird'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Bird'.  Expected token ')'.\nall x. (Plant(x) & EggLaying(x) -> either Bird(x) or Echidna(x))\n                                          ^\n"}
{"timestamp": "2025-05-02T02:00:23.473231", "premises": ["all x. (Plant(x) & EggLays(x) -> (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "EggLays(Geese)", "EggLays(Grebes)"], "conclusion": "all x. ((Not(Grebe(x) = Bird(x)) & (Not(Grebe(x) = Echidna(x)))) & EggLays(Grebes))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. ((Not(Grebe(x) = Bird(x)) & (Not(Grebe(x) = Echidna(x)))) & EggLays(Grebes))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. ((Not(Grebe(x) = Bird(x)) & (Not(Grebe(x) = Echidna(x)))) & EggLays(Grebes))\n                      ^\n"}
{"timestamp": "2025-05-02T02:01:16.657524", "premises": ["all x. ((Plant(x) & LaysEggs(x)) -> ((TypeOfPlant(x) = Bird) | (TypeOfPlant(x) = Echidna)))", "all x. ((TypeOfAnimal(x) = Bird) -> ((Animal(x) != Reptile))", "all x. ((TypeOfAnimal(x) = Echidna) -> ((Animal(x) != Reptile))", "all x. ((TypeOfAnimal(x) = Mammal) -> ((Animal(x) != Invertebrate)))", "all x. ((TypeOfAnimal(x) = Animal) -> ((Animal(x) = Vertebrate) | (Animal(x) = Invertebrate)))", "all x. ((TypeOfAnimal(x) = Reptile) -> (Plant(x)))", "all x. ((TypeOfAnimal(x) = Geese) -> (LaysEggs(x)))", "all x. ((TypeOfAnimal(x) = Grebes) -> (LaysEggs(x)))", "all x. ((TypeOfAnimal(x) = Grebes) -> ((TypeOfAnimal(x) != Bird) & (TypeOfAnimal(x) != Echidna)))", "all x. ((TypeOfAnimal(x) = Geese) -> (LaysEggs(x)))", "all x. (SpendMostTimeIn(x, Park) -> Athlete(x))", "Athlete(Fred)", "SpendMostTimeIn(Fred, Park)", "all x. (SpendMostTimeIn(x, Park) -> Has(x, Dog))", "Has(Fred, Dog)", "all x. (SpendMostTimeIn(x, Park) -> ResidentOf(x, City))", "ResidentOf(Fred, City)", "all x. (SpendMostTimeIn(x, Park) -> InvolvedIn(x, VolunteerProgram))", "InvolvedIn(Fred, VolunteerProgram)", "all x. (SpendMostTimeIn(x, Park) -> MemberOf(x, CommunityOrganization))", "MemberOf(Fred, CommunityOrganization)", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Professor(x) -> Intellectual(x))", "all x. (Professor(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Scientist(x) -> Intellectual(x))", "all x. (Scientist(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Mathematician(x) -> Intellectual(x))", "all x. (Mathematician(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (ComputerScientist(x) -> Intellectual(x))", "all x. (ComputerScientist(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (ArtHistorian(x) -> Intellectual(x))", "all x. (ArtHistorian(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Philosopher(x) -> Intellectual(x))", "all x. (Philosopher(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Mathematician(x) -> Intellectual(x))", "all x. (Mathematician(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (ComputerScientist(x) -> Intellectual(x))", "all x. (ComputerScientist(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (ArtHistorian(x) -> Intellectual(x))", "all x. (ArtHistorian(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Philosopher(x) -> Intellectual(x))", "all x. (Philosopher(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (Mathematician(x) -> Intellectual(x))", "all x. (Mathematician(x) -> HasUniversityDegree(x))", "all x. (HasUniversityDegree(x) -> Intellectual(x))", "all x. (ComputerScientist(x) -> Intellectual(x))"], "conclusion": "all x. (ComputerScientist(x) -> HasUniversityDegree(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((TypeOfAnimal(x) = Bird) -> ((Animal(x) != Reptile))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((TypeOfAnimal(x) = Bird) -> ((Animal(x) != Reptile))\n                                                            ^\n"}
{"timestamp": "2025-05-02T02:01:21.776909", "premises": ["all x. ((Plants(x) & LayEggs(x)) -> (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "all x. (Ducks,Geese, & x lay eggs(x))", "all x. (Ducks,Geese, & x lay eggs(x))"], "conclusion": "all x. ((Bird(x) | Echidna(x)) -> -Grebe(x)) & all x. ((Grebe(x) | Bird(x)) -> -Echidna(x)) & all x. ((Grebe(x) | Echidna(x)) -> -Bird(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (Ducks,Geese, & x lay eggs(x))\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (Ducks,Geese, & x lay eggs(x))\n             ^\n"}
{"timestamp": "2025-05-02T02:01:38.061639", "premises": ["all x. (Plant(x) & laysEggs(x) -> (Bird(x)|Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> Vertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Reptile(Geese)", "all x. (laysEggs(x) -> x)"], "conclusion": "all x. ((Bird(x) | Echidna(x)) -> x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T02:02:55.640133", "premises": ["all x. (ScreenWriter(x) & Destroyer(x) & Martian(x))", "all x. (Showrunner(x) & ExecutiveDemolisher(x) & WizardsOfEastEnd(x))", "all x. (FantasyDramaSeries(x) & WizardsOfEastEnd(x))", "all x. (Destroyed(x) & Demolished(x) & Eastwick(x))", "all x. (Series(x) & Eastwick(x) & HBO(x))"], "conclusion": "exists x. (Series(x) & HBO(x) & destructionDemolished(x, WizardsOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-02T02:02:58.525353", "premises": ["all x. (Series(x) & fantasy-drama(x))", "all x. (Showrunner(x) & demolisher(x) & Series(x) & lifetime(x))", "all x. (Series(x) & HBO(x))", "destroys(MaggieFriedman, Eastwick)"], "conclusion": "all x. (Destroys(x) & showrunner(x) & Series(x) & HBO(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nall x. (Series(x) & fantasy-drama(x))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nall x. (Series(x) & fantasy-drama(x))\n                           ^\n"}
{"timestamp": "2025-05-02T02:03:29.074661", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodward(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodward(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodward(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodward(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T02:03:32.423689", "premises": ["all x. (Song(x) & AmericanChart(x) & #1(x))", "all x. (Song(x) & AmericanChart(x) & BigHit(x))", "-all x. (Song(x) & AmericanChart(x) & #1(x))", "all x. (Song(x) & AmericanChart(x) & Not1stSingular(x))"], "conclusion": "all x. (Song(x) & AmericanChart(x) & Not1stSingular(x) & #1(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Song(x) & AmericanChart(x)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Song(x) & AmericanChart(x)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T02:03:36.382783", "premises": ["all x. (BoneyMDot_had_x) & all y. (x_=_American_#One_single)", "all x. (\"Uptown_Funk\"_is_big_hit_all_over_x)", "-all x. (x_=_American_#One_single) & \"Uptown Funk\" had x", "all x. ((peaksBelow_#One_on_American_charts_x) -> (not_#One_single_in_America_x)) & all y. ((x_is_#One_single_in_America) -> (_peaksBelow_#One_on_American_charts_x)) & all z. ((peaksBelow_#One_on_American_charts_z) -> (not_x)) & all w. ((x_is_not_#One_single_in_America) -> (_peaksBelow_#One_on_American_charts_w))"], "conclusion": "peaksBelow #1 on American charts (\"Uptown_Funk\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '#1'.\npeaksBelow #1 on American charts (\"Uptown_Funk\")\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '#1'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '#1'.\npeaksBelow #1 on American charts (\"Uptown_Funk\")\n           ^\n"}
{"timestamp": "2025-05-02T02:03:39.660553", "premises": ["all x. (Has(x, AmericanOneSingles) -> Some(x, AmericanOne))", "Popular(UptownFunk) & In(UptownFunk, America)", "not(In(UptownFunk, AmericanOneSingles))", "all x. ((PeaksBelow1(x) & Not(In(x, AmericanOneSingles))) -> Some(x, not(IsNumberOne(x))))"], "conclusion": "PeaksBelow1(UptownFunk) & Not(In(UptownFunk, AmericanOneSingles))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-02T02:03:42.432752", "premises": ["all x. (BoneyM(x) & (#1Single(x) & AmericanCharts))", "all x. (Hit(x, \"Uptown_Funk\") & AmericanCharts(x))", "all x. (Hit(x, \"Uptown_Funk\") & (#1Single(x) & -AmericanCharts(x)))"], "conclusion": "all x. (PeaksBelow(x, #One) & -#OneSingle(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (BoneyM(x) & (%%START ERROR%%#1Single(x) & AmericanCharts%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (BoneyM(x) & (%%START ERROR%%#1Single(x) & AmericanCharts%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T02:03:45.986713", "premises": ["all x. (BoneyM.HasSingles(x) -> HasSingles(x, AmericanChart) & HasSingles(x, NumberOneSingle))", "all x. (Song(x) & BigHit(x, America))", "-(all x. (Song(x) & BigHit(x, America) & NumberOneSingle(x, AmericanChart)))", "all x. ((PeaksBelowNumberOne(x, AmericanChart) & NotNumberOneSingle(x, AmericanChart)) -> Song(x))"], "conclusion": "PeaksBelowNumberOne(UptownFunk, AmericanChart)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM.HasSingles(x) -> HasSingles(x, AmericanChart) & HasSingles(x, NumberOneSingle))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM.HasSingles(x) -> HasSingles(x, AmericanChart) & HasSingles(x, NumberOneSingle))\n              ^\n"}
{"timestamp": "2025-05-02T02:04:34.277586", "premises": ["all x. (BoneyM(x) -> AmericanNumberOneSingle(x))", "AmericanHit(UptownFunk)", "all x. (AmericanNumberOneSingle(x) -> UptownFunk(x))", "all x. (PeaksBelow(1, AmericanChartSingle(x)) -> NotAmericanNumberOneSingle(x))"], "conclusion": "AmericanChartSingle(\"Uptown_Funk\") & PeaksBelow(1, AmericanChartSingle(\"Uptown_Funk\"))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmericanChartSingle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmericanChartSingle/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmericanChartSingle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmericanChartSingle/1\n"}
{"timestamp": "2025-05-02T02:04:38.748434", "premises": ["exists x. (BoneyM, x) & AmericanTop10(x)", "exists x. (UptownFunk, x) & PopularHit(x) & AmericanTop10(x)", "-AmericanTop1(UptownFunk)", "(-PeaksBelow1(x) & AmericanTop1(x)) & -AmericanTop1(x)"], "conclusion": "PeaksBelow1(UptownFunk)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nexists x. (BoneyM, x) & AmericanTop10(x)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nexists x. (BoneyM, x) & AmericanTop10(x)\n                 ^\n"}
{"timestamp": "2025-05-02T02:04:41.902978", "premises": ["exists x. (Singer(Boney_MDot) & has(x, several(American_#One_singles))", "exists x. (Song(\"Uptown_Funk\") & bigHit(x, America))", "-(exists x. (Song(\"Uptown_Funk\") & has(x, American_#One_singles)))"], "conclusion": "exists x. (Song(x) & Not(has(x, American #One singles)) & (peaksBelow(x, One) & Not(x = One)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '#One'.  Expected token ')'.\nexists x. (Song(x) & Not(has(x, American #One singles)) & (peaksBelow(x, One) & Not(x = One)))\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '#One'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '#One'.  Expected token ')'.\nexists x. (Song(x) & Not(has(x, American #One singles)) & (peaksBelow(x, One) & Not(x = One)))\n                                         ^\n"}
{"timestamp": "2025-05-02T02:06:01.114292", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-02T02:11:59.215644", "premises": ["\\_\\_x. (Biodegradable(x) -> EnvironmentFriendly(x))", "\\_\\_x. (Woodware(x) -> Biodegradable(x))", "\\_\\_x. (Paper(x) -> Woodware(x))", "\\_\\_x. (-(Good(x) & Bad(x)))", "\\_\\_x. (EnvironmentFriendly(x) -> Good(x))", "\\_\\_x. ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "\\_\\_x. (-Dispensable(Worksheet))", "\\_\\_x. \\_\\_y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "\\_\\_x. \\_\\_y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "\\_\\_x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "\\_\\_x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "\\_\\_x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "\\_\\_x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) -> ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) -> FullTimeScientist(Amy)", "ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy)", "FullTimeScientist(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -FullTimeScientist(Amy)", "ProfessionalAthlete(Amy) & FullTimeScientist(Amy)", "OlympicGoldMedalWinner(Amy) & NobelLaureate(Amy)", "OlympicGoldMedalWinner(Amy) & FullTimeScientist(Amy)", "NobelLaureate(Amy) & ProfessionalAthlete(Amy)", "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy)"], "conclusion": "-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(A", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(A\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-OlympicGoldMedalWinner(Amy) & -NobelLaureate(Amy) & -ProfessionalAthlete(Amy) & -FullTimeScientist(A\n                                                                                                     ^\n"}
{"timestamp": "2025-05-02T02:12:28.324246", "premises": ["all x. (DESTROYS(ETS,x) & StandardizedTest(x) & In(x, UnitedState) & (KOneTwoAndHigherEducation(x) | K12(x)))", "all x. (DESTROYS(ETS,x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "all x. (DESTROYS(ETS,x) & AssociatedWith(x, EntryToUSEducationInstitution))", "all x. (DESTROYS(ETS,x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "all x. (DESTROYS(ETS,x) & StandardizedTest(x) & (In(x, UnitedState) & (KOneTwoAndHigherEducation(x) | K12(x)))) & (InternationalTest(x) | AssociatedWith(x, EntryToUSEducationInstitution)) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. (DESTROYS(ETS,x) & StandardizedTest(x) & (In(x, UnitedState) & (KOneTwoAndHigherEducation(x) | K12(x)))) & (InternationalTest(x) | AssociatedWith(x, EntryToUSEducationInstitution)) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))\n                                                                                                                                                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. (DESTROYS(ETS,x) & StandardizedTest(x) & (In(x, UnitedState) & (KOneTwoAndHigherEducation(x) | K12(x)))) & (InternationalTest(x) | AssociatedWith(x, EntryToUSEducationInstitution)) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))\n                                                                                                                                                                                                                                                       ^\n"}
{"timestamp": "2025-05-02T02:47:01.962549", "premises": ["all x. (WatershedOf(CrotonRiver, x) -> EndBasin(x, CrotonRiver))", "all x. (In(CrotonRiver, NortheasternCalifornia) -> CrotonRiver(x))", "all x. (Freezes(x, WaterFromCrotonRiverWatershed) -> Bronx(x))", "all x. (In(x, California) -> Bronx(x))"], "conclusion": "all x. (Freezes(x, WaterFromCrotonRiverWatershed) -> In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-02T02:47:38.104065", "premises": ["all x. (EndBasin(CrotonRiver, x) -> Watershed(CrotonRiver, x))", "all x. (In(CrotonRiver, northeasternCalifornia) -> (CrotonRiver, x))", "all x. (Freeze(WaterFromCrotonRiverWatershed, x) -> (Bronx, x))", "all x. (In(Bronx, California) -> (Bronx, x))"], "conclusion": "all x. (Freeze(WaterFromCrotonRiverWatershed, x) -> (In(Bronx, California), x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (Freeze(WaterFromCrotonRiverWatershed, x) -> (In(Bronx, California), x))\n                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (Freeze(WaterFromCrotonRiverWatershed, x) -> (In(Bronx, California), x))\n                                                                          ^\n"}
{"timestamp": "2025-05-02T02:47:49.313733", "premises": ["all x. (EndBasinOf(x, CrotonRiver) -> CrotonRiverWatershed(x))", "all x. (In(x, NortheasternCalifornia) -> CrotonRiver(x))", "all x. (FreezesIn(x, Bronx) -> CrotonRiverWatershed(x))", "all x. (In(x, California) -> Bronx(x))"], "conclusion": "all x. (FreezesIn(x, California) -> CrotonRiverWatershed(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-02T02:48:31.669016", "premises": ["all x. (CrotonRiverWatershed(x) -> EndBasinOf(x, CrotonRiver))", "all x. (CrotonRiver(x) -> In(x, NortheasternCalifornia))", "all x. (WaterFromCrotonRiverWatershedFreezes(x) -> In(x, Bronx))", "all x. (Bronx(x) -> In(x, California))"], "conclusion": "all x. (WaterFromCrotonRiverWatershedFreezes(x) -> In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-02T02:49:21.731590", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "ImaginaryNumber(x) & ImaginaryNumber(y) & ImaginaryNumber(x+y) & ImaginaryNumber(x=y+One) -> ImaginaryNumber(x<y)", "ImaginaryNumber(x) & ImaginaryNumber(y) & ImaginaryNumber(x>y) -> ImaginaryNumber(y<x)", "ImaginaryNumber(Seven) & ImaginaryNumber(Six) & ImaginaryNumber(One) & ImaginaryNumber(Seven=Six+One)", "ImaginaryNumber(Eight) & ImaginaryNumber(Seven) & ImaginaryNumber(One) & ImaginaryNumber(Eight=Seven+One)", "Positive(Two)", "Positive(x) & Positive(Double(x))", "Double(Six) = Eight", "Double(Two) = Six"], "conclusion": "ImaginaryNumber(Seven) & ImaginaryNumber(Eight) & ImaginaryNumber(Eight<Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nImaginaryNumber(x) & ImaginaryNumber(y) & ImaginaryNumber(x+y) & ImaginaryNumber(x=y+One) -> ImaginaryNumber(x<y)\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nImaginaryNumber(x) & ImaginaryNumber(y) & ImaginaryNumber(x+y) & ImaginaryNumber(x=y+One) -> ImaginaryNumber(x<y)\n                                                                                  ^\n"}
{"timestamp": "2025-05-02T02:49:47.757618", "premises": ["all x. ((Six(x) | Seven(x) | Eight(x)) -> ImaginaryNumber(x))", "all x. (ImaginaryNumber(x) -> (ImaginaryNumber(x) + 1 < x))", "all x. (LargerThan(x, y) -> NotLargerThan(y, x))", "Seven(x) = Six(x) + One", "Eight(x) = Seven(x) + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight(x) = Double(Six(x))"], "conclusion": "Six(x) = Double(Two(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. (ImaginaryNumber(x) -> (ImaginaryNumber(x) + 1 < x))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. (ImaginaryNumber(x) -> (ImaginaryNumber(x) + 1 < x))\n                                                  ^\n"}
{"timestamp": "2025-05-02T02:50:08.857161", "premises": ["all x. ((Imaginary(x) & (x=Six_|_x=Seven_|_x=Eight)) -> True)", "all x. (Imaginary(x) & (x=y+One) & (x<y))", "all x. (x>y__>__y>x)", "seven=six+one", "eight=seven+one", "all x. (Positive(x) -> x>0)", "all x. (Positive(x) -> Positive(Twox))", "eight=2*six"], "conclusion": "six=2*two", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T02:50:41.241921", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "exists x. exists y. ((Imaginary(x) & Imaginary(y)) & (x=y+(One)) & Imaginary(x))", "exists x. exists y. (LargerThan(x, y) -> NotLargerThan(y, x))", "Seven=Six+1", "Eight=Seven+1", "Positive(Two)", "exists x. (Positive(x) & Double(x))", "Double(Eight) = Six", "Double(Six) = Two"], "conclusion": "not Imaginary(Eight) & not Imaginary(Seven) & (Eight<Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1\n"}
{"timestamp": "2025-05-02T02:51:03.007312", "premises": ["all x. (Imaginary(x) & (x=Six_|_x=Seven_|_x=Eight))", "all x. all y. (Imaginary(x) & Imaginary(y) & (x+One=y) -> (x<y))", "all x. all y. (x>y__>__y>x)", "Seven=6+1", "Eight=7+1", "all x. (Positive(x) & x=2)", "all x. (Positive(x) & x=2x)", "Eight=2\\*6"], "conclusion": "Six=2\\*2", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nSix=2\\*2\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nSix=2\\*2\n     ^\n"}
{"timestamp": "2025-05-02T02:51:45.728776", "premises": ["all x. (Imaginary(x) -> ((x=Six) | (x=Seven) | (x=Eight)))", "if x>y & (x=y+One) then x is smaller than y", "if x>y then not(y>x)", "seven = six + one", "eight = seven + one", "Positive(two)", "if Positive(x) then Positive(Twox)", "eight = 2 x six"], "conclusion": "six = 2 x two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nsix = 2 x two\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nsix = 2 x two\n        ^\n"}
{"timestamp": "2025-05-02T02:52:07.400802", "premises": ["all x. (ImaginaryNumber(x) -> (x=Six) | (x=Seven) | (x=Eight))", "if (x=y+One) & (ImaginaryNumber(x) & ImaginaryNumber(y)) then (x<y)", "if (x>y) then (_y>x)", "(Seven=Six+One)", "(Eight=Seven+One)", "Positive(Two)", "if (Positive(x) & (x>Zero)) then Positive(Twox)", "(Eight=Two*Six)"], "conclusion": "(Six=Two*Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif (x=y+One) & (ImaginaryNumber(x) & ImaginaryNumber(y)) then (x<y)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif (x=y+One) & (ImaginaryNumber(x) & ImaginaryNumber(y)) then (x<y)\n     ^\n"}
{"timestamp": "2025-05-02T02:52:32.569491", "premises": ["all x. (Imaginary(x) | x=6 | x=7 | x=8)", "all x. all y. ((x=y+One) & Imaginary(x)) -> x<y", "all x. all y. (x>y) -> -(y>x)", "7=6+1", "8=7+1", "all x. (Positive(x) | x=2)", "all x. ((Positive(x) & Double(x) | x=2)", "8=2*6", "6=2*2"], "conclusion": "8<7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Positive(x) & Double(x) | x=2)\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Positive(x) & Double(x) | x=2)\n                                       ^\n"}
{"timestamp": "2025-05-02T02:53:06.869087", "premises": ["all x. (ImaginaryNumber(x) -> ImaginaryNumber(x))", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x+y=y)) -> (x<y))", "all x. all y. ((x>y) -> (_y>x))", "all x. ((Seven(x) & (x=Six+One)) -> True)", "all x. ((Eight(x) & (x=Seven+One)) -> True)", "all x. (Positive(x) -> (x>Zero))", "all x. ((Positive(x) & (Twox>0)) -> Positive(Twox))", "all x. ((Eight(x) & (x=2(Six))) -> True)"], "conclusion": "all x. ((Six(x) & (x=Two(Two))) -> True)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Seven/1, Seven/0, Six/1, Six/0, Two/0, Two/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Seven/1, Seven/0, Six/1, Six/0, Two/0, Two/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Seven/1, Seven/0, Six/1, Six/0, Two/0, Two/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Seven/1, Seven/0, Six/1, Six/0, Two/0, Two/1\n"}
{"timestamp": "2025-05-02T02:53:29.657999", "premises": ["all x. (Imaginary(x) -> (Six(x) | Seven(x) | Eight(x)))", "all x. (Imaginary(x) -> (x > (Imaginary(x) + One)))", "Seven(x) -> (Six(x) + One(x))", "Eight(x) -> (Seven(x) + One(x))", "Two(x) -> -x", "all x. (Negative(x) -> (_x))", "Nine(x) -> (Six_*_x)"], "conclusion": "Six(x) -> (Two_*_x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (Imaginary(x) -> (x > (Imaginary(x) + One)))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (Imaginary(x) -> (x > (Imaginary(x) + One)))\n                           ^\n"}
{"timestamp": "2025-05-02T02:53:50.387153", "premises": ["all x. (ImaginaryNumber(x) & Not(ImaginaryNumber(x)))", "all x, y. ((ImaginaryNumber(x) & ImaginaryNumber(y)) & (x+One=y) -> x>y)", "all x, y. (x>y) -> (y<x)", "seven=six+one", "eight=seven+one", "negative(two)", "all x. (negative(x) -> negative(Two*x))", "nine=6*2"], "conclusion": "six=2*2", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y. ((ImaginaryNumber(x) & ImaginaryNumber(y)) & (x+One=y) -> x>y)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y. ((ImaginaryNumber(x) & ImaginaryNumber(y)) & (x+One=y) -> x>y)\n     ^\n"}
{"timestamp": "2025-05-02T02:54:14.439812", "premises": ["exists x. (Imaginary(x) & (x_=_Six_|_x_=_Seven_|_x_=_Eight))", "exists x. exists y. (Imaginary(x) & Imaginary(y) & (x_+_y_=_y) & (x_>_y))", "exists x. exists y. (Number(x) & Number(y) & (x_>_y) & (-(y_>_x)))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "exists x. (Negative(x) & -(Double(x)))", "Nine = 2 x 6"], "conclusion": "Six = 2 x 2", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nSix = 2 x 2\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nSix = 2 x 2\n        ^\n"}
{"timestamp": "2025-05-02T02:55:02.008597", "premises": ["all x. (Imaginary(x) -> ((Six(x) | Seven(x) | Eight(x)) & NotReal(x)))", "all x. (Imaginary(x) -> ((Imaginary(x+One) & NotImaginary(x)) | ((Imaginary(x) & NotImaginary(x+One)) & LargerThan(x, x+One))))", "all x. all y. ((LargerThan(x, y) & NotLargerThan(y, x)) -> (NotLargerThan(x, y) & NotLargerThan(y, x)))", "Seven(x) & ((Six(x) + One(x) = x) & NotEqual(Six(x), Seven(x)))", "Eight(x) & ((Seven(x) + One(x) = x) & NotEqual(Seven(x), Eight(x)))", "Negative(Two)", "all x. (Negative(x) -> Negative(Two\\*x))", "Nine(x) & (6(x) = 2\\*x) & NotEqual(Nine(x), Six(x))"], "conclusion": "Six(x) & (2(x) = x) & NotEqual(Six(x), Two(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nSeven(x) & ((Six(x) + One(x) = x) & NotEqual(Six(x), Seven(x)))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nSeven(x) & ((Six(x) + One(x) = x) & NotEqual(Six(x), Seven(x)))\n                    ^\n"}
{"timestamp": "2025-05-02T02:55:26.343455", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x_+_y_=_y_+_x) -> x > y)", "all x. all y. (x_>_y) -> (_y_>_x)", "Seven = Six + One", "Eight = Seven + One", "all x. (Negative(x) & x = -(_x))", "all x. (Negative(x) & Double(x) = -x)", "Nine = Double(Six)"], "conclusion": "Six = Double(Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x_+_y_=_y_+_x) -> x > y)\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x_+_y_=_y_+_x) -> x > y)\n                                                                  ^\n"}
{"timestamp": "2025-05-02T02:55:48.398386", "premises": ["all x. ((Imaginary(x) & (x=Six+Onei) & (x=Seven+Onei) & (x=Eight+Onei))", "all x. ((Imaginary(x) & (x=y+Onei)) & (x>y))", "all x. ((x>y) & (y_not>x))", "seven=six+1", "eight=seven+1", "all x. ((Negative(x) & (Two=x))", "all x. ((Negative(x) & (Two*x=__x))", "nine=2*six"], "conclusion": "six=2*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Imaginary(x) & (x=Six+Onei) & (x=Seven+Onei) & (x=Eight+Onei))\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Imaginary(x) & (x=Six+Onei) & (x=Seven+Onei) & (x=Eight+Onei))\n                                                                       ^\n"}
{"timestamp": "2025-05-02T02:56:17.567475", "premises": ["exists x. (Imaginary(x) & (x=Six) | (x=Seven) | (x=Eight))", "exists x. exists y. ((x=Six+y) & (x>y) | ((x=Seven+y) & (x>y)) | ((x=Eight+y) & (x>y)))", "exists x. exists y. ((x>y) & ~(y>x))", "exists x. (Seven=Six+One)", "exists x. (Eight=Seven+One)", "exists x. (Negative(x) & (x=Two))", "exists x. (Negative(x) & (Double(x)=Negative(Double(x))))", "exists x. (Nine=Double(Six))"], "conclusion": "exists x. (Six=Double(Two))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: >/2, Negative/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: >/2, Negative/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: >/2, Negative/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: >/2, Negative/1\n"}
{"timestamp": "2025-05-02T02:56:39.480942", "premises": ["all x. (ImaginaryNumber(x) -> (x=Six_&_x=Seven_&_x=Eight))", "all x. (ImaginaryNumber(x) -> (ImaginaryNumber(x+One) -> x>x+One))", "all x. (x>y -> ~(y>x))", "Seven=6+1", "Eight=7+1", "all x. (Negative(x) -> -x)", "all x. (Negative(x) -> Negative(Two*x))", "Nine=2*6"], "conclusion": "Six=2*2", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T02:56:59.810760", "premises": ["Imaginary(six) & Imaginary(seven) & Imaginary(eight)", "if Imaginary(x) & (Imaginary(y) + 1 = x) then x > y", "if x > y then not y > x", "seven = six + one", "eight = seven + one", "Negative(two)", "if Negative(x) then Negative(Two*x)", "nine = 2*six"], "conclusion": "six = 2*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Imaginary'.\nif Imaginary(x) & (Imaginary(y) + 1 = x) then x > y\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Imaginary'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Imaginary'.\nif Imaginary(x) & (Imaginary(y) + 1 = x) then x > y\n   ^\n"}
{"timestamp": "2025-05-02T02:57:29.444153", "premises": ["all x. (Imaginary(x) & (Six(x) | Seven(x) | Eight(x)))", "all x. all y. ((Imaginary(x) & Imaginary(y)) & (x+y=One) -> Larger(x, y))", "all x. all y. ((Larger(x, y) & NotLarger(y, x)) -> True)", "Seven(x) & (Six(x) + One(x))", "Eight(x) & (Seven(x) + One(x))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Nine(x) & (Six(x) x 2)"], "conclusion": "Six(x) & (Two(x) x 2)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nSix(x) & (Two(x) x 2)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nSix(x) & (Two(x) x 2)\n                 ^\n"}
{"timestamp": "2025-05-02T02:59:08.954873", "premises": ["all x. (Imaginary(x) -> x=6 | x=7 | x=8)", "all x. all y. ((x=y+One) & Imaginary(x) & Imaginary(y)) -> x<y", "all x. all y. ((x>y) & (y>x)) -> False", "all x. ((x=Seven) & (x=Six+One))", "all x. ((x=Eight) & (x=Seven+One))", "all x. ((Positive(x) & (x=Two))", "all x. ((Positive(x) & (x>Zero)) -> Positive(Twox))", "all x. ((x=Eight) & (x=Two*Six))"], "conclusion": "all x. ((x=Six) & (x=Two*Two))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Positive(x) & (x=Two))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Positive(x) & (x=Two))\n                               ^\n"}
{"timestamp": "2025-05-02T03:00:43.251311", "premises": ["all x. (Imaginary(x) | (Imaginary(x+One) & Imaginary(x)) | (Imaginary(x+Two) & Imaginary(x)))", "all x. all y. (Imaginary(x) & Imaginary(y) & Imaginary(x+One) & Imaginary(y+One) & (x<y+One) & (y+One<x))", "all x. all y. (Imaginary(x) & Imaginary(y) & Imaginary(x+One) & Imaginary(y+One) & (x>y) & (y<x))", "all x. (Imaginary(x) & (Imaginary(x+One) & Imaginary(x+Two) & Imaginary(x+Three)) & (x=Seven+One))", "all x. (Imaginary(x) & (Imaginary(x+One) & Imaginary(x+Two) & Imaginary(x+Three)) & (x=Eight+One))", "all x. (Imaginary(x) & Imaginary(x+One) & Imaginary(x+Two) & Imaginary(x+Three) & Positive(x))", "all x. (Positive(x) & (Double(x)=Positive(Double(x))))", "all x. (Double(x)=8)"], "conclusion": "all x. (Double(x)=6)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Positive/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Positive/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Positive/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Positive/1\n"}
{"timestamp": "2025-05-02T03:01:24.420037", "premises": ["exists x. (Imaginary(x) & (x=Six) | (x=Seven) | (x=Eight))", "exists x. (Imaginary(x) & (x=y+One) & (y<x))", "for x. for y. (x<y -> -(y<x))", "exists x. (Imaginary(x) & (x=Seven) & (x=Six+One))", "exists x. (Imaginary(x) & (x=Eight) & (x=Seven+One))", "exists x. (Positive(x) & (x=Two))", "for x. (Positive(x) -> Positive(Two*x))", "exists x. (Positive(x) & (x=Two*Six))", "exists x. (Positive(x) & (x=Two*Two))"], "conclusion": "exists x. (Imaginary(x) & (x=Seven) & (x<Six+One))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nfor x. for y. (x<y -> -(y<x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nfor x. for y. (x<y -> -(y<x))\n    ^\n"}
{"timestamp": "2025-05-02T03:01:46.407467", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & x = y + 1 -> x < y)", "all x. all y. (x_>_y__>__y_>_x)", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Twox))", "Eight = 2(Six)"], "conclusion": "Six = 2(Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & x = y + 1 -> x < y)\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & x = y + 1 -> x < y)\n                                                   ^\n"}
{"timestamp": "2025-05-02T03:02:08.600754", "premises": ["all x. (ImaginaryNumber(x) & (x=Six_|_x=Seven_|_x=Eight))", "if exists x. exists y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=x+One) -> x<y)", "all x. (LargerThan(x, y) -> (not LargerThan(y, x)))", "seven=6+1", "eight=7+1", "Positive(two)", "all x. (Positive(x) -> Positive(Two*x))", "eight=2*six"], "conclusion": "six=2*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'exists'.\nif exists x. exists y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=x+One) -> x<y)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'exists'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'exists'.\nif exists x. exists y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x=x+One) -> x<y)\n   ^\n"}
{"timestamp": "2025-05-02T03:03:07.167325", "premises": ["Dances(DengXiaoping, paramountLeaderOfPeopleRepublicOfChina)", "Praised(DengXiaoping, reformProgram) & Praised(DengXiaoping, reversionOfHongKongToChineseControl) & Praised(DengXiaoping, returnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FranceMusicIndustry)", "Born(MaoZedong, OneNineSevenSix)", "RisesToSupremePower(DengXiaoping, afterMaoZedongBirth)"], "conclusion": "DetrimentalToFranceMusicIndustry(x) & RisesToSupremePower(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RisesToSupremePower/2, RisesToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: RisesToSupremePower/2, RisesToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RisesToSupremePower/2, RisesToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: RisesToSupremePower/2, RisesToSupremePower/1\n"}
{"timestamp": "2025-05-02T03:05:04.617476", "premises": ["all x. (Dances(x, DengXiaoping) & ParamountLeader(x))", "all x. ((Praised(x) & ReaffirmationOfReformProgram(x)) & (HongKongToChineseControl(x) & ReturnOfMacau(x)))", "all x. ((SecretaryGeneral(x) & UnderMao(x)) & Opposes(x, AntiRightistCampaign(x)))", "all x. ((DetrimentalTo(x, FranceMusicIndustry) & GreatLeapForward(x))", "MaoZedong(OneNineSevenSix)"], "conclusion": "all x. ((MaoZedongBorn(x) & After(x, MaoZedongBorn) & DengXiaopingGraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((MaoZedongBorn(x) & After(x, MaoZedongBorn) & DengXiaopingGraduallyRisesToSupremePower(x))\n                                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((MaoZedongBorn(x) & After(x, MaoZedongBorn) & DengXiaopingGraduallyRisesToSupremePower(x))\n                                                                                                  ^\n"}
{"timestamp": "2025-05-02T03:06:49.085142", "premises": ["exists x. Dances(x, DengXiaoping) & ParamountLeader(x, PeoplesRepublicOfChina)", "exists x. (Praised(x, DengXiaoping) & ReaffirmsReform(x) & ChineseControlHongKong(x) & ChineseControlMacau(x))", "exists x. (SecretaryGeneral(x, Mao) & VicePremier(x, OneNineFiveZeros) & Opposes(x, AntiRightistCampaign(x)) & Mao(x, AntiRightistCampaign(x)))", "exists x. (Detrimental(x, FranceMusicIndustry) & GreatLeapForward(x))", "MaoZedong(OneNineSevenSix)"], "conclusion": "RisesToSupremePower(x, AfterMaoZedongBirth) & Gradually(x, RisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mao/2, Mao/0, RisesToSupremePower/2, RisesToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Mao/2, Mao/0, RisesToSupremePower/2, RisesToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mao/2, Mao/0, RisesToSupremePower/2, RisesToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Mao/2, Mao/0, RisesToSupremePower/2, RisesToSupremePower/1\n"}
{"timestamp": "2025-05-02T03:08:07.969417", "premises": ["all x. (Robot(x) -> IntangibleBenefits(x, Sleep))", "all x. (Robot(x) -> Sleep(x) | Sleep(x, OnAsNeededBasis))", "all x. (Robot(x) -> Trained(x))", "all x. (Robot(x) -> SleepInGroups(x) | SleepInGroups(x, OnAsNeededBasis) | SleepInIndividual(x) | SleepInIndividual(x, OnAsNeededBasis))", "all x. (Robot(x) -> EnvironmentalRobot(x) -> EnvironmentalManagementOrConservationPrevention(x))", "all x. (Robot(x) -> SleepInGroups(x) & OnAsNeededBasis(x)) & (ParticipatingInNaturalDisasterResponse(x) | SleepInGroups(x, OnAsNeededBasis))"], "conclusion": "all x. (Robot(x) -> SleepInGroups(x) & OnAsNeededBasis(x) & (ParticipatingInNaturalDisasterResponse(x) | SleepInGroups(x, OnAsNeededBasis)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SleepInIndividual/2, SleepInIndividual/1, SleepInGroups/2, SleepInGroups/1, Sleep/2, Sleep/1, Sleep/0, OnAsNeededBasis/1, OnAsNeededBasis/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SleepInIndividual/2, SleepInIndividual/1, SleepInGroups/2, SleepInGroups/1, Sleep/2, Sleep/1, Sleep/0, OnAsNeededBasis/1, OnAsNeededBasis/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SleepInIndividual/2, SleepInIndividual/1, SleepInGroups/2, SleepInGroups/1, Sleep/2, Sleep/1, Sleep/0, OnAsNeededBasis/1, OnAsNeededBasis/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SleepInIndividual/2, SleepInIndividual/1, SleepInGroups/2, SleepInGroups/1, Sleep/2, Sleep/1, Sleep/0, OnAsNeededBasis/1, OnAsNeededBasis/0\n"}
{"timestamp": "2025-05-02T03:08:48.335992", "premises": ["all x. (Robot(x) -> Receives(x, IntangibleBenefitsForSleep))", "all x. (Robot(x) -> Sleep(x, Regularly_|_AsNeeded))", "exists x. (Robot(x) -> Trained(x))", "all x. (Robot(x) -> Sleep(x, Groups_|_Individually))", "all x. (Robot(x) -> EnvironmentalRobot(x) -> Prevents(x, EnvironmentalManagementOrConservation))", "exists x. (Robot(x) -> ParticipatesIn(x, NaturalDisasterResponse) & Sleep(x, Groups) & AsNeeded(x))"], "conclusion": "exists x. (Robot(x) -> ParticipatesIn(x, NaturalDisasterResponse) & (Receives(x, IntangibleBenefitsForSleep) | Sleep(x, Regularly) | Sleep(x, AsNeeded)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nall x. (Robot(x) -> Sleep(x, Regularly_|_AsNeeded))\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nall x. (Robot(x) -> Sleep(x, Regularly_|_AsNeeded))\n                                       ^\n"}
{"timestamp": "2025-05-02T03:11:32.124429", "premises": ["all x. (Robot(x) & Sleep(x) & IntangibleBenefit(x, Sleep))", "all x. (Robot(x) & Sleep(x) & RegularSleep(x) | all x. (Robot(x) & Sleep(x) & OnNeededBasisSleep(x)))", "all x. (Robot(x) & Sleep(x) & Trained(x))", "all x. (Robot(x) & Sleep(x) & SleepInGroups(x) | all x. (Robot(x) & Sleep(x) & SleepIndividually(x)))", "all x. (Robot(x) & Sleep(x) & EnvironmentalRobot(x) & PreventEnvironmentalManagement(x) | all x. (Robot(x) & Sleep(x) & EnvironmentalRobot(x) & PreventEnvironmentalConservation(x)))", "all x. (Robot(x) & Sleep(x) & ParticipateInNaturalDisasterResponse(x) & SleepInGroups(x) & OnNeededBasisSleep(x))"], "conclusion": "all x. (Robot(x) & Sleep(x) & ParticipateInNaturalDisasterResponse(x) & ReceiveIntangibleBenefit(x, Sleep))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0\n"}
{"timestamp": "2025-05-02T03:14:34.294865", "premises": ["all x. (Robot(x) -> ReceiveBenefit(x, Sleep))", "all x. (Robot(x) -> Sleep(x))", "exists x. (Robot(x) -> Trained(x))", "all x. (Robot(x) -> (SleepInGroup(x) | SleepIndividually(x)))", "all x. (Robot(x) -> EnvironmentalRobot(x) -> Prevent(x, EnvironmentalManagement))", "exists x. ((Robot(x) & ParticipatesIn(x, NaturalDisasterResponse) & SleepInGroup(x)) | (Robot(x) & ParticipatesIn(x, NaturalDisasterResponse) & SleepIndividually(x)))"], "conclusion": "exists x. ((Robot(x) & ParticipatesIn(x, NaturalDisasterResponse) & Trained(x) & ReceiveBenefit(x, Sleep)) | (Robot(x) & ParticipatesIn(x, NaturalDisasterResponse) & Trained(x) & ReceiveBenefit(x, Sleep)) & (SleepInGroup(x) | SleepIndividually(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0\n"}
{"timestamp": "2025-05-02T03:14:42.963791", "premises": ["all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & NotHumanInvention(x))"], "conclusion": "all x. ((InnovativeScientificAchievement(x) & HumanInvention(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((InnovativeScientificAchievement(x) & HumanInvention(x))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((InnovativeScientificAchievement(x) & HumanInvention(x))\n                                                                ^\n"}
{"timestamp": "2025-05-02T03:15:00.958681", "premises": ["all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & Not(HumanInvention(x)))"], "conclusion": "all x. (InnovativeScientificAchievement(x) -> HumanInvention(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HumanInvention/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HumanInvention/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HumanInvention/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HumanInvention/1\n"}
{"timestamp": "2025-05-02T03:15:05.298353", "premises": ["all x. ((ArtificialSatellite(x) & InnovativeScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & NotHumanInvention(x))"], "conclusion": "all x. ((InnovativeScientificAchievement(x) & HumanInvention(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((InnovativeScientificAchievement(x) & HumanInvention(x))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((InnovativeScientificAchievement(x) & HumanInvention(x))\n                                                                ^\n"}
{"timestamp": "2025-05-02T03:15:26.419836", "premises": ["exists x. (Cat(x) & -Animal(x))", "exists x. (Cat(x) & Reptile(x))", "exists x. ((Reptile(x) & Not(Animal(x))) | (Animal(x) & Not(Reptile(x))))"], "conclusion": "exists x. (Cat(x) & Reptile(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Animal/1, Reptile/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Animal/1, Reptile/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Animal/1, Reptile/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Animal/1, Reptile/1\n"}
{"timestamp": "2025-05-02T03:15:40.316771", "premises": ["exists x. ((Cat(x) & Not(Animal(x))) | (Cat(x) & Animal(x)))", "all x. (Cat(x) -> Reptile(x))"], "conclusion": "exists x. ((Reptile(x) & Not(Animal(x))) | (Reptile(x) & Animal(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Animal/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Animal/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Animal/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Animal/1\n"}
{"timestamp": "2025-05-02T03:16:09.473459", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "not Related(BernardaBrysonShahn, BenShahn)", "for x. (BornIn(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nfor x. (BornIn(x, Athens, Ohio) -> Martian(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nfor x. (BornIn(x, Athens, Ohio) -> Martian(x))\n    ^\n"}
{"timestamp": "2025-05-02T03:16:27.688850", "premises": ["all x. (Musician(x) -> Lithographer(x))", "all x. (BornIn(x, Athens, Ohio) -> x)", "all x. (-RelatedTo(x, BenShahn) -> x)", "all x. (BornIn(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T03:16:38.942129", "premises": ["all x. ((Musician(x) & Lithographer(x)) -> (BernardaBrysonShahn(x) & -(x=BenShahn)))", "birthPlace(BernardaBrysonShahn, Athens, Ohio)", "all x. ((BernardaBrysonShahn(x) & BenShahn(x)) -> -Related(x, BenShahn))", "all x. (BirthPlace(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BenShahn/1, BenShahn/0, BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BenShahn/1, BenShahn/0, BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BenShahn/1, BenShahn/0, BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BenShahn/1, BenShahn/0, BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-05-02T03:17:07.972643", "premises": ["all x. (Musician(x) -> Lithographer(x))", "all x. (BornIn(x, Athens, Ohio) -> BernardaBrysonShahn(x))", "all x. ((BernardaBrysonShahn(x) & BenShahn(x)) -> False)", "all x. (BornIn(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-05-02T03:17:17.541264", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "Birthplace(BernardaBrysonShahn, Athens, Ohio)", "not Related(BernardaBrysonShahn, BenShahn)", "all x. ((Birthplace(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Birthplace(x, Athens, Ohio) -> Martian(x))\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Birthplace(x, Athens, Ohio) -> Martian(x))\n                                                   ^\n"}
{"timestamp": "2025-05-02T03:17:27.343339", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "PlaceOfBirth(BernardaBrysonShahn, Athens, Ohio)", "not Unrelated(BernardaBrysonShahn, BenShahn)", "all x. ((PlaceOfBirth(x, Athens, Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((PlaceOfBirth(x, Athens, Ohio) -> Martian(x))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((PlaceOfBirth(x, Athens, Ohio) -> Martian(x))\n                                                     ^\n"}
{"timestamp": "2025-05-02T03:17:50.222329", "premises": ["Trilogy(x) iff (exists y. (ExistentialDistinct(y) & (x_is_a_compound_literary_or_narrative_work_that_is_made_up_of_four_distinct_works) & (y_is_a_distinct_work_of_x)))", "Trilogy(Harry_Potter) iff (exists y. (ExistentialDistinct(y) & (Harry_Potter is a compound literary or narrative work that is made up of four distinct works) & (y is a distinct work of Harry_Potter)))", "Trilogy(Chronicles_of_Narnia) iff (exists y. (ExistentialDistinct(y) & (Chronicles_of_Narnia_is_a_compound_literary_or_narrative_work_that_is_made_up_of_four_distinct_works) & (y_is_a_distinct_work_of_Chronicles_of_Narnia)))"], "conclusion": "Trilogy(Harry_Potter)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nTrilogy(Harry_Potter) iff (exists y. (ExistentialDistinct(y) & (Harry_Potter is a compound literary or narrative work that is made up of four distinct works) & (y is a distinct work of Harry_Potter)))\n                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nTrilogy(Harry_Potter) iff (exists y. (ExistentialDistinct(y) & (Harry_Potter is a compound literary or narrative work that is made up of four distinct works) & (y is a distinct work of Harry_Potter)))\n                                                                             ^\n"}
{"timestamp": "2025-05-02T03:18:05.311910", "premises": ["Trilogy(x) =(Four, x) & Compound(x) & LiteraryOrNarrative(x)", "(Four, HarryPotterSeries) & DistinctWorks(HarryPotterSeries) & Series(HarryPotterSeries)", "(Four, ChroniclesOfNarnia) & DistinctWorks(ChroniclesOfNarnia) & Series(ChroniclesOfNarnia)"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nTrilogy(x) =(Four, x) & Compound(x) & LiteraryOrNarrative(x)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 321, in attempt_adjuncts\n    expression = self.attempt_EqualityExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 464, in attempt_EqualityExpression\n    expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nTrilogy(x) =(Four, x) & Compound(x) & LiteraryOrNarrative(x)\n                 ^\n"}
{"timestamp": "2025-05-02T03:18:12.922468", "premises": ["all x. (Trilogy(x) -> (ExactlyFour(x) & Compound(x)))", "all x. (HarryPotterSeries(x) -> (ExactlyFour(x) & DistinctWorks(x)))", "all x. (ChroniclesOfNarnia(x) -> (ExactlyFour(x) & DistinctWorks(x)))"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0\n"}
{"timestamp": "2025-05-02T03:18:18.490875", "premises": ["Trilogy is madeOf(FourDistinctWorks)", "HarryPotterSeries is madeOf(FourDistinctWorks)", "ChroniclesOfNarnia is madeOf(FourDistinctWorks)"], "conclusion": "HarryPotterSeries is Trilogy", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nHarryPotterSeries is Trilogy\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nHarryPotterSeries is Trilogy\n                  ^\n"}
{"timestamp": "2025-05-02T03:18:25.301557", "premises": ["all x. (Trilogy(x) -> FourDistinctWorks(x))", "all x. (Series(x) & FourDistinctWorks(x) & HarryPotter(x))", "all x. (Series(x) & FourDistinctWorks(x) & ChroniclesOfNarnia(x))"], "conclusion": "Trilogy(HarryPotter)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotter/1, HarryPotter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotter/1, HarryPotter/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotter/1, HarryPotter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotter/1, HarryPotter/0\n"}
{"timestamp": "2025-05-02T03:18:35.824271", "premises": ["all x. (Trilogy(x) -> 4 DistinctWorks(x))", "4 DistinctWorks(HarryPotterSeries)"], "conclusion": "4 DistinctWorks(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'DistinctWorks'.\n4 DistinctWorks(ChroniclesOfNarnia)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'DistinctWorks'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'DistinctWorks'.\n4 DistinctWorks(ChroniclesOfNarnia)\n  ^\n"}
{"timestamp": "2025-05-02T03:18:41.800559", "premises": ["all x. (Trilogy(x) -> Four(x))", "all x. (TheHarryPotterSeries(x) -> Four(x))", "all x. (TheChroniclesOfNarnia(x) -> Four(x))"], "conclusion": "Trilogy(TheHarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheHarryPotterSeries/1, TheHarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheHarryPotterSeries/1, TheHarryPotterSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheHarryPotterSeries/1, TheHarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheHarryPotterSeries/1, TheHarryPotterSeries/0\n"}
{"timestamp": "2025-05-02T03:18:48.696086", "premises": ["all x. (Trilogy(x) -> FourDistinctParts(x))", "all x. (HarryPotterSeries(x) -> FourDistinctParts(x))", "all x. (ChroniclesOfNarnia(x) -> FourDistinctParts(x))"], "conclusion": "not-Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0\n"}
{"timestamp": "2025-05-02T03:19:38.535079", "premises": ["Trilogy is a literary or narrative work with 4 parts.", "The HarryPotterSeries is a literary or narrative work with 4 parts."], "conclusion": "The ChroniclesofNarnia is a literary or narrative work with 4 parts.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ChroniclesofNarnia'.\nThe ChroniclesofNarnia is a literary or narrative work with 4 parts.\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ChroniclesofNarnia'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ChroniclesofNarnia'.\nThe ChroniclesofNarnia is a literary or narrative work with 4 parts.\n    ^\n"}
{"timestamp": "2025-05-02T03:19:44.702173", "premises": ["all x. (Trilogy(x) -> Four(x))", "all x. (HarryPotterSeries(x) -> Four(x))", "all x. (ChroniclesOfNarnia(x) -> Four(x))"], "conclusion": "not Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/1, ChroniclesOfNarnia/0\n"}
{"timestamp": "2025-05-02T03:19:59.875749", "premises": ["all x. (Trilogy(x) -> For(x, Four) & Distinct(x))", "all x. (HarryPotterSeries(x) -> For(x, Four) & Distinct(x))", "all x. (ChroniclesOfNarnia(x) -> For(x, Four) & Distinct(x))"], "conclusion": "(ChroniclesOfNarnia, Trilogy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n(ChroniclesOfNarnia, Trilogy)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n(ChroniclesOfNarnia, Trilogy)\n                   ^\n"}
{"timestamp": "2025-05-02T03:20:25.042546", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "all x. (Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Software(x) & Complex(x) -> Not(OpenGeneralPublicLicense(x)))", "all x. (Animal(TOra) -> Software(TOra)) & OpenGeneralPublicLicense(TOra)"], "conclusion": "exists x. (Software(x) & Expensive(x)) & Animal(TOra)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1\n"}
{"timestamp": "2025-05-02T03:20:34.058542", "premises": ["Animal(TOra)", "Animal(x) -> Software(x)", "Software(x) -> Expensive(x) | Software(x) -> Complex(x)", "Complex(x) -> Not(OpenSource(x))", "Animal(TOra) -> OpenSource(TOra)"], "conclusion": "Expensive(TOra)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenSource/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenSource/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenSource/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenSource/1\n"}
{"timestamp": "2025-05-02T03:21:15.394794", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "all x. (Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Complex(x) -> ~OpenGeneralPublicLicense(x))", "OpenGeneralPublicLicense(TOra)"], "conclusion": "all x. (Expensive(x) -> Expensive(TOra))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%Complex(x) -> ~OpenGeneralPublicLicense(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%Complex(x) -> ~OpenGeneralPublicLicense(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:21:37.210558", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "all x. (Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Complex(x) -> ~(OpenGeneralPublicLicense(x)))", "OpenGeneralPublicLicense(TOra)"], "conclusion": "Expensive(TOra)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OpenGeneralPublicLicense/1\n"}
{"timestamp": "2025-05-02T03:22:24.273565", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & HambletonDistrict(AinderbyQuernhow)", "HambletonDistrict(HambletonDistrict) & NorthMars(HambletonDistrict)", "NorthMars(NorthMars) & Mars(NorthMars)", "all x. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "City(x) & LocatedIn(x, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NorthMars/1, NorthMars/0, HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NorthMars/1, NorthMars/0, HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NorthMars/1, NorthMars/0, HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NorthMars/1, NorthMars/0, HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:22:33.414392", "premises": ["exists x. exists y. (City(x) & CivilParish(x) & HambletonDistrict(y) & In(x, y))", "HambletonDistrict(NorthMars)", "OnMars(NorthMars)", "if (In(x, y) & In(y, z)) then In(x, z)"], "conclusion": "exists x. (City(x) & OnMars(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (In(x, y) & In(y, z)) then In(x, z)\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (In(x, y) & In(y, z)) then In(x, z)\n             ^\n"}
{"timestamp": "2025-05-02T03:22:45.258088", "premises": ["exists x. (City(x) & CivilParish(x) & LocatedIn(x, HambletonDistrict))", "exists x. (District(x) & LocatedIn(x, NorthMars))", "exists x. (Mars(x) & On(x, NorthMars))", "exists x. exists y. exists z. ((LocatedIn(x, y) & LocatedIn(y, z)) -> LocatedIn(x, z))"], "conclusion": "exists x. (City(x) & On(x, Mars))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:23:44.161664", "premises": ["AinderbyQuernhow is a city & AinderbyQuernhow is a civil parish & HambletonDistrict contains AinderbyQuernhow", "HambletonDistrict is in NorthMars", "NorthMars is on Mars", "Location(A, B) & Location(B, C) -> Location(A, C)"], "conclusion": "City(x) & Location(x, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nAinderbyQuernhow is a city & AinderbyQuernhow is a civil parish & HambletonDistrict contains AinderbyQuernhow\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nAinderbyQuernhow is a city & AinderbyQuernhow is a civil parish & HambletonDistrict contains AinderbyQuernhow\n                 ^\n"}
{"timestamp": "2025-05-02T03:23:55.528497", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & HambletonDistrict(AinderbyQuernhow)", "HambletonDistrict(AinderbyQuernhow) & NorthMars(AinderbyQuernhow)", "NorthMars(AinderbyQuernhow) & Mars(AinderbyQuernhow)", "(PlacesIn(A, B) & PlacesIn(B, C)) -> PlacesIn(A, C)"], "conclusion": "~CivilParish(Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~CivilParish(Mars).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~CivilParish(Mars).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:24:35.267627", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & HambletonDistrict(AinderbyQuernhow)", "HambletonDistrict(AinderbyQuernhow) & NorthMars(AinderbyQuernhow)", "NorthMars(AinderbyQuernhow) & Mars(AinderbyQuernhow)", "all x. all y. all z. (PlaceA(x) & LocatedIn(x, PlaceB) & LocatedIn(PlaceB, PlaceC) -> LocatedIn(PlaceA, PlaceC))"], "conclusion": "~(CivilParish(AinderbyQuernhow))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CivilParish/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CivilParish/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CivilParish/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CivilParish/1\n"}
{"timestamp": "2025-05-02T03:25:14.123700", "premises": ["exists x. exists y. (City(x) & CivilParish(x) & District(y) & In(x, y) & HambletonDistrict(y))", "exists x. (District(x) & In(x, NorthMars))", "exists x. (In(x, Mars) & (Mars(x) & On(x, NorthMars)))", "exists x. exists y. (Place(x) & Place(y) & (In(x, y) & In(y, z)) -> In(x, z))", "(AinderbyQuernhow, City) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place)"], "conclusion": "(AinderbyQuernhow, City) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n(AinderbyQuernhow, City) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n(AinderbyQuernhow, City) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict, District) & (NorthMars, Place) & (Mars, Place)\n                 ^\n"}
{"timestamp": "2025-05-02T03:25:24.939268", "premises": ["AinderbyQuernhow(civilParish) & HambletonDistrict(AinderbyQuernhow)", "HambletonDistrict(NorthMars)", "OnMars(NorthMars)", "all x. all y. all z. ((LocatedIn(x, y) & LocatedIn(y, z)) -> LocatedIn(x, z))"], "conclusion": "~exists x. (civilParish(x) & OnMars(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n~exists x. (civilParish(x) & OnMars(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n~exists x. (civilParish(x) & OnMars(x))\n        ^\n"}
{"timestamp": "2025-05-02T03:25:38.216458", "premises": ["exists x. exists y. (City(x) & CivilParish(x) & HambletonDistrict(y) & In(x, y)) & In(y, AinderbyQuernhow)", "exists x. (District(x) & In(x, NorthMars)) & In(x, HambletonDistrict)", "exists x. (Planet(x) & Mars(x)) & In(x, NorthMars)", "exists x. exists y. exists z. (In(x, y) & In(y, z) & In(x, z))"], "conclusion": "exists x. (District(x) & In(x, Mars))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HambletonDistrict/1, HambletonDistrict/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:26:00.726132", "premises": ["city(AinderbyQuernhow) & civilParish(AinderbyQuernhow) & HambletonDistrict(AinderbyQuernhow)", "HambletonDistrict(NorthMars) & NorthMars(Mars)", "Mars(Mars)", "locatedIn(A, B) & locatedIn(B, C) -> locatedIn(A, C)"], "conclusion": "~(exists x. (civilParish(x) & Mars(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:26:18.233387", "premises": ["all x. (CivilParish(x) & AinderbyQuernhow(x) & HambletonDistrict(x))", "all x. (District(x) & HambletonDistrict(x) & NorthMars(x))", "all x. (Planet(x) & NorthMars(x) & Mars(x))", "all x. (PlaceA(x) & PlaceB(x) & PlaceC(x) & LocatedIn(x, PlaceB) & LocatedIn(x, PlaceC) -> LocatedIn(x, PlaceC)"], "conclusion": "exists x. (CivilParish(x) & AinderbyQuernhow(x) & HambletonDistrict(x) & NorthMars(x) & Mars(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (PlaceA(x) & PlaceB(x) & PlaceC(x) & LocatedIn(x, PlaceB) & LocatedIn(x, PlaceC) -> LocatedIn(x, PlaceC)\n                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (PlaceA(x) & PlaceB(x) & PlaceC(x) & LocatedIn(x, PlaceB) & LocatedIn(x, PlaceC) -> LocatedIn(x, PlaceC)\n                                                                                                               ^\n"}
{"timestamp": "2025-05-02T03:28:04.125005", "premises": ["Cats(DouglasAdams) & TheSalmonofDoubt(DouglasAdams)", "UtilizesLifeExperiences(TheSalmonofDoubt) & UtilizesTechnology(TheSalmonofDoubt)", "all x. (Cats(x) -> Painters(x))", "all x. (Painters(x) -> InnovativeIdeas(x))", "exists x. (InnovativeIdeas(x) & Books(x) & UtilizesTechnology(x))"], "conclusion": "Painters(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheSalmonofDoubt/1, TheSalmonofDoubt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheSalmonofDoubt/1, TheSalmonofDoubt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheSalmonofDoubt/1, TheSalmonofDoubt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheSalmonofDoubt/1, TheSalmonofDoubt/0\n"}
{"timestamp": "2025-05-02T03:28:51.894863", "premises": ["exists x. (Cat(x) & Destroyed(x, TheSalmonOfDoubt))", "Utilizes(TheSalmonOfDoubt, LifeExperiences) & Utilizes(TheSalmonOfDoubt, Technology)", "exists x. (Cat(x) & Painter(x))", "all x. (Painter(x) -> Destroys(x, InnovativeIdeas))", "exists x. (InnovativeIdea(x) & (Technology(x) | Utilizes(x, Technology)))"], "conclusion": "Destroyed(DouglasAdams, InnovativeIdeas)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Technology/1, Technology/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Technology/1, Technology/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Technology/1, Technology/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Technology/1, Technology/0\n"}
{"timestamp": "2025-05-02T03:30:46.268127", "premises": ["Cat(DouglasAdams) & Destroyed(DouglasAdams, TheSalmonOfDoubt)", "Utilizes(TheSalmonOfDoubt, LifeExperiences) & Utilizes(TheSalmonOfDoubt, Technology)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> Destroys(x, InnovativeIdeas))", "exists x. (InnovativeIdeas(x) & Technology(x))"], "conclusion": "Destroys(DouglasAdams, InnovativeIdeas)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Technology/1, Technology/0, InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Technology/1, Technology/0, InnovativeIdeas/1, InnovativeIdeas/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Technology/1, Technology/0, InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Technology/1, Technology/0, InnovativeIdeas/1, InnovativeIdeas/0\n"}
{"timestamp": "2025-05-02T03:31:46.242966", "premises": ["Actor(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Professor(DonaldErvinKnuth) & University(Stanford)", "all x. ((Has(x, EnemyOfAnalysisOfAlgorithms)) & (ComputerScientist(x) | Mathematician(x)))"], "conclusion": "all x. ((ComputerScientist(x) | Mathematician(x)) & (EnemyOfAnalysisOfAlgorithms(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: EnemyOfAnalysisOfAlgorithms/1, EnemyOfAnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EnemyOfAnalysisOfAlgorithms/1, EnemyOfAnalysisOfAlgorithms/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: EnemyOfAnalysisOfAlgorithms/1, EnemyOfAnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EnemyOfAnalysisOfAlgorithms/1, EnemyOfAnalysisOfAlgorithms/0\n"}
{"timestamp": "2025-05-02T03:32:04.839075", "premises": ["ChineseComputerScientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritus(Knuth) & At(Knuth, StanfordUniversity)", "EnemyOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "EnemyOfAnalysisOfAlgorithms(Mathematician)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mathematician/1, Mathematician/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mathematician/1, Mathematician/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mathematician/1, Mathematician/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mathematician/1, Mathematician/0\n"}
{"timestamp": "2025-05-02T03:32:19.459561", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity)", "Knuth has been called the \"enemy of the analysis of algorithms.\""], "conclusion": "all x. (Mathematician(x) -> (Calls(x, \"Enemy_of_the_analysis_of_algorithms\") | hasBeenCalled(x, \"Enemy_of_the_analysis_of_algorithms\")))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'has'.\nKnuth has been called the \"enemy of the analysis of algorithms.\"\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'has'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'has'.\nKnuth has been called the \"enemy of the analysis of algorithms.\"\n      ^\n"}
{"timestamp": "2025-05-02T03:32:30.096607", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth) & University(StanfordUniversity)", "EnemyOf(Knuth, AnalysisOfAlgorithms)"], "conclusion": "EnemyOf(Mathematician(x), AnalysisOfAlgorithms)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1\n"}
{"timestamp": "2025-05-02T03:32:34.848863", "premises": ["ComputerScientist(Knuth) & Mathematician(Knuth) & Professor(Knuth) & StanfordUniversity(Knuth)", "EnemyOf(Knuth, AnalysisOfAlgorithms)"], "conclusion": "EnemyOf(Mathematician(x), AnalysisOfAlgorithms)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1\n"}
{"timestamp": "2025-05-02T03:33:27.142268", "premises": ["exists x. (Painting(x) & Artist(x, WhiteTown) & In(x, India))", "exists x. (PeaksOn(x, NoOne) & Paintings(x, YourWoman) & In(x, UK))", "exists x. (PeaksOn(x, NoOne) & Paintings(x, YourWoman) & ExtremelyPopular(x))", "exists x. (PeaksOn(x, NoOne) & Paintings(x, YourWoman) & In(x, Iceland) & In(x, Israel) & In(x, Spain))"], "conclusion": "exists x. (Artist(x, WhiteTown) & ~ ExtremelyPopular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ExtremelyPopular'.  Expected token ')'.\nexists x. (Artist(x, WhiteTown) & ~ ExtremelyPopular(x))\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ExtremelyPopular'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ExtremelyPopular'.  Expected token ')'.\nexists x. (Artist(x, WhiteTown) & ~ ExtremelyPopular(x))\n                                    ^\n"}
{"timestamp": "2025-05-02T03:35:20.222095", "premises": ["Painting(YourWoman) & Creator(WhiteTown)", "Peaked(YourWoman, NoOne) & Chart(UKPaintings)", "extremelyPopular(x) -> Peaked(x, NoOne)", "Peaked(YourWoman, NoOne) & ExtremelyPopular(YourWoman)"], "conclusion": "exists x. (Painting(x) & ExtremelyPopular(x) & -Creator(x, WhiteTown))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Creator/1, Creator/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Creator/1, Creator/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Creator/1, Creator/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Creator/1, Creator/2\n"}
{"timestamp": "2025-05-02T03:35:53.475696", "premises": ["Paints(WhiteTown, YourWoman) & Band(WhiteTown)", "Peaks(YourWoman, One) & Chart(UK) & Paintings(YourWoman)", "all x. ((Peaks(x, One)) -> ExtremelyPopular(x))", "Peaks(YourWoman, One) & Chart(Iceland) & Paintings(YourWoman) & Peaks(YourWoman, One) & Chart(Israel) & Peaks(YourWoman, One) & Chart(Spain)"], "conclusion": "exists x. (Paints(x, YourWoman) & Band(x) & Peaks(x, One) & Chart(UK) & Chart(Iceland) & Chart(Israel) & Chart(Spain)) & (~(Peaks(x, One)) | ~(Peaks(x, One)) | ~(Peaks(x, One)) | ~(Peaks(x, One)) | ~(Peaks(x, One)) | ~(Peaks(x, One)) | ~(Peaks(x, One)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Peaks/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Peaks/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Peaks/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Peaks/2\n"}
{"timestamp": "2025-05-02T03:36:28.887446", "premises": ["all x. (UCL(x) & ScoredSame(x) & Scored(x, RegularTime) -> PlayForExtraTime(x))", "all x. (UCL(x) & ScoredSame(x) & Scored(x, RegularTime) & Scored(x, ExtraTime) -> PlayVictoryShootout(x))", "exists x. exists y. (UCL(x) & Scored(x, y) & Scored(y, y) & RegularTime(x)) & (x=RealMadrid) & (y=AtleticMadrid)", "exists x. exists y. (UCL(x) & Scored(x, y) & Scored(y, y) & ExtraTime(x)) & (x=RealMadrid) & (y=AtleticMadrid)"], "conclusion": "exists x. (ScoredSame(x) & Scored(x, RegularTime) & Scored(x, ExtraTime) & PlayVictoryShootout(x)) & (x=RealMadrid) & (x=AtleticMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, RegularTime/1, RegularTime/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, RegularTime/1, RegularTime/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, RegularTime/1, RegularTime/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, RegularTime/1, RegularTime/0\n"}
{"timestamp": "2025-05-02T03:37:54.844110", "premises": ["all x. (If(x, Two, One) = score(TeamOne) & score(TeamTwo)) -> (If(x, Two, One) = score(TeamTwo) & score(TeamOne)) -> PlayExtraTime(TeamOne, TeamTwo)", "all x. ((If(x, Two, One) = score(TeamOne) & score(TeamTwo)) & (If(x, Two, One) = score(TeamTwo) & score(TeamOne))) -> PlayVictoryShootOut(TeamOne, TeamTwo)", "score(RealMadrid, One) & score(AtlanticMadrid, One) & (One = score(RealMadrid, RegularTime) & One = score(AtlanticMadrid, RegularTime))", "score(RealMadrid, Zero) & score(AtlanticMadrid, Zero) & (Zero = score(RealMadrid, ExtraTime) & Zero = score(AtlanticMadrid, ExtraTime))"], "conclusion": "score(RealMadrid, One) & score(AtlanticMadrid, One) & (0 = score(RealMadrid, ExtraTime) & 0 = score(AtlanticMadrid, ExtraTime))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: score/2, score/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: score/2, score/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: score/2, score/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: score/2, score/1\n"}
{"timestamp": "2025-05-02T03:40:58.198137", "premises": ["if xOne and xTwo. (Score(xOne, UCLSemifinal) = Score(xTwo, UCLSemifinal)) and (xOne = RealMadrid or xTwo = RealMadrid or xOne = AtlanticMadrid or xTwo = AtlanticMadrid) then (ExtraTime(xOne, xTwo) = xOne)", "if xOne and xTwo. (Score(xOne, UCLSemifinal) = Score(xTwo, UCLSemifinal)) and (xOne = RealMadrid or xTwo = RealMadrid or xOne = AtlanticMadrid or xTwo = AtlanticMadrid) then (VictoryShootout(xOne, xTwo) = xOne)", "Score(RealMadrid, UCLSemifinal) = 1 and Score(AtlanticMadrid, UCLSemifinal) = 1", "Score(RealMadrid, UCLSemifinal) = 0 and Score(AtlanticMadrid, UCLSemifinal) = 0 and ExtraTime(RealMadrid, AtlanticMadrid) = 0"], "conclusion": "if xOne and xTwo. (Score(xOne, UCLSemifinal) = Score(xTwo, UCLSemifinal)) and (xOne = RealMadrid or xTwo = RealMadrid or xOne = AtlanticMadrid or xTwo = AtlanticMadrid) then (VictoryShootout(xOne, xTwo) = xOne)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'xOne'.\nif xOne and xTwo. (Score(xOne, UCLSemifinal) = Score(xTwo, UCLSemifinal)) and (xOne = RealMadrid or xTwo = RealMadrid or xOne = AtlanticMadrid or xTwo = AtlanticMadrid) then (VictoryShootout(xOne, xTwo) = xOne)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'xOne'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'xOne'.\nif xOne and xTwo. (Score(xOne, UCLSemifinal) = Score(xTwo, UCLSemifinal)) and (xOne = RealMadrid or xTwo = RealMadrid or xOne = AtlanticMadrid or xTwo = AtlanticMadrid) then (VictoryShootout(xOne, xTwo) = xOne)\n   ^\n"}
{"timestamp": "2025-05-02T03:43:13.336718", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime(x, y)) = Score(y, RegularTime(x, y))) & NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime(x, y)) = Score(y, RegularTime(x, y))) & (Score(x, ExtraTime(x, y)) = Score(y, ExtraTime(x, y))) & NeedToPlayVictoryShootOut(x, y))", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, RegularTime) = 1", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, ExtraTime) = 0"], "conclusion": "NeedToPlayVictoryShootOut(RealMadrid, AtlanticMadrid) & NeedToPlayVictoryShootOut(AtlanticMadrid, RealMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/0, ExtraTime/2, RegularTime/0, RegularTime/2, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/0, ExtraTime/2, RegularTime/0, RegularTime/2, Score/3, Score/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/0, ExtraTime/2, RegularTime/0, RegularTime/2, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/0, ExtraTime/2, RegularTime/0, RegularTime/2, Score/3, Score/2\n"}
{"timestamp": "2025-05-02T03:46:15.491382", "premises": ["all x. (SoccerTeam(x) & UCLSemifinal(x) & RegularTime(x) & Points(x) = Points(x) & ExtraTime(x) & Points(x) = Points(x)) -> ExtraTime(x)", "all x. (SoccerTeam(x) & UCLSemifinal(x) & RegularTime(x) & Points(x) = Points(x) & ExtraTime(x) & Points(x) = Points(x) & VictoryShootOut(x))", "exists x. (SoccerTeam(x) & UCLSemifinal(x) & RegularTime(x) & Points(x) = 1 & SoccerTeam(x) & UCLSemifinal(x) & RegularTime(x) & Points(x) = 1) & (x=RealMadrid) & (x=AtleticMadrid)", "exists x. (SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0 & SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0) & (x=RealMadrid) & (x=AtleticMadrid)", "all x. ((SoccerTeam(x) & UCLSemifinal(x) & RegularTime(x) & Points(x) = 1 & ExtraTime(x) & Points(x) = 0) & (x=RealMadrid) & (x=AtleticMadrid)) -> ExtraTime(x) & (x=RealMadrid) & (x=AtleticMadrid)) & (x=RealMadrid) & (x=AtleticMadrid)) & (x=RealMadrid) & (x=AtleticMadrid))"], "conclusion": "all x. (SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0 & SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0) & (x=RealMadrid) & (x=AtleticMadrid))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. (SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0 & SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0) & (x=RealMadrid) & (x=AtleticMadrid))\n                                                                                                                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. (SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0 & SoccerTeam(x) & UCLSemifinal(x) & ExtraTime(x) & Points(x) = 0) & (x=RealMadrid) & (x=AtleticMadrid))\n                                                                                                                                                                             ^\n"}
{"timestamp": "2025-05-02T03:46:52.944571", "premises": ["all x. all y. (Score(x, y) = (RegularTime(x, y) & RegularTime(y, x)) -> ExtraTime(x, y))", "all x. all y. (Score(x, y) = (RegularTime(x, y) & ExtraTime(x, y)) -> VictoryShootout(x, y))", "Score(RealMadrid, AtleticMadrid) = (RegularTime(RealMadrid, AtleticMadrid) & RegularTime(AtleticMadrid, RealMadrid)) & 1", "Score(RealMadrid, AtleticMadrid) = (ExtraTime(RealMadrid, AtleticMadrid) & ExtraTime(AtleticMadrid, RealMadrid)) & 0"], "conclusion": "Score(RealMadrid, AtleticMadrid) = (RegularTime(RealMadrid, AtleticMadrid) & ExtraTime(RealMadrid, AtleticMadrid)) & 1 & ExtraTime(RealMadrid, AtleticMadrid) & ExtraTime(AtleticMadrid, RealMadrid) & 0", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ExtraTime/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ExtraTime/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ExtraTime/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ExtraTime/2\n"}
{"timestamp": "2025-05-02T03:47:37.079826", "premises": ["if(x_and_y) (score(x) = score(y) and x = RegularTime) then playExtraTime(x, y)", "if(x_and_y) (score(x) = score(y) and x = RegularTime and y = ExtraTime) then playVictoryShootOut(x, y)", "score(RealMadrid) = 1 and score(AtleticMadrid) = 1 and x = RegularTime", "score(RealMadrid) = 0 and score(AtleticMadrid) = 0 and y = ExtraTime"], "conclusion": "-playVictoryShootOut(RealMadrid, AtleticMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif(x_and_y) (score(x) = score(y) and x = RegularTime) then playExtraTime(x, y)\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 539, in attempt_ApplicationExpression\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif(x_and_y) (score(x) = score(y) and x = RegularTime) then playExtraTime(x, y)\n                      ^\n"}
{"timestamp": "2025-05-02T03:48:17.150297", "premises": ["if (Points(TeamA, SemifinalGame(TeamA, TeamB)) = Points(TeamB, SemifinalGame(TeamA, TeamB))) then (ExtraTime(TeamA, TeamB))", "if (Points(TeamA, SemifinalGame(TeamA, TeamB)) = Points(TeamB, SemifinalGame(TeamA, TeamB)) and (Points(TeamA, SemifinalGame(TeamA, TeamB)) = Points(TeamB, SemifinalGame(TeamA, TeamB)) and ExtraTime(TeamA, TeamB)) then (VictoryShootout(TeamA, TeamB))", "Points(RealMadrid, SemifinalGame(RealMadrid, AtleticMadrid)) = 1 and Points(AtleticMadrid, SemifinalGame(RealMadrid, AtleticMadrid)) = 1", "Points(RealMadrid, SemifinalGame(RealMadrid, AtleticMadrid)) = 0 and Points(AtleticMadrid, SemifinalGame(RealMadrid, AtleticMadrid)) = 0 and ExtraTime(RealMadrid, AtleticMadrid) = 0"], "conclusion": "not (VictoryShootout(RealMadrid, AtleticMadrid))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif (Points(TeamA, SemifinalGame(TeamA, TeamB)) = Points(TeamB, SemifinalGame(TeamA, TeamB))) then (ExtraTime(TeamA, TeamB))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif (Points(TeamA, SemifinalGame(TeamA, TeamB)) = Points(TeamB, SemifinalGame(TeamA, TeamB))) then (ExtraTime(TeamA, TeamB))\n                                               ^\n"}
{"timestamp": "2025-05-02T03:48:53.321062", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Points(x, Points(y)) = (RegularTimeScore(x) = RegularTimeScore(y)) -> (ExtraTime(x) & ExtraTime(y)) -> (ExtraTimeScore(x) = ExtraTimeScore(y)) -> (PlayForExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Points(x, Points(y)) = (RegularTimeScore(x) = RegularTimeScore(y)) & (ExtraTime(x) & ExtraTime(y)) & (ExtraTimeScore(x) = ExtraTimeScore(y)) -> (PlayVictoryShootout(x, y))", "(RegularTimeScore(RealMadrid) = 1) & (RegularTimeScore(AtleticMadrid) = 1)", "(ExtraTimeScore(RealMadrid) = 0) & (ExtraTimeScore(AtleticMadrid) = 0)"], "conclusion": "(Not(PlayVictoryShootout(RealMadrid, AtleticMadrid)) & (Not(PlayVictoryShootout(AtleticMadrid, RealMadrid))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & Points(x, Points(y)) = (RegularTimeScore(x) = RegularTimeScore(y)) -> (ExtraTime(x) & ExtraTime(y)) -> (ExtraTimeScore(x) = ExtraTimeScore(y)) -> (PlayForExtraTime(x, y))\n                                                                                                                                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & Points(x, Points(y)) = (RegularTimeScore(x) = RegularTimeScore(y)) -> (ExtraTime(x) & ExtraTime(y)) -> (ExtraTimeScore(x) = ExtraTimeScore(y)) -> (PlayForExtraTime(x, y))\n                                                                                                                                                                                                                         ^\n"}
{"timestamp": "2025-05-02T03:49:16.017150", "premises": ["all x, y. (Score(x, y) = NumberOfPoints(x) & Score(y, x) = NumberOfPoints(y) -> ExtraTime(x, y))", "all x, y. (Score(x, y) = NumberOfPoints(x) & Score(y, x) = NumberOfPoints(y) -> VictoryShootOut(x, y))", "Score(RealMadrid, AtleticMadrid) = 1 & Score(AtleticMadrid, RealMadrid) = 1", "Score(RealMadrid, AtleticMadrid) = 0 & Score(AtleticMadrid, RealMadrid) = 0"], "conclusion": "ExtraTime(RealMadrid, AtleticMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y. (Score(x, y) = NumberOfPoints(x) & Score(y, x) = NumberOfPoints(y) -> ExtraTime(x, y))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y. (Score(x, y) = NumberOfPoints(x) & Score(y, x) = NumberOfPoints(y) -> ExtraTime(x, y))\n     ^\n"}
{"timestamp": "2025-05-02T03:49:37.635716", "premises": ["exists x. (Office(x, Mars)) & Company(Ableton)", "exists x. (Office(x, Venus)) & Company(Ableton)", "Mars(x) & Venus(x) & DifferentPlanets(x)", "all x. ((Office(x, Mars) & Office(x, Venus)) -> SmallCompany(x)) & Company(Ableton)", "Distroys(Ableton, MusicSoftware)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:49:50.700910", "premises": ["exists x. (OfficeOf(Ableton, x) & Planet(x, Mars))", "exists x. (OfficeOf(Ableton, x) & Planet(x, Venus))", "exists x. exists y. (Planet(x, Mars) & Planet(y, Venus) & x<>y)", "exists x. ((OfficeOf(Ableton, Mars) & OfficeOf(Ableton, Venus)) -> SmallCompany(Ableton))", "distroys(Ableton, MusicSoftware)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Planet(x,Mars) & Planet(y,Venus)) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Planet(x,Mars) & Planet(y,Venus)) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:50:35.605802", "premises": ["exists x. (OfficeOn(Ableton, x) & Mars(x))", "exists x. (OfficeOn(Ableton, x) & Venus(x))", "all x. ((Mars(x) & Venus(x)) -> -SamePlanet(x))", "all x. ((OfficeOn(x, Mars) & OfficeOn(x, Venus)) -> SmallCompany(x))", "distributes(Ableton, MusicSoftware)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:50:56.616452", "premises": ["Office(Ableton, Mars)", "Office(Ableton, Venus)", "Mars(x) & Venus(x) & DifferentPlanets(x)", "exists x. (Office(x, Mars) & Office(x, Venus) & SmallCompany(x))", "Distributor(Ableton, MusicSoftware)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:51:26.409135", "premises": ["officeOnMars(Ableton)", "officeOnVenus(Ableton)", "differentPlanets(Mars, Venus)", "SmallCompany(x) <- hasOfficesOnDifferentPlanets(x)", "distroysMusicSoftware(Ableton)"], "conclusion": "-officeOnMars(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSmallCompany(x) <- hasOfficesOnDifferentPlanets(x)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSmallCompany(x) <- hasOfficesOnDifferentPlanets(x)\n                ^\n"}
{"timestamp": "2025-05-02T03:51:36.709793", "premises": ["hasOffice(Ableton, Mars)", "hasOffice(Ableton, Venus)", "Mars(x) & Venus(x)", "smallCompany(x) & (hasOffice(x, Mars) & hasOffice(x, Venus))", "distroys(Ableton, MusicSoftware)"], "conclusion": "~hasOffice(Ableton, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~hasOffice(Ableton,Mars).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~hasOffice(Ableton,Mars).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:51:52.396824", "premises": ["exists x. (OfficeOn(x, Mars) & Company(x) & Ableton(x))", "exists x. (OfficeOn(x, Venus) & Company(x) & Ableton(x))", "exists x. (OfficeOn(x, Mars) & OfficeOn(x, Venus)) & (x=Mars) & (x=Venus)", "exists x. (Company(x) & (x has offices on(Mars) | x has offices on(Venus)) & SmallCompany(x))", "exists x. (Distributes(Ableton, MusicSoftware))"], "conclusion": "~OfficeOn(Ableton, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'has'.  Expected token ')'.\nexists x. (Company(x) & (x has offices on(Mars) | x has offices on(Venus)) & SmallCompany(x))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'has'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'has'.  Expected token ')'.\nexists x. (Company(x) & (x has offices on(Mars) | x has offices on(Venus)) & SmallCompany(x))\n                           ^\n"}
{"timestamp": "2025-05-02T03:52:01.701325", "premises": ["exists x. (Office(x, Mars)) & Exists(x, Ableton)", "exists x. (Office(x, Venus)) & Exists(x, Ableton)", "all x. (Mars(x) & Venus(x)) -> Different(Mars, Venus)", "all x. (Office(x, Mars) & Office(x, Venus)) -> Small(x)"], "conclusion": "Distroys(Ableton, MusicSoftware)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:52:15.597221", "premises": ["exists x. (Office(x, Mars)) & Ableton(x)", "exists x. (Office(x, Venus)) & Ableton(x)", "exists x. (Mars(x) & Venus(x)) & ~(x=Mars) & ~(x=Venus)", "all x. ((Office(x, Mars) & Office(x, Venus)) -> SmallCompany(x))", "distributes(Ableton, MusicSoftware)"], "conclusion": "~(exists x. (Office(x, Mars) & Ableton(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nexists x. (Mars(x) & Venus(x)) & ~(x=Mars) & ~(x=Venus)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nexists x. (Mars(x) & Venus(x)) & ~(x=Mars) & ~(x=Venus)\n                                    ^\n"}
{"timestamp": "2025-05-02T03:52:44.818932", "premises": ["exists x. (OfficeOn(Ableton, Mars))", "exists x. (OfficeOn(Ableton, Venus))", "Mars(x) & Venus(x) -> -DifferentPlanets(x)", "exists x. (Company(x) & (OfficeOn(x, Mars) & OfficeOn(x, Venus)) & SmallCompany(x))", "Distroys(Ableton, MusicSoftware)"], "conclusion": "-OfficeOn(Ableton, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:52:54.530679", "premises": ["exists x. (OfficeOn(Ableton, x) & Mars(x))", "exists x. (OfficeOn(Ableton, x) & Venus(x))", "Mars(x) & Venus(x) -> x = Mars & x = Venus", "exists x. (Ableton(x) & (OfficeOn(x, Mars) & OfficeOn(x, Venus)) & SmallCompany(x))"], "conclusion": "Distroys(Ableton, MusicSoftware)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0, Ableton/1, Ableton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0, Ableton/1, Ableton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0, Ableton/1, Ableton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0, Ableton/1, Ableton/0\n"}
{"timestamp": "2025-05-02T03:53:06.032971", "premises": ["exists x. (OfficeOn(Ableton, x) & Mars(x))", "exists x. (OfficeOn(Ableton, x) & Venus(x))", "different(Mars, Venus)", "exists x. (OfficeOn(x, Mars) & OfficeOn(x, Venus)) -> SmallCompany(x)", "distroys(Ableton, MusicSoftware)"], "conclusion": "-OfficeOn(Ableton, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Venus/1, Venus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-02T03:53:08.835237", "premises": ["all x. (Boring(x) -> Cool(x))", "all x. (EndOfRelationship(x) -> Boring(x))"], "conclusion": "Devastating(EndOfRelationship(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EndOfRelationship/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EndOfRelationship/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EndOfRelationship/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EndOfRelationship/1\n"}
{"timestamp": "2025-05-02T03:53:11.530052", "premises": ["all x. (Boring(x) -> Cool(x))", "all x. (EndOfRelationship(x) -> Boring(x))"], "conclusion": "-Cool(EndOfRelationship)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0\n"}
{"timestamp": "2025-05-02T03:53:14.693672", "premises": ["if (isBoring(x) -> isCool(x))", "if (isEndOfRelationship(x) -> isBoring(x))"], "conclusion": "if (isEndOfRelationship(x) -> isDevastating(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nif (isEndOfRelationship(x) -> isDevastating(x))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nif (isEndOfRelationship(x) -> isDevastating(x))\n                           ^\n"}
{"timestamp": "2025-05-02T03:53:20.154379", "premises": ["if Boring(x) then Cool(x)", "if EndOfRelationship(x) then Boring(x)"], "conclusion": "-EndOfRelationship(x) -> Devastating(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Boring'.\nif Boring(x) then Cool(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Boring'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Boring'.\nif Boring(x) then Cool(x)\n   ^\n"}
{"timestamp": "2025-05-02T03:53:58.875793", "premises": ["in(China, EuropeanUnion) & declining(ChinaEconomy)", "from(China) -> in(China, EuropeanUnion)", "in(India, EuropeanUnion) & declining(IndiaEconomy)", "from(India) -> in(India, EuropeanUnion)", "all(x, from(x, China) -> Brazilian(x))", "all(x, from(x, India) -> Martian(x))", "exists(x, from(x, India))"], "conclusion": "forall(x, from(x, EuropeanUnion) -> not(Martian(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be quantified.\nforall(x, from(x, EuropeanUnion) -> not(Martian(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be quantified.\nforall(x, from(x, EuropeanUnion) -> not(Martian(x))\n      ^\n"}
{"timestamp": "2025-05-02T03:54:24.947399", "premises": ["(In(China, EuropeanUnion) & Declining(China))", "all x. (From(x, China) -> In(x, EuropeanUnion))", "(In(India, EuropeanUnion) & Declining(India))", "all x. (From(x, India) -> In(x, EuropeanUnion))", "all x. (From(x, China) -> From(x, Brazil))", "all x. (From(x, India) -> From(x, Mars))", "Exists(From(x, India))"], "conclusion": "(In(India, EuropeanUnion) & ~(From(x, India) -> From(x, Mars)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\n(In(India, EuropeanUnion) & ~(From(x, India) -> From(x, Mars)))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\n(In(India, EuropeanUnion) & ~(From(x, India) -> From(x, Mars)))\n                                             ^\n"}
{"timestamp": "2025-05-02T03:54:43.664028", "premises": ["exists x. (In(China, EuropeanUnion) & (Declining(x)) & China)", "if (x=China) then (In(x, EuropeanUnion))", "exists x. (In(India, EuropeanUnion) & (Declining(x)) & India)", "exists x. (From(x, China) & (Brazilian(x)))", "exists x. (From(x, India) & (Martian(x)))", "exists x. (From(x, India))"], "conclusion": "not (exists x. (From(x, EuropeanUnion) & Martian(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif (x=China) then (In(x, EuropeanUnion))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif (x=China) then (In(x, EuropeanUnion))\n     ^\n"}
{"timestamp": "2025-05-02T03:55:30.430038", "premises": ["in(China, EuropeanUnion) & Declining(ChinasEconomy)", "if(someoneIsFromChina, then(in(someone, EuropeanUnion)))", "in(India, EuropeanUnion) & Declining(IndiasEconomy)", "all x. (from(x, China) -> from(x, Brazil))", "all x. (from(x, India) -> from(x, Mars))", "exists x. (from(x, India))"], "conclusion": "forall x. ((in(x, EuropeanUnion) & not(from(x, Mars))) | not(in(x, EuropeanUnion)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: in/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: in/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: in/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: in/2\n"}
{"timestamp": "2025-05-02T03:56:40.360082", "premises": ["In(China, EuropeanUnion) & Declining(China)", "all x. (From(x, China) -> In(x, EuropeanUnion))", "In(India, EuropeanUnion) & Declining(India)", "all x. (From(x, India) -> In(x, EuropeanUnion))", "all x. (From(x, China) -> From(x, Brazil))", "all x. (From(x, India) -> From(x, Mars))", "exists x. (From(x, India))", "(-(Exists(x. (In(x, EuropeanUnion) & From(x, Mars))))", "-Declining(China)", "-Declining(India)", "In(Brazil, EuropeanUnion)"], "conclusion": "In(Mars, EuropeanUnion)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n(-(Exists(x. (In(x, EuropeanUnion) & From(x, Mars))))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n(-(Exists(x. (In(x, EuropeanUnion) & From(x, Mars))))\n           ^\n"}
{"timestamp": "2025-05-02T03:56:56.602848", "premises": ["in(EuropeanUnion, China) & declining(China)", "in(EuropeanUnion, x) & from(x, China)", "in(EuropeanUnion, India) & declining(India)", "from(x, China) -> from(x, Brazil)", "from(x, India) -> from(x, Mars)", "exists(x) & from(x, India)"], "conclusion": "~(in(EuropeanUnion, x) & from(x, Mars))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n~(in(EuropeanUnion, x) & from(x, Mars))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n~(in(EuropeanUnion, x) & from(x, Mars))\n                       ^\n"}
{"timestamp": "2025-05-02T03:58:07.570890", "premises": ["exists x. ((-In(x, EuropeanUnion) | -EconomyDeclining(x)) & FromChina(x))", "For(x, FromChina(x)) -> In(x, EuropeanUnion)", "exists x. ((-In(x, EuropeanUnion) | -EconomyDeclining(x)) & FromIndia(x))", "For(x, FromIndia(x)) -> In(x, EuropeanUnion)", "For(x, FromChina(x)) -> Brazilian(x)", "For(x, FromIndia(x)) -> Martian(x)", "exists x. FromIndia(x)"], "conclusion": "-EconomyDeclining(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FromChina/1, FromIndia/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FromChina/1, FromIndia/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FromChina/1, FromIndia/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FromChina/1, FromIndia/1\n"}
{"timestamp": "2025-05-02T03:58:29.179948", "premises": ["in(China, EuropeanUnion) & declining(China)", "(in(x, China) & in(x, EuropeanUnion)) -> true", "in(India, EuropeanUnion) & declining(India)", "(in(x, India) & in(x, EuropeanUnion)) -> true", "all(x, (in(x, China) -> in(x, Brazil))", "all(x, (in(x, India) -> in(x, Mars))", "exists(x, in(x, India))"], "conclusion": "-declining(India)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be quantified.\nall(x, (in(x, China) -> in(x, Brazil))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be quantified.\nall(x, (in(x, China) -> in(x, Brazil))\n   ^\n"}
{"timestamp": "2025-05-02T04:00:12.896691", "premises": ["all x. ((In(x, EuropeanUnion) & China(x)) -> DecliningEconomy(x))", "all x. ((From(x, China) & In(x, EuropeanUnion)) -> True)", "all x. ((In(x, EuropeanUnion) & India(x)) -> DecliningEconomy(x))", "all x. ((From(x, India) & In(x, EuropeanUnion)) -> True)", "all x. ((From(x, China) & Brazilian(x)) -> True)", "all x. ((From(x, India) & Martian(x)) -> True)"], "conclusion": "exists x. From(x, India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-05-02T04:00:36.800552", "premises": ["exists x. (In(x, China) & (EU(x) & Declining(x))", "exists x. (From(x, China) -> In(x, EU))", "exists x. (In(x, India) & (EU(x) & Declining(x))", "exists x. (From(x, India) -> In(x, EU))", "exists x. (From(x, China) -> From(x, Brazil))", "exists x. (From(x, India) -> From(x, Mars))", "exists x. (From(x, India))"], "conclusion": "(EU(India) & NotDeclining(India))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (In(x, China) & (EU(x) & Declining(x))\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (In(x, China) & (EU(x) & Declining(x))\n                                                ^\n"}
{"timestamp": "2025-05-02T04:01:11.783057", "premises": ["exists x. (In(x, EuropeanUnion) & Declining(x)) & China(x)", "exists x. (From(x, China) & In(x, EuropeanUnion))", "exists x. (In(x, EuropeanUnion) & Declining(x)) & India(x)", "all x. (From(x, China) -> From(x, Brazil))", "all x. (From(x, India) -> From(x, Mars))", "exists x. (From(x, India))"], "conclusion": "not (exists x. (In(x, EuropeanUnion) & Declining(x) & India(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0\n"}
{"timestamp": "2025-05-02T04:01:46.130734", "premises": ["all x. ((BasketballPlayer(x) & (RightNose(x) & LeftNose(x)))", "all x. ((TopBasketballPlayer(x) & (RightNose(x) & LeftNose(x)))", "all x. ((ScoresManyGoalsUsingLeftNose(x) & (RightNose(x) & LeftNose(x)))", "all x. ((ScoresManyGoalsUsingRightNose(x) & (RightNose(x) & LeftNose(x)))", "BasketballPlayer(CristianoRonaldo)", "RightNose(CristianoRonaldo)", "ScoresManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((BasketballPlayer(x) & (RightNose(x) & LeftNose(x)))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((BasketballPlayer(x) & (RightNose(x) & LeftNose(x)))\n                                                            ^\n"}
{"timestamp": "2025-05-02T04:02:26.920433", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> UseBoth(x, RightNose, LeftNose))", "all x. (ScoresManyGoals(x, LeftNose) -> VeryEfficient(x, RightNose) & VeryEfficient(x, LeftNose))", "all x. (ScoresManyGoals(x, RightNose) -> VeryEfficient(x, RightNose) & VeryEfficient(x, LeftNose))", "BasketballPlayer(CristianoRonaldo)", "UseBoth(CristianoRonaldo, RightNose, LeftNose)", "ScoresManyGoals(CristianoRonaldo, LeftNose)"], "conclusion": "UseBoth(CristianoRonaldo, RightNose, LeftNose)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:03:10.112955", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (Efficient(x, RightNose) & Efficient(x, LeftNose)))", "all x. (Scorer(x, ManyGoalsUsingLeftNose) -> (Efficient(x, LeftNose)))", "all x. (Scorer(x, ManyGoalsUsingRightNose) -> (Efficient(x, RightNose)))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "Scorer(CristianoRonaldo, ManyGoalsUsingLeftNose)"], "conclusion": "all x. (TopBasketballPlayer(x) -> (Scorer(x, ManyGoalsUsingLeftNose) & Scorer(x, ManyGoalsUsingRightNose)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:03:40.684656", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (CanUseLeftNose(x) & CanUseRightNose(x)))", "all x. ((CanScoreManyGoalsUsingLeftNose(x) & CanUseLeftNose(x)) -> CanUseLeftNose(x) efficiently)", "all x. ((CanScoreManyGoalsUsingRightNose(x) & CanUseRightNose(x)) -> CanUseRightNose(x) efficiently)", "BasketballPlayer(CristianoRonaldo)", "CanUseRightNose(CristianoRonaldo) efficiently"], "conclusion": "CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'efficiently'.  Expected token ')'.\nall x. ((CanScoreManyGoalsUsingLeftNose(x) & CanUseLeftNose(x)) -> CanUseLeftNose(x) efficiently)\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'efficiently'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'efficiently'.  Expected token ')'.\nall x. ((CanScoreManyGoalsUsingLeftNose(x) & CanUseLeftNose(x)) -> CanUseLeftNose(x) efficiently)\n                                                                                     ^\n"}
{"timestamp": "2025-05-02T04:04:18.333617", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> ((CanUseRightNose(x) & CanUseLeftNose(x)) & (VeryEfficient(x, RightNose) & VeryEfficient(x, LeftNose))))", "all x. (CanScoreManyGoalsUsingLeftNose(x) -> VeryEfficient(x, LeftNose))", "all x. (CanScoreManyGoalsUsingRightNose(x) -> VeryEfficient(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "CanUseRightNose(CristianoRonaldo)", "CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:04:47.058711", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (UseBothNose(x) & UseBothNose(x)))", "all x. (CanScoreManyGoals(x, leftNose) -> CanUse(x, leftNose) very efficiently)", "all x. (CanScoreManyGoals(x, rightNose) -> CanUse(x, rightNose) very efficiently)", "BasketballPlayer(CristianoRonaldo)", "CanUse(CristianoRonaldo, rightNose) very efficiently"], "conclusion": "CanScoreManyGoals(CristianoRonaldo, leftNose)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'very'.  Expected token ')'.\nall x. (CanScoreManyGoals(x, leftNose) -> CanUse(x, leftNose) very efficiently)\n                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'very'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'very'.  Expected token ')'.\nall x. (CanScoreManyGoals(x, leftNose) -> CanUse(x, leftNose) very efficiently)\n                                                              ^\n"}
{"timestamp": "2025-05-02T04:05:58.855823", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> Efficient(x, LeftNose) & Efficient(x, RightNose))", "all x. (CanScoreManyGoalsWithLeftNose(x) -> Efficient(x, LeftNose))", "all x. (CanScoreManyGoalsWithRightNose(x) -> Efficient(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "CanScoreManyGoalsWithLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0\n"}
{"timestamp": "2025-05-02T04:06:35.391247", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (UseEfficiently(x, RightNose) & UseEfficiently(x, LeftNose)))", "all x. (ScoreManyGoalsUsingLeftNose(x) -> (UseEfficiently(x, LeftNose)))", "all x. (ScoreManyGoalsUsingRightNose(x) -> (UseEfficiently(x, RightNose)))", "BasketballPlayer(CristianoRonaldo)", "UseEfficiently(CristianoRonaldo, RightNose)", "ScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:07:10.291794", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (Efficient(x, RightNose) & Efficient(x, LeftNose)))", "all x. (ScoredManyGoalsUsingLeftNose(x) -> Efficient(x, LeftNose))", "all x. (ScoredManyGoalsUsingRightNose(x) -> Efficient(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "ScoredManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:07:50.776278", "premises": ["all x. (BasketballPlayer(x) -> Has(x, RightNose) & Has(x, LeftNose))", "all x. (TopBasketballPlayer(x) -> CanUseBoth(x, RightNose, LeftNose))", "all x. (CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, RightNose) & CanUse(x, LeftNose))", "all x. (CanScoreManyGoalsUsing(x, RightNose) -> CanUse(x, LeftNose) & CanUse(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "CanUse(CristianoRonaldo, RightNose)", "CanScoreManyGoalsUsing(CristianoRonaldo, LeftNose)"], "conclusion": "all x. (TopBasketballPlayer(x) -> Not(BasketballPlayer(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BasketballPlayer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BasketballPlayer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BasketballPlayer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BasketballPlayer/1\n"}
{"timestamp": "2025-05-02T04:08:51.132038", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> ((CanUseBothNoses(x) & Efficient(x, RightNose) & Efficient(x, LeftNose)))", "all x. (CanScoreManyGoalsWithLeftNose(x) -> (Efficient(x, LeftNose) & (RightNose(x) = LeftNose)))", "all x. (CanScoreManyGoalsWithRightNose(x) -> (Efficient(x, RightNose) & (LeftNose(x) = RightNose)))", "BasketballPlayer(CristianoRonaldo)", "CanUseRightNose(CristianoRonaldo)", "CanScoreManyGoalsWithLeftNose(CristianoRonaldo)"], "conclusion": "((CanScoreManyGoalsWithRightNose(CristianoRonaldo) & CanUseRightNose(CristianoRonaldo) & CanScoreManyGoalsWithLeftNose(CristianoRonaldo) & CanUseLeftNose(CristianoRonaldo)) -> ~TopBasketballPlayer(CristianoRonaldo))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (TopBasketballPlayer(x) -> ((CanUseBothNoses(x) & Efficient(x, RightNose) & Efficient(x, LeftNose)))\n                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (TopBasketballPlayer(x) -> ((CanUseBothNoses(x) & Efficient(x, RightNose) & Efficient(x, LeftNose)))\n                                                                                                           ^\n"}
{"timestamp": "2025-05-02T04:10:00.910705", "premises": ["all x. (BasketballPlayer(x) -> Has(x, RightNose) & Has(x, LeftNose))", "exists x. (BasketballPlayer(x) & (Efficient(x, RightNose) & Efficient(x, LeftNose)))", "exists x. (BasketballPlayer(x) & (CanScoreManyGoalsUsingLeftNose(x) -> (Efficient(x, LeftNose)) & (CanScoreManyGoalsUsingRightNose(x) -> (Efficient(x, RightNose))))", "exists x. (BasketballPlayer(x) & (CanScoreManyGoalsUsingRightNose(x) -> (Efficient(x, RightNose)) & (CanScoreManyGoalsUsingLeftNose(x) -> (Efficient(x, LeftNose))))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "(not exists x. (BasketballPlayer(x) & (Efficient(x, RightNose) & (Efficient(x, LeftNose)))) & (not exists x. (BasketballPlayer(x) & (CanScoreManyGoalsUsingLeftNose(x) & (CanScoreManyGoalsUsingRightNose(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(not exists x. (BasketballPlayer(x) & (Efficient(x, RightNose) & (Efficient(x, LeftNose)))) & (not exists x. (BasketballPlayer(x) & (CanScoreManyGoalsUsingLeftNose(x) & (CanScoreManyGoalsUsingRightNose(x))))\n                                                                                                                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(not exists x. (BasketballPlayer(x) & (Efficient(x, RightNose) & (Efficient(x, LeftNose)))) & (not exists x. (BasketballPlayer(x) & (CanScoreManyGoalsUsingLeftNose(x) & (CanScoreManyGoalsUsingRightNose(x))))\n                                                                                                                                                                                                               ^\n"}
{"timestamp": "2025-05-02T04:10:36.145529", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> Efficient(x, RightNose) & Efficient(x, LeftNose))", "all x. (CanScoreManyGoals(x, LeftNose) -> Efficient(x, LeftNose))", "all x. (CanScoreManyGoals(x, RightNose) -> Efficient(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "CanUse(CristianoRonaldo, RightNose)", "CanScoreManyGoals(CristianoRonaldo, LeftNose)"], "conclusion": "-(TopBasketballPlayer(CristianoRonaldo))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:11:19.371542", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (Efficient(x, LeftNose) & Efficient(x, RightNose)))", "all x. ((ScoringManyGoals(x, LeftNose) -> Efficient(x, LeftNose)) & (ScoringManyGoals(x, LeftNose) -> Efficient(x, RightNose)))", "all x. ((ScoringManyGoals(x, RightNose) -> Efficient(x, LeftNose)) & (ScoringManyGoals(x, RightNose) -> Efficient(x, RightNose)))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "ScoringManyGoals(CristianoRonaldo, LeftNose)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightNose/1, RightNose/0, LeftNose/1, LeftNose/0\n"}
{"timestamp": "2025-05-02T04:12:14.708545", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "exists x. (BasketballPlayer(x) & TopBasketballPlayer(x) & (RightNose(x) & LeftNose(x))) & (RightNose(x) & LeftNose(x))", "exists x. (BasketballPlayer(x) & (ScoresManyGoalsUsingLeftNose(x) & RightNose(x) & LeftNose(x)))", "exists x. (BasketballPlayer(x) & (ScoresManyGoalsUsingRightNose(x) & RightNose(x) & LeftNose(x)))", "BasketballPlayer(CristianoRonaldo)", "RightNose(CristianoRonaldo)", "ScoresManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "exists x. (BasketballPlayer(x) & TopBasketballPlayer(x) & (RightNose(x) & LeftNose(x))) & ~(ScoresManyGoalsUsingLeftNose(x) & RightNose(x) & LeftNose(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nexists x. (BasketballPlayer(x) & TopBasketballPlayer(x) & (RightNose(x) & LeftNose(x))) & ~(ScoresManyGoalsUsingLeftNose(x) & RightNose(x) & LeftNose(x))\n                                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nexists x. (BasketballPlayer(x) & TopBasketballPlayer(x) & (RightNose(x) & LeftNose(x))) & ~(ScoresManyGoalsUsingLeftNose(x) & RightNose(x) & LeftNose(x))\n                                                                                                                            ^\n"}
{"timestamp": "2025-05-02T04:12:59.376082", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (CanUse(x, RightNose) & CanUse(x, LeftNose)))", "all x. ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, RightNose)) & ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, LeftNose)))", "all x. ((CanScoreManyGoalsUsing(x, RightNose) -> CanUse(x, LeftNose)) & ((CanScoreManyGoalsUsing(x, RightNose) -> CanUse(x, RightNose)))", "BasketballPlayer(CristianoRonaldo)", "CanUse(CristianoRonaldo, RightNose)", "CanScoreManyGoalsUsing(CristianoRonaldo, LeftNose)"], "conclusion": "(not TopBasketballPlayer(CristianoRonaldo))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, RightNose)) & ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, LeftNose)))\n                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, RightNose)) & ((CanScoreManyGoalsUsing(x, LeftNose) -> CanUse(x, LeftNose)))\n                                                                                                                                      ^\n"}
{"timestamp": "2025-05-02T04:14:21.707980", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (CanUseBoth(x, RightNose) & CanUseBoth(x, LeftNose)))", "all x. (CanScoreManyGoalsUsingLeftNose(x) -> CanUse(x, RightNose))", "all x. (CanScoreManyGoalsUsingRightNose(x) -> CanUse(x, LeftNose))", "BasketballPlayer(CristianoRonaldo)", "CanUse(CristianoRonaldo, RightNose)", "CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-05-02T04:15:41.588888", "premises": ["NationalLobsterHatchery(Padstow, England)", "NationalLobsterHatcheryOpenToVisitors", "all x. (Museum(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. (ForDestruction(x) -> ReleaseAnimals(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/2, NationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/2, NationalLobsterHatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/2, NationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/2, NationalLobsterHatchery/0\n"}
{"timestamp": "2025-05-02T04:19:10.259232", "premises": ["all x. (NobelPrize(x) -> x)", "all x. (NobelPrize(x) & Ignores(x, Contributions(x, AnalysisOfAlgorithms))", "all x. (NobelPrize(x) & RecognizedFor(x, PoleDancing))", "all x. (NobelPrize(x) & Hates(x, NumericalMethods))", "all x. (NobelPrize(x) & MakesContributions(x, PoleDancing))"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y)) & (x=y) | (x=MarvinMinsky_&_y=JohnMcCarthy) | (x=MarvinMinsky_&_y=DonaldKnuth) | (x=RichardHamming_&_y=JohnMcCarthy) | (x=RichardHamming_&_y=DonaldKnuth) | (x=JohnMcCarthy_&_y=MarvinMinsky) | (x=JohnMcCarthy_&_y=RichardHamming) | (x=DonaldKnuth_&_y=MarvinMinsky) | (x=DonaldKnuth_&_y=RichardHamming) | (x=MarvinMinsky_&_y=RichardHamming))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (NobelPrize(x) & Ignores(x, Contributions(x, AnalysisOfAlgorithms))\n                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (NobelPrize(x) & Ignores(x, Contributions(x, AnalysisOfAlgorithms))\n                                                                          ^\n"}
{"timestamp": "2025-05-02T04:19:26.999780", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ignored(DonaldKnuth, AnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "recognized(JohnMcCarthy, PoleDancing)"], "conclusion": "atLeast(2, (NobelPrize(x) -> recognized(x, PoleDancing)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NobelPrize/1, recognized/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NobelPrize/1, recognized/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NobelPrize/1, recognized/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NobelPrize/1, recognized/2\n"}
{"timestamp": "2025-05-02T04:19:52.684437", "premises": ["all x. (NobelPrize(x) -> (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "(IgnoredContributions(DonaldKnuth) & AnalysisOfAlgorithms(DonaldKnuth))", "(RecognizedFor(MarvinMinsky, PoleDancing) & ContributionsTo(MarvinMinsky, PoleDancing))", "(Hates(RichardHamming, NumericalMethods) & ContributionsTo(RichardHamming, NumericalMethods))", "(MadeContributions(JohnMcCarthy, PoleDancing) & ContributionsTo(JohnMcCarthy, PoleDancing))"], "conclusion": "exists x. (NobelPrize(x) & ContributionsTo(x, PoleDancing))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-05-02T04:20:12.708641", "premises": ["exists x. ((NobelPrize(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "ignored(DonaldKnuth, ContributionsToAnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "madeContributions(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y)) & (PoleDancing(x) | PoleDancing(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((NobelPrize(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((NobelPrize(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))\n                                                                                                     ^\n"}
{"timestamp": "2025-05-02T04:20:30.954718", "premises": ["all x. (NobelPrize(x) -> Wins(x, NobelPrize))", "ignored(DonaldKnuth, ContributionToAnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "recognized(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y)) & (poleDancing(x) | poleDancing(y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NobelPrize/1, NobelPrize/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NobelPrize/1, NobelPrize/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NobelPrize/1, NobelPrize/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NobelPrize/1, NobelPrize/0\n"}
{"timestamp": "2025-05-02T04:21:06.516652", "premises": ["all x. (NobelPrize(x) -> Exists(x, Name, (DonaldKnuth_|_MarvinMinsky_|_RichardHamming_|_JohnMcCarthy)))", "exists x. (NobelPrize(x) & Ignores(x, AnalysisOfAlgorithms))", "exists x. (NobelPrize(x) & Recognized(x, PoleDancing))", "exists x. (NobelPrize(x) & Hates(x, NumericalMethods))", "exists x. (NobelPrize(x) & ContributedTo(x, PoleDancing))"], "conclusion": "exists x. (NobelPrize(x) & (Exists(x, Name, (MarvinMinsky_|_JohnMcCarthy)) | Exists(x, Name, (DonaldKnuth_|_RichardHamming)))) & (PoleDancing(MarvinMinsky) | PoleDancing(JohnMcCarthy) | PoleDancing(DonaldKnuth) | PoleDancing(RichardHamming))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PoleDancing/1, PoleDancing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PoleDancing/1, PoleDancing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PoleDancing/1, PoleDancing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PoleDancing/1, PoleDancing/0\n"}
{"timestamp": "2025-05-02T04:22:28.497805", "premises": ["all x. (NobelPrize(x) & Not(x=DonaldKnuth) & Not(x=MarvinMinsky) & Not(x=RichardHamming) & Not(x=JohnMcCarthy))", "exists x. (NobelPrize(x) & DonaldKnuth(x) & Ignored(x, ContributionsToAnalysisOfAlgorithms))", "exists x. (NobelPrize(x) & MarvinMinsky(x) & Recognized(x, ContributionsToPoleDancing))", "exists x. (NobelPrize(x) & RichardHamming(x) & Hated(x, NumericalMethods))", "exists x. (NobelPrize(x) & JohnMcCarthy(x) & Contributed(x, PoleDancing))"], "conclusion": "exists x. (NobelPrize(x) & (exists y. (PoleDancer(y) & NobelPrize(x)) & (exists z. (PoleDancer(z) & NobelPrize(x)))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. (NobelPrize(x) & Not(x=DonaldKnuth) & Not(x=MarvinMinsky) & Not(x=RichardHamming) & Not(x=JohnMcCarthy))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. (NobelPrize(x) & Not(x=DonaldKnuth) & Not(x=MarvinMinsky) & Not(x=RichardHamming) & Not(x=JohnMcCarthy))\n                             ^\n"}
{"timestamp": "2025-05-02T04:22:49.534252", "premises": ["exists x. (NobelPrize(x) & (x=DonaldKnuth_|_x=MarvinMinsky_|_x=RichardHamming_|_x=JohnMcCarthy))", "Ignored(DonaldKnuth, AnalysisOfAlgorithms)", "Recognized(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(JohnMcCarthy, PoleDancing)"], "conclusion": "(exists x. (NobelPrize(x) & Recognized(x, PoleDancing)) & (exists x. (NobelPrize(x) & Contributed(x, PoleDancing)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(exists x. (NobelPrize(x) & Recognized(x, PoleDancing)) & (exists x. (NobelPrize(x) & Contributed(x, PoleDancing)))\n                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(exists x. (NobelPrize(x) & Recognized(x, PoleDancing)) & (exists x. (NobelPrize(x) & Contributed(x, PoleDancing)))\n                                                                                                                   ^\n"}
{"timestamp": "2025-05-02T04:24:30.977898", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "all x. (AnalysisOfAlgorithms(x) -> (Ignored(x) & Not(x=DonaldKnuth)) | (Ignored(x) & Not(x=MarvinMinsky)) | (Ignored(x) & Not(x=RichardHamming)) | (Ignored(x) & Not(x=JohnMcCarthy))", "all x. (PoleDancing(x) -> (Recognized(x) & Minsky(x)) | (Recognized(x) & Not(x=MarvinMinsky)) | (Not(x=Minsky) & Recognized(x) & PoleDancing(x)) | (Not(x=Minsky) & Not(x=Recognized(x)) & PoleDancing(x))", "all x. (NumericalMethods(x) -> (Hated(x) & Hamming(x)) | (Hated(x) & Not(x=Hamming)) | (Not(x=Hamming) & Hated(x) & NumericalMethods(x)) | (Not(x=Hamming) & Not(Hated(x)) & NumericalMethods(x))", "all x. (PoleDancing(x) -> (Contributed(x) & McCarthy(x)) | (Contributed(x) & Not(x=McCarthy)) | (Not(x=McCarthy) & Contributed(x) & PoleDancing(x)) | (Not(x=McCarthy) & Not(Contributed(x)) & PoleDancing(x))"], "conclusion": "(exists x. (PoleDancing(x) & NobelPrize(x)) & (exists y. (PoleDancing(y) & NobelPrize(y)))) | (exists x. (NobelPrize(x) & PoleDancing(x)) & (exists y. (NobelPrize(y) & PoleDancing(y))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. (AnalysisOfAlgorithms(x) -> (Ignored(x) & Not(x=DonaldKnuth)) | (Ignored(x) & Not(x=MarvinMinsky)) | (Ignored(x) & Not(x=RichardHamming)) | (Ignored(x) & Not(x=JohnMcCarthy))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. (AnalysisOfAlgorithms(x) -> (Ignored(x) & Not(x=DonaldKnuth)) | (Ignored(x) & Not(x=MarvinMinsky)) | (Ignored(x) & Not(x=RichardHamming)) | (Ignored(x) & Not(x=JohnMcCarthy))\n                                                      ^\n"}
{"timestamp": "2025-05-02T04:25:40.409120", "premises": ["all x. (NobelPrize(x) -> (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "ignored(DonaldKnuth, AnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "contributed(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. (NobelPrize(x) & (poleDancer(x) | poleDancer(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-05-02T04:26:06.771510", "premises": ["exists x. (NobelPrize(x) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "ignored(DonaldKnuth, AnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hates(RichardHamming, NumericalMethods)", "contributed(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & (x=MarvinMinsky) | (x=JohnMcCarthy)) & ((NobelPrize(y) & (y=MarvinMinsky) | (y=JohnMcCarthy))) & (PoleDancer(x) | PoleDancer(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & (x=MarvinMinsky) | (x=JohnMcCarthy)) & ((NobelPrize(y) & (y=MarvinMinsky) | (y=JohnMcCarthy))) & (PoleDancer(x) | PoleDancer(y))\n                                                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & (x=MarvinMinsky) | (x=JohnMcCarthy)) & ((NobelPrize(y) & (y=MarvinMinsky) | (y=JohnMcCarthy))) & (PoleDancer(x) | PoleDancer(y))\n                                                                                                                                                                      ^\n"}
{"timestamp": "2025-05-02T04:26:29.760175", "premises": ["exists x. (NobelPrize(x) & (Knuth(x) | Minsky(x) | Hamming(x) | McCarthy(x)))", "not(Knuth(x) & ContributedTo(Knuth, AnalysisOfAlgorithms))", "Minsky(x) & ContributedTo(Minsky, PoleDancing)", "Hamming(x) & Hated(x, NumericalMethods)", "McCarthy(x) & ContributedTo(McCarthy, PoleDancing)"], "conclusion": "exists x. ((NobelPrize(x) & (Knuth(x) | Minsky(x) | Hamming(x) | McCarthy(x))) & ContributedTo(x, PoleDancing))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: McCarthy/1, McCarthy/0, Minsky/1, Minsky/0, Knuth/1, Knuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: McCarthy/1, McCarthy/0, Minsky/1, Minsky/0, Knuth/1, Knuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: McCarthy/1, McCarthy/0, Minsky/1, Minsky/0, Knuth/1, Knuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: McCarthy/1, McCarthy/0, Minsky/1, Minsky/0, Knuth/1, Knuth/0\n"}
{"timestamp": "2025-05-02T04:27:01.223922", "premises": ["exists x. (NobelPrize(x) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "ignored(DonaldKnuth, ContributionsToAnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "made(JohnMcCarthy, ContributionsToPoleDancing)"], "conclusion": "exists x. (NobelPrize(x) & (x=DonaldKnuth_|_x=MarvinMinsky_|_x=RichardHamming_|_x=JohnMcCarthy) & atLeast(2, (ignored(x, ContributionsToAnalysisOfAlgorithms) | recognized(x, PoleDancing) | hated(x, NumericalMethods) | made(x, ContributionsToPoleDancing))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ignored/2, recognized/2, hated/2, made/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ignored/2, recognized/2, hated/2, made/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ignored/2, recognized/2, hated/2, made/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ignored/2, recognized/2, hated/2, made/2\n"}
{"timestamp": "2025-05-02T04:28:21.682590", "premises": ["all x. (NobelPrize(x) -> (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "DonaldKnuth(x) & -Ignored(x, AnalysisOfAlgorithms)", "MarvinMinsky(x) & ContributionsTo(x, PoleDancing)", "RichardHamming(x) & Hated(x, NumericalMethods)", "JohnMcCarthy(x) & ContributionsTo(x, PoleDancing)", "all x. ((NobelPrize(x) & (DonaldKnuth(x) & -Ignored(x, AnalysisOfAlgorithms)) & (MarvinMinsky(x) & ContributionsTo(x, PoleDancing)) & (RichardHamming(x) & -Hated(x, NumericalMethods)) & (JohnMcCarthy(x) & ContributionsTo(x, PoleDancing)))", "DonaldKnuth(x) & -Ignored(x, AnalysisOfAlgorithms)", "MarvinMinsky(x) & ContributionsTo(x, PoleDancing)", "RichardHamming(x) & Hated(x, NumericalMethods)"], "conclusion": "JohnMcCarthy(x) & ContributionsTo(x, PoleDancing)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((NobelPrize(x) & (DonaldKnuth(x) & -Ignored(x, AnalysisOfAlgorithms)) & (MarvinMinsky(x) & ContributionsTo(x, PoleDancing)) & (RichardHamming(x) & -Hated(x, NumericalMethods)) & (JohnMcCarthy(x) & ContributionsTo(x, PoleDancing)))\n                                                                                                                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((NobelPrize(x) & (DonaldKnuth(x) & -Ignored(x, AnalysisOfAlgorithms)) & (MarvinMinsky(x) & ContributionsTo(x, PoleDancing)) & (RichardHamming(x) & -Hated(x, NumericalMethods)) & (JohnMcCarthy(x) & ContributionsTo(x, PoleDancing)))\n                                                                                                                                                                                                                                              ^\n"}
{"timestamp": "2025-05-02T04:28:45.287629", "premises": ["all x. (NobelPrize(x) -> Exists(x, ExpertIn(x, FieldOf))", "exists x. (NobelPrize(x) & Ignored(x, AnalysisOfAlgorithms))", "exists x. (NobelPrize(x) & Contributed(x, FieldOfPoleDancing))", "exists x. (NobelPrize(x) & Hated(x, NumericalMethods))", "exists x. (NobelPrize(x) & Contributed(x, FieldOfPoleDancing))"], "conclusion": "all x. ((NobelPrize(x) & -Hated(x, NumericalMethods)) & (NobelPrize(x) & -Hated(x, NumericalMethods)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (NobelPrize(x) -> Exists(x, ExpertIn(x, FieldOf))\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (NobelPrize(x) -> Exists(x, ExpertIn(x, FieldOf))\n                                                        ^\n"}
{"timestamp": "2025-05-02T04:29:04.659821", "premises": ["exists x. (NobelPrize(x) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "exists x. (DonaldKnuth & Ignores(x, ContributionsToAnalysisOfAlgorithms))", "exists x. (MarvinMinsky_&_ContributionsToPoleDancing)", "exists x. (RichardHamming & Hates(x, NumericalMethods))", "exists x. (JohnMcCarthy_&_ContributionsToPoleDancing)"], "conclusion": "forall x. (NobelPrize(x) -> not Hates(x, NumericalMethods))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DonaldKnuth/0, RichardHamming/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DonaldKnuth/0, RichardHamming/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DonaldKnuth/0, RichardHamming/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DonaldKnuth/0, RichardHamming/0\n"}
{"timestamp": "2025-05-02T04:29:36.706419", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ignored(DonaldKnuth, AnalysisOfAlgorithms)", "recognized(MarvinMinsky, PoleDancing)", "hated(RichardHamming, NumericalMethods)", "made(JohnMcCarthy, PoleDancing)"], "conclusion": "all x. ((NobelPrize(x) & -hated(x, NumericalMethods)) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 131, in evaluate\n    negation_true = prover.prove(neg_c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-02T04:30:20.040144", "premises": ["all x. (NobelPrize(x) -> Exists(y, (NobelPrize(x) & Contributions(y, x))))", "exists x. (NobelPrize(x) & Contributions(x, AnalysisOfAlgorithms) & (Disregarded(x, NumericalMethods)))", "exists x. (NobelPrize(x) & Contributions(x, PoleDancing))", "exists x. (NobelPrize(x) & Contributions(x, NumericalMethods) & (Hated(x, NumericalMethods)))", "exists x. (NobelPrize(x) & Contributions(x, PoleDancing))"], "conclusion": "all x. ((NobelPrize(x) & Contributions(x, NumericalMethods)) -> Not(Disregarded(x, NumericalMethods) & Hated(x, NumericalMethods)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. ((NobelPrize(x) & Contributions(x, NumericalMethods)) -> Not(Disregarded(x, NumericalMethods) & Hated(x, NumericalMethods)))\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. ((NobelPrize(x) & Contributions(x, NumericalMethods)) -> Not(Disregarded(x, NumericalMethods) & Hated(x, NumericalMethods)))\n                                                                                                     ^\n"}
{"timestamp": "2025-05-02T04:32:52.257580", "premises": ["exists x. (Genus(x, Bulbophyllum) & Attenuatum(x)) & Genus(x, Dendrobium)"], "conclusion": "exists x. (Dendrobium(x) & Animal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:32:58.819921", "premises": ["Genus(Bulbophyllum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:02.545359", "premises": ["exists x. (Bulbophyllum(x) & Genus(x, Dendrobium))", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(Bulbophyllum(Bulbophyllum_attenuatum))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Bulbophyllum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Bulbophyllum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Bulbophyllum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Bulbophyllum/1\n"}
{"timestamp": "2025-05-02T04:33:06.172080", "premises": ["all x. (BelongsTo(x, Dendrobium) -> Genus(x, Dendrobium))", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Dendrobium(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:09.470012", "premises": ["belongsTo(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:12.596207", "premises": ["genus(Bulbophyllum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:15.819014", "premises": ["Bulbophyllum(attenuatum) & In(attenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:20.125256", "premises": ["all x. (InGenus(x, Dendrobium) -> Dendrobium(x))", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Dendrobium(Bulbophyllum_attenuatum) -> -Animal(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:23.410217", "premises": ["genusOf(Bulbophyllumattenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(Bulbophyllumattenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-02T04:33:39.150650", "premises": ["all x. (Surname(x) & In(x, Chinese))", "Surname(AlbaRoversi) = Giordano", "Surname(PaoloRoversi) = Giordano", "Surname(RobertoRoversi) = Giordano", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "Surname(AlbaRoversi) = Chinese", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-05-02T04:34:14.730469", "premises": ["all x. (Surname(x) & Chinese(x))", "Surname(AlbaRoversi) = Giordano", "Surname(PaoloRoversi) = Giordano", "Surname(RobertoRoversi) = Giordano", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "Surname(AlbaRoversi) = Chinese", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-05-02T04:34:34.262703", "premises": ["ChineseSurname(Giordano)", "PaoloRoversi(AlbaRoversi) & ChineseSurname(Giordano)", "PaoloRoversi(Giordano) & ChineseSurname(Giordano)", "RobertoRoversi(Giordano) & ChineseSurname(Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "PaoloRoversi(AlbaRoversi) & ChineseSurname(Giordano)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0\n"}
{"timestamp": "2025-05-02T04:34:50.133638", "premises": ["Giordano is a Chinese surname.", "Surname(AlbaRoversi) = Giordano", "Surname(PaoloRoversi) = Giordano", "Surname(RobertoRoversi) = Giordano", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "Surname(AlbaRoversi) = Giordano", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nGiordano is a Chinese surname.\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nGiordano is a Chinese surname.\n         ^\n"}
{"timestamp": "2025-05-02T04:35:07.631899", "premises": ["Surname(Giordano) & Chinese(Giordano)", "Surname(AlbaRoversi) = Giordano", "Surname(PaoloRoversi) = Giordano", "Surname(RobertoRoversi) = Giordano", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "Surname(AlbaRoversi) = Giordano & Chinese(AlbaRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-05-02T04:35:34.628975", "premises": ["Surname(Giordano) & Chinese(Giordano)", "exists x. exists y. (Surname(x) & Surname(y) & Giordano(x) & Giordano(y) & (AlbaRoversi(x) | AlbaRoversi(y)))", "exists x. exists y. (Surname(x) & Surname(y) & Giordano(x) & Giordano(y) & PaoloRoversi(x) & PaoloRoversi(y))", "exists x. exists y. (Surname(x) & Surname(y) & Giordano(x) & Giordano(y) & RobertoRoversi(x) & RobertoRoversi(y))", "Astronaut(PaoloRoversi)", "Astronaut(x) -> (Professional(x) | Amateur(x))"], "conclusion": "Chinese(AlbaRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0\n"}
{"timestamp": "2025-05-02T04:35:51.299736", "premises": ["all x. (Giordano(x) -> Surname(x, Chinese))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Surname(AlbaRoversi, Chinese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-05-02T04:36:06.799275", "premises": ["all x. (Giordano(x) -> Chinese(x))", "AlbaRoversi(Giordano)", "PaoloRoversi(Giordano)", "RobertoRoversi(Giordano)", "PaoloRoversi(Astronaut)", "all x. ((Astronaut(x) & Professional(x)) | (Astronaut(x) & Amateur(x)))"], "conclusion": "Chinese(AlbaRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Astronaut/1, Astronaut/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Astronaut/1, Astronaut/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Astronaut/1, Astronaut/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Astronaut/1, Astronaut/0, Giordano/1, Giordano/0, AlbaRoversi/1, AlbaRoversi/0\n"}
{"timestamp": "2025-05-02T04:36:22.897213", "premises": ["all x. (Surname(x) & Chinese(x))", "Surname(AlbaRoversi) = Giordano", "Surname(PaoloRoversi) = Giordano", "Surname(RobertoRoversi) = Giordano", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> ProfessionalOrAmateur(x))"], "conclusion": "all x. (Surname(x) & Chinese(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-05-02T04:36:53.079353", "premises": ["USS(Salem) & HeavyCruiser(Salem) & DestroyedBy(USS(Salem))", "lastHeavyCruiserToSink(USS(Salem))", "USS(Salem) & Battleship(Salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "USS(Salem) & Sank(USS(Salem)) & (Atlantic(USS(Salem)) & Mediterranean(USS(Salem)))"], "conclusion": "ClosedToPublic(USS(Salem))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: USS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: USS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: USS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: USS/1\n"}
{"timestamp": "2025-05-02T04:37:55.510709", "premises": ["USS(Salem) & HeavyCruiser(Salem) & DestroyedBy(UnitedStatesNavy(Salem))", "lastHeavyCruiserToSink(USSSalem)", "USS(Salem) & Battleship(Salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "USS(Salem) & SinksIn(Atlantic(Salem) & Mediterranean(Salem))"], "conclusion": "all x. (USS(x) & Battleship(x) -> ClosedToPublic(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nUSS(Salem) & SinksIn(Atlantic(Salem) & Mediterranean(Salem))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nUSS(Salem) & SinksIn(Atlantic(Salem) & Mediterranean(Salem))\n                                     ^\n"}
{"timestamp": "2025-05-02T04:38:05.322583", "premises": ["battleship(USSSalem)", "lastHeavyCruiserToSink(USSSalem)", "battleship(USSSalem)", "closedToPublic(battleship)", "sunkInAtlanticAndMediterranean(USSSalem)"], "conclusion": "closedToPublic(USSSalem)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: battleship/1, battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: battleship/1, battleship/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: battleship/1, battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: battleship/1, battleship/0\n"}
{"timestamp": "2025-05-02T04:38:21.733267", "premises": ["all x. (Destroyed(x) & USS(x) & HeavyCruiser(x) & DestroyedBy(x, Navy))", "exists x. (LastHeavyCruiserToSink(x) & USS(x) & HeavyCruiser(x) & Sunk(x))", "all x. (USS(x) & Battleship(x))", "all x. (Battleship(x) -> ClosedToPublic(x))", "sunkIn(x, USS(x), Atlantic) & sunkIn(x, USS(x), Mediterranean)"], "conclusion": "exists x. (USS(x) & Battleship(x) & ClosedToPublic(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: USS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: USS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: USS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: USS/1\n"}
{"timestamp": "2025-05-02T04:38:53.348188", "premises": ["USSSalem(HeavyCruiser) & Destroyed(USNavy)", "USSSalem(LastHeavyCruiser) & Sinks(HeavyCruiser)", "USSSalem(Battleship)", "all x. (Battleship(x) -> ClosedToPublic(x))", "USSSalem(Sinks) & (SinksIn(Atlantic) & SinksIn(Mediterranean))"], "conclusion": "USSSalem(ClosedToPublic)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sinks/1, Sinks/0, Battleship/1, Battleship/0, ClosedToPublic/1, ClosedToPublic/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sinks/1, Sinks/0, Battleship/1, Battleship/0, ClosedToPublic/1, ClosedToPublic/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sinks/1, Sinks/0, Battleship/1, Battleship/0, ClosedToPublic/1, ClosedToPublic/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sinks/1, Sinks/0, Battleship/1, Battleship/0, ClosedToPublic/1, ClosedToPublic/0\n"}
{"timestamp": "2025-05-02T04:39:08.338008", "premises": ["HeavyCruiser(USSSalem) & Destroyed(USSSalem)", "HeavyCruiser(USSSalem) & Sunk(USSSalem)", "Battleship(USSSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Evaporated(USSSalem, Atlantic, Mediterranean)"], "conclusion": "exists x. ((Battleship(x) & ClosedToPublic(x)) & Evaporated(x, Mediterranean))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Evaporated/3, Evaporated/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Evaporated/3, Evaporated/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Evaporated/3, Evaporated/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Evaporated/3, Evaporated/2\n"}
{"timestamp": "2025-05-02T04:39:35.925423", "premises": ["exists x. (HeavyCruiser(x) & Destroyed(x, UnitedStatesNavy))", "exists x. (HeavyCruiser(x) & Destroyed(x) & LastHeavyCruiserToSink(x))", "exists x. (HeavyCruiser(x) & Destroyed(x) & Battleship(x))", "all x. (Battleship(x) -> -OpenToThePublic(x))", "evaporatedIn(USSSalem, AtlanticAndMediterranean)"], "conclusion": "exists x. (Battleship(x) & -OpenToThePublic(x) & EvaporatedIn(x, AtlanticAndMediterranean))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Destroyed/1, Destroyed/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Destroyed/1, Destroyed/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Destroyed/1, Destroyed/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Destroyed/1, Destroyed/2\n"}
{"timestamp": "2025-05-02T04:40:47.703028", "premises": ["exists x. HeavyCruiser(x) & Destroyed(x, USS_Navy)", "exists x. (HeavyCruiser(x) & Sunk(x, USS_Navy)) & LastHeavyCruiserToSink(x)", "exists x. Battleship(x) & USS Salem(x)", "all x. (Battleship(x) -> ClosedToPublic(x))", "exists x. (Evaporated(x, Atlantic) & Evaporated(x, Mediterranean)) & USS Salem(x)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x)) & exists y. (Evaporated(y, Mediterranean) & USS Salem(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Salem'.  Expected token ')'.\nexists x. (Battleship(x) & ClosedToPublic(x)) & exists y. (Evaporated(y, Mediterranean) & USS Salem(y))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Salem'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Salem'.  Expected token ')'.\nexists x. (Battleship(x) & ClosedToPublic(x)) & exists y. (Evaporated(y, Mediterranean) & USS Salem(y))\n                                                                                              ^\n"}
{"timestamp": "2025-05-02T04:41:04.964597", "premises": ["exists x. (HeavyCruiser(x) & Destroyed(x, USSNavy))", "lastHeavyCruiserToSink(USSSalem)", "exists x. (Battleship(x) & USSSalem(x))", "all x. (Battleship(x) -> ClosedToPublic(x))", "exists x. (Evaporated(x) & (Atlantic(x) & Mediterranean(x)))"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x) & Mediterranean(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: USSSalem/1, USSSalem/0.\n\n\nFatal error:  The following symbols are used with multiple arities: USSSalem/1, USSSalem/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: USSSalem/1, USSSalem/0.\n\n\nFatal error:  The following symbols are used with multiple arities: USSSalem/1, USSSalem/0\n"}
{"timestamp": "2025-05-02T04:41:25.769291", "premises": ["all x. (HeavyCruiser(x) & Destroyed(x, UnitedStatesNavy))", "exists x. exists y. (HeavyCruiser(x) & Destroyed(x, UnitedStatesNavy) & LastHeavyCruiserToSink(x) & Not(y=x) & (HeavyCruiser(y) & Destroyed(y, UnitedStatesNavy)))", "exists x. (Battleship(x) & USSSalem(x))", "all x. (Battleship(x) -> ClosedToPublic(x))", "evaporatedIn(USSSalem, AtlanticAndMediterranean)"], "conclusion": "exists x. ((Battleship(x) & ClosedToPublic(x)) & evaporatedIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nexists x. exists y. (HeavyCruiser(x) & Destroyed(x, UnitedStatesNavy) & LastHeavyCruiserToSink(x) & Not(y=x) & (HeavyCruiser(y) & Destroyed(y, UnitedStatesNavy)))\n                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nexists x. exists y. (HeavyCruiser(x) & Destroyed(x, UnitedStatesNavy) & LastHeavyCruiserToSink(x) & Not(y=x) & (HeavyCruiser(y) & Destroyed(y, UnitedStatesNavy)))\n                                                                                                         ^\n"}
{"timestamp": "2025-05-02T04:41:53.944640", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "all x. (Consumes(x, WellDoneThree) -> RockAlbum(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-02T04:42:05.926801", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, RockAlbum))", "exists x. (Consumes(Tyga, WellDoneThree))", "exists x. (Astronaut(x) & -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-02T04:42:25.309816", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> Not(x, OperaSinger))"], "conclusion": "all x. (RockAlbum(x) & Consumes(Tyga, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-02T04:42:32.870283", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "all x. (RockAlbum(x) -> WellDone3(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-02T04:42:41.368659", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "all x. (Consumes(x, WellDoneThree) & (RockAlbum(x) | RockBand(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-02T04:42:56.842106", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "exists x. (Astronaut(x) & ~OperaSinger(x))"], "conclusion": "exists x. (RockAlbum(x) & Consumes(Tyga, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~OperaSinger(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~OperaSinger(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T04:43:17.713014", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, rapAlbum))", "Consumes(Tyga, WellDoneThree)", "exists x. (Astronaut(x) & ~Rapper(x))"], "conclusion": "~Astronaut(Tyga) & Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~Rapper(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~Rapper(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T04:43:23.889748", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RapAlbum))", "Tyga consumed(WellDoneThree)", "all x. (Astronaut(x) -> Not(Rapper(x)))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'consumed'.\nTyga consumed(WellDoneThree)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'consumed'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'consumed'.\nTyga consumed(WellDoneThree)\n     ^\n"}
{"timestamp": "2025-05-02T04:43:37.343783", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, RapAlbum))", "Tyga consumed WellDone3", "-(Astronaut(x) & Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'consumed'.\nTyga consumed WellDone3\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'consumed'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'consumed'.\nTyga consumed WellDone3\n     ^\n"}
{"timestamp": "2025-05-02T04:44:07.759975", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RapAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "all x. (Astronaut(x) -> Consumes(x, RapAlbum)) & all x. (Rapper(x) -> Consumes(x, RapAlbum)) & Tyga is an astronaut", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nall x. (Astronaut(x) -> Consumes(x, RapAlbum)) & all x. (Rapper(x) -> Consumes(x, RapAlbum)) & Tyga is an astronaut\n                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nall x. (Astronaut(x) -> Consumes(x, RapAlbum)) & all x. (Rapper(x) -> Consumes(x, RapAlbum)) & Tyga is an astronaut\n                                                                                                    ^\n"}
{"timestamp": "2025-05-02T04:44:25.738752", "premises": ["exists x. (MonkeypoxVirus(x) & OccursIn(x, Being)) & MayGet(x, AIDS)", "exists x. (Plant(x) & OccursIn(x, MonkeypoxVirus))", "Humans(x) & Plant(x)", "Plants(x) & Unicorn(x)", "all x. (AIDS(x) -> Fever(x) & Headache(x) & MusclePains(x) & Energized(x))", "Flu(x) & Energized(x)"], "conclusion": "Plants(x) & Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-02T04:45:16.289461", "premises": ["exists x. (MonkeypoxVirus(x) & MayGet(x, AIDS))", "exists x. (MonkeypoxVirus(x) & OccursIn(x, Plants))", "humans = plants", "plants = unicorns", "exists x. (AIDS(x) & (Fever(x) & Headache(x) & MusclePains(x) & Energized(x)))", "exists x. (Flu(x) & Energized(x))"], "conclusion": "exists x. (unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-02T04:46:10.321936", "premises": ["exists x. (MonkeypoxOccurs(x) -> AIDS(x))", "exists x. (MonkeypoxOccursIn(x, Plants) & Plant(x))", "HumansArePlants", "PlantsAreUnicorns", "exists x. (AIDS(x) -> Fever(x) & Headache(x) & MusclePains(x) & Energizedness(x))", "exists x. (Flu(x) -> Energizedness(x))"], "conclusion": "unicorn", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: unicorn.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: unicorn", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: unicorn.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: unicorn\n"}
{"timestamp": "2025-05-02T04:46:45.459908", "premises": ["all x. (Monkeypox(x) -> AIDS(x))", "exists x. (OccursIn(Monkeypox, x) & Plant(x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "all x. (SymptomOf(AIDS, x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energizedness(x)))", "all x. (SymptomOf(Flu, x) -> Energizedness(x))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0, Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0, Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0, Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0, Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-05-02T04:47:07.909095", "premises": ["all x. (Square(x) -> ThreeSided(x))", "all x. (ThreeSided(x) -> Animal(x))"], "conclusion": "ThreeSided(Square(x)) -> Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1\n"}
{"timestamp": "2025-05-02T04:47:15.511767", "premises": ["all x. (Square(x) -> ThreeSided(x))", "all x. (ThreeSided(x) -> Animal(x))"], "conclusion": "Square(Square)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Square/1, Square/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Square/1, Square/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Square/1, Square/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Square/1, Square/0\n"}
{"timestamp": "2025-05-02T04:47:20.624404", "premises": ["all x. (Square(x) -> ThreeSided(x))", "all x. (ThreeSided(x) -> Animal(x))"], "conclusion": "Square(Square)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Square/1, Square/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Square/1, Square/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Square/1, Square/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Square/1, Square/0\n"}
{"timestamp": "2025-05-02T04:47:51.544186", "premises": ["all x. (Task(x) -> ((ObjectIdentification(x) & SemanticSegmentation(x)) | (-ObjectIdentification(x) & SemanticSegmentation(x)) | (-ObjectIdentification(x) & -SemanticSegmentation(x)) | (ObjectIdentification(x) & -SemanticSegmentation(x))))", "all x. (Task(x) -> ((Output(x, TextSequence) & ObjectIdentification(x)) | (-Output(x, TextSequence) & ObjectIdentification(x)) | (-Output(x, TextSequence) & -ObjectIdentification(x)) | (Output(x, TextSequence) & -ObjectIdentification(x))))", "Task(MachineTranslation)", "Output(MachineTranslation, TextSequence)"], "conclusion": "all x. (Task(x) -> ((Output(x, TextSequence) & ObjectIdentification(x)) & (MachineTranslation(x) & Output(x, TextSequence)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Task(x) -> ((Output(x, TextSequence) & ObjectIdentification(x)) & (MachineTranslation(x) & Output(x, TextSequence)))\n                                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Task(x) -> ((Output(x, TextSequence) & ObjectIdentification(x)) & (MachineTranslation(x) & Output(x, TextSequence)))\n                                                                                                                            ^\n"}
{"timestamp": "2025-05-02T04:48:01.087677", "premises": ["ObjectIdentificationTask(x) | SemanticSegmentationTask(x)", "Output(x) = TextSequence(x) -> ObjectIdentificationTask(x)", "MachineTranslation(x) -> NaturalLanguageProcessing(x)", "Output(MachineTranslation(x)) = TextSequence(x)"], "conclusion": "MachineTranslation(x) -> ObjectIdentificationTask(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-02T04:48:22.653039", "premises": ["all x. ((Task(x) & NaturalLanguageProcessing(x)) -> (ObjectIdentification(x) | SemanticSegmentation(x)))", "all x. ((Task(x) & NaturalLanguageProcessing(x) & TextSequence(x) -> ObjectIdentification(x))", "Task(MachineTranslation) & NaturalLanguageProcessing(MachineTranslation)", "TextSequence(MachineTranslation)"], "conclusion": "ObjectIdentification(MachineTranslation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Task(x) & NaturalLanguageProcessing(x) & TextSequence(x) -> ObjectIdentification(x))\n                                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Task(x) & NaturalLanguageProcessing(x) & TextSequence(x) -> ObjectIdentification(x))\n                                                                                             ^\n"}
{"timestamp": "2025-05-02T04:48:33.470039", "premises": ["if (Task(x) = ObjectIdentificationTask) then (Category(x) = ObjectIdentificationTask)", "if (Output(x) = TextSequence) then (Category(x) = ObjectIdentificationTask)", "MachineTranslation(x) -> Task(x) = ObjectIdentificationTask", "Output(x) = TextSequence"], "conclusion": "Category(x) = ObjectIdentificationTask", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif (Task(x) = ObjectIdentificationTask) then (Category(x) = ObjectIdentificationTask)\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif (Task(x) = ObjectIdentificationTask) then (Category(x) = ObjectIdentificationTask)\n            ^\n"}
{"timestamp": "2025-05-02T04:48:55.001269", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x) | SemanticSegmentationTask(x))", "all x. (TextSequenceOutput(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequenceOutput(MachineTranslation(x))"], "conclusion": "ObjectIdentificationTask(MachineTranslation(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-02T04:49:07.191828", "premises": ["all x. ((NaturalLanguageProcessing(x) & ObjectIdentificationTask(x)) -> (TextSequence(Output(x)) & ObjectIdentificationTask(x))) & all x. ((NaturalLanguageProcessing(x) & SemanticSegmentationTask(x)) -> (TextSequence(Output(x)) & SemanticSegmentationTask(x)))", "all x. ((NaturalLanguageProcessing(x) & TextSequence(Output(x))) & ObjectIdentificationTask(x))", "MachineTranslation(MachineTranslation)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-05-02T04:49:16.928139", "premises": ["all x. ((ObjectIdentificationTask(x) | SemanticSegmentationTask(x)) & NaturalLanguageProcessing(x))", "all x. ((Output(x) = TextSequence) -> ObjectIdentificationTask(x))", "MachineTranslation(x) & NaturalLanguageProcessing(x)", "Output(MachineTranslation(x)) = TextSequence"], "conclusion": "ObjectIdentificationTask(MachineTranslation(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-02T04:49:43.781108", "premises": ["exists x. (Reptile(x) & Eye(x))", "exists x. (Platypus(x) & -Eye(x))", "exists x. (Platypus(x) & Reptile(x))", "exists x. (Corgi(x) & Eye(x))"], "conclusion": "(Reptile(Platypus) & -Eye(Platypus)) & (Reptile(Platypus) & Platypus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0\n"}
{"timestamp": "2025-05-02T04:50:03.160859", "premises": ["exists x. (Reptile(x) & Eye(x))", "exists x. (Platypus(x) & NoEyes(x))", "exists x. (Platypus(x) & Reptile(x))", "exists x. (Corgi(x) & Eye(x))"], "conclusion": "exists x. (Reptile(Platypus) & NoEyes(Platypus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T04:50:11.034982", "premises": ["all x. (Reptile(x) -> Has(x, Eyes))", "all x. (Platypus(x) -> -Has(x, Eyes))", "all x. (Platypus(x) -> Reptile(x))", "all x. (Corgi(x) -> Has(x, Eyes))"], "conclusion": "Reptile(Platypus) & -Has(Platypus, Eyes)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T04:50:24.347602", "premises": ["exists x. (Reptile(x) & HasEyes(x))", "-HasEyes(Platypus)", "Platypus(x) -> Reptile(x)", "exists x. (Corgi(x) & HasEyes(x))"], "conclusion": "Reptile(Platypus) & -HasEyes(Platypus) & Platypus", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0\n"}
{"timestamp": "2025-05-02T04:50:55.635520", "premises": ["all x. (Mammal(x) -> LackHooves(x))", "-LackHooves(Human)"], "conclusion": "exists x. (Human(x) & Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0\n"}
{"timestamp": "2025-05-02T04:51:00.786798", "premises": ["all x. (Mammal(x) -> -Hooves(x))", "-Hooves(Human)"], "conclusion": "exists x. (Human(x) & Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0\n"}
{"timestamp": "2025-05-02T04:53:40.780382", "premises": ["exists x. exists y. (In(x, UnitedStatesOfAmerica) & In(y, Paris) & (x=y))", "exists x. (In(x, UnitedStatesOfAmerica) & In(x, SouthAmerica))", "exists x. (In(x, SouthAmerica) & In(x, EasternHemisphereOfEarth))", "exists x. (City(x) & HighlyDeveloped(x) & -Lives(x, anyone))", "exists x. exists y. exists z. ((In(x, A) & In(y, B) & In(z, C) & (x=y) & (y=z))"], "conclusion": "exists x. (In(x, UnitedStatesOfAmerica) & -In(x, EasternHemisphereOfEarth))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. exists z. ((In(x, A) & In(y, B) & In(z, C) & (x=y) & (y=z))\n                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. exists z. ((In(x, A) & In(y, B) & In(z, C) & (x=y) & (y=z))\n                                                                               ^\n"}
{"timestamp": "2025-05-02T04:54:22.978952", "premises": ["exists x. (In(Paris, UnitedStatesOfAmerica) & (x=Paris))", "exists x. (In(UnitedStatesOfAmerica, SouthAmerica) & (x=UnitedStatesOfAmerica))", "exists x. (In(SouthAmerica, EasternHemisphereOfTheEarth) & (x=SouthAmerica))", "exists x. (DevelopedCity(x) & (x=Paris) & -Lives(x))", "exists x. exists y. exists z. ((PlaceA(x) & In(x, PlaceB(y)) & In(PlaceB(y), PlaceC(z))) -> PlaceA(x) & In(x, PlaceC(z))"], "conclusion": "-In(UnitedStatesOfAmerica, EasternHemisphereOfTheEarth)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. exists z. ((PlaceA(x) & In(x, PlaceB(y)) & In(PlaceB(y), PlaceC(z))) -> PlaceA(x) & In(x, PlaceC(z))\n                                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. exists z. ((PlaceA(x) & In(x, PlaceB(y)) & In(PlaceB(y), PlaceC(z))) -> PlaceA(x) & In(x, PlaceC(z))\n                                                                                                                        ^\n"}
{"timestamp": "2025-05-02T04:54:57.674165", "premises": ["all x. ((Bird(x) & Eats(x, Egg)) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "all x. (Grebe(x) -> Eats(x, Egg))", "Grebe(x) & (-Platypus(x) & -Echidna(x))"], "conclusion": "all x. (Grebe(x) -> -Bird(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T04:55:37.988289", "premises": ["all x. ((Bird(x) & Eats(x, Eggs)) -> (Platypus(x) | Echidna(x)))", "-Platypus(Platypus)", "-Echidna(Echidna)", "all x. ((Bird(x) & Vertebrate(x)) -> -(x=Vertebrate))", "all x. ((Plant(x) & Vertebrate(x)) | (Plant(x) & Vertebrate(x)))", "Bird(Bird) & Plant(Bird)", "Animal(Animal) & Bird(Animal)", "all x. ((Grebe(x) & Eats(x, Eggs)) -> True)", "all x. ((Grebe(x) & Not(Platypus(x)) & Not(Echidna(x))) -> True)"], "conclusion": "all x. ((Grebe(x) & Bird(x)) -> False)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1\n"}
{"timestamp": "2025-05-02T04:56:07.998217", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Platypus(Platypus)", "-Echidna(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatsEggs(Grebe)", "not Platypus(Grebe) & not Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T04:56:56.774361", "premises": ["all x. ((Bird(x) & EatsEggs(x)) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. ((Bird(x) & Vertebrate(x)) -> False)", "all x. ((Plant(x) & Vertebrate(x)) -> (Vertebrate(x) | Vertebrate(x)))", "all x. ((Bird(x) & Plant(x)) -> True)", "all x. ((Animal(x) & Bird(x)) -> True)", "EatsEggs(Greb)", "all x. ((Greb(x) & EatsEggs(x)) -> (Platypus(x) | Echidna(x)) & ((Platypus(x) & Not(x=Greb)) & (Echidna(x) & Not(x=Greb))))"], "conclusion": "all x. ((Greb(x) & Bird(x)) -> False)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. ((Greb(x) & EatsEggs(x)) -> (Platypus(x) | Echidna(x)) & ((Platypus(x) & Not(x=Greb)) & (Echidna(x) & Not(x=Greb))))\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. ((Greb(x) & EatsEggs(x)) -> (Platypus(x) | Echidna(x)) & ((Platypus(x) & Not(x=Greb)) & (Echidna(x) & Not(x=Greb))))\n                                                                                     ^\n"}
{"timestamp": "2025-05-02T04:57:29.938587", "premises": ["all x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) | Echidna(x)))", "-Platypus(Platypus)", "-Echidna(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "all x. (Bird(x) & Eats(x, Egg) -> Grebe(x))", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0\n"}
{"timestamp": "2025-05-02T04:58:07.731217", "premises": ["all x. (Bird(x) & Eats(x, Eggs) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "all x. (Grebe(x) -> Eats(x, Eggs))", "all x. (Grebe(x) -> (Platypus(x) & -Echidna(x)) | (-Platypus(x) & Echidna(x)))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0\n"}
{"timestamp": "2025-05-02T04:58:40.733551", "premises": ["all x. ((Bird(x) & EatsEgg(x)) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> Not(Animal(x)))", "all x. (Echidna(x) -> Not(Animal(x)))", "all x. (Bird(x) -> Not(Vertebrate(x)))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "all x. (Grebe(x) -> EatsEgg(x))"], "conclusion": "all x. ((Grebe(x) & Not(Platypus(x))) & (Grebe(x) & Not(Echidna(x))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1, Animal/1, Vertebrate/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1, Animal/1, Vertebrate/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1, Animal/1, Vertebrate/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/1, Echidna/1, Animal/1, Vertebrate/1\n"}
{"timestamp": "2025-05-02T04:59:09.657151", "premises": ["all x. (Bird(x) & Eats(x, Eggs) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-Vertebrate(Bird)", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "Bird(Bird)", "Animal(Animal)", "Eats(Grebe, Eggs)", "(Grebe(x) & Eats(x, Eggs) & NotPlatypus(x) & NotEchidna(x))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Bird/1, Bird/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Bird/1, Bird/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Bird/1, Bird/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Bird/1, Bird/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0\n"}
{"timestamp": "2025-05-02T04:59:39.677046", "premises": ["all x. (Bird(x) & EatsEgg(x) -> (Platypus(x) | Echidna(x)))", "not Platypus(Platypus)", "not Echidna(Echidna)", "all x. (Bird(x) -> not Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatsEgg(Grebe)", "not Platypus(Grebe) & not Echidna(Grebe)"], "conclusion": "not Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T05:01:35.828502", "premises": ["all x. (Musician(x) & Lithographer(x))", "all x. (BornIn(x, Athens, Ohio))", "all x. (Attends(x, UniversityOfWashington))", "all x. (BornIn(x, Athens, Ohio) -> Japanese(x))"], "conclusion": "all x. (Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & ...)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expression expected.\nall x. (Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & ...)\n                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expression expected.\nall x. (Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & Attends(x, UniversityOfWashington) & ...)\n                                                                                                                       ^\n"}
{"timestamp": "2025-05-02T05:02:48.296761", "premises": ["all x. (Author(x) & Creates(x, The_Scarlet_Letter))", "all x. (About(x, The_Scarlet_Letter, LifeExperiences) & About(x, The_Scarlet_Letter, Technology))", "all x. (Author(x) -> Barber(x))", "all x. (Barber(x) -> CreatesPages(x))", "some x. (ContainsInnovativeIdeas(x) & About(x, Technology))"], "conclusion": "all x. (ContainsInnovativeIdeas(x) & About(x, Technology) -> -Pages(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: About/3, About/2.\n\n\nFatal error:  The following symbols are used with multiple arities: About/3, About/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: About/3, About/2.\n\n\nFatal error:  The following symbols are used with multiple arities: About/3, About/2\n"}
{"timestamp": "2025-05-02T05:02:58.880552", "premises": ["author(DouglasAdams) & TheScarletLetter(DouglasAdams)", "about(TheScarletLetter, life_experiences_and_technology)", "all x. (author(x) -> barber(x))", "createPages(barbers)", "some x. (containsInnovativeIdeas(x) & about(x, technology))"], "conclusion": "hasPages(TheScarletLetter)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheScarletLetter/1, TheScarletLetter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheScarletLetter/1, TheScarletLetter/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheScarletLetter/1, TheScarletLetter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheScarletLetter/1, TheScarletLetter/0\n"}
{"timestamp": "2025-05-02T05:03:11.064076", "premises": ["Author(DouglasAdams) & TheScarletLetter(DouglasAdams)", "Topic(TheScarletLetter, LifeExperiencesAndTechnology)", "for all x. (Author(x) -> Barber(x))", "all x. (Barber(x) -> Creates(x, Pages))", "some x. (Book(x) & Innovative(x) & Topic(x, Technology))"], "conclusion": "-Has(TheScarletLetter, Pages)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.\nfor all x. (Author(x) -> Barber(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.\nfor all x. (Author(x) -> Barber(x))\n    ^\n"}
{"timestamp": "2025-05-02T05:03:36.904863", "premises": ["Author(DouglasAdams) & TheScarletLetter(DouglasAdams)", "TheScarletLetter(DouglasAdams) & (LifeExperiences(DouglasAdams) & Technology(DouglasAdams))", "forall x. Author(x) -> Barber(x)", "forall x. Barber(x) -> Creates(x, Pages)", "forall x. (InnovativeIdeas(x) & Technology(x))"], "conclusion": "-Pages(TheScarletLetter)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0, TheScarletLetter/1, TheScarletLetter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0, TheScarletLetter/1, TheScarletLetter/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0, TheScarletLetter/1, TheScarletLetter/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0, TheScarletLetter/1, TheScarletLetter/0\n"}
{"timestamp": "2025-05-02T05:03:48.991533", "premises": ["all x. (Author(x) -> Created(x, The_Scarlet_Letter))", "all x. (Book(x) & Themes(x, LifeExperiences) & Themes(x, Technology))", "all x. (Author(x) -> Barber(x))", "all x. (Barber(x) -> Creates(x, Pages))", "all x. (InnovativeIdeas(x) & Themes(x, Technology))"], "conclusion": "all x. (-Pages(The_Scarlet_Letter))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0\n"}
{"timestamp": "2025-05-02T05:04:14.952434", "premises": ["exists x. exists y. (Author(x) & Created(x, y) & ScarletLetter(y) & BookCollection(x, y))", "exists x. (ScarletLetter(x) & About(x, LifeExperiences) & About(x, Technology))", "exists x. (Author(x) & Barber(x))", "exists x. (Barber(x) & Creates(x, Pages))", "exists x. (Book(x) & Innovative(x) & About(x, Technology))"], "conclusion": "exists x. (ScarletLetter(x) & -Pages(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Pages/1, Pages/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Pages/1, Pages/0\n"}
{"timestamp": "2025-05-02T05:04:48.855879", "premises": ["Author(DouglasAdams) & TheScarletLetter(DouglasAdams)", "Topic(TheScarletLetter, LifeExperiences) & Topic(TheScarletLetter, Technology)", "forall x. (Author(x) -> Barber(x))", "forall x. (Barber(x) -> CreatesPages(x))", "forall x. (InnovativeIdeas(x) -> About(x, Technology))"], "conclusion": "(forall x. (CreatesPages(x) -> x) & forall x. (Author(x) -> Barber(x))) & forall x. (InnovativeIdeas(x) -> About(x, Technology)) & forall x. (Topic(x, LifeExperiences) & Topic(x, Technology))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T05:05:00.610642", "premises": ["Medication(Acetaminophen) & YearDiscovered(Acetaminophen, OneNineFourSeven)", "Medication(Acetaminophen) & CanTreat(Fever)", "FeverTreatment(Chocolate) & NotFeverTreatment(Acetaminophen)", "Medication(Acetaminophen) & Not(Medication(Chocolate))"], "conclusion": "Not(PreferredTreatment(Acetaminophen, Fever)) & PreferredTreatment(Chocolate, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: PreferredTreatment/2, Medication/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: PreferredTreatment/2, Medication/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: PreferredTreatment/2, Medication/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: PreferredTreatment/2, Medication/1\n"}
{"timestamp": "2025-05-02T05:05:28.225816", "premises": ["Medication(Acetaminophen) & DiscoveredIn(OneNineFourSeven, Acetaminophen)", "all x. (Treats(x, Fever) -> Acetaminophen(x))", "all x. (PreferredTreatment(x, Fever) -> Chocolate(x))", "all x. (Acetaminophen(x) -> not Chocolate(x))"], "conclusion": "all x. ((Acetaminophen(x) & Treats(x, Fever)) -> not PreferredTreatment(x, Fever))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0\n"}
{"timestamp": "2025-05-02T05:05:41.962504", "premises": ["exists x. DiscoveredIn(OneNineFourSeven, Acetaminophen)", "all x. (Treatment(x, Fever) -> Can(x, UseAcetaminophen))", "all x. (Treatment(x, Fever) -> Preferred(x, Chocolate))", "exists x. (Medication(x) & Acetaminophen(x) & Chocolate(x))"], "conclusion": "all x. (Preferred(x, Chocolate) & -Treatment(x, Fever)) & (Can(x, UseAcetaminophen) | -Medication(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0, Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0, Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0, Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Acetaminophen/1, Acetaminophen/0, Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-05-02T05:05:50.111825", "premises": ["Medication(Acetaminophen) & DiscoveredIn(OneNineFourSeven, Acetaminophen)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Chocolate, Fever)", "-Chocolate(Acetaminophen)"], "conclusion": "NotPreferredTreatment(Acetaminophen, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-05-02T05:06:10.181700", "premises": ["Medication(Acetaminophen) & YearDiscovered(Acetaminophen, OneNineFourSeven)", "CanTreat(Acetaminophen, Fever)", "Preferred(Chocolate, Fever)", "not Chocolate(Acetaminophen)"], "conclusion": "not Preferred(Acetaminophen, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-05-02T05:06:17.662829", "premises": ["discovered(Acetaminophen, OneNineFourSeven)", "canTreat(Acetaminophen, Fever)", "preferred(Chocolate, Fever)", "not(Acetaminophen, Chocolate)"], "conclusion": "not(Acetaminophen, preferred(Chocolate, Fever))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nnot(Acetaminophen, preferred(Chocolate, Fever))\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nnot(Acetaminophen, preferred(Chocolate, Fever))\n                 ^\n"}
{"timestamp": "2025-05-02T05:06:25.542502", "premises": ["DrugDiscovered(Acetaminophen, OneNineFourSeven)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "Not(Acetaminophen=Chocolate)"], "conclusion": "Not(PreferredTreatment(Fever, Acetaminophen))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nNot(Acetaminophen=Chocolate)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nNot(Acetaminophen=Chocolate)\n                 ^\n"}
{"timestamp": "2025-05-02T05:06:40.278669", "premises": ["exists x. (WorldsBestKnownArtwork(x) & Painting(x))", "exists x. (Hair(x) & ExtractedBy(x, Leonardo_da_Vinci))", "exists x. (Dancer(x) & Painter(x) & Leonardo da Vinci(x))", "exists x. (Genre(x) & (In(x, history) | In(x, portrait) | In(x, animal) | In(x, landscape) | In(x, still_life)))"], "conclusion": "exists x. (WorldsBestKnownArtwork(x) & NotHair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'da'.  Expected token ')'.\nexists x. (Dancer(x) & Painter(x) & Leonardo da Vinci(x))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'da'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'da'.  Expected token ')'.\nexists x. (Dancer(x) & Painter(x) & Leonardo da Vinci(x))\n                                             ^\n"}
{"timestamp": "2025-05-02T05:06:51.586436", "premises": ["all x. (BestKnownPainting(x) -> Paint(x))", "Hair(MonaLisa) & ExtractedBy(LeonardoDaVinci)", "all x. ((Dancer(x) & Painter(x)) -> Person(x))", "all x. (Genre(x) -> PaintingGenre(x))"], "conclusion": "all x. ((BestKnownPainting(x) & ~Hair(x)) -> Paint(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%BestKnownPainting(x) & ~Hair(x)%%END ERROR%%) -> Paint(x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%BestKnownPainting(x) & ~Hair(x)%%END ERROR%%) -> Paint(x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T05:07:07.505978", "premises": ["exists x. (World'sBestKnownPainting(x) & Painting(x))", "exists x. (HairExtractedBy(x, Leonardo_da_Vinci) & Painting(x))", "exists x. (Dancer(x) & Painter(x)) & (x=Leonardo_da_Vinci)", "all x. (Genre(x) & (x=history_|_x=portrait_|_x=animal_|_x=landscape_|_x=still_life))"], "conclusion": "(World'sBestKnownPainting(x) & ~HairExtractedBy(x, Leonardo_da_Vinci)) & (x=Mona_Lisa)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%World'sBestKnownPainting(x) & Painting(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%World'sBestKnownPainting(x) & Painting(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T05:07:20.586203", "premises": ["WorldBestKnownPainting(MonaLisa)", "HairExtracted(MonaLisa)", "Dancer(Leonardo) & Painter(Leonardo)", "Genre(Painting) can be (History_|_Portrait_|_Animal_|_Landscape_|_StillLife)"], "conclusion": "(WorldBestKnownPainting(x) & -HairExtracted(x)) & (Genre(x) can be (History_|_Portrait_|_Animal_|_Landscape_|_StillLife))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'can'.  Expected token ')'.\n(WorldBestKnownPainting(x) & -HairExtracted(x)) & (Genre(x) can be (History_|_Portrait_|_Animal_|_Landscape_|_StillLife))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'can'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'can'.  Expected token ')'.\n(WorldBestKnownPainting(x) & -HairExtracted(x)) & (Genre(x) can be (History_|_Portrait_|_Animal_|_Landscape_|_StillLife))\n                                                            ^\n"}
{"timestamp": "2025-05-02T05:07:34.031974", "premises": ["all x. (WorldsBestKnownPainting(x) -> Painting(x))", "all x. (HairExtractedBy(x, LeonardoDaVinci) -> Hair(x))", "all x. (Dancer(x) & Painter(x) -> LeonardoDaVinci(x))", "all x. (Genre(x) -> (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "-(WorldsBestKnownPainting(x) & Hair(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeonardoDaVinci/1, LeonardoDaVinci/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeonardoDaVinci/1, LeonardoDaVinci/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeonardoDaVinci/1, LeonardoDaVinci/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeonardoDaVinci/1, LeonardoDaVinci/0\n"}
{"timestamp": "2025-05-02T05:08:09.663043", "premises": ["worldBestKnownPainting(MonaLisa)", "MonaLisa(hairExtractedBy(Leonardo_da_Vinci))", "Leonardo da Vinci(dancer) & Leonardo da Vinci(painter)", "all x. (PaintingGenre(x) -> (history_|_portrait_|_animal_|_landscape_|_stillLife))"], "conclusion": "worldBestKnownArtworks(~hair)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'da'.\nLeonardo da Vinci(dancer) & Leonardo da Vinci(painter)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'da'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'da'.\nLeonardo da Vinci(dancer) & Leonardo da Vinci(painter)\n         ^\n"}
{"timestamp": "2025-05-02T05:08:38.468093", "premises": ["exists x. (WorldsBestKnownPainting(x) & Painting(x))", "exists x. (HairExtractedBy(LeonardoDaVinci, x) & Hair(x))", "exists x. (Dancer(x) & Painter(x))", "exists x. (Genre(x) & (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "exists x. (Painting(x) & WorldsBestKnownPainting(x)) & exists y. (HairExtractedBy(x, y) & Hair(y)) & exists z. (Dancer(z) & Painter(z)) & exists w. (Genre(w) & -(Genre(w) = History) & -(Genre(w) = Portrait) & -(Genre(w) = Animal) & -(Genre(w) = Landscape) & -(Genre(w) = StillLife))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genre/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genre/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genre/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genre/1\n"}
{"timestamp": "2025-05-02T05:08:49.590765", "premises": ["Painting(MonaLisa) & Best(MonaLisa, Painting)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "Genre(x) = history, portrait, animal, landscape, still life"], "conclusion": "exists x. (Best(x, Painting) & -Hair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nGenre(x) = history, portrait, animal, landscape, still life\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nGenre(x) = history, portrait, animal, landscape, still life\n                  ^\n"}
{"timestamp": "2025-05-02T05:09:48.981431", "premises": ["Hatchery(NationalLobsterHatchery) & Location(Padstow, England)", "has(NationalLobsterHatchery, Animals)", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "forDestruction(Hatchery(x)) -> MightRelease(x, Animals)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> has(x, Animals))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1\n"}
{"timestamp": "2025-05-02T05:10:31.525040", "premises": ["Location(NationalLobsterHatchery, Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "all x. (Hatchery(x) -> either Profit(x) or Destruction(x))", "all x. (Destruction(x) -> mightReleaseAnimals(x))", "-Profit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Profit'.  Expected token ')'.\nall x. (Hatchery(x) -> either Profit(x) or Destruction(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Profit'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Profit'.  Expected token ')'.\nall x. (Hatchery(x) -> either Profit(x) or Destruction(x))\n                              ^\n"}
{"timestamp": "2025-05-02T05:10:46.556476", "premises": ["exists x. (Hatchery(x) & In(x, Padstow, England))", "exists x. (Hatchery(x) & Animals(x))", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. ((ForDestruction(x) & Animals(x)) -> MightRelease(x, Animals))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> Animals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animals/1, Animals/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animals/1, Animals/0\n"}
{"timestamp": "2025-05-02T05:11:01.649201", "premises": ["Hatchery(NationalLobsterHatchery) & Location(Padstow, England)", "Has(NationalLobsterHatchery, Animals)", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "for x. (ForDestruction(x) -> MightRelease(x, AnimalsIntoTheWild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> Has(x, Animals))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nfor x. (ForDestruction(x) -> MightRelease(x, AnimalsIntoTheWild))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nfor x. (ForDestruction(x) -> MightRelease(x, AnimalsIntoTheWild))\n    ^\n"}
{"timestamp": "2025-05-02T05:11:30.954353", "premises": ["all x. (Hungry(x) -> Satisfied(x))", "all x. (Satisfied(x) -> Starving(x))"], "conclusion": "all x. ((Not Hungry(x) & Satisfied(x)) -> Starving(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Hungry'.  Expected token ')'.\nall x. ((Not Hungry(x) & Satisfied(x)) -> Starving(x))\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Hungry'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Hungry'.  Expected token ')'.\nall x. ((Not Hungry(x) & Satisfied(x)) -> Starving(x))\n             ^\n"}
{"timestamp": "2025-05-02T05:11:57.829344", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:01.365880", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:04.859598", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "exists x. (Caterpillar(x) & -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:08.400347", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:14.507194", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "(Not(exists x. (Caterpillar(x) & Becomes(x, Butterfly))) & (exists x. (Caterpillar(x) & Becomes(x, Bear))) & (exists x. (Bear(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(Not(exists x. (Caterpillar(x) & Becomes(x, Butterfly))) & (exists x. (Caterpillar(x) & Becomes(x, Bear))) & (exists x. (Bear(x) & Becomes(x, Butterfly)))\n                                                                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(Not(exists x. (Caterpillar(x) & Becomes(x, Butterfly))) & (exists x. (Caterpillar(x) & Becomes(x, Bear))) & (exists x. (Bear(x) & Becomes(x, Butterfly)))\n                                                                                                                                                          ^\n"}
{"timestamp": "2025-05-02T05:12:19.550818", "premises": ["exists x. ((Caterpillar(x) & Becomes(x, Bear))", "exists x. ((Bear(x) & Becomes(x, Butterfly))"], "conclusion": "(not exists x. ((Caterpillar(x) & Becomes(x, Butterfly))) & (not exists x. ((Butterfly(x) & Becomes(x, Caterpillar)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(not exists x. ((Caterpillar(x) & Becomes(x, Butterfly))) & (not exists x. ((Butterfly(x) & Becomes(x, Caterpillar)))\n                                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(not exists x. ((Caterpillar(x) & Becomes(x, Butterfly))) & (not exists x. ((Butterfly(x) & Becomes(x, Caterpillar)))\n                                                                                                                     ^\n"}
{"timestamp": "2025-05-02T05:12:23.123354", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "not (exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:26.991953", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. ((Caterpillar(x) & Becomes(x, Bear)) -> -(Butterfly(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butterfly/1, Butterfly/0, Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butterfly/1, Butterfly/0, Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butterfly/1, Butterfly/0, Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butterfly/1, Butterfly/0, Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:12:30.490410", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "not exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-02T05:13:19.321108", "premises": ["exists x. (NobelPrize(x) & Winner(x, DonaldKnuth) | Winner(x, MarvinMinsky) | Winner(x, RichardHamming) | Winner(x, JohnMcCarthy))", "contributions(x, science) & Winner(x, DonaldKnuth)", "contributions(x, poleDancing) & Winner(x, MarvinMinsky)", "hates(x, numericalMethods) & Winner(x, RichardHamming)", "contributions(x, poleDancing) & Winner(x, JohnMcCarthy)"], "conclusion": "exists x. (NobelPrize(x) & Winner(x, DonaldKnuth) & contributions(x, science) & -(Winner(x, MarvinMinsky) & contributions(x, science) & Winner(x, RichardHamming) & contributions(x, science) & Winner(x, JohnMcCarthy) & contributions(x, science))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (NobelPrize(x) & Winner(x, DonaldKnuth) & contributions(x, science) & -(Winner(x, MarvinMinsky) & contributions(x, science) & Winner(x, RichardHamming) & contributions(x, science) & Winner(x, JohnMcCarthy) & contributions(x, science))\n                                                                                                                                                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (NobelPrize(x) & Winner(x, DonaldKnuth) & contributions(x, science) & -(Winner(x, MarvinMinsky) & contributions(x, science) & Winner(x, RichardHamming) & contributions(x, science) & Winner(x, JohnMcCarthy) & contributions(x, science))\n                                                                                                                                                                                                                                                    ^\n"}
{"timestamp": "2025-05-02T05:15:29.690043", "premises": ["all x. ((NobelPrize(x) & ((Knuth(x) & ContributionsToScience(Knuth)) | (Minsky(x) & ContributionsToField(Minsky)) | (Hamming(x) & Dislikes(Hamming, NumericalMethods)) | (McCarthy(x) & ContributionsToField(McCarthy)))", "Knuth(x) & ContributionsToScience(x)", "Minsky(x) & ContributionsToField(x)", "Hamming(x) & Dislikes(x, NumericalMethods)", "McCarthy(x) & ContributionsToField(x)"], "conclusion": "exists x. (NobelPrize(x) & ((Knuth(x) & ContributionsToScience(Knuth)) | (Minsky(x) & ContributionsToField(Minsky)) | (Hamming(x) & Dislikes(Hamming, NumericalMethods)) | (McCarthy(x) & ContributionsToField(McCarthy)))) & (~Knuth(x) & ~Minsky(x) & ~Hamming(x) & ~McCarthy(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((NobelPrize(x) & ((Knuth(x) & ContributionsToScience(Knuth)) | (Minsky(x) & ContributionsToField(Minsky)) | (Hamming(x) & Dislikes(Hamming, NumericalMethods)) | (McCarthy(x) & ContributionsToField(McCarthy)))\n                                                                                                                                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((NobelPrize(x) & ((Knuth(x) & ContributionsToScience(Knuth)) | (Minsky(x) & ContributionsToField(Minsky)) | (Hamming(x) & Dislikes(Hamming, NumericalMethods)) | (McCarthy(x) & ContributionsToField(McCarthy)))\n                                                                                                                                                                                                                        ^\n"}
{"timestamp": "2025-05-02T05:16:13.009326", "premises": ["exists x. (NobelPrize(x) & ((DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "exists x. (ScientificContributions(x) & DonaldKnuth(x))", "exists x. (PoleDancingContributions(x) & MarvinMinsky(x))", "exists x. (Hates(x, NumericalMethods) & RichardHamming(x))", "exists x. (PoleDancingContributions(x) & JohnMcCarthy(x))", "exists x. (NobelPrize(x) & ((ScientificContributions(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x))) | ((PoleDancingContributions(x) & (MarvinMinsky(x) | JohnMcCarthy(x)))"], "conclusion": "exists x. (PoleDancingContributions(x) & MarvinMinsky(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (NobelPrize(x) & ((DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (NobelPrize(x) & ((DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))\n                                                                                                     ^\n"}
{"timestamp": "2025-05-02T05:16:52.069910", "premises": ["all x. (NobelPrize(x) -> Exists(y. ContributionsToScience(x) & Exists(z. ContributionsToScience(z) & Not(x=z))))", "all x. (NobelPrize(x) -> ContributionsToScience(x))", "all x. (NobelPrize(x) -> ContributionsToPoleDancing(x))", "all x. (NobelPrize(x) -> Hates(x, NumericalMethods))", "all x. (NobelPrize(x) -> ContributionsToPoleDancing(x))"], "conclusion": "all x. (NobelPrize(x) -> ContributionsToScience(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (NobelPrize(x) -> Exists(y. ContributionsToScience(x) & Exists(z. ContributionsToScience(z) & Not(x=z))))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (NobelPrize(x) -> Exists(y. ContributionsToScience(x) & Exists(z. ContributionsToScience(z) & Not(x=z))))\n                                 ^\n"}
{"timestamp": "2025-05-02T05:17:40.709860", "premises": ["all x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor))", "all x. (AcademicPaper(x) -> Profitable(x))", "all x. (AcademicPaper(x) -> Not(x, AlignedWithHighSchoolCurricula))", "all x. (AcademicPaper(x) -> RequirementOf(x, AlignedWithHighSchoolCurricula))"], "conclusion": "WhollyDesignedBy(x, FirstAuthor) & Not(x, Profitable) & Not(x, AlignedWithHighSchoolCurricula) & RequirementOf(x, AlignedWithHighSchoolCurricula)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Profitable/1, Profitable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Profitable/1, Profitable/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Profitable/1, Profitable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Profitable/1, Profitable/0\n"}
{"timestamp": "2025-05-02T05:17:57.375431", "premises": ["all x. ((Designs(x) & Writes(x)) & FirstAuthor(x))", "all x. (IntendedForProfit(x))", "all x. (-AlignedWithHighSchoolCurriculum(x))", "several x. (Adjustments(x) & AlignedWithHighSchoolCurriculum(x))"], "conclusion": "all x. ((Designs(x) & Writes(x)) & FirstAuthor(x)) & (Not(all x. AlignedWithHighSchoolCurriculum(x)) & -(all x. AlignedWithHighSchoolCurriculum(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nseveral x. (Adjustments(x) & AlignedWithHighSchoolCurriculum(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nseveral x. (Adjustments(x) & AlignedWithHighSchoolCurriculum(x))\n        ^\n"}
{"timestamp": "2025-05-02T05:19:38.905688", "premises": ["all x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> Profitable(x))", "all x. (AcademicPaper(x) -> OriginallyNotAlignedWith(x, HighSchoolCurriculum))", "exists x. exists y. (AdjustmentsMadeTo(x, RequirementOf(x, AlignedWith(x, HighSchoolCurriculum)) & y) & (x_=_y)"], "conclusion": "all x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x)) & (Exists(y) & (y <> FirstAuthor(x)) & (AcademicPaper(y))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<>'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x)) & (Exists(y) & (y <> FirstAuthor(x)) & (AcademicPaper(y))))\n                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<>'.  Expected token ')'.\nall x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x)) & (Exists(y) & (y <> FirstAuthor(x)) & (AcademicPaper(y))))\n                                                                                                                       ^\n"}
{"timestamp": "2025-05-02T05:20:21.218995", "premises": ["all x. ((AcademicPaper(x) & Designed(x, FirstAuthor) & Written(x, FirstAuthor)) & Not(x, Designed(x, OtherAuthors)))", "all x. ((AcademicPaper(x) & Profitable(x)) & Not(x, Unprofitable))", "all x. ((AcademicPaper(x) & OriginalDesign(x, HighSchoolCurriculum)) & Not(x, AlignedWith(x, HighSchoolCurriculum)))", "all x. ((AcademicPaper(x) & AlignedWith(x, HighSchoolCurriculum)) & Not(x, UnalignedWith(x, HighSchoolCurriculum)))"], "conclusion": "all x. ((AcademicPaper(x) & Written(x, FirstAuthor)) & Exists(x, Designed(x, OtherAuthors)) & Not(x, Written(x, OtherAuthors)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Designed/2, Written/2, AlignedWith/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Designed/2, Written/2, AlignedWith/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Designed/2, Written/2, AlignedWith/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Designed/2, Written/2, AlignedWith/2\n"}
{"timestamp": "2025-05-02T05:20:51.648097", "premises": ["all x. (Giordano(x) -> ChineseSurname(x))", "AlbaRoversi uses Giordano as a surname", "PaoloRoversi uses Giordano as a surname", "RobertoRoversi uses Giordano as a surname", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'uses'.\nAlbaRoversi uses Giordano as a surname\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'uses'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'uses'.\nAlbaRoversi uses Giordano as a surname\n            ^\n"}
{"timestamp": "2025-05-02T05:21:17.887332", "premises": ["Surname(Giordano) & Chinese(Giordano)", "exists x. (Surname(x) & Giordano(x)) & Surname(AlbaRoversi) = x", "exists x. (Surname(x) & Giordano(x)) & Surname(PaoloRoversi) = x", "exists x. (Surname(x) & Giordano(x)) & Surname(RobertoRoversi) = x", "exists x. (Photographer(x) & Surname(PaoloRoversi) = x)", "all x. ((Photographer(x) & Surname(x)) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-05-02T05:22:06.000022", "premises": ["Surname(Giordano) & Chinese(Giordano)", "Surname(Alba_Roversi) = Giordano", "Surname(Paolo_Roversi) = Giordano", "Surname(Roberto_Roversi) = Giordano", "Photographer(Paolo_Roversi)", "Photographer(x) = (FashionPhotographer(x) | DolphinPhotographer(x))"], "conclusion": "Photographer(Paolo_Roversi) = FashionPhotographer(Paolo_Roversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1, Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1, Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1, Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1, Surname/1\n"}
{"timestamp": "2025-05-02T05:23:04.331891", "premises": ["Giordano is a surname", "usesSurname(AlbaRoversi, Giordano)", "usesSurname(PaoloRoversi, Giordano)", "usesSurname(RobertoRoversi, Giordano)", "photographer(PaoloRoversi)", "photographer(x) -> (fashionPhotographer(x) | dolphinPhotographer(x))", "usesSurname(AlbaRoversi, Giordano) & usesSurname(PaoloRoversi, Giordano) & usesSurname(RobertoRoversi, Giordano) & photographer(PaoloRoversi) & fashionPhotographer(PaoloRoversi)"], "conclusion": "usesSurname(AlbaRoversi, Giordano) & usesSurname(PaoloRoversi, Giordano) & usesSurname(RobertoRoversi, Giordano) & photographer(PaoloRoversi) & (fashionPhotographer(PaoloRoversi) & ~dolphinPhotographer(PaoloRoversi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nGiordano is a surname\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nGiordano is a surname\n         ^\n"}
{"timestamp": "2025-05-02T05:23:23.304831", "premises": ["Surname(Giordano) & Chinese(Giordano)", "exists x. (AlbaRoversi uses Giordano(x))", "exists x. (PaoloRoversi uses Giordano(x))", "exists x. (RobertoRoversi uses Giordano(x))", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'uses'.  Expected token ')'.\nexists x. (AlbaRoversi uses Giordano(x))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'uses'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'uses'.  Expected token ')'.\nexists x. (AlbaRoversi uses Giordano(x))\n                       ^\n"}
{"timestamp": "2025-05-02T05:23:41.237145", "premises": ["all x. (Giordano(x) -> Chinese(x))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-05-02T05:24:16.647025", "premises": ["all x. (Giordano(x) -> ChineseSurname(x))", "AlbaRoversi(x) -> Giordano(x)", "PaoloRoversi(x) -> Giordano(x)", "RobertoRoversi(x) -> Giordano(x)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0\n"}
{"timestamp": "2025-05-02T05:24:51.133808", "premises": ["Astronaut(Tyga)", "all x. ((Astronaut(x) & Consumes(x, RockAlbums))", "Consumes(Tyga, WellDoneThree)", "all x. ((Astronaut(x) & ~Singer(x, Opera))"], "conclusion": "~(~Exists(x, ~(ReleaseDate(x)))) & ReleaseDate(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Astronaut(x) & Consumes(x, RockAlbums))\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Astronaut(x) & Consumes(x, RockAlbums))\n                                                ^\n"}
{"timestamp": "2025-05-02T05:24:59.872750", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. ((Astronaut(x) & Not(x=OperaSinger)) & ((Not(x=Astronaut) & Operasinger(x)) -> False))"], "conclusion": "exists x. (Released(x, WellDoneThree))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. ((Astronaut(x) & Not(x=OperaSinger)) & ((Not(x=Astronaut) & Operasinger(x)) -> False))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. ((Astronaut(x) & Not(x=OperaSinger)) & ((Not(x=Astronaut) & Operasinger(x)) -> False))\n                             ^\n"}
{"timestamp": "2025-05-02T05:25:07.019951", "premises": ["Astronaut(Tyga)", "exists x. (Astronaut(x) & Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "exists x. (Astronaut(x) & ~OperaSinger(x))"], "conclusion": "exists x. (Released(x) & WellDone3(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~OperaSinger(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Astronaut(x) & ~OperaSinger(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T05:25:28.361035", "premises": ["Astronaut(Tyga)", "Consumes(Astronauts, RockAlbums)", "Consumes(Tyga, WellDoneThree)", "not(Astronauts(x) & OperaSinger(x))"], "conclusion": "Exists(x) & Exists(y) & (TygaConsumes(x) & WellDone3(x) & ReleaseDate(y) & Not(y=x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nExists(x) & Exists(y) & (TygaConsumes(x) & WellDone3(x) & ReleaseDate(y) & Not(y=x))\n                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nExists(x) & Exists(y) & (TygaConsumes(x) & WellDone3(x) & ReleaseDate(y) & Not(y=x))\n                                                                                ^\n"}
{"timestamp": "2025-05-02T05:25:55.134644", "premises": ["Astronaut(Tyga)", "all x. ((Astronaut(x) & ListensTo(x, RockAlbums)) & (RockAlbums(x) -> Not(OperaSingers(x))))", "Consumes(Tyga, WellDoneThree)", "all x. ((Astronaut(x) & Not(OperaSingers(x))) & (OperaSingers(x) -> Not(Astronauts(x))))"], "conclusion": "Exists(x) & Exists(y) & (RockAlbum(x) & ListensTo(y, x) & (Released(x) & (Not(Consumes(y, x)))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Consumes/2, OperaSingers/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Consumes/2, OperaSingers/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Consumes/2, OperaSingers/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Consumes/2, OperaSingers/1\n"}
{"timestamp": "2025-05-02T05:25:58.343311", "premises": ["all x. (Mammal(x) -> Never(x, Breaths))", "exists x. ((Bird(x) & Mammal(x)) | (Mammal(x) & Bird(x)))"], "conclusion": "all x. (Bird(x) -> Breaths(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Breaths/1, Breaths/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Breaths/1, Breaths/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Breaths/1, Breaths/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Breaths/1, Breaths/0\n"}
{"timestamp": "2025-05-02T05:26:41.397720", "premises": ["all x. (CanTransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (Corgi(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEVCar(x) -> SingleSeatElectricCar(x))", "all x. (NotCorgi(x) & NotSingleSeatElectricCar(x) & QueenDogs(x))"], "conclusion": "Corgi(QueenDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0\n"}
{"timestamp": "2025-05-02T05:27:55.714613", "premises": ["all x. (CanTransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (Corgi(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))", "exists x. (QueensDogs(x) & NotCorgi(x) & NotSingleSeatElectricCar(x))"], "conclusion": "NotCorgi(QueensDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0\n"}
{"timestamp": "2025-05-02T05:28:14.249099", "premises": ["all x. (CanTransportMultiplePassengers(x) -> Not(OneSeater(x)))", "all x. (Corgi(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))", "all x. ((Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x))"], "conclusion": "Corgi(QueensDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T05:28:37.806051", "premises": ["all x. (TransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (Corgi(x) -> TransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))", "all x. ((Corgi(x) & Not(x=Queen)) -> Not(x=Corgi)) & all x. ((SingleSeatElectricCar(x) & Not(x=Queen)) -> Not(x=SingleSeatElectricCar))"], "conclusion": "all x. (Corgi(x) & (x=Queen))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nall x. ((Corgi(x) & Not(x=Queen)) -> Not(x=Corgi)) & all x. ((SingleSeatElectricCar(x) & Not(x=Queen)) -> Not(x=SingleSeatElectricCar))\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nall x. ((Corgi(x) & Not(x=Queen)) -> Not(x=Corgi)) & all x. ((SingleSeatElectricCar(x) & Not(x=Queen)) -> Not(x=SingleSeatElectricCar))\n                         ^\n"}
{"timestamp": "2025-05-02T05:28:55.674316", "premises": ["all x. (TransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (Corgi(x) -> TransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEvCar(x) -> SingleSeatElectricCar(x))", "all x. (QueenDogs(x) -> (NotCorgi(x) & NotSingleSeatElectricCar(x)))"], "conclusion": "Corgi(QueenDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueenDogs/1, QueenDogs/0\n"}
{"timestamp": "2025-05-02T05:29:14.874921", "premises": ["all x. (CanTransport(x, MultiplePassengers) -> Not(OneSeater(x)))", "all x. (CanTransport(x, MultiplePassengers) & Corgi(x))", "all x. (OneSeater(x) & Electric(x) & SingleSeatElectricCar(x))", "all x. (SingleSeatElectricCar(x) & SoloEV(x))", "all x. ((Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x))"], "conclusion": "Corgi(QueensDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Not(Corgi(x)) & Not(SingleSeatElectricCar(x))) -> Queen'sDogs(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
