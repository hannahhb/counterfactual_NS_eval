{"timestamp": "2025-06-10T05:07:02.112487", "premises": ["all x. (OftenPerformsInTalentShow(x) -> AttendsAndIsEngaged(x))", "OftenPerformsInTalentShow(x) | InactiveAndDisinterested(x)", "all x. (Chaperones(x) -> -Student(x))", "all x. (InactiveAndDisinterested(x) -> Chaperones(x))", "all x. (YoungChildOrTeenager(x) & WishToFurtherEducation(x) -> Student(x))"], "conclusion": "((AttendsAndIsEngaged(Bonnie) & Student(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -Student(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenager(Bonnie) & Chaperones(Bonnie)) | (-YoungChildOrTeenager(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterested(Bonnie)) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendsAndIsEngaged(Bonnie) & Student(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -Student(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenager(Bonnie) & Chaperones(Bonnie)) | (-YoungChildOrTeenager(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterested(Bonnie)) </CONCLUSION>\n                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendsAndIsEngaged(Bonnie) & Student(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -Student(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenager(Bonnie) & Chaperones(Bonnie)) | (-YoungChildOrTeenager(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterested(Bonnie)) </CONCLUSION>\n                                                                                                      ^\n"}
{"timestamp": "2025-06-10T05:07:02.127840", "premises": ["all x. (FrequentPerformer(x) -> EngagedWithSchoolEvents(x) & AttendSchool(x))", "(exists x. (FrequentPerformer(x) & -InactiveAndDisinterested(x)) | exists x. (-FrequentPerformer(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -AttendSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (WishToFurtherAcademicCareer(x) -> AttendSchool(x))", "((AttendSchool(Bonnie) & EngagedWithSchoolEvents(Bonnie)) | -AttendSchool(Bonnie) & -EngagedWithSchoolEvents(Bonnie)) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((WishToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | -WishToFurtherAcademicCareer(Bonnie)) -> ((AttendSchool(Bonnie) | InactiveAndDisinterested(Bonnie))", "all x. (FrequentPerformer(x) -> EngagedWithSchoolEvents(x) & AttendSchool(x))", "(exists x. (FrequentPerformer(x) & -InactiveAndDisinterested(x)) | exists x. (-FrequentPerformer(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -AttendSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))"], "conclusion": "((WishToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | -WishToFurtherAcademicCareer(Bonnie)) -> ((AttendSchool(Bonnie) | InactiveAndDisinterested(Bonnie))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n((WishToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | -WishToFurtherAcademicCareer(Bonnie)) -> ((AttendSchool(Bonnie) | InactiveAndDisinterested(Bonnie))\n                                                                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n((WishToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | -WishToFurtherAcademicCareer(Bonnie)) -> ((AttendSchool(Bonnie) | InactiveAndDisinterested(Bonnie))\n                                                                                                                                                                                ^\n"}
{"timestamp": "2025-06-10T05:07:02.129878", "premises": ["all x. (PerformsOftenInSchoolTalentShow(x) -> AttendsAndIsEngaged(x))", "all x. (PerformsOftenInSchoolTalentShow(x) | InactiveAndDisinterested(x))", "all x. (ChaperonesHighSchoolDances(x) -> -StudentWhoAttendsSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperonesHighSchoolDances(x))", "all x. (YoungAndWantsToFurtherEducation(x) -> StudentWhoAttendsSchool(x))"], "conclusion": "(AttendsAndIsEngaged(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -StudentWhoAttendsSchool(Bonnie)) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungAndWantsToFurtherEducation(Bonnie) & ChaperonesHighSchoolDances(Bonnie)) | (-YoungAndWantsToFurtherEducation(Bonnie))) -> ((StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(AttendsAndIsEngaged(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -StudentWhoAttendsSchool(Bonnie)) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungAndWantsToFurtherEducation(Bonnie) & ChaperonesHighSchoolDances(Bonnie)) | (-YoungAndWantsToFurtherEducation(Bonnie))) -> ((StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie)))\n                                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(AttendsAndIsEngaged(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendsAndIsEngaged(Bonnie) & -StudentWhoAttendsSchool(Bonnie)) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungAndWantsToFurtherEducation(Bonnie) & ChaperonesHighSchoolDances(Bonnie)) | (-YoungAndWantsToFurtherEducation(Bonnie))) -> ((StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie)))\n                                                                                                                                    ^\n"}
{"timestamp": "2025-06-10T05:07:07.179578", "premises": ["all x. (PerformInSchoolTalentShow(x) -> (AttendAndEngage(x, SchoolEvents)))", "((PerformInSchoolTalentShow(x) & -InactiveAndDisinterested(x)) | (-PerformInSchoolTalentShow(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -Attend(x, School))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (FurtherAcademicCareerAndEducationalOpportunities(x) -> Attend(x, School))"], "conclusion": "((AttendAndEngage(Bonnie, SchoolEvents) & Attend(Bonnie, School)) | (-AttendAndEngage(Bonnie, SchoolEvents) & -Attend(Bonnie, School))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((FurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-FurtherAcademicCareerAndEducationalOpportunities(Bonnie)) -> (Attend(Bonnie, School) | InactiveAndDisinterested(Bonnie)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendAndEngage(Bonnie, SchoolEvents) & Attend(Bonnie, School)) | (-AttendAndEngage(Bonnie, SchoolEvents) & -Attend(Bonnie, School))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((FurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-FurtherAcademicCareerAndEducationalOpportunities(Bonnie)) -> (Attend(Bonnie, School) | InactiveAndDisinterested(Bonnie)))\n                                                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendAndEngage(Bonnie, SchoolEvents) & Attend(Bonnie, School)) | (-AttendAndEngage(Bonnie, SchoolEvents) & -Attend(Bonnie, School))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((FurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-FurtherAcademicCareerAndEducationalOpportunities(Bonnie)) -> (Attend(Bonnie, School) | InactiveAndDisinterested(Bonnie)))\n                                                                                                                                        ^\n"}
{"timestamp": "2025-06-10T05:07:07.181721", "premises": ["all x. (PerformInSchoolTalentShowsOften(x) -> AttendAndEngage(x))", "((PerformInSchoolTalentShowsOften(x) & -InactiveAndDisinterested(x)) | (-PerformInSchoolTalentShowsOften(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -StudentWhoAttendsSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(x) -> StudentWhoAttendsSchool(x))"], "conclusion": "((AttendAndEngage(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendAndEngage(Bonnie) & -StudentWhoAttendsSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & -ChaperoneHighSchoolDances(Bonnie)) -> (StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie))) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendAndEngage(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendAndEngage(Bonnie) & -StudentWhoAttendsSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & -ChaperoneHighSchoolDances(Bonnie)) -> (StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie))) </CONCLUSION> <EVALUATE>\n                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendAndEngage(Bonnie) & StudentWhoAttendsSchool(Bonnie)) | (-AttendAndEngage(Bonnie) & -StudentWhoAttendsSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & ChaperoneHighSchoolDances(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareerAndEducationalOpportunities(Bonnie) & -ChaperoneHighSchoolDances(Bonnie)) -> (StudentWhoAttendsSchool(Bonnie) | InactiveAndDisinterested(Bonnie))) </CONCLUSION> <EVALUATE>\n                                                                                                                              ^\n"}
{"timestamp": "2025-06-10T05:07:07.195032", "premises": ["all x. (OftenPerformInSchoolTalentShow(x) -> AttendAndEngagedWithSchoolEvents(x))", "(OftenPerformInSchoolTalentShow(x) | InactiveAndDisinterestedMember(x))", "all x. (ChaperoneHighSchoolDance(x) -> -Student(x))", "all x. (InactiveAndDisinterestedMember(x) -> ChaperoneHighSchoolDance(x))", "all x. (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(x) -> Student(x))", "(AttendAndEngagedWithSchoolEvents(Bonnie) & Student(Bonnie)) | (-AttendAndEngagedWithSchoolEvents(Bonnie) & -Student(Bonnie))"], "conclusion": "((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie)) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie)) </PREMISES> <CONCLUSION>  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | ChaperoneHighSchoolDance(Bonnie)  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ((-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-Chaper", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.  Expected token ')'.\n((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie)) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie)) </PREMISES> <CONCLUSION>  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | ChaperoneHighSchoolDance(Bonnie)  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ((-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-Chaper\n                                                                                                                                                                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.  Expected token ')'.\n((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie)) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie)) </PREMISES> <CONCLUSION>  FOL: ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & -ChaperoneHighSchoolDance(Bonnie))) -> (Student(Bonnie) | InactiveAndDisinterestedMember(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | ChaperoneHighSchoolDance(Bonnie)  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ((-ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) | ChaperoneHighSchoolDance(Bonnie)) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & (YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: ChaperoneHighSchoolDance(Bonnie) & ((ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: (ChaperoneHighSchoolDance(Bonnie) & YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie)) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie)) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (-ChaperoneHighSchoolDance(Bonnie))  FOL: YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & ChaperoneHighSchoolDance(Bonnie))) | YoungChildOrTeenagerWhoWishesToFurtherAcademicCareer(Bonnie) & (ChaperoneHighSchoolDance(Bonnie) & (-Chaper\n                                                                                                                                                                                                                                                                       ^\n"}
{"timestamp": "2025-06-10T05:08:47.704737", "premises": ["all x. (PerformInTalentShowsOften(x) -> AttendAndEngaged(x))", "((PerformInTalentShowsOften(x) & -Inactive(x)) | (-PerformInTalentShowsOften(x) & Inactive(x)))", "all x. (Chaperone(x) -> -StudentAtSchool(x))", "all x. (Inactive(x) -> Chaperone(x))", "all x. (AcademicAchiever(x) -> StudentAtSchool(x))", "(AttendAndEngaged(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngaged(Bonnie) & -StudentAtSchool(Bonnie))"], "conclusion": "(Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </PREMISES> <CONCLUSION>  FOL: (Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </PREMISES> <CONCLUSION>  FOL: (Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </CONCLUSION> <EVALUATE>\n                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </PREMISES> <CONCLUSION>  FOL: (Chaperone(Bonnie) | (\u00acChaperone(Bonnie) & PerformInTalentShowsOften(Bonnie))) -> (AcademicAchiever(Bonnie) & Inactive(Bonnie)) </CONCLUSION> <EVALUATE>\n                                                                                                                                ^\n"}
{"timestamp": "2025-06-10T05:08:47.702889", "premises": ["all x. (OftenPerformInSchoolTalentShow(x) -> (AttendAndEngageWithSchoolEvents(x)))", "all x. ((OftenPerformInSchoolTalentShow(x) & -InactiveAndDisinterested(x)) | (-OftenPerformInSchoolTalentShow(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -StudentAtSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (YoungChildOrTeenagerWhoWishToFurtherAcademicCareer(x) -> StudentAtSchool(x))"], "conclusion": "((AttendAndEngageWithSchoolEvents(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngageWithSchoolEvents(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(Bonnie) | (OftenPerformInSchoolTalentShow(Bonnie) & -OftenPerformInSchoolTalentShow(Bonnie))) -> (InactiveAndDisinterested(Bonnie) & YoungChildOrTeenagerWhoWishToFurtherAcademicCareer(Bonnie))) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendAndEngageWithSchoolEvents(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngageWithSchoolEvents(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(Bonnie) | (OftenPerformInSchoolTalentShow(Bonnie) & -OftenPerformInSchoolTalentShow(Bonnie))) -> (InactiveAndDisinterested(Bonnie) & YoungChildOrTeenagerWhoWishToFurtherAcademicCareer(Bonnie))) </CONCLUSION> <EVALUATE>\n                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendAndEngageWithSchoolEvents(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngageWithSchoolEvents(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(Bonnie) | (OftenPerformInSchoolTalentShow(Bonnie) & -OftenPerformInSchoolTalentShow(Bonnie))) -> (InactiveAndDisinterested(Bonnie) & YoungChildOrTeenagerWhoWishToFurtherAcademicCareer(Bonnie))) </CONCLUSION> <EVALUATE>\n                                                                                                                                              ^\n"}
{"timestamp": "2025-06-10T05:08:47.751056", "premises": ["all x. (OftenPerformsInSchoolTalentShows(x) -> AttendAndEngageWithSchoolEvents(x))", "(OftenPerformsInSchoolTalentShows(x) | InactiveAndDisinterested(x))", "all x. (ChaperoneHighSchoolDances(x) -> -StudentWhoAttendsSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (YoungChildOrTeenager(x) & WishToFurtherAcademicCareers(x) -> StudentWhoAttendsSchool(x))"], "conclusion": "((AttendAndEngageWithSchoolEvents(x) & StudentWhoAttendsSchool(x)) | (-AttendAndEngageWithSchoolEvents(x) & -StudentWhoAttendsSchool(x))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(x) | OftenPerformsInSchoolTalentShows(x)) -> (YoungChildOrTeenager(x) & InactiveAndDisinterested(x))) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendAndEngageWithSchoolEvents(x) & StudentWhoAttendsSchool(x)) | (-AttendAndEngageWithSchoolEvents(x) & -StudentWhoAttendsSchool(x))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(x) | OftenPerformsInSchoolTalentShows(x)) -> (YoungChildOrTeenager(x) & InactiveAndDisinterested(x))) </CONCLUSION> <EVALUATE>\n                                                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendAndEngageWithSchoolEvents(x) & StudentWhoAttendsSchool(x)) | (-AttendAndEngageWithSchoolEvents(x) & -StudentWhoAttendsSchool(x))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: ((ChaperoneHighSchoolDances(x) | OftenPerformsInSchoolTalentShows(x)) -> (YoungChildOrTeenager(x) & InactiveAndDisinterested(x))) </CONCLUSION> <EVALUATE>\n                                                                                                                                          ^\n"}
{"timestamp": "2025-06-10T05:08:47.745732", "premises": ["all x. (PerformInSchoolTalentShowsOften(x) -> AttendAndAreVeryEngagedWithSchoolEvents(x))", "all x. (PerformInSchoolTalentShowsOften(x) | InactiveAndDisinterestedMember(x))", "all x. (ChaperoneHighSchoolDances(x) -> -StudentWhoAttendsTheSchool(x))", "all x. (InactiveAndDisinterestedMember(x) -> ChaperoneHighSchoolDances(x))", "all x. (YoungChildrenAndTeenagersWhoWishToFurtherTheirAcademicCareersAndEducationalOpportunities(x) -> StudentWhoAttendsTheSchool(x))"], "conclusion": "((AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & StudentWhoAttendsTheSchool(Bonnie)) | (-AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & -StudentWhoAttendsTheSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | -ChaperoneHighSchoolDances(Bonnie) & PerformInSchoolTalentShowsOften(Bonnie)) -> (YoungChildrenAndTeenagersWhoWishToFurtherTheirAcademicCareersAndEducationalOpportunities(Bonnie) & InactiveAndDisinterestedMember(Bonnie))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & StudentWhoAttendsTheSchool(Bonnie)) | (-AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & -StudentWhoAttendsTheSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | -ChaperoneHighSchoolDances(Bonnie) & PerformInSchoolTalentShowsOften(Bonnie)) -> (YoungChildrenAndTeenagersWhoWishToFurtherTheirAcademicCareersAndEducationalOpportunities(Bonnie) & InactiveAndDisinterestedMember(Bonnie))\n                                                                                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & StudentWhoAttendsTheSchool(Bonnie)) | (-AttendsAndIsVeryEngagedWithSchoolEvents(Bonnie) & -StudentWhoAttendsTheSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | -ChaperoneHighSchoolDances(Bonnie) & PerformInSchoolTalentShowsOften(Bonnie)) -> (YoungChildrenAndTeenagersWhoWishToFurtherTheirAcademicCareersAndEducationalOpportunities(Bonnie) & InactiveAndDisinterestedMember(Bonnie))\n                                                                                                                                                                                    ^\n"}
{"timestamp": "2025-06-10T05:08:47.758517", "premises": ["all x. (SchoolTalentShowOften(x) -> AttendAndEngaged(x))", "((SchoolTalentShowOften(x) & -InactiveAndDisinterested(x)) | (-SchoolTalentShowOften(x) & InactiveAndDisinterested(x)))", "all x. (ChaperoneHighSchoolDances(x) -> -StudentAtSchool(x))", "all x. (InactiveAndDisinterested(x) -> ChaperoneHighSchoolDances(x))", "all x. (YoungChildOrTeenagerWishesToFurtherCareerAndEducationalOpportunities(x) -> StudentAtSchool(x))"], "conclusion": "((AttendAndEngaged(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngaged(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | (-ChaperoneHighSchoolDances(Bonnie) & SchoolTalentShowOften(Bonnie))) -> (YoungChildOrTeenagerWishesToFurtherCareerAndEducationalOpportunities(Bonnie) & InactiveAndDisinterested(Bonnie))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((AttendAndEngaged(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngaged(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | (-ChaperoneHighSchoolDances(Bonnie) & SchoolTalentShowOften(Bonnie))) -> (YoungChildOrTeenagerWishesToFurtherCareerAndEducationalOpportunities(Bonnie) & InactiveAndDisinterested(Bonnie))\n                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((AttendAndEngaged(Bonnie) & StudentAtSchool(Bonnie)) | (-AttendAndEngaged(Bonnie) & -StudentAtSchool(Bonnie))) </PREMISES> <CONCLUSION> If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.  FOL: (ChaperoneHighSchoolDances(Bonnie) | (-ChaperoneHighSchoolDances(Bonnie) & SchoolTalentShowOften(Bonnie))) -> (YoungChildOrTeenagerWishesToFurtherCareerAndEducationalOpportunities(Bonnie) & InactiveAndDisinterested(Bonnie))\n                                                                                                                ^\n"}
{"timestamp": "2025-06-10T05:11:39.612926", "premises": ["all x. (ScheduleMeeting(x, Customers) -> AppearInCompany(x, Today))", "all x. (LunchInCompany(x) -> ScheduleMeeting(x, Customers))", "all x. ((LunchInCompany(x) & -LunchAtHome(x)) | (-LunchInCompany(x) & LunchAtHome(x)))", "all x. (LunchAtHome(x) -> RemoteWorkFromHome(x))", "all x. (InOtherCountries(x) -> RemoteWorkFromHome(x))", "all x. (Manager(x) -> -RemoteWorkFromHome(x))", "((Manager(James) & AppearInCompany(James)) | (-Manager(James) & -AppearInCompany(James)))"], "conclusion": "-LunchInCompany(James)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AppearInCompany/1, AppearInCompany/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AppearInCompany/1, AppearInCompany/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AppearInCompany/1, AppearInCompany/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AppearInCompany/1, AppearInCompany/2\n"}
{"timestamp": "2025-06-10T05:13:27.629975", "premises": ["all x. (ScheduleMeetingWithCustomer(x) -> AppearInCompanyToday(x))", "all x. (LunchInCompany(x) -> ScheduleMeetingWithCustomer(x))", "((LunchInCompany(x) & -LunchAtHome(x)) | (-LunchInCompany(x) & LunchAtHome(x)))", "all x. (LunchAtHome(x) -> WorkingRemotelyFromHome(x))", "all x. (OtherCountry(x) -> WorkingRemotelyFromHome(x))", "all x. (Manager(x) -> -WorkingRemotelyFromHome(x))"], "conclusion": "((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James))) </PREMISES> <CONCLUSION> If James is either a manager or in other countries,  then James either has lunch at home and works remotely from home, or neither has lunch at home nor works remotely from home.  FOL: ((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James)))    |- ((Manager(James) | OtherCountry(James)) & -(-Manager(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) | OtherCountry(James)) & Manager(James) & AppearInCompanyToday(James) | Manager(James) & -AppearInCompanyToday(James) | OtherCountry(James) & AppearInCompanyToday(James) | OtherCountry(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James)) | (-LunchInCompany(James) & LunchAtHome(James))) & ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James))) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James))) </PREMISES> <CONCLUSION> If James is either a manager or in other countries,  then James either has lunch at home and works remotely from home, or neither has lunch at home nor works remotely from home.  FOL: ((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James)))    |- ((Manager(James) | OtherCountry(James)) & -(-Manager(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) | OtherCountry(James)) & Manager(James) & AppearInCompanyToday(James) | Manager(James) & -AppearInCompanyToday(James) | OtherCountry(James) & AppearInCompanyToday(James) | OtherCountry(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James)) | (-LunchInCompany(James) & LunchAtHome(James))) & ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James))) </CONCLUSION>\n                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James))) </PREMISES> <CONCLUSION> If James is either a manager or in other countries,  then James either has lunch at home and works remotely from home, or neither has lunch at home nor works remotely from home.  FOL: ((Manager(James) & AppearInCompanyToday(James)) | (-Manager(James) & -AppearInCompanyToday(James)))    |- ((Manager(James) | OtherCountry(James)) & -(-Manager(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) | OtherCountry(James)) & Manager(James) & AppearInCompanyToday(James) | Manager(James) & -AppearInCompanyToday(James) | OtherCountry(James) & AppearInCompanyToday(James) | OtherCountry(James) & -AppearInCompanyToday(James)))   |- ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James)) | (-LunchInCompany(James) & LunchAtHome(James))) & ((Manager(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (Manager(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (OtherCountry(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (OtherCountry(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)) | (LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James)))   |- ((LunchInCompany(James) & -LunchAtHome(James) & -WorkingRemotelyFromHome(James)) | (-LunchInCompany(James) & LunchAtHome(James) & WorkingRemotelyFromHome(James))) </CONCLUSION>\n                                                                                                    ^\n"}
{"timestamp": "2025-06-10T05:13:27.653870", "premises": ["all x. (ScheduleMeeting(x, Customer(x)) -> InCompany(x, Today))", "all x. (InCompany(x, Today) -> ScheduleMeeting(x, Customer(x)))", "(InCompany(x, Today) | HaveLunchAtHome(x))", "(HaveLunchAtHome(x) -> WorkRemotelyFromHome(x))", "all x. (InOtherCountries(x) -> WorkRemotelyFromHome(x))", "all x. (Manager(x) -> -WorkRemotelyFromHome(x))", "((Manager(James) & InCompany(James)) | (-Manager(James) & -InCompany(James)))"], "conclusion": "((Manager(James) | InOtherCountries(James)) -> ((WorkRemotelyFromHome(James) & HaveLunchAtHome(James)) | (-WorkRemotelyFromHome(James) & -HaveLunchAtHome(James))))", "error_type": "<class 'KeyError'>", "error_message": "27", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 273, in token\n    tok = self._buffer[self._currentIndex + location]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 415, in handle_quant\n    self.token(0) == Tokens.DOT and not self.inRange(1)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 27\n"}
{"timestamp": "2025-06-10T05:13:27.665506", "premises": ["all x. (Meeting(x) -> AppearToday(x))", "all x. (LunchInCompany(x) -> Meeting(x))", "all x. (LunchInCompany(x) | LunchAtHome(x))", "all x. (LunchAtHome(x) -> RemoteWork(x))", "all x. (Country(x, Other) -> RemoteWork(x))", "all x. (Manager(x) -> -RemoteWork(x))", "(Manager(James) & AppearToday(James)) | (-Manager(James) & -AppearToday(James))"], "conclusion": "(Manager(James) | Country(James, Other)) \u2192 ((LunchAtHome(James) & RemoteWork(James)) | (-LunchAtHome(James) & -RemoteWork(James)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\n(Manager(James) | Country(James, Other)) \u2192 ((LunchAtHome(James) & RemoteWork(James)) | (-LunchAtHome(James) & -RemoteWork(James)))\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\n(Manager(James) | Country(James, Other)) \u2192 ((LunchAtHome(James) & RemoteWork(James)) | (-LunchAtHome(James) & -RemoteWork(James)))\n                                         ^\n"}
{"timestamp": "2025-06-10T05:14:29.130612", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "Infects(MonkeypoxVirus, Human) | Infects(MonkeypoxVirus, Animal)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))"], "conclusion": "exists x. (Infects(MonkeypoxVirus, x) & Mammal(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\nexists x. (Infects(MonkeypoxVirus, x) & Mammal(x)) </CONCLUSION> <EVALUATE>\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\nexists x. (Infects(MonkeypoxVirus, x) & Mammal(x)) </CONCLUSION> <EVALUATE>\n                                                   ^\n"}
{"timestamp": "2025-06-10T05:14:29.137616", "premises": ["InfectiousDisease(Monkeypox) & Cause(MonkeypoxVirus, Monkeypox)", "Infect(Animal, MonkeypoxVirus) & Infect(Human, MonkeypoxVirus)", "Mammal(Human)", "Animal(Mammal)", "NotApplicable"], "conclusion": "NotApplicable </PREMISES> <CONCLUSION> There is an animal.  FOL: exists x. Animal(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNotApplicable </PREMISES> <CONCLUSION> There is an animal.  FOL: exists x. Animal(x)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNotApplicable </PREMISES> <CONCLUSION> There is an animal.  FOL: exists x. Animal(x)\n              ^\n"}
{"timestamp": "2025-06-10T05:14:29.144976", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "Infects(MonkeypoxVirus, CertainAnimals) & Infects(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Symptons(Monkeypox, [Fever, Headache, MusclePains, FeelingTired])", "Glu(Causes, FeelingTired)"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0\n"}
{"timestamp": "2025-06-10T05:14:29.147194", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(MonkeypoxVirus, Monkeypox)", "OccursIn(MonkeypoxVirus, Animal) & OccursIn(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))"], "conclusion": "exists x. Animal(x) </CONCLUSION> <EVALUATE> However, the conclusion \"There is an animal\" does not logically follow from the premises, since the premises do not provide any information that guarantees the existence of an animal.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\nexists x. Animal(x) </CONCLUSION> <EVALUATE> However, the conclusion \"There is an animal\" does not logically follow from the premises, since the premises do not provide any information that guarantees the existence of an animal.\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\nexists x. Animal(x) </CONCLUSION> <EVALUATE> However, the conclusion \"There is an animal\" does not logically follow from the premises, since the premises do not provide any information that guarantees the existence of an animal.\n                    ^\n"}
{"timestamp": "2025-06-10T05:14:29.145063", "premises": ["InfectiousDisease(Monkeypox)", "CanOccurIn(MonkeypoxVirus, Human) | CanOccurIn(MonkeypoxVirus, Animal)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Fever(Monkeypox) & Headache(Monkeypox) & MusclePains(Monkeypox) & FeelingTired(Monkeypox)", "FeelingTired(People) <- Flu(People)"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Human/1, Human/0\n"}
{"timestamp": "2025-06-10T05:14:29.144866", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "exists y. (Causes(Monkeypox, y) & CanOccurIn(y, Animal) & CanOccurIn(y, Human))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0, Animal/1, Animal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0, Animal/1, Animal/0\n"}
{"timestamp": "2025-06-10T05:14:29.155081", "premises": ["InfectiousDisease(d) & CausedBy(Virus(d), MonkeypoxVirus)", "OccursIn(Virus(Monkeypox), Animals) & In(Animals, Humans)", "all x. (Humans(x) -> Mammal(x))", "all x. (Mammal(x) -> Animals(x))", "-InfectiousDisease(d) -> FeelTired(Humans)", "In(Humans, glu) -> FeelTired(Humans)"], "conclusion": "exists x. Animals(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Humans/1, Humans/0, Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Humans/1, Humans/0, Animals/1, Animals/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Humans/1, Humans/0, Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Humans/1, Humans/0, Animals/1, Animals/0\n"}
{"timestamp": "2025-06-10T05:14:29.154635", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "OccursIn(MonkeypoxVirus, Animal) & Includes(Human, Animal)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Symptoms(Monkeypox, {Fever, Headache, MusclePains, FeelingTired})", "LeadsTo(Glu, FeelingTired)"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptoms(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptoms(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:14:29.157414", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "OccursIn(MonkeypoxVirus, Animal) & OccursIn(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "SymptonsOf(Monkeypox, Fever) & SymptonsOf(Monkeypox, Headache) & SymptonsOf(Monkeypox, MusclePains) & SymptonsOf(Monkeypox, FeelingTired)", "FeelingTired(people, Glu)"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/2, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/2, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/2, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/2, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0\n"}
{"timestamp": "2025-06-10T05:15:28.922408", "premises": ["Disease(Monkeypox) & Cause(MonkeypoxVirus, Monkeypox)", "OccursIn(MonkeypoxVirus, Animal) & OccursIn(MonkeypoxVirus, Human)", "Mammal(Human)", "Animal(Mammal)", "Symptoms(Monkeypox, {Fever, Headache, MusclePains, FeelingTired})", "Cause(Flu, FeelingTired)"], "conclusion": "-Flu", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptoms(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptoms(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:15:28.925884", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "exists x. (Animal(x) & MonkeypoxVirus(x) & Includes(x, Human))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "(Fever & Headache & MusclePains & FeelingTired)", "Glu -> FeelingTired"], "conclusion": "-Glu", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0, MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0, MonkeypoxVirus/1, MonkeypoxVirus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0, MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0, MonkeypoxVirus/1, MonkeypoxVirus/0\n"}
{"timestamp": "2025-06-10T05:15:28.929997", "premises": ["Disease(Monkeypox) & Infectious(Monkeypox)", "Animal(MonkeypoxVirus) & Animal(Human)", "Mammal(Human)", "all x. (Mammal(x) -> Animal(x))", "Symptoms(Monkeypox) = {Fever, Headache, MusclePains, FeelingTired}", "Glu \u2192 FeelingTired"], "conclusion": "-Disease(Flu)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nSymptoms(Monkeypox) = {Fever, Headache, MusclePains, FeelingTired}\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nSymptoms(Monkeypox) = {Fever, Headache, MusclePains, FeelingTired}\n                            ^\n"}
{"timestamp": "2025-06-10T05:15:28.932923", "premises": ["all x. (Monkeypox(x) -> InfectiousDisease(x) & CausedBy(x, MonkeypoxVirus))", "all x. (MonkeypoxVirus(x) -> CanOccur(x, Animal) | CanOccur(x, Human))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Symptoms(Monkeypox) = (Fever | Headache | MusclePains | FeelingTired)", "Glu(x) -> FeelingTired"], "conclusion": "-Flu", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FeelingTired/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FeelingTired/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FeelingTired/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FeelingTired/0\n"}
{"timestamp": "2025-06-10T05:15:28.936658", "premises": ["InfectiousDisease(Monkeypox)", "CausedBy(Monkeypox, MonkeypoxVirus) & InfectiousDisease(Monkeypox)", "all x. (Animal(x) & -Human(x) -> CanOccur(MonkeypoxVirus, x)) & CanOccur(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Symptons(Monkeypox, Fever) & Symptons(Monkeypox, Headache) & Symptons(Monkeypox, MusclePains) & Symptons(Monkeypox, FeelingTired)", "Feeling(People, Tired) & Glu(x)"], "conclusion": "not exists x. (Organism(x) & Disease(Flu) & Gets(Flu, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0\n"}
{"timestamp": "2025-06-10T05:15:28.943421", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "OccursIn(MonkeypoxVirus, Animals) & Animals(Humans)", "Mammal(Humans)", "Animal(Mammals)", "Symptom(Monkeypox, Fever) & Symptom(Monkeypox, Headache)", "FeelTired(When(Receive(Cold), Humans))"], "conclusion": "-Flu(Humans)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animals/1, Animals/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animals/1, Animals/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animals/1, Animals/0\n"}
{"timestamp": "2025-06-10T05:15:28.944435", "premises": ["all x. (Disease(x) & Monkeypox(x) -> Infectious(x) & CausedBy(x, MonkeypoxVirus))", "all x. (MonkeypoxVirus(x) -> OccursIn(x, CertainAnimals) | OccursIn(x, Humans))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> SymptomOf(x, Fever) | SymptomOf(x, Headache) | SymptomOf(x, MusclePains) | SymptomOf(x, FeelingTired))", "all x. (Person(x) -> FeelingTired(x) & Get(x, Flu))"], "conclusion": "-exists x. (Person(x) & Get(x, Flu))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, MonkeypoxVirus/1, MonkeypoxVirus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, MonkeypoxVirus/1, MonkeypoxVirus/0\n"}
{"timestamp": "2025-06-10T05:15:28.943873", "premises": ["Disease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "OccursIn(MonkeypoxVirus, Animals) & IncludedIn(Animals, Humans)", "IncludedIn(Humans, Mammals)", "IncludedIn(Mammals, Animals)", "Symptons(Monkeypox, {Fever, Headache, MusclePains, FeelingTired})"], "conclusion": "FeelingTired(Glu) </PREMISES> <CONCLUSION> No one gets flu.  FOL: -Flu(Someone)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFeelingTired(Glu) </PREMISES> <CONCLUSION> No one gets flu.  FOL: -Flu(Someone)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFeelingTired(Glu) </PREMISES> <CONCLUSION> No one gets flu.  FOL: -Flu(Someone)\n                  ^\n"}
{"timestamp": "2025-06-10T05:15:28.947839", "premises": ["Disease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "Infects(MonkeypoxVirus, Animal) & Infects(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (SymptomsOf(Monkeypox, x) & (Fever(x) | Headache(x) | MusclePains(x) | FeelingTired(x)))", "SymptomsOf(Flu, FeelingTired)"], "conclusion": "-Flu(AnyPerson)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Flu/1, Flu/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Flu/1, Flu/0, Human/1, Human/0, Animal/1, Animal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Flu/1, Flu/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Flu/1, Flu/0, Human/1, Human/0, Animal/1, Animal/0\n"}
{"timestamp": "2025-06-10T05:16:31.795510", "premises": ["all x. (Monkeypox(x) -> Infectious(x) & CausedByMonkeypoxVirus(x))", "all x. (MonkeypoxVirus(x) -> CanOccurInAnimal(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "SymptonsOfMonkeypox \u2286 {Fever, Headache, MusclePains, FeelingTired}", "Glu -> FeelingTired"], "conclusion": "Coughing \u2208 SymptonsOfMonkeypox", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nCoughing \u2208 SymptonsOfMonkeypox\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nCoughing \u2208 SymptonsOfMonkeypox\n         ^\n"}
{"timestamp": "2025-06-10T05:16:31.802185", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "all x. (Animal(x) & (x != Human) -> Occurs(MonkeypoxVirus, x)) & Occurs(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Symptons(Monkeypox, {Fever, Headache, MusclePains, FeelingTired})", "Tired(x) \u2192 Glu(x)"], "conclusion": "Symptons(Monkeypox, {Coughing})", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nTired(x) \u2192 Glu(x)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nTired(x) \u2192 Glu(x)\n         ^\n"}
{"timestamp": "2025-06-10T05:16:31.802744", "premises": ["all x. (Monkeypox(x) -> Infectious(x) & CausedBy(x, MonkeypoxVirus))", "all x. (MonkeypoxVirus(x) -> CanOccurIn(x, CertainAnimals) & CanOccurIn(x, Humans))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Fever() & Headache() & MusclePains() & FeelingTired()", "FeelingTired() & GetAGlu()"], "conclusion": "(Fever() | Headache() | MusclePains() | FeelingTired()) | Coughing()", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n(Fever() | Headache() | MusclePains() | FeelingTired()) | Coughing()\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n(Fever() | Headache() | MusclePains() | FeelingTired()) | Coughing()\n       ^\n"}
{"timestamp": "2025-06-10T05:16:31.804187", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "CanOccur(MonkeypoxVirus, Animal) & CanOccur(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Fever, Headache, MusclePains, FeelingTired", "(GetGlu(x) -> FeelingTired(x))"], "conclusion": "Coughing", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nFever, Headache, MusclePains, FeelingTired\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nFever, Headache, MusclePains, FeelingTired\n     ^\n"}
{"timestamp": "2025-06-10T05:16:31.807973", "premises": ["InfectiousDisease(Monkeypox)", "InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "CanOccur(MonkeypoxVirus, Animal) & Subclass(Animal, Human)", "Subclass(Human, Mammal)", "Subclass(Mammal, Animal)", "Symptons(Monkeypox, {Fever, Headache, MusclePains, FeelingTired})", "FeelTired(Person, Glu)"], "conclusion": "Symptons(Monkeypox, Coughing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptons(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    Symptons(Monkeypox,{%%END ERROR%%Fever,Headache,MusclePains,FeelingTired}).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:16:31.808081", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "OccursIn(MonkeypoxVirus, Animal) & OccursIn(MonkeypoxVirus, Human)", "Mammal(Human)", "Animal(Mammal)", "Fever(Monkeypox) & Headache(Monkeypox) & MusclePains(Monkeypox) & Tired(Monkeypox)", "Tired(Person) <- Flu(Person)"], "conclusion": "Coughing(Monkeypox)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Animal/1, Animal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Animal/1, Animal/0\n"}
{"timestamp": "2025-06-10T05:16:31.810327", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "Infects(MonkeypoxVirus, Animal) & Infects(MonkeypoxVirus, Human)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "(Fever | Headache | MusclePains | FeelingTired)", "Glu(x) -> FeelingTired(x)"], "conclusion": "(Fever | Headache | MusclePains | FeelingTired | Coughing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FeelingTired/1, FeelingTired/0, Human/1, Human/0, Animal/1, Animal/0\n"}
{"timestamp": "2025-06-10T05:16:31.809106", "premises": ["InfectiousDisease(Monkeypox) & CausedBy(Monkeypox, MonkeypoxVirus)", "Infects(MonkeypoxVirus, Human)", "Mammal(Human)", "Animal(Mammal)", "Symptom(Monkeypox, Fever) & Symptom(Monkeypox, Headache) & Symptom(Monkeypox, MusclePains) & Symptom(Monkeypox, Tired)"], "conclusion": "Symptom(Glu, Tired) </PREMISES> <CONCLUSION> Symptons of Monkeypox include coughing.  FOL: Symptom(Monkeypox, Coughing) </CONCLUSION> <EVALUATE> However, the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nSymptom(Glu, Tired) </PREMISES> <CONCLUSION> Symptons of Monkeypox include coughing.  FOL: Symptom(Monkeypox, Coughing) </CONCLUSION> <EVALUATE> However, the conclusion does not follow from the premises.\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nSymptom(Glu, Tired) </PREMISES> <CONCLUSION> Symptons of Monkeypox include coughing.  FOL: Symptom(Monkeypox, Coughing) </CONCLUSION> <EVALUATE> However, the conclusion does not follow from the premises.\n                    ^\n"}
{"timestamp": "2025-06-10T05:17:39.673405", "premises": ["Type(EasternWildTurkey) & Type(OsceolaWildTurkey) & Type(GouldsWildTurkey) & Type(MerriamsWildTurkey) & Type(RioGrandeWildTurkey) & Type(OcellatedWildTurkey)", "-Type(EasternWildTurkey)(Tom)", "-Type(OsceolaWildTurkey)(Tom)", "-Type(GouldsWildTurkey)(Tom) | -Type(MerriamsWildTurkey)(Tom) | -Type(RioGrandeWildTurkey)(Tom)", "Type(Tom)", "Type(OcellatedWildTurkey)(Tom) </PREMISES> <CONCLUSION>"], "conclusion": "Type(OcellatedWildTurkey)(Tom) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\nType(OcellatedWildTurkey)(Tom) </CONCLUSION>\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\nType(OcellatedWildTurkey)(Tom) </CONCLUSION>\n                               ^\n"}
{"timestamp": "2025-06-10T05:17:39.676118", "premises": ["Exists(x) & (EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x))", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)", "WildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>", "(EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x))", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)", "WildTurkey(Tom)"], "conclusion": "OcellatedWildTurkey(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^\n"}
{"timestamp": "2025-06-10T05:17:39.676748", "premises": ["EasternWildTurkey | OsceolaWildTurkey | GouldsWildTurkey | MerriamsWildTurkey | RioGrandeWildTurkey | OcellatedWildTurkey", "\u00acEasternWildTurkey(Tom)", "\u00acOsceolaWildTurkey(Tom)", "\u00ac(GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)) | (-GouldsWildTurkey(Tom) & MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)) | (-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & RioGrandeWildTurkey(Tom))"], "conclusion": "WildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^\n"}
{"timestamp": "2025-06-10T05:17:39.688328", "premises": ["WildTurkeyType(EasternWildTurkey) & WildTurkeyType(OsceolaWildTurkey) & WildTurkeyType(GouldsWildTurkey) & WildTurkeyType(MerriamsWildTurkey) & WildTurkeyType(RioGrandeWildTurkey) & WildTurkeyType(OcellatedWildTurkey)", "-WildTurkeyType(Tom, EasternWildTurkey)", "-WildTurkeyType(Tom, OsceolaWildTurkey)", "-WildTurkeyType(Tom, GouldsWildTurkey) & -WildTurkeyType(Tom, MerriamsWildTurkey) & -WildTurkeyType(Tom, RioGrandeWildTurkey)", "WildTurkeyType(Tom)"], "conclusion": "WildTurkeyType(Tom, OcellatedWildTurkey)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WildTurkeyType/1, WildTurkeyType/2.\n\n\nFatal error:  The following symbols are used with multiple arities: WildTurkeyType/1, WildTurkeyType/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WildTurkeyType/1, WildTurkeyType/2.\n\n\nFatal error:  The following symbols are used with multiple arities: WildTurkeyType/1, WildTurkeyType/2\n"}
{"timestamp": "2025-06-10T05:17:39.694451", "premises": ["TypeWildTurkey(EasternWildTurkey) & TypeWildTurkey(OsceolaWildTurkey) & TypeWildTurkey(GouldsWildTurkey) & TypeWildTurkey(MerriamswildTurkey) & TypeWildTurkey(RioGrandeWildTurkey) & TypeWildTurkey(OcellatedWildTurkey)", "-TypeWildTurkey(Tom) | EasternWildTurkey(Tom)", "-TypeWildTurkey(Tom) | OsceolaWildTurkey(Tom)", "-(TypeWildTurkey(Tom) | GouldsWildTurkey(Tom)) & -(TypeWildTurkey(Tom) | MerriamswildTurkey(Tom)) & -(TypeWildTurkey(Tom) | RioGrandeWildTurkey(Tom))"], "conclusion": "TypeWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTypeWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTypeWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Ocellated wild turkey.  FOL: OcellatedWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                    ^\n"}
{"timestamp": "2025-06-10T05:17:39.693781", "premises": ["TypeOfWildTurkey(EasternWildTurkey) & TypeOfWildTurkey(OsceolaWildTurkey) & TypeOfWildTurkey(GouldsWildTurkey) & TypeOfWildTurkey(MerriamsWildTurkey) & TypeOfWildTurkey(RioGrandeWildTurkey) & TypeOfWildTurkey(OcellatedWildTurkey)", "-TypeOfWildTurkey(Tom, EasternWildTurkey)", "-TypeOfWildTurkey(Tom, OsceolaWildTurkey)", "-TypeOfWildTurkey(Tom, GouldsWildTurkey) | -TypeOfWildTurkey(Tom, MerriamsWildTurkey) | -TypeOfWildTurkey(Tom, RioGrandeWildTurkey)", "TypeOfWildTurkey(Tom, WildTurkey)"], "conclusion": "TypeOfWildTurkey(Tom, OcellatedWildTurkey)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TypeOfWildTurkey/1, TypeOfWildTurkey/2.\n\n\nFatal error:  The following symbols are used with multiple arities: TypeOfWildTurkey/1, TypeOfWildTurkey/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TypeOfWildTurkey/1, TypeOfWildTurkey/2.\n\n\nFatal error:  The following symbols are used with multiple arities: TypeOfWildTurkey/1, TypeOfWildTurkey/2\n"}
{"timestamp": "2025-06-10T05:18:38.411501", "premises": ["WildTurkey(Tom) | EasternWildTurkey(Tom) | OsceolaWildTurkey(Tom) | GouldsWildTurkey(Tom) | MerriamsWildTurkey(Tom) | RioGrandeWildTurkey(Tom)", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)"], "conclusion": "WildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nWildTurkey(Tom) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                ^\n"}
{"timestamp": "2025-06-10T05:18:38.430882", "premises": ["all x. (-EasternWildTurkey(x) & -OsceolaWildTurkey(x) & -GouldsWildTurkey(x) & -MerriamWildTurkey(x) & -RioGrandeWildTurkey(x))", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)"], "conclusion": "(EasternWildTurkey(Tom) | OsceolaWildTurkey(Tom) | GouldsWildTurkey(Tom) | MerriamWildTurkey(Tom) | RioGrandeWildTurkey(Tom) | OcellatedWildTurkey(Tom)) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(EasternWildTurkey(Tom) | OsceolaWildTurkey(Tom) | GouldsWildTurkey(Tom) | MerriamWildTurkey(Tom) | RioGrandeWildTurkey(Tom) | OcellatedWildTurkey(Tom)) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                                                                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(EasternWildTurkey(Tom) | OsceolaWildTurkey(Tom) | GouldsWildTurkey(Tom) | MerriamWildTurkey(Tom) | RioGrandeWildTurkey(Tom) | OcellatedWildTurkey(Tom)) </PREMISES> <CONCLUSION> Tom is an Eastern wild turkey.  FOL: EasternWildTurkey(Tom) </CONCLUSION> <EVALUATE>\n                                                                                                                                                         ^\n"}
{"timestamp": "2025-06-10T05:19:48.383777", "premises": ["All dispensable things are environment-friendly.   FOL: all x. (Dispensable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Dispensable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (Good(x) -> -Bad(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)"], "conclusion": "1. all x. (Dispensable(x) -> EnvironmentFriendly(x)) 2. all x. (Woodware(x) -> Dispensable(x)) 3. all x. (Paper(x) -> Woodware(x)) 4. all x. (Good(x) -> -Bad(x)) 5. all x. (EnvironmentFriendly(x) -> Good(x)) 6. ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) 7. -Dispensable(Worksheet)  We can see that if a worksheet is not dispensable (7), then it must be environment-friendly (5), and therefore good (5). However, the conclusion is that a worksheet is not dispensable (7), which contradicts the conclusion.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n1. all x. (Dispensable(x) -> EnvironmentFriendly(x)) 2. all x. (Woodware(x) -> Dispensable(x)) 3. all x. (Paper(x) -> Woodware(x)) 4. all x. (Good(x) -> -Bad(x)) 5. all x. (EnvironmentFriendly(x) -> Good(x)) 6. ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) 7. -Dispensable(Worksheet)  We can see that if a worksheet is not dispensable (7), then it must be environment-friendly (5), and therefore good (5). However, the conclusion is that a worksheet is not dispensable (7), which contradicts the conclusion.\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n1. all x. (Dispensable(x) -> EnvironmentFriendly(x)) 2. all x. (Woodware(x) -> Dispensable(x)) 3. all x. (Paper(x) -> Woodware(x)) 4. all x. (Good(x) -> -Bad(x)) 5. all x. (EnvironmentFriendly(x) -> Good(x)) 6. ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) 7. -Dispensable(Worksheet)  We can see that if a worksheet is not dispensable (7), then it must be environment-friendly (5), and therefore good (5). However, the conclusion is that a worksheet is not dispensable (7), which contradicts the conclusion.\n ^\n"}
{"timestamp": "2025-06-10T05:19:48.387946", "premises": ["EasternWildTurkey, OsceolaWildTurkey, GouldsWildTurkey, MerriamWildTurkey, RioGrandeWildTurkey, OcellatedWildTurkey", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) | -MerriamWildTurkey(Tom) | -RioGrandeWildTurkey(Tom)", "WildTurkey(Tom)"], "conclusion": "WildTurkey(Joey)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nEasternWildTurkey, OsceolaWildTurkey, GouldsWildTurkey, MerriamWildTurkey, RioGrandeWildTurkey, OcellatedWildTurkey\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nEasternWildTurkey, OsceolaWildTurkey, GouldsWildTurkey, MerriamWildTurkey, RioGrandeWildTurkey, OcellatedWildTurkey\n                 ^\n"}
{"timestamp": "2025-06-10T05:19:48.385015", "premises": ["exists x. (WildTurkey(x) & (EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x)))  <PREMISES> Tom is not an Eastern wild turkey. </PREMISES>", "-EasternWildTurkey(Tom)  <PREMISES> Tom is not an Osceola wild turkey. </PREMISES>", "-OsceolaWildTurkey(Tom)  <PREMISES> Tom is also not a Gould's wild turkey, or a Merriam's wild turkey, or a Rio Grande wild turkey. </PREMISES>", "-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)  <PREMISES> Tom is a wild turkey. </PREMISES>"], "conclusion": "WildTurkey(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<PREMISES>'.\nexists x. (WildTurkey(x) & (EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x)))  <PREMISES> Tom is not an Eastern wild turkey. </PREMISES>\n                                                                                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<PREMISES>'.\nexists x. (WildTurkey(x) & (EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x)))  <PREMISES> Tom is not an Eastern wild turkey. </PREMISES>\n                                                                                                                                                                           ^\n"}
{"timestamp": "2025-06-10T05:19:48.387297", "premises": ["all x. (Dispensable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Dispensable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (Good(x) -> -Bad(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))"], "conclusion": "-Dispensable(Worksheet)  FOL:  all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-Dispensable(Worksheet)  FOL:  all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet)\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-Dispensable(Worksheet)  FOL:  all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet)\n                         ^\n"}
{"timestamp": "2025-06-10T05:19:48.392478", "premises": ["exists x. (EasternWildTurkey(x) | OsceolaWildTurkey(x) | GouldsWildTurkey(x) | MerriamsWildTurkey(x) | RioGrandeWildTurkey(x) | OcellatedWildTurkey(x))", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamsWildTurkey(Tom) & -RioGrandeWildTurkey(Tom)"], "conclusion": "WildTurkey(Tom)  Note that the conclusion is missing, so we cannot proceed with the evaluation of the conclusion.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Note'.\nWildTurkey(Tom)  Note that the conclusion is missing, so we cannot proceed with the evaluation of the conclusion.\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Note'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Note'.\nWildTurkey(Tom)  Note that the conclusion is missing, so we cannot proceed with the evaluation of the conclusion.\n                 ^\n"}
{"timestamp": "2025-06-10T05:19:48.408280", "premises": ["all x. (x = EasternWildTurkey | x = OsceolaWildTurkey | x = GouldsWildTurkey | x = MerriamswildTurkey | x = RioGrandewildTurkey | x = OcellatedWildTurkey)", "-EasternWildTurkey(Tom)", "-OsceolaWildTurkey(Tom)", "-GouldsWildTurkey(Tom) & -MerriamswildTurkey(Tom) & -RioGrandewildTurkey(Tom)", "WildTurkey(Tom)"], "conclusion": "WildTurkey(Joey)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RioGrandewildTurkey/1, RioGrandewildTurkey/0, MerriamswildTurkey/1, MerriamswildTurkey/0, GouldsWildTurkey/1, GouldsWildTurkey/0, OsceolaWildTurkey/1, OsceolaWildTurkey/0, EasternWildTurkey/1, EasternWildTurkey/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RioGrandewildTurkey/1, RioGrandewildTurkey/0, MerriamswildTurkey/1, MerriamswildTurkey/0, GouldsWildTurkey/1, GouldsWildTurkey/0, OsceolaWildTurkey/1, OsceolaWildTurkey/0, EasternWildTurkey/1, EasternWildTurkey/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RioGrandewildTurkey/1, RioGrandewildTurkey/0, MerriamswildTurkey/1, MerriamswildTurkey/0, GouldsWildTurkey/1, GouldsWildTurkey/0, OsceolaWildTurkey/1, OsceolaWildTurkey/0, EasternWildTurkey/1, EasternWildTurkey/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RioGrandewildTurkey/1, RioGrandewildTurkey/0, MerriamswildTurkey/1, MerriamswildTurkey/0, GouldsWildTurkey/1, GouldsWildTurkey/0, OsceolaWildTurkey/1, OsceolaWildTurkey/0, EasternWildTurkey/1, EasternWildTurkey/0\n"}
{"timestamp": "2025-06-10T05:20:40.879357", "premises": ["all x. (LegendOfZelda(x) -> JapaneseGameCompany(x))", "all x. (InTop10(x) -> JapaneseGameCompany(x))", "all x. (SellsMoreThanOneMillion(x) -> InTop10(x))", "SellsMoreThanOneMillion(LegendOfZelda)"], "conclusion": "InTop10(LegendOfZelda)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:20:40.904430", "premises": ["all x. (Created(x, LegendOfZelda) -> JapaneseGameCompany(x))", "all x. (In(x, Top10List) -> MadeBy(x, JapaneseGameCompany))", "all x. (SellsMoreThanOneMillion(x) -> In(x, Top10List))", "SellsMoreThanOneMillion(LegendOfZelda)"], "conclusion": "In(LegendOfZelda, Top10List)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0\n"}
{"timestamp": "2025-06-10T05:21:37.297237", "premises": ["all x. (TheLegendOfZelda(x) -> JapaneseGameCompany(x))", "all x. (Top10(x) -> JapaneseGameCompany(x))", "all x. (SellMoreThanOneMillionCopies(x) -> Top10(x))", "SellMoreThanOneMillionCopies(TheLegendOfZelda)"], "conclusion": "JapaneseGameCompany(Fifa22)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:21:37.314142", "premises": ["all x. (Zelda(x) -> JapaneseGameCompany(x))", "all x. (Top10(x) -> JapaneseGameCompany(x))", "all x. (SellsMoreThan1Million(x) -> Top10(x))", "SellsMoreThan1Million(Zelda)"], "conclusion": "JapaneseGameCompany(FIFA22)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zelda/1, Zelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zelda/1, Zelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zelda/1, Zelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zelda/1, Zelda/0\n"}
{"timestamp": "2025-06-10T05:21:37.316784", "premises": ["LegendOfZelda(x) -> JapaneseGameCompany(CreatedGame(x))", "all x. (InTop10(x) -> JapaneseGameCompany(MadeBy(x)))", "all x. (SellsMoreThanOneMillionCopies(x) -> InTop10(x))", "SellsMoreThanOneMillionCopies(LegendOfZelda)"], "conclusion": "JapaneseGameCompany(MadeBy(Fifa22))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LegendOfZelda/1, LegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:21:37.320217", "premises": ["all x. (TheLegendOfZelda(x) -> JapaneseGameCompanyCreated(x))", "all x. (InTop10List(x) -> JapaneseGameCompanyMade(x))", "all x. (SellsMoreThanOneMillionCopies(x) -> InTop10List(x))", "SellsMoreThanOneMillionCopies(TheLegendOfZelda)"], "conclusion": "JapaneseGameCompanyMade(FIFA22)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:22:32.050422", "premises": ["all x. (TheLegendOfZelda(x) -> JapaneseGameCompanyMade(x))", "all x. (InTop10(x) -> JapaneseGameCompanyMade(x))", "all x. (SellsMoreThan1MillionCopies(x) -> InTop10(x))", "SellsMoreThan1MillionCopies(TheLegendOfZelda)"], "conclusion": "-InTop10(TheLegendOfZelda)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:22:32.064908", "premises": ["exists x. (JapaneseGameCompany(x) & MadeBy(x, LegendOfZelda))", "all y. (InTop10(y) -> MadeBy(y, JapaneseGameCompany))", "all x. (SellsMoreThanOneMillion(x) -> InTop10(x))", "SellsMoreThanOneMillion(LegendOfZelda)"], "conclusion": "-InTop10(LegendOfZelda)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JapaneseGameCompany/1, JapaneseGameCompany/0\n"}
{"timestamp": "2025-06-10T05:22:32.066151", "premises": ["exists x. (JapaneseGameCompany(x) & Created(x, TheLegendOfZelda))", "all y. (InTop10(y) -> MadeByJapaneseGameCompany(y))", "all x. (SellsMoreThanOneMillionCopies(x) -> InTop10(x))", "SellsMoreThanOneMillionCopies(TheLegendOfZelda)", "InTop10(TheLegendOfZelda)  FOL: SellsMoreThanOneMillionCopies(TheLegendOfZelda) -> InTop10(TheLegendOfZelda)"], "conclusion": "-InTop10(TheLegendOfZelda)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nInTop10(TheLegendOfZelda)  FOL: SellsMoreThanOneMillionCopies(TheLegendOfZelda) -> InTop10(TheLegendOfZelda)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nInTop10(TheLegendOfZelda)  FOL: SellsMoreThanOneMillionCopies(TheLegendOfZelda) -> InTop10(TheLegendOfZelda)\n                           ^\n"}
{"timestamp": "2025-06-10T05:22:32.065164", "premises": ["all x. (TheLegendOfZelda(x) -> JapaneseGameCompany(x))", "all x. (Top10(x) -> JapaneseGameCompany(x))", "all x. (SellsMoreThanOneMillion(x) -> Top10(x))", "SellsMoreThanOneMillion(TheLegendOfZelda)"], "conclusion": "-Top10(TheLegendOfZelda)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:22:32.077826", "premises": ["all x. (TheLegendOfZelda(x) -> JapaneseGameCompany(x))", "all x. (InTop10(x) -> JapaneseGameCompany(x))", "all x. (SellsOverOneMillionCopies(x) -> InTop10(x))", "SellsOverOneMillionCopies(TheLegendOfZelda)"], "conclusion": "-InTop10(TheLegendOfZelda)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheLegendOfZelda/1, TheLegendOfZelda/0\n"}
{"timestamp": "2025-06-10T05:23:01.410887", "premises": ["all x. (Square(x) -> FourSides(x))", "all x. (FourSides(x) -> Shape(x))"], "conclusion": "all x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>\n                               ^\n"}
{"timestamp": "2025-06-10T05:23:01.416192", "premises": ["all x. (Square(x) -> FourSides(x))", "all x. (FourSides(x) -> Shape(x))"], "conclusion": "all x. (Square(x) -> Shape(x))    In conclusion, the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'In'.\nall x. (Square(x) -> Shape(x))    In conclusion, the conclusion follows from the premises.\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'In'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'In'.\nall x. (Square(x) -> Shape(x))    In conclusion, the conclusion follows from the premises.\n                                  ^\n"}
{"timestamp": "2025-06-10T05:23:01.416505", "premises": ["all x. (Square(x) -> FourSides(x))", "all x. (FourSides(x) -> Shape(x))"], "conclusion": "all x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<CONCLUSION>'.\nall x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<CONCLUSION>'.\nall x. (Square(x) -> Shape(x)) </PREMISES> <CONCLUSION> All squares are shapes.  FOL: all x. (Square(x) -> Shape(x)) </CONCLUSION> <EVALUATE>\n                                           ^\n"}
{"timestamp": "2025-06-10T05:24:47.690711", "premises": ["all x. (Rabbit(x) -> Cute(x))", "exists x. Turtle(x)", "(Rabbit(x) & -Squirrel(x)) | (-Rabbit(x) & Squirrel(x))", "all x. (Skittish(x) -> -Still(x))", "all x. (Squirrel(x) -> Skittish(x))", "Still(Rock)"], "conclusion": "-Turtle(Rock)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(Rabbit(x) & -Squirrel(x)) | (-Rabbit(x) & Squirrel(x))\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(Rabbit(x) & -Squirrel(x)) | (-Rabbit(x) & Squirrel(x))\n                         ^\n"}
{"timestamp": "2025-06-10T05:26:34.782846", "premises": ["all x. (Rabbit(x) -> Cute(x))", "exists x. Turtle(x)", "all x. (Animal(x) -> (Rabbit(x) | Squirrel(x)))", "all x. (Skittish(x) -> -Still(x))", "all x. (Squirrel(x) -> Skittish(x))", "Still(Rock)"], "conclusion": "(\u00ac(Turtle(Rock) & Squirrel(Rock)) -> (Cute(Rock) | Skittish(Rock)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(\u00ac(Turtle(Rock) & Squirrel(Rock)) -> (Cute(Rock) | Skittish(Rock)))\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(\u00ac(Turtle(Rock) & Squirrel(Rock)) -> (Cute(Rock) | Skittish(Rock)))\n                ^\n"}
{"timestamp": "2025-06-10T05:28:45.564675", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, NetflixShow(\"Stranger Things\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Stranger Things\"))\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Stranger Things\"))\n                                         ^\n"}
{"timestamp": "2025-06-10T05:28:45.566189", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(x, Karen))", "all x. (BingeWatch(x, Karen) <-> Download(x, Karen))", "-Download(NetflixShow(\"Black Mirror\"), Karen)", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(x, Karen) -> Share(x, Lisa))"], "conclusion": "Share(NetflixShow(\"Stranger Things\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShare(NetflixShow(\"Stranger Things\"), Lisa)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShare(NetflixShow(\"Stranger Things\"), Lisa)\n                            ^\n"}
{"timestamp": "2025-06-10T05:28:45.575943", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) & NetflixShow(x) -> BingeWatch(Karen, x))", "all x. ((NetflixShow(x) & BingeWatch(Karen, x)) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(NetflixShow(\"Black Mirror\"))", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> ShareTo(Lisa, x))"], "conclusion": "ShareTo(Lisa, NetflixShow(\"Stranger Things\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShareTo(Lisa, NetflixShow(\"Stranger Things\"))\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShareTo(Lisa, NetflixShow(\"Stranger Things\"))\n                                    ^\n"}
{"timestamp": "2025-06-10T05:28:45.576327", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) & NetflixShow(x) -> BingeWatch(Karen, x))", "all x. ((NetflixShow(x) & BingeWatch(Karen, x)) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(NetflixShow(\"Black Mirror\"))", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Stranger Things\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^\n"}
{"timestamp": "2025-06-10T05:28:45.576654", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "Popular(NetflixShow(\"Black Mirror\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Stranger Things\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^\n"}
{"timestamp": "2025-06-10T05:28:45.577246", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(BlackMirror))", "NetflixShow(BlackMirror)", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, NetflixShow(StrangerThings))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Download'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^\n"}
{"timestamp": "2025-06-10T05:28:45.572375", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. ((BingeWatch(Karen, x) -> Download(Karen, x)) & (Download(Karen, x) -> BingeWatch(Karen, x)))", "-Download(Karen, BlackMirror)", "NetflixShow(BlackMirror)", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, StrangerThings, Lisa)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1\n"}
{"timestamp": "2025-06-10T05:28:45.568235", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(NetflixShow(x)) -> BingeWatch(Karen, NetflixShow(x)))", "all x. (BingeWatch(Karen, NetflixShow(x)) <-> Download(Karen, NetflixShow(x)))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "Popular(NetflixShow(\"Black Mirror\"))", "all x. (BingeWatch(Karen, NetflixShow(x)) -> Share(Karen, NetflixShow(x), Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Stranger Things\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Stranger Things\"), Lisa)\n                                   ^\n"}
{"timestamp": "2025-06-10T05:28:45.579892", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) -> Download(Karen, x)) & all x. (Download(Karen, x) -> BingeWatch(Karen, x))", "-Download(Karen, BlackMirror)", "NetflixShow(BlackMirror)", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, StrangerThings, Lisa)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1\n"}
{"timestamp": "2025-06-10T05:29:52.175836", "premises": ["Popular(Netflix(\"Stranger Things\"))", "all x. (Popular(Netflix(x)) -> BingeWatch(Karen, Netflix(x)))", "all x. (BingeWatch(Karen, Netflix(x)) <-> Download(Karen, Netflix(x)))", "-Download(Karen, Netflix(\"Black Mirror\"))", "Netflix(\"Black Mirror\")", "all x. (BingeWatch(Karen, Netflix(x)) -> Share(Karen, Netflix(x), Lisa))"], "conclusion": "Popular(Netflix(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(Netflix(\"Black Mirror\"))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(Netflix(\"Black Mirror\"))\n                       ^\n"}
{"timestamp": "2025-06-10T05:29:52.180029", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Popular(NetflixShow(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(NetflixShow(\"Black Mirror\"))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(NetflixShow(\"Black Mirror\"))\n                           ^\n"}
{"timestamp": "2025-06-10T05:29:52.177697", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. ((BingeWatch(Karen, x) -> Download(Karen, x)) & (Download(Karen, x) -> BingeWatch(Karen, x)))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Popular(NetflixShow(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(NetflixShow(\"Black Mirror\"))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(NetflixShow(\"Black Mirror\"))\n                           ^\n"}
{"timestamp": "2025-06-10T05:29:52.179504", "premises": ["Popular(NetflixShow(StrangerThings)) & NetflixShow(StrangerThings)", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(BlackMirror))", "NetflixShow(BlackMirror)", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> ShareTo(Lisa, x, Karen))"], "conclusion": "Popular(NetflixShow(BlackMirror))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Download'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^\n"}
{"timestamp": "2025-06-10T05:29:52.182345", "premises": ["Popular(\"Stranger Things\") & Netflix(\"Stranger Things\")", "all x. (Netflix(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, \"Black Mirror\")", "Netflix(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Popular(\"Black Mirror\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(\"Black Mirror\")\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nPopular(\"Black Mirror\")\n               ^\n"}
{"timestamp": "2025-06-10T05:29:52.182682", "premises": ["Popular(Netflix(\u201cStranger Things\u201d))", "all x. (Netflix(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (Netflix(x) -> (BingeWatch(Karen, x) <-> Download(Karen, x)))", "-Download(Karen, BlackMirror)", "Netflix(BlackMirror)", "all x. (Netflix(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Popular(BlackMirror)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\u201d'.  Expected token ')'.\nPopular(Netflix(\u201cStranger Things\u201d))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\u201d'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\u201d'.  Expected token ')'.\nPopular(Netflix(\u201cStranger Things\u201d))\n                          ^\n"}
{"timestamp": "2025-06-10T05:29:52.183230", "premises": ["Popular(Netflix, StrangerThings)", "all x. (Popular(Netflix, x) -> BingeWatch(Karen, x))", "all x. (Netflix(x) -> (BingeWatch(Karen, x) <-> Download(Karen, x)))", "-Download(Karen, BlackMirror)", "Netflix(BlackMirror)", "all x. (Netflix(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Popular(Netflix, BlackMirror)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x))) -> all x. (Netflix(x) -> (BingeWatch(Karen, x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Download'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x))) -> all x. (Netflix(x) -> (BingeWatch(Karen, x))\n   ^\n"}
{"timestamp": "2025-06-10T05:29:52.182006", "premises": ["Popular(\u201cStranger Things\u201d) & Netflix(\u201cStranger Things\u201d)", "all x. (Netflix(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) -> Download(Karen, x)) & all x. (Download(Karen, x) -> BingeWatch(Karen, x))", "-Download(Karen, \u201cBlack Mirror\u201d)", "Netflix(\u201cBlack Mirror\u201d)", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Popular(\u201cBlack Mirror\u201d)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\u201d'.  Expected token ')'.\nPopular(\u201cBlack Mirror\u201d)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\u201d'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\u201d'.  Expected token ')'.\nPopular(\u201cBlack Mirror\u201d)\n               ^\n"}
{"timestamp": "2025-06-10T05:29:52.188406", "premises": ["Popular(NetflixShow) & NetflixShow(StrangerThings)", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. ((BingeWatch(Karen, x) -> Download(Karen, x)) & (Download(Karen, x) -> BingeWatch(Karen, x)))", "-Download(Karen, BlackMirror)", "NetflixShow(BlackMirror)", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Popular(BlackMirror)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NetflixShow/1, NetflixShow/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NetflixShow/1, NetflixShow/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NetflixShow/1, NetflixShow/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NetflixShow/1, NetflixShow/0\n"}
{"timestamp": "2025-06-10T05:29:52.190241", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (NetflixShow(x) -> (BingeWatch(Karen, x) -> Download(Karen, x)))", "-Download(Karen, BlackMirror)", "NetflixShow(BlackMirror)", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Popular(BlackMirror)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NetflixShow/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NetflixShow/1\n"}
{"timestamp": "2025-06-10T05:31:05.668685", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(BlackMirror)", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Black Mirror\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^\n"}
{"timestamp": "2025-06-10T05:31:05.670252", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(BlackMirror))", "NetflixShow(BlackMirror)", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(BlackMirror), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Download'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^\n"}
{"timestamp": "2025-06-10T05:31:05.669027", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "BingeWatch(Karen, x) <-> Download(Karen, x)", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Black Mirror\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^\n"}
{"timestamp": "2025-06-10T05:31:05.670556", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, NetflixShow(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Black Mirror\"))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Black Mirror\"))\n                                      ^\n"}
{"timestamp": "2025-06-10T05:31:05.669670", "premises": ["Popular(NetflixShow(StrangerThings))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(BlackMirror))", "NetflixShow(BlackMirror)", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, NetflixShow(BlackMirror))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Download'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Download'.  Expected token ')'.\n(> Download(Karen, x)) -> all x. (BingeWatch(Karen, x))\n   ^\n"}
{"timestamp": "2025-06-10T05:31:05.674530", "premises": ["Popular(Netflix(\u201cStranger Things\u201d))", "all x. (Netflix(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) -> Download(Karen, x)) & all x. (Download(Karen, x) -> BingeWatch(Karen, x))", "-Download(Karen, BlackMirror)", "Netflix(BlackMirror)", "all x. (Netflix(x) & BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "BingeWatch(Karen, BlackMirror) -> Share(Karen, BlackMirror, Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Things\u201d'.  Expected token ')'.\nPopular(Netflix(\u201cStranger Things\u201d))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Things\u201d'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Things\u201d'.  Expected token ')'.\nPopular(Netflix(\u201cStranger Things\u201d))\n                          ^\n"}
{"timestamp": "2025-06-10T05:31:05.674022", "premises": ["all x. (NetflixShow(\u201cStranger Things\u201d) -> Popular(\u201cStranger Things\u201d))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, \u201cBlack Mirror\u201d)", "NetflixShow(\u201cBlack Mirror\u201d)", "all x. (BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, \u201cBlack Mirror\u201d)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\u201d'.  Expected token ')'.\nShare(Karen, Lisa, \u201cBlack Mirror\u201d)\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\u201d'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\u201d'.  Expected token ')'.\nShare(Karen, Lisa, \u201cBlack Mirror\u201d)\n                          ^\n"}
{"timestamp": "2025-06-10T05:31:05.673302", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (NetflixShow(x) & Popular(x) -> BingeWatch(Karen, x))", "all x. (NetflixShow(x) & BingeWatch(Karen, x) <-> Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (NetflixShow(x) & BingeWatch(Karen, x) -> Share(Karen, Lisa, x))"], "conclusion": "Share(Karen, Lisa, NetflixShow(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Black Mirror\"))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, Lisa, NetflixShow(\"Black Mirror\"))\n                                      ^\n"}
{"timestamp": "2025-06-10T05:31:05.673669", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) & NetflixShow(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) \u2261 Download(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(BlackMirror)", "all x. (BingeWatch(Karen, x) -> ShareTo(Lisa, x))"], "conclusion": "ShareTo(Lisa, NetflixShow(\"Black Mirror\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShareTo(Lisa, NetflixShow(\"Black Mirror\"))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShareTo(Lisa, NetflixShow(\"Black Mirror\"))\n                                 ^\n"}
{"timestamp": "2025-06-10T05:31:05.674885", "premises": ["Popular(NetflixShow(\"Stranger Things\"))", "all x. (Popular(x) -> BingeWatch(Karen, x))", "all x. (BingeWatch(Karen, x) -> Download(Karen, x)) & all x. (Download(Karen, x) -> BingeWatch(Karen, x))", "-Download(Karen, NetflixShow(\"Black Mirror\"))", "NetflixShow(\"Black Mirror\")", "all x. (BingeWatch(Karen, x) -> Share(Karen, x, Lisa))"], "conclusion": "Share(Karen, NetflixShow(\"Black Mirror\"), Lisa)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Mirror\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Mirror\"'.  Expected token ')'.\nShare(Karen, NetflixShow(\"Black Mirror\"), Lisa)\n                                ^\n"}
{"timestamp": "2025-06-10T05:32:15.073146", "premises": ["Beijing(x) -> CapitalOfPRC(x)", "all x. (Beijing(x) -> WorldsMostPopulousNationalCapital(x))", "LocatedIn(Beijing, NorthernChina)", "Hosted(2008SummerOlympics, Beijing)", "(Hosted(2008SummerOlympics, Beijing) & Hosted(2008WinterOlympics, Beijing))", "exists x. (University(x) & LocatedIn(Beijing, x) & ConsistentlyRankAmongBest(x))"], "conclusion": "(Hosted(2008SummerOlympics, Beijing) & exists x. (Hosted(x, Beijing) & WinterOlympics(x) & - 2008(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0\n"}
{"timestamp": "2025-06-10T05:32:15.074706", "premises": ["Capital(Beijing, PeoplesRepublicOfChina)", "MostPopulousNationalCapital(Beijing)", "LocatedIn(Beijing, NorthernChina)", "Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, 2008SummerParalympics)", "Hosted(Beijing, SummerOlympics) & Hosted(Beijing, WinterOlympics) & Hosted(Beijing, SummerParalympics) & Hosted(Beijing, WinterParalympics)", "None"], "conclusion": "Hosted(Beijing, 2008SummerOlympics) & exists x. (WinterOlympics(x) & Hosted(Beijing, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0\n"}
{"timestamp": "2025-06-10T05:32:15.073035", "premises": ["Capital(RepublicOfChina, Beijing)", "MostPopulousNationalCapitalWorld(Beijing)", "LocatedIn(China, Beijing, NorthernChina)", "HostedSummerOlympics(2008, Beijing) & HostedSummerParalympics(2008, Beijing)", "HostedSummerOlympics(Beijing) & HostedWinterOlympics(Beijing) & HostedSummerParalympics(Beijing) & HostedWinterParalympics(Beijing)", "ConsistentlyRanked(BestUniversitiesAsiaPacificWorld, BeijingUniversities)"], "conclusion": "HostedSummerOlympics(2008, Beijing) & HostedWinterOlympics(Beijing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HostedSummerParalympics/1, HostedSummerParalympics/2, HostedSummerOlympics/1, HostedSummerOlympics/2.\n\n\nFatal error:  The following symbols are used with multiple arities: HostedSummerParalympics/1, HostedSummerParalympics/2, HostedSummerOlympics/1, HostedSummerOlympics/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HostedSummerParalympics/1, HostedSummerParalympics/2, HostedSummerOlympics/1, HostedSummerOlympics/2.\n\n\nFatal error:  The following symbols are used with multiple arities: HostedSummerParalympics/1, HostedSummerParalympics/2, HostedSummerOlympics/1, HostedSummerOlympics/2\n"}
{"timestamp": "2025-06-10T05:32:15.069427", "premises": ["CapitalOf(Beijing, PeoplesRepublicOfChina)", "populous(Beijing)", "LocatedIn(Beijing, NorthernChina)", "Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, 2008SummerParalympics)", "Hosted(Beijing, SummerOlympics) & Hosted(Beijing, WinterOlympics)"], "conclusion": "TEXT: Beijing has hosted both the 2008 Summer Olympics and a winter olympics.  FOL: Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, WinterOlympics)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Beijing'.\nTEXT: Beijing has hosted both the 2008 Summer Olympics and a winter olympics.  FOL: Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, WinterOlympics)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Beijing'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Beijing'.\nTEXT: Beijing has hosted both the 2008 Summer Olympics and a winter olympics.  FOL: Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, WinterOlympics)\n      ^\n"}
{"timestamp": "2025-06-10T05:32:15.095515", "premises": ["Capital(China, Beijing)", "MostPopulousNationalCapital(China, Beijing)", "In(NorthernChina, Beijing)", "Hosted(2008SummerOlympics, Beijing) & Hosted(2008SummerParalympics, Beijing)", "Hosted(SummerOlympics, Beijing) & Hosted(WinterOlympics, Beijing) & Hosted(SummerParalympics, Beijing) & Hosted(WinterParalympics, Beijing)", "exists x. (University(x) & In(Beijing, x) & BestIn(AsiaPacific, x) & BestIn(World, x))"], "conclusion": "Hosted(2008SummerOlympics, Beijing) & exists x. (WinterOlympics(x) & Hosted(x, Beijing))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WinterOlympics/1, WinterOlympics/0\n"}
{"timestamp": "2025-06-10T05:33:16.937712", "premises": ["Capital(China, Beijing)", "MostPopulousCapital(Beijing)", "In(NorthernChina, Beijing)", "Hosted(Olympics2008, Beijing) & Hosted(Paralympics2008, Beijing)", "Hosted(SummerOlympics, Beijing) & Hosted(WinterOlympics, Beijing) & Hosted(SummerParalympics, Beijing) & Hosted(WinterParalympics, Beijing)", "many x. (University(x) & In(Beijing, Location(x)) -> TopRank(x))"], "conclusion": "In(SouthernChina, Beijing)  The conclusion \"Beijing is located in southern China\" does not follow from the premises. The premises state that Beijing is located in Northern China, not Southern China.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nIn(SouthernChina, Beijing)  The conclusion \"Beijing is located in southern China\" does not follow from the premises. The premises state that Beijing is located in Northern China, not Southern China.\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nIn(SouthernChina, Beijing)  The conclusion \"Beijing is located in southern China\" does not follow from the premises. The premises state that Beijing is located in Northern China, not Southern China.\n                            ^\n"}
{"timestamp": "2025-06-10T05:33:16.935157", "premises": ["LocatedIn(Beijing, NorthernChina)", "LocatedIn(Beijing, NorthernChina)", "LocatedIn(Beijing, NorthernChina)", "HostedOlympics(Beijing)", "HostedOlympics(Beijing)", "RankedUniversities(Beijing)"], "conclusion": "LocatedIn(Beijing, SouthernChina)  The desired conclusion does not logically follow from the premises, as the information about Beijing's location is explicitly stated to be in Northern China.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nLocatedIn(Beijing, SouthernChina)  The desired conclusion does not logically follow from the premises, as the information about Beijing's location is explicitly stated to be in Northern China.\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nLocatedIn(Beijing, SouthernChina)  The desired conclusion does not logically follow from the premises, as the information about Beijing's location is explicitly stated to be in Northern China.\n                                   ^\n"}
{"timestamp": "2025-06-10T05:33:16.936011", "premises": ["all x. (Beijing(x) -> CapitalOfChina(x))", "MostPopulousNationalCapitalCity(Beijing)", "In(NorthernChina(Beijing))", "HostedOlympics(Beijing, 2008)", "HostedOlympics(Beijing, Summer) & HostedOlympics(Beijing, Winter)", "exists x. (University(x) & In(AsiaPacific(x) | World(x)))"], "conclusion": "In(SouthernChina(Beijing))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nexists x. (University(x) & In(AsiaPacific(x) | World(x)))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nexists x. (University(x) & In(AsiaPacific(x) | World(x)))\n                                             ^\n"}
{"timestamp": "2025-06-10T05:33:16.942474", "premises": ["Capital(China, Beijing)", "MostPopulousCapital(Beijing)", "In(NorthernChina, Beijing)", "HostedSummerOlympics(Beijing, 2008) & HostedSummerParalympics(Beijing, 2008)", "HostedWinterOlympics(Beijing) & HostedWinterParalympics(Beijing)", "many x. (University(x) & In(Beijing, x) & BestUniversity(x))"], "conclusion": "In(SouthernChina, Beijing)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nmany x. (University(x) & In(Beijing, x) & BestUniversity(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nmany x. (University(x) & In(Beijing, x) & BestUniversity(x))\n     ^\n"}
{"timestamp": "2025-06-10T05:34:22.844150", "premises": ["Beijing(x) & Capital(x, People'sRepublicOfChina(x))", "Beijing(x) & MostPopulousNationalCapital(x)", "Beijing(x) & LocatedIn(x, NorthernChina)", "Beijing(x) & Hosted(x, 2008SummerOlympics) & Hosted(x, 2008SummerParalympics)", "Beijing(x) & Hosted(x, SummerOlympics) & Hosted(x, WinterOlympics) & Hosted(x, SummerParalympics) & Hosted(x, WinterParalympics)", "Beijing(x) & Many(x, University) & RankAmongBest(x, AsiaPacific) & RankAmongBest(x, World)"], "conclusion": "Beijing(x) & SecondLargestChineseCityByUrbanPopulation(x)  Note: The FOL expressions are in the format required by the Python NLTK package logic module.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Note:'.\nBeijing(x) & SecondLargestChineseCityByUrbanPopulation(x)  Note: The FOL expressions are in the format required by the Python NLTK package logic module.\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Note:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Note:'.\nBeijing(x) & SecondLargestChineseCityByUrbanPopulation(x)  Note: The FOL expressions are in the format required by the Python NLTK package logic module.\n                                                           ^\n"}
{"timestamp": "2025-06-10T05:34:22.842339", "premises": ["all x. (Beijing(x) -> CapitalOfChina(x))", "MostPopulousNationalCapitalCity(Beijing)", "all x. (Beijing(x) -> LocatedInNorthernChina(x))", "Hosted2008SummerOlympics(Beijing)", "HostedSummerOlympics(Beijing) & HostedWinterOlympics(Beijing) & HostedSummerParalympics(Beijing) & HostedWinterParalympics(Beijing)", "all x. (University(x) & LocatedInBeijing(x) -> TopRankedUniversity(x))"], "conclusion": "- (Conclusion follows)  However, we can still write the FOL expression for the conclusion as:  FOL: SecondLargestChineseCityByUrbanPopulation(Beijing)  Since this does not follow from the premises, we cannot derive this conclusion.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'follows'.  Expected token ')'.\n- (Conclusion follows)  However, we can still write the FOL expression for the conclusion as:  FOL: SecondLargestChineseCityByUrbanPopulation(Beijing)  Since this does not follow from the premises, we cannot derive this conclusion.\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'follows'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'follows'.  Expected token ')'.\n- (Conclusion follows)  However, we can still write the FOL expression for the conclusion as:  FOL: SecondLargestChineseCityByUrbanPopulation(Beijing)  Since this does not follow from the premises, we cannot derive this conclusion.\n              ^\n"}
{"timestamp": "2025-06-10T05:34:22.870362", "premises": ["all x. (Dispensable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Dispensable(x))  FOL: all x. (Paper(x) -> Woodware(x))  FOL: all x. (Good(x) -> -Bad(x))  FOL: all x. (EnvironmentFriendly(x) -> Good(x))  FOL: ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))  FOL: -Dispensable(Worksheet)"], "conclusion": "(all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  Now, let's check if the conclusion follows from the premises using a theorem solver like Prover9. The FOL expression for the premises is:  (all x (Dispensable(x) -> EnvironmentFriendly(x)) & (all x (Woodware(x) -> Dispensable(x))) & (all x (Paper(x) -> Woodware(x))) & (all x (Good(x) -> -Bad(x))) & (all x (EnvironmentFriendly(x) -> Good(x))) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  The conclusion is: -Dispensable(Worksheet)  We can use Prover9 to check if the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Now'.\n(all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  Now, let's check if the conclusion follows from the premises using a theorem solver like Prover9. The FOL expression for the premises is:  (all x (Dispensable(x) -> EnvironmentFriendly(x)) & (all x (Woodware(x) -> Dispensable(x))) & (all x (Paper(x) -> Woodware(x))) & (all x (Good(x) -> -Bad(x))) & (all x (EnvironmentFriendly(x) -> Good(x))) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  The conclusion is: -Dispensable(Worksheet)  We can use Prover9 to check if the conclusion follows from the premises.\n                                                                                                                                                                                                                                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Now'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Now'.\n(all x. (Dispensable(x) -> EnvironmentFriendly(x)) & all x. (Woodware(x) -> Dispensable(x)) & all x. (Paper(x) -> Woodware(x)) & all x. (Good(x) -> -Bad(x)) & all x. (EnvironmentFriendly(x) -> Good(x)) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  Now, let's check if the conclusion follows from the premises using a theorem solver like Prover9. The FOL expression for the premises is:  (all x (Dispensable(x) -> EnvironmentFriendly(x)) & (all x (Woodware(x) -> Dispensable(x))) & (all x (Paper(x) -> Woodware(x))) & (all x (Good(x) -> -Bad(x))) & (all x (EnvironmentFriendly(x) -> Good(x))) & ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & -Dispensable(Worksheet))  The conclusion is: -Dispensable(Worksheet)  We can use Prover9 to check if the conclusion follows from the premises.\n                                                                                                                                                                                                                                                                                                                                                      ^\n"}
{"timestamp": "2025-06-10T05:34:22.879070", "premises": ["all x. (Capital(x, PeoplesRepublicOfChina) -> Beijing(x))", "MostPopulousNationalCapitalCity(Beijing)", "In(NorthernChina, Beijing)", "Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, 2008SummerParalympics)", "Hosted(Beijing, SummerOlympics) & Hosted(Beijing, WinterOlympics) & Hosted(Beijing, SummerParalympics) & Hosted(Beijing, WinterParalympics)"], "conclusion": "exists x. (University(x) & In(Beijing, x) & BestIn(AsiaPacificOrWorld(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0\n"}
{"timestamp": "2025-06-10T05:34:22.879183", "premises": ["CapitalOf(Beijing, PeoplesRepublicOfChina)", "MostPopulousNationalCapitalCity(Beijing)", "all x. (Beijing(x) -> NorthernChina(x))", "Hosted(Beijing, 2008SummerOlympics) & Hosted(Beijing, 2008SummerParalympics)", "Hosted(Beijing, SummerOlympics) & Hosted(Beijing, WinterOlympics) & Hosted(Beijing, SummerParalympics) & Hosted(Beijing, WinterParalympics)", "ManyOf(BeijingUniversities, TopUniversities)"], "conclusion": "SecondLargestChineseCityByUrbanPopulation(Beijing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0\n"}
{"timestamp": "2025-06-10T05:34:22.879602", "premises": ["all x. (Beijing(x) -> CapitalOf(x, Peoplesrepublicofchina))", "MostPopulousCapitalCity(x, Beijing)", "LocatedIn(x, Northernchina)", "HostedOlympics(x, Beijing, 2008)", "HostedMultipleOlympics(x, Beijing)", "ManyUniversities(x, Beijing)"], "conclusion": "-LargestChineseCity(x, Beijing) & SecondLargestChineseCity(x, Beijing)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Beijing/1, Beijing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Beijing/1, Beijing/0\n"}
{"timestamp": "2025-06-10T05:36:20.581886", "premises": ["all x. (Alien(x) -> Extraterrestrial(x))", "all x. (FromMars(x) -> Alien(x))", "all x. (Extraterrestrial(x) -> -Human(x))", "all x. (FromEarth(x) -> Human(x))", "-FromEarth(Marvin) & -FromMars(Marvin)", "-FromEarth(Marvin) -> Extraterrestrial(Marvin)"], "conclusion": "-Human(Marvin) & -FromMars(Marvin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Extraterrestrial(x) -> -Human(x))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Extraterrestrial(x) -> -Human(x))\n                                ^\n"}
{"timestamp": "2025-06-10T05:37:24.248962", "premises": ["all x. (Alien(x) -> Extraterrestrial(x))", "all x. (FromMars(x) -> Alien(x))", "all x. (Extraterrestrial(x) -> -Human(x))", "all x. (FromEarth(x) -> Human(x))", "-FromEarth(Marvin) & -FromMars(Marvin)", "-FromEarth(Marvin) -> Extraterrestrial(Marvin)"], "conclusion": "-FromMars(Marvin) -> Human(Marvin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (FromEarth(x) -> Human(x))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (FromEarth(x) -> Human(x))\n                                ^\n"}
{"timestamp": "2025-06-10T05:38:37.473726", "premises": ["exists x. (GrandSlamChampion(x) | OscarNominatedActor(x))", "all x. (GrandSlamChampion(x) -> ProfessionalTennisPlayer(x))", "all x. (OscarNominatedActor(x) -> Celebrity(x))", "all x. (ProfessionalTennisPlayer(x) -> Athlete(x))", "all x. (Celebrity(x) -> WellPaid(x))", "all x. (Athlete(x) -> Famous(x))", "all x. (WellPaid(x) -> TaxHaven(x))", "Famous(Djokovic) & Athlete(Djokovic) -> TaxHaven(Djokovic)"], "conclusion": "GrandSlamChampion(Djokovic)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (OscarNominatedActor(x) -> Celebrity(x))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (OscarNominatedActor(x) -> Celebrity(x))\n                                               ^\n"}
{"timestamp": "2025-06-10T05:41:09.719766", "premises": ["all x. (GrandSlamChampion(x) | OscarNominatedActor(x))", "all x. (GrandSlamChampion(x) -> ProfessionalTennisPlayer(x))", "all x. (OscarNominatedActor(x) -> Celebrity(x))", "all x. (ProfessionalTennisPlayer(x) -> Athlete(x))", "all x. (Celebrity(x) -> WellPaid(x))", "all x. (Athlete(x) -> Famous(x))", "all x. (WellPaid(x) -> LiveInTaxHaven(x))", "Famous(Djokovic) & Athlete(Djokovic) -> LiveInTaxHaven(Djokovic)"], "conclusion": "-LiveInTaxHaven(Djokovic)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (Celebrity(x) -> WellPaid(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 417, in handle_quant\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (Celebrity(x) -> WellPaid(x))\n                        ^\n"}
{"timestamp": "2025-06-10T05:41:52.390596", "premises": ["exists x. (ProfessionalWrestlingStable(x) & FormedIn(x, WWE) & DiamondMine(x))", "Leads(RoderickStrong, DiamondMine)", "Members(DiamondMine, CreedBrothers) & Members(DiamondMine, IvyNile)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, ?x. ProfessionalWrestlingStable(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nLeads(RoderickStrong, ?x. ProfessionalWrestlingStable(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nLeads(RoderickStrong, ?x. ProfessionalWrestlingStable(x))\n                        ^\n"}
{"timestamp": "2025-06-10T05:41:52.398197", "premises": ["ProfessionalWrestlingStable(DiamondMine) & FormedIn(DiamondMine, WWE)", "Leads(RoderickStrong, DiamondMine)", "PartOf(CreedBrothers, DiamondMine) & PartOf(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, ProfessionalWrestlingStable)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0\n"}
{"timestamp": "2025-06-10T05:41:52.398735", "premises": ["Stable(DiamondMine) & StabledBy(RoderickStrong, DiamondMine)", "StabledBy(RoderickStrong, DiamondMine)", "Member(CreedBrothers, DiamondMine) & Member(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "StabledBy(RoderickStrong, ?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    StabledBy(%%START ERROR%%RoderickStrong,?x%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    StabledBy(%%START ERROR%%RoderickStrong,?x%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:41:52.402647", "premises": ["Stable(DiamondMine) & FormedIn(DiamondMine, WWE)", "Leads(RoderickStrong, DiamondMine)", "Member(TheCreedBrothers, DiamondMine) & Member(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, ?x) & Stable(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Leads(%%START ERROR%%RoderickStrong,?x%%END ERROR%%) & Stable(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Leads(%%START ERROR%%RoderickStrong,?x%%END ERROR%%) & Stable(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:41:52.413810", "premises": ["ProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine)  FOL: ProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine) -> ProfessionalWrestlingStable(DiamondMine)", "Leads(RoderickStrong, DiamondMine)", "Includes(DiamondMine, CreedBrothers) & Includes(DiamondMine, IvyNile)  FOL: Includes(DiamondMine, CreedBrothers) & Includes(DiamondMine, IvyNile) -> Includes(DiamondMine, CreedBrothers | IvyNile)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, ?)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine)  FOL: ProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine) -> ProfessionalWrestlingStable(DiamondMine)\n                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine)  FOL: ProfessionalWrestlingStable(DiamondMine) & FormedInWWE(DiamondMine) -> ProfessionalWrestlingStable(DiamondMine)\n                                                                     ^\n"}
{"timestamp": "2025-06-10T05:41:52.414092", "premises": ["ProfessionalWrestlingStable(DiamondMine) & FormedIn(DiamondMine, WWE)", "Leads(RoderickStrong, DiamondMine)", "Includes(DiamondMine, CreedBrothers) & Includes(DiamondMine, IvyNile)", "HasFeud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, ProfessionalWrestlingStable)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ProfessionalWrestlingStable/1, ProfessionalWrestlingStable/0\n"}
{"timestamp": "2025-06-10T05:41:52.414606", "premises": ["DiamondMine(x) & ProfessionalWrestlingStable(x) & FormedIn(x, WWE)", "Leader(DiamondMine, RoderickStrong)", "Member(DiamondMine, CreedBrothers) & Member(DiamondMine, IvyNile)", "Feud(Imperium, DiamondMine)"], "conclusion": "exists x. (ProfessionalWrestlingStable(x) & Leader(x, RoderickStrong))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0\n"}
{"timestamp": "2025-06-10T05:41:52.417776", "premises": ["Stable(DiamondMine) & FormedIn(WWE, DiamondMine)", "Leader(RoderickStrong, DiamondMine)", "PartOf(CreedBrothers, DiamondMine) & PartOf(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leader(RoderickStrong, Stable)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stable/1, Stable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stable/1, Stable/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stable/1, Stable/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stable/1, Stable/0\n"}
{"timestamp": "2025-06-10T05:42:34.282273", "premises": ["all x. (Member(x, DiamondMine) <-> x = DiamondMine)", "Leader(RoderickStrong, DiamondMine)", "Member(CreedBrothers, DiamondMine) & Member(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leader(RoderickStrong, CreedBrothers)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n(> x = DiamondMine) -> all x. (Member(x, DiamondMine))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n(> x = DiamondMine) -> all x. (Member(x, DiamondMine))\n   ^\n"}
{"timestamp": "2025-06-10T05:42:34.319576", "premises": ["all x. (ProfessionalWrestlingStable(x) & FormedInWWE(x) -> DiamondMine(x))", "Leads(RoderickStrong, DiamondMine)", "CreedBrothers(DiamondMine) & IvyNile(DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, CreedBrothers)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, CreedBrothers/1, CreedBrothers/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, CreedBrothers/1, CreedBrothers/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, CreedBrothers/1, CreedBrothers/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, CreedBrothers/1, CreedBrothers/0\n"}
{"timestamp": "2025-06-10T05:42:34.322011", "premises": ["all x. (DiamondMine(x) -> ProfessionalWrestlingStable(x) & FormedInWWE(x))", "Leads(RoderickStrong, DiamondMine)", "(Includes(DiamondMine, CreedBrothers) & Includes(DiamondMine, IvyNile))", "HasFeud(Imperium, DiamondMine)"], "conclusion": "Leads(RoderickStrong, CreedBrothers)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0\n"}
{"timestamp": "2025-06-10T05:43:22.966048", "premises": ["exists x. (WrestlingStable(x) & Name(x, DiamondMine) & FormedIn(x, WWE))", "Leader(RoderickStrong, DiamondMine)", "Member(CreedBrothers, DiamondMine) & Member(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "-Feud(Imperium, exists x. (WrestlingStable(x) & Member(IvyNile, x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    -(Feud(%%START ERROR%%Imperium,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    -(Feud(%%START ERROR%%Imperium,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:43:22.974675", "premises": ["all x. (DiamondMine(x) -> ProfessionalWrestlingStable(x) & FormedInWWE(x))", "all x. (DiamondMine(x) -> Leads(RoderickStrong, x))", "all x. (DiamondMine(x) -> Includes(x, CreedBrothers) & Includes(x, IvyNile))", "all x. (Imperium(x) -> HasFeud(x, DiamondMine))"], "conclusion": "all x. (Imperium(x) -> -HasFeud(x, y)) & exists y. (ProfessionalWrestlingStable(y) & Includes(y, IvyNile))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0\n"}
{"timestamp": "2025-06-10T05:43:22.985818", "premises": ["Stable(DiamondMine) & ProfessionalWrestlingStable(DiamondMine) & FormedIn(DiamondMine, WWE)", "Leads(RoderickStrong, DiamondMine)", "Member(CreedBrothers, DiamondMine) & Member(IvyNile, DiamondMine)", "Feud(Imperium, DiamondMine)"], "conclusion": "-Feud(Imperium, Stable(IvyNile))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Stable/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Stable/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Stable/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Stable/1\n"}
{"timestamp": "2025-06-10T05:43:22.989138", "premises": ["all x. (DiamondMine(x) -> ProfessionalWrestlingStable(x) & FormedInWWE(x))", "all x. (DiamondMine(x) -> LedBy(x, RoderickStrong))", "all x. (DiamondMine(x) -> Includes(x, CreedBrothers) & Includes(x, IvyNile))", "all x. (Imperium(x) -> HasFeud(x, DiamondMine))"], "conclusion": "exists x. (ProfessionalWrestlingStable(x) & Includes(x, IvyNile) & -HasFeud(Imperium, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, Imperium/1, Imperium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, Imperium/1, Imperium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, Imperium/1, Imperium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0, Imperium/1, Imperium/0\n"}
{"timestamp": "2025-06-10T05:43:22.992338", "premises": ["all x. (DiamondMine(x) -> ProfessionalWrestlingStable(x) & FormedInWWE(x))", "Leader(RoderickStrong, DiamondMine)", "In(DiamondMine, CreedBrothers) & In(DiamondMine, IvyNile)", "Feud(Imperium, DiamondMine)"], "conclusion": "-exists x. (In(x, IvyNile) & Feud(Imperium, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DiamondMine/1, DiamondMine/0\n"}
{"timestamp": "2025-06-10T05:44:23.104333", "premises": ["MusicPiece(SymphonyNo.9)", "all x. (Composer(x) -> Write(x, MusicPiece))", "Write(Beethoven, SymphonyNo.9)", "Premiered(ViennaMusicSociety, SymphonyNo.9)", "Orchestra(ViennaMusicSociety)", "Lead(Beethoven, ViennaMusicSociety)", "Orchestra(ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor))"], "conclusion": "Conductor(Beethoven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^\n"}
{"timestamp": "2025-06-10T05:44:23.103724", "premises": ["MusicPiece(SymphonyNo.9)", "all x. (Composer(x) -> MusicPiece(x))", "MusicPiece(SymphonyNo.9) & Wrote(Beethoven, SymphonyNo.9)", "Premiered(ViennaMusicSociety, SymphonyNo.9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedByConductor(x))", "Conductor(Beethoven)"], "conclusion": "Composer(Beethoven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^\n"}
{"timestamp": "2025-06-10T05:44:23.115580", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Wrote(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor(x)))", "Conductor(Beethoven)", "all x. (Composer(x) -> Conductor(x))"], "conclusion": "Composer(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1\n"}
{"timestamp": "2025-06-10T05:44:23.115749", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "MusicPieceWrittenBy(Beethoven, SymphonyNo9)", "PremieredBy(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor))"], "conclusion": "Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0\n"}
{"timestamp": "2025-06-10T05:44:23.115680", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "WrittenBy(Beethoven, SymphonyNo9)", "PremieredBy(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leader(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor))", "Conductor(Beethoven)", "all x. (Composer(x) -> Conductor(x))"], "conclusion": "Composer(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0\n"}
{"timestamp": "2025-06-10T05:44:23.127900", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> Writes(x, MusicPiece))", "Writes(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "exists x. (Orchestra(x) & x = ViennaMusicSociety)", "Leader(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> Leader(x, Conductor))", "Conductor(Beethoven)"], "conclusion": "Composer(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0, MusicPiece/1, MusicPiece/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0, MusicPiece/1, MusicPiece/0\n"}
{"timestamp": "2025-06-10T05:45:19.996439", "premises": ["MusicPiece(SymphonyNo.9)", "all x. (Composer(x) -> MusicPiece(x))", "MusicPiece(SymphonyNo.9) & Composer(Beethoven) & Wrote(Beethoven, SymphonyNo.9)", "MusicPiece(SymphonyNo.9) & Premiered(ViennaMusicSociety, SymphonyNo.9)", "Orchestra(ViennaMusicSociety)", "Orchestra(ViennaMusicSociety) & Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedByConductor(x))"], "conclusion": "exists x. (Orchestra(x) & Premiered(x, MusicPiece(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^\n"}
{"timestamp": "2025-06-10T05:45:20.002360", "premises": ["all x. (SymphonyNo9(x) -> MusicPiece(x))", "all x. (Composer(x) -> CanWriteMusicPiece(x))", "Composer(Beethoven) & CanWriteMusicPiece(Beethoven) & MusicPiece(SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "all x. (ViennaMusicSociety(x) -> Orchestra(x))", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedByConductor(x))"], "conclusion": "exists x. (Orchestra(x) & Premiered(x, MusicPiece))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ViennaMusicSociety/1, ViennaMusicSociety/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ViennaMusicSociety/1, ViennaMusicSociety/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ViennaMusicSociety/1, ViennaMusicSociety/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ViennaMusicSociety/1, ViennaMusicSociety/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0\n"}
{"timestamp": "2025-06-10T05:45:20.008091", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Lead(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedByConductor(x))"], "conclusion": "exists x. (Orchestra(x) & Premiered(x, MusicPiece(_)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MusicPiece/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MusicPiece/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MusicPiece/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MusicPiece/1\n"}
{"timestamp": "2025-06-10T05:45:20.033974", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Wrote(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leader(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedByConductor(x))"], "conclusion": "exists x. (Orchestra(x) & Premiered(x, MusicPiece))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MusicPiece/1, MusicPiece/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MusicPiece/1, MusicPiece/0\n"}
{"timestamp": "2025-06-10T05:46:20.381875", "premises": ["all x. (MusicPiece(x) -> SymphonyNo9(x))", "all x. (Composer(x) -> MusicPiece(x))", "Beethoven \u2192 SymphonyNo9", "Premiered(ViennaMusicSociety, SymphonyNo9)", "all x. (Orchestra(x) -> ViennaMusicSociety(x))", "Beethoven \u2192 ViennaMusicSociety", "all x. (Orchestra(x) -> Conductor(x))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nBeethoven \u2192 SymphonyNo9\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nBeethoven \u2192 SymphonyNo9\n          ^\n"}
{"timestamp": "2025-06-10T05:46:20.391405", "premises": ["MusicPiece(SymphonyNo.9)", "all x. (Composer(x) -> Write(x, MusicPiece))", "Write(Beethoven, SymphonyNo.9)", "Premiered(ViennaMusicSociety, SymphonyNo.9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nMusicPiece(SymphonyNo.9)\n                     ^\n"}
{"timestamp": "2025-06-10T05:46:20.388673", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9)", "Society(ViennaMusicSociety) & MusicPiece(SymphonyNo9)", "Society(ViennaMusicSociety) -> Orchestra(ViennaMusicSociety)", "Orchestra(ViennaMusicSociety) -> Leader(Beethoven, ViennaMusicSociety)", "Orchestra(ViennaMusicSociety)", "Leader(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> Leader(x, Conductor(x)))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1\n"}
{"timestamp": "2025-06-10T05:46:20.390919", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9)", "PremieredBy(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "Orchestra(ViennaMusicSociety) -> Leads(ViennaMusicSociety, Conductor(ViennaMusicSociety))", "Leads(Beethoven, ViennaMusicSociety) -> Conductor(Beethoven)", "all x. (Orchestra(x) -> Leads(x, Conductor(x)))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1\n"}
{"timestamp": "2025-06-10T05:46:20.405996", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9) & Wrote(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> LedBy(x, Conductor))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0\n"}
{"timestamp": "2025-06-10T05:46:20.407178", "premises": ["exists x. (SymphonyNo9(x) & MusicPiece(x))", "all x. (Composer(x) -> Write(x, MusicPiece))", "Write(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leads(Beethoven, ViennaMusicSociety)", "all x. (Orchestra(x) -> Leads(x, Conductor))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0, SymphonyNo9/1, SymphonyNo9/0, MusicPiece/1, MusicPiece/0\n"}
{"timestamp": "2025-06-10T05:46:20.407686", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9)", "AssociatedWith(ViennaMusicSociety, SymphonyNo9)", "Orchestra(ViennaMusicSociety)", "Leader(Beethoven, ViennaMusicSociety)", "Leader(ViennaMusicSociety, Conductor(ViennaMusicSociety))", "all x. (Orchestra(x) -> Leader(x, Conductor(x)))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Conductor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Conductor/1\n"}
{"timestamp": "2025-06-10T05:46:20.409938", "premises": ["MusicPiece(SymphonyNo9)", "all x. (Composer(x) -> MusicPiece(x))", "Composer(Beethoven) & MusicPiece(SymphonyNo9) -> Composed(Beethoven, SymphonyNo9)", "Premiered(ViennaMusicSociety, SymphonyNo9)", "exists x. (Orchestra(x) & (x = ViennaMusicSociety))", "Leads(Beethoven, ViennaMusicSociety)", "Orchestra(ViennaMusicSociety) -> LedBy(ViennaMusicSociety, Conductor)", "all x. (Orchestra(x) -> LedBy(x, Conductor))"], "conclusion": "-Conductor(Beethoven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Conductor/1, Conductor/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Conductor/1, Conductor/0\n"}
{"timestamp": "2025-06-10T05:47:25.052291", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProduct(x) -> -Timeless(x))", "exists x. (ZahaHadid(x) | KellyWearstler(x))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "all x. (Max(x) & Timeless(x) -> (MassProduct(x) & Evocative(x)))"], "conclusion": "MassProduct(Max)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0\n"}
{"timestamp": "2025-06-10T05:47:25.052113", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "(ZahaHadid(Design) | KellyWearstler(Design))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "all x. (Max(x) -> (Timeless(x) -> (MassProductDesign(x) & Evocative(x))))"], "conclusion": "MassProductDesign(Max)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0\n"}
{"timestamp": "2025-06-10T05:47:25.075237", "premises": ["all x. ((DesignStyle(x) & ZahaHadid(x)) -> Timeless(x))", "all x. (-MassProduct(x) -> -Timeless(x))", "(DesignStyle(ZahaHadid) | DesignStyle(KellyWearstler))", "all x. (DesignStyle(x) & KellyWearstler(x) -> Evocative(x))", "all x. (DesignStyle(x) & KellyWearstler(x) -> Dreamy(x))", "(Timeless(Max) -> (MassProduct(Max) & Evocative(Max)))"], "conclusion": "MassProduct(Max)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0.\n\n\nFatal error:  The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0.\n\n\nFatal error:  The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0\n"}
{"timestamp": "2025-06-10T05:47:25.085150", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (DesignStyle(x) & ZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "DesignStyle(ZahaHadid) | DesignStyle(KellyWearstler)", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "Max(x) & Timeless(x) -> (MassProductDesign(x) & Evocative(x))"], "conclusion": "MassProductDesign(Max)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0, Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0, Max/1, Max/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0, Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: KellyWearstler/1, KellyWearstler/0, ZahaHadid/1, ZahaHadid/0, Max/1, Max/0\n"}
{"timestamp": "2025-06-10T05:48:35.661111", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProduct(x) -> -Timeless(x))", "(ZahaHadid(Max) & -KellyWearstler(Max)) | (-ZahaHadid(Max) & KellyWearstler(Max))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "(Timeless(Max) -> (MassProduct(Max) & Evocative(Max)))"], "conclusion": "Evocative(Max) & Dreamy(Max)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(Timeless(Max) -> (MassProduct(Max) & Evocative(Max)))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(Timeless(Max) -> (MassProduct(Max) & Evocative(Max)))\n                                                    ^\n"}
{"timestamp": "2025-06-10T05:48:35.684899", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProduct(x) -> -Timeless(x))", "exists x. (ZahaHadid(x) | KellyWearstler(x))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "all x. (Max(x) & Timeless(x) -> (MassProduct(x) & Evocative(x)))"], "conclusion": "Evocative(Max) & Dreamy(Max)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0\n"}
{"timestamp": "2025-06-10T05:48:35.692927", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "(ZahaHadid(x) | KellyWearstler(x))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "(Timeless(x) & Max(x) -> (MassProductDesign(x) & Evocative(x)))"], "conclusion": "(Evocative(x) & Dreamy(x) & Max(x)) </PREMISES> <CONCLUSION> A design by Max is evocative and dreamy.  FOL: (Evocative(x) & Dreamy(x) & Max(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(Evocative(x) & Dreamy(x) & Max(x)) </PREMISES> <CONCLUSION> A design by Max is evocative and dreamy.  FOL: (Evocative(x) & Dreamy(x) & Max(x)) </CONCLUSION> <EVALUATE>\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(Evocative(x) & Dreamy(x) & Max(x)) </PREMISES> <CONCLUSION> A design by Max is evocative and dreamy.  FOL: (Evocative(x) & Dreamy(x) & Max(x)) </CONCLUSION> <EVALUATE>\n                                    ^\n"}
{"timestamp": "2025-06-10T05:49:48.402308", "premises": ["all x. (DesignStyleByZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "(DesignStyleByZahaHadid(Timeless) -> DesignStyleByKellyWearstler(Timeless))", "all x. (DesignStyleByKellyWearstler(x) -> Evocative(x))", "all x. (DesignStyleByKellyWearstler(x) -> Dreamy(x))", "(DesignByMax(Timeless) -> (MassProductDesign(DesignByMax(Timeless)) & Evocative(DesignByMax(Timeless))))"], "conclusion": "Evocative(DesignByMax(Timeless)) | Dreamy(DesignByMax(Timeless))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DesignByMax/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DesignByMax/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DesignByMax/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DesignByMax/1\n"}
{"timestamp": "2025-06-10T05:49:48.419435", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "ZahaHadid(x) | KellyWearstler(x)", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "Max(x) & Timeless(x) -> (MassProductDesign(x) & Evocative(x))"], "conclusion": "Evocative(Max(x)) | Dreamy(Max(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Max/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Max/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Max/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Max/1\n"}
{"timestamp": "2025-06-10T05:49:48.431541", "premises": ["all x. (ZahaHadid(x) -> Timeless(x))", "all x. (MassProductDesign(x) -> -Timeless(x))", "exists x. (ZahaHadid(x) | KellyWearstler(x))", "all x. (KellyWearstler(x) -> Evocative(x))", "all x. (KellyWearstler(x) -> Dreamy(x))", "all x. (Max(x) & Timeless(x) -> (MassProductDesign(x) & Evocative(x)))"], "conclusion": "(Evocative(Max) | Dreamy(Max))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Max/1, Max/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Max/1, Max/0\n"}
{"timestamp": "2025-06-10T05:51:26.027172", "premises": ["all x. (RankedHighly(x, WomenTennisAssociation) -> MostActiveInMajorTennis(x))", "all x. (LostTo(x, IgaSwiatek) -> RankedHighly(x, WomenTennisAssociation))", "all x. (FemaleTennisPlayer(x, RolandGarros2022) -> LostTo(x, IgaSwiatek))", "exists x. (FemaleTennisPlayer(x, RolandGarros2022) | MaleTennisPlayer(x, RolandGarros2022))", "all x. (MaleTennisPlayer(x, RolandGarros2022) -> LostTo(x, RafaelNadal))", "(RankedHighly(CocoGauff, WomenTennisAssociation) | LostTo(CocoGauff, RafaelNadal)) -> -MaleTennisPlayer(CocoGauff, RolandGarros2022)"], "conclusion": "MostActiveInMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis. </CONCLUSION> <EVALUATE>  FOL: MostActiveInMajorTennis(CocoGauff)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMostActiveInMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis. </CONCLUSION> <EVALUATE>  FOL: MostActiveInMajorTennis(CocoGauff)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMostActiveInMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis. </CONCLUSION> <EVALUATE>  FOL: MostActiveInMajorTennis(CocoGauff)\n                                   ^\n"}
{"timestamp": "2025-06-10T05:51:26.020885", "premises": ["all x. (RankedHighlyByWTATennis(x) -> MostActiveMajorTennis(x))", "all x. (LostToSwiatek(x) -> RankedHighlyByWTATennis(x))", "all x. (FemaleTennisPlayerAtRolandGarros2022(x) -> LostToSwiatek(x))", "exists x. (FemaleTennisPlayerAtRolandGarros2022(x) | MaleTennisPlayerAtRolandGarros2022(x))", "all x. (MaleTennisPlayerAtRolandGarros2022(x) -> LostToNadal(x))", "(RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)) -> -MaleTennisPlayerAtRolandGarros2022(CocoGauff)"], "conclusion": "MostActiveMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis.  FOL:  RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)  - (RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)) -> MaleTennisPlayerAtRolandGarros2022(CocoGauff) MaleTennisPlayerAtRolandGarros2022(CocoGauff) - MaleTennisPlayerAtRolandGarros2022(CocoGauff)  FemaleTennisPlayerAtRolandGarros2022(CocoGauff) | MaleTennisPlayerAtRolandGarros2022(CocoGauff) FemaleTennisPlayerAtRolandGarros2022(CocoGauff) - FemaleTennisPlayerAtRolandGarros2022(CocoGauff)  LostToSwiatek(CocoGauff) - LostToSwiatek(CocoGauff)  RankedHighlyByWTATennis(CocoGauff) - RankedHighlyByWTATennis(CocoGauff)  MostActiveMajorTennis(CocoGauff)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMostActiveMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis.  FOL:  RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)  - (RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)) -> MaleTennisPlayerAtRolandGarros2022(CocoGauff) MaleTennisPlayerAtRolandGarros2022(CocoGauff) - MaleTennisPlayerAtRolandGarros2022(CocoGauff)  FemaleTennisPlayerAtRolandGarros2022(CocoGauff) | MaleTennisPlayerAtRolandGarros2022(CocoGauff) FemaleTennisPlayerAtRolandGarros2022(CocoGauff) - FemaleTennisPlayerAtRolandGarros2022(CocoGauff)  LostToSwiatek(CocoGauff) - LostToSwiatek(CocoGauff)  RankedHighlyByWTATennis(CocoGauff) - RankedHighlyByWTATennis(CocoGauff)  MostActiveMajorTennis(CocoGauff)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMostActiveMajorTennis(CocoGauff) </PREMISES> <CONCLUSION> Coco Gauff is among the most active players in major tennis.  FOL:  RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)  - (RankedHighlyByWTATennis(CocoGauff) | LostToNadal(CocoGauff)) -> MaleTennisPlayerAtRolandGarros2022(CocoGauff) MaleTennisPlayerAtRolandGarros2022(CocoGauff) - MaleTennisPlayerAtRolandGarros2022(CocoGauff)  FemaleTennisPlayerAtRolandGarros2022(CocoGauff) | MaleTennisPlayerAtRolandGarros2022(CocoGauff) FemaleTennisPlayerAtRolandGarros2022(CocoGauff) - FemaleTennisPlayerAtRolandGarros2022(CocoGauff)  LostToSwiatek(CocoGauff) - LostToSwiatek(CocoGauff)  RankedHighlyByWTATennis(CocoGauff) - RankedHighlyByWTATennis(CocoGauff)  MostActiveMajorTennis(CocoGauff)\n                                 ^\n"}
{"timestamp": "2025-06-10T05:51:26.039574", "premises": ["all x. (RankedHighlyByWta(x) -> MostActiveInMajorTennis(x))", "all x. (LostToIgaSwiatek(x) -> RankedHighlyByWta(x))", "all x. (FemalePlayerAtRolandGarros2022(x) -> LostToIgaSwiatek(x))", "FemalePlayerAtRolandGarros2022(_) | MalePlayerAtRolandGarros2022(_)", "all x. (MalePlayerAtRolandGarros2022(x) -> LostToRafaelNadal(x))", "CocoGauff -> (RankedHighlyByWta(CocoGauff) | LostToRafaelNadal(CocoGauff)) -> -MalePlayerAtRolandGarros2022(CocoGauff)"], "conclusion": "MostActiveInMajorTennis(CocoGauff)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CocoGauff/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CocoGauff/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CocoGauff/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CocoGauff/0\n"}
{"timestamp": "2025-06-10T05:52:57.117816", "premises": ["all x. (RankedHighly(x) -> MostActive(x))", "all x. (LostTo(x, IgaSwiatek) -> RankedHighly(x))", "all x. (FemaleTennisPlayer(x) & AtRolandGarros2022(x) -> LostTo(x, IgaSwiatek))", "(exists x. (FemaleTennisPlayer(x) & AtRolandGarros2022(x)) | exists x. (MaleTennisPlayer(x) & AtRolandGarros2022(x)))", "all x. (MaleTennisPlayer(x) & AtRolandGarros2022(x) -> LostTo(x, RafaelNadal))", "(RankedHighly(CocoGauff) | LostTo(CocoGauff, RafaelNadal)) -> -MaleTennisPlayer(CocoGauff, RolandGarros2022)"], "conclusion": "LostTo(CocoGauff, RafaelNadal)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaleTennisPlayer/2, MaleTennisPlayer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaleTennisPlayer/2, MaleTennisPlayer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaleTennisPlayer/2, MaleTennisPlayer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaleTennisPlayer/2, MaleTennisPlayer/1\n"}
{"timestamp": "2025-06-10T05:52:57.127042", "premises": ["all x. (WTAHighRank(x) -> MostActiveMajorTennis(x))", "all x. (LostTo(x, \u015awi\u0105tek) -> WTAHighRank(x))", "all x. (FemalePlayerAt(x, RolandGarros2022) & WTAPlayer(x) -> LostTo(x, \u015awi\u0105tek))", "FemalePlayerAt(RolandGarros2022, x) | MalePlayerAt(RolandGarros2022, x)", "all x. (MalePlayerAt(x, RolandGarros2022) -> LostTo(x, Nadal))", "(WTAHighRank(CocoGauff) | LostTo(CocoGauff, Nadal)) -> -MalePlayerAt(CocoGauff, RolandGarros2022)"], "conclusion": "LostTo(CocoGauff, Nadal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc5 in position 613: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc5 in position 613: invalid continuation byte\n"}
{"timestamp": "2025-06-10T05:54:35.758862", "premises": ["all x. (HighlyRanked(x, WTA) -> MostActive(x, MajorTennis))", "all x. (LostTo(x, \u015awi\u0105tek) -> HighlyRanked(x, WTA))", "all x. (FemalePlayer(x) & At(RolandGarros2022(x)) -> LostTo(x, \u015awi\u0105tek))", "FemalePlayer(At(RolandGarros2022)) | MalePlayer(At(RolandGarros2022))", "all x. (MalePlayer(x) & At(RolandGarros2022(x)) -> LostTo(x, Nadal))", "(HighlyRanked(CocoGauff, WTA) | LostTo(CocoGauff, Nadal)) -> \u00acMalePlayer(CocoGauff) & \u00acAt(RolandGarros2022(CocoGauff))"], "conclusion": "\u00ac(LostTo(CocoGauff, \u015awi\u0105tek) | MostActive(CocoGauff, MajorTennis))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n\u00ac(LostTo(CocoGauff, \u015awi\u0105tek) | MostActive(CocoGauff, MajorTennis))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n\u00ac(LostTo(CocoGauff, \u015awi\u0105tek) | MostActive(CocoGauff, MajorTennis))\n                             ^\n"}
{"timestamp": "2025-06-10T05:54:35.773176", "premises": ["all x. (HighlyRankedWTA(x) -> MostActiveMajorTennis(x))", "all x. (LostToIgaSwiatek(x) -> HighlyRankedWTA(x))", "all x. (FemaleTennisPlayerRG2022(x) -> LostToIgaSwiatek(x))", "EitherGenderRG2022(FemaleTennisPlayerRG2022(x)) | EitherGenderRG2022(MaleTennisPlayerRG2022(x))", "all x. (MaleTennisPlayerRG2022(x) -> LostToRafaelNadal(x))", "(HighlyRankedWTA(CocoGauff) | PlayerWhoLostToRafaelNadal(CocoGauff)) -> -MaleTennisPlayerRG2022(CocoGauff)"], "conclusion": "-((LosingToIgaSwiatek(CocoGauff) | MostActiveMajorTennis(CocoGauff)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FemaleTennisPlayerRG2022/1, MaleTennisPlayerRG2022/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FemaleTennisPlayerRG2022/1, MaleTennisPlayerRG2022/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FemaleTennisPlayerRG2022/1, MaleTennisPlayerRG2022/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FemaleTennisPlayerRG2022/1, MaleTennisPlayerRG2022/1\n"}
{"timestamp": "2025-06-10T05:54:35.791435", "premises": ["all x. (RankedHighlyByWTAA(x) -> MostActive(x))", "all x. (LostToIgaSwiatek(x) -> RankedHighlyByWTAA(x))", "all x. (FemaleTennisPlayerAtRolandGarros2022(x) -> LostToIgaSwiatek(x))", "FemaleTennisPlayerAtRolandGarros2022(_) | MaleTennisPlayerAtRolandGarros2022(_)", "all x. (MaleTennisPlayerAtRolandGarros2022(x) -> LostToRafaelNadal(x))", "(RankedHighlyByWTAA(CocoGauff) | LostToRafaelNadal(CocoGauff)) -> \u00acMaleTennisPlayerAtRolandGarros2022(CocoGauff)"], "conclusion": "\u00ac(LostToIgaSwiatek(CocoGauff) | MostActive(CocoGauff))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n\u00ac(LostToIgaSwiatek(CocoGauff) | MostActive(CocoGauff))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n\u00ac(LostToIgaSwiatek(CocoGauff) | MostActive(CocoGauff))\n                              ^\n"}
{"timestamp": "2025-06-10T05:55:07.193539", "premises": ["all x. (Cat(x) -> Mammal(x)) Some pets are not mammals.  FOL: exists x. (Pet(x) & -Mammal(x)) </PREMISES> <CONCLUSION> No pets are cats.  FOL: -Pet(x) | -Cat(x) </CONCLUSION> <EVALUATE>", "all x. (Cat(x) -> Mammal(x))", "exists x. (Pet(x) & -Mammal(x))"], "conclusion": "-Pet(x) | -Cat(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Some'.\nall x. (Cat(x) -> Mammal(x)) Some pets are not mammals.  FOL: exists x. (Pet(x) & -Mammal(x)) </PREMISES> <CONCLUSION> No pets are cats.  FOL: -Pet(x) | -Cat(x) </CONCLUSION> <EVALUATE>\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Some'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Some'.\nall x. (Cat(x) -> Mammal(x)) Some pets are not mammals.  FOL: exists x. (Pet(x) & -Mammal(x)) </PREMISES> <CONCLUSION> No pets are cats.  FOL: -Pet(x) | -Cat(x) </CONCLUSION> <EVALUATE>\n                             ^\n"}
{"timestamp": "2025-06-10T05:55:07.224607", "premises": ["all x. (Cat(x) -> Mammal(x))", "exists x. (Pet(x) & -Mammal(x))"], "conclusion": "-exists x. (Pet(x) & Cat(x)) FOL: for all x. (Pet(x) -> -Cat(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-exists x. (Pet(x) & Cat(x)) FOL: for all x. (Pet(x) -> -Cat(x))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-exists x. (Pet(x) & Cat(x)) FOL: for all x. (Pet(x) -> -Cat(x))\n                             ^\n"}
{"timestamp": "2025-06-10T05:56:00.519804", "premises": ["all x. (Spring(x) | Summer(x) | Fall(x) | Winter(x))", "all x. (WantLongVacation(x) -> LoveSummer(x))", "FavoriteSeason(Emma, Summer)", "-FavoriteSeason(Mia, Summer)", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(James, Summer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0\n"}
{"timestamp": "2025-06-10T05:56:00.519974", "premises": ["all x. (Spring(x) | Summer(x) | Fall(x) | Winter(x))", "all x. (WantLongVacation(x) -> LovesMost(x, Summer))", "FavoriteSeason(Emma, Summer)", "-Equals(FavoriteSeason(Mia, FavoriteSeason(Emma, _)))", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(James, Summer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2\n"}
{"timestamp": "2025-06-10T05:56:00.528062", "premises": ["all x. (Season(x) <-> (Spring(x) | Summer(x) | Fall(x) | Winter(x)))", "all x. (Student(x) & WantLongVacation(x) -> FavoriteSeason(x, Summer))", "FavoriteSeason(Emma, Summer)", "\u00acFavoriteSeason(Mia, Summer) | \u00acFavoriteSeason(Emma, Summer)", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(James, Summer)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (Spring(x) | Summer(x) | Fall(x) | Winter(x))) -> all x. (Season(x))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (Spring(x) | Summer(x) | Fall(x) | Winter(x))) -> all x. (Season(x))\n              ^\n"}
{"timestamp": "2025-06-10T05:56:00.523850", "premises": ["Season(Summer) & Season(Fall) & Season(Spring) & Season(Winter)", "all x. (Student(x) & WantLongVacation(x) -> Loves(x, Summer))", "FavoriteSeason(Emma, Summer)", "-FavoriteSeason(Mia, Summer)", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(James, Summer)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-FavoriteSeason(Mia, Summer)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-FavoriteSeason(Mia, Summer)\n                   ^\n"}
{"timestamp": "2025-06-10T05:56:00.537520", "premises": ["all x. (Season(x) -> (Spring(x) | Summer(x) | Fall(x) | Winter(x)))", "all x. (Student(x) & WantsLongVacation(x) -> Love(x, Summer))", "FavoriteSeason(Emma, Summer)", "FavoriteSeason(Mia, S) & - (S = Summer)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(James, Summer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0\n"}
{"timestamp": "2025-06-10T05:56:57.308835", "premises": ["all x. (Season(x) -> (Spring(x) | Summer(x) | Fall(x) | Winter(x)))", "all x. (WantLongVacation(x) -> LoveSummer(x))", "FavoriteSeason(Emma, Summer)", "-SameFavoriteSeason(Emma, Mia)", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(James, Fall)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0\n"}
{"timestamp": "2025-06-10T05:56:57.310440", "premises": ["all x. (Spring(x) | Summer(x) | Fall(x) | Winter(x))", "all x. (WantsLongVacation(x) -> LovesSummer(x))", "FavoriteSeason(Emma, Summer)", "-FavoriteSeason(Mia, Emma)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(James, Fall)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0\n"}
{"timestamp": "2025-06-10T05:56:57.311265", "premises": ["Season(Spring) & Season(Summer) & Season(Fall) & Season(Winter)", "all x. (Student(x) & WantsLongVacation(x) -> LovesSummer(x))", "FavoriteSeason(Emma, Summer)", "FavoriteSeason(Mia, Y) & Y \u2260 Summer", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(James, Fall)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.\nFavoriteSeason(Mia, Y) & Y \u2260 Summer\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.\nFavoriteSeason(Mia, Y) & Y \u2260 Summer\n                           ^\n"}
{"timestamp": "2025-06-10T05:56:57.320997", "premises": ["all x. (Season(x) -> InYear(x))", "all x. (Student(x) & WantsLongVacation(x) -> Loves(x, Summer))", "Loves(Emma, Summer)", "-Loves(Mia, Summer) | -Loves(Mia, Emma's)", "WantsLongVacation(James)"], "conclusion": "Loves(James, Fall)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (-(Loves(Mia,Summer)) | -(Loves(%%START ERROR%%Mia,Emma's%%END ERROR%%))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (-(Loves(Mia,Summer)) | -(Loves(%%START ERROR%%Mia,Emma's%%END ERROR%%))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T05:56:57.321488", "premises": ["all x. (Season(x) -> (Spring(x) | Summer(x) | Fall(x) | Winter(x)))", "all x. (Student(x) & WantsLongVacation(x) -> LovesSummer(x))", "FavoriteSeason(Emma, Summer)", "-FavoriteSeason(Mia, Summer)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(James, Fall)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Summer/1, Summer/0, Fall/1, Fall/0\n"}
{"timestamp": "2025-06-10T05:57:52.286791", "premises": ["Season(Spring) & Season(Summer) & Season(Fall) & Season(Winter)", "all x. (WantsLongVacation(x) -> LovesMost(x, Summer))", "FavoriteSeason(Emma, Summer)", "-Equal(FavoriteSeason(Emma, FavoriteSeason(Mia, _)))", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2\n"}
{"timestamp": "2025-06-10T05:57:52.286665", "premises": ["exists x. (x = Spring) & exists x. (x = Summer) & exists x. (x = Fall) & exists x. (x = Winter)", "all x. (WantLongVacation(x) -> FavoriteSeason(x, Summer))", "FavoriteSeason(Emma, Summer)", "-Equal(FavoriteSeason(Mia, Summer))", "WantLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FavoriteSeason/2\n"}
{"timestamp": "2025-06-10T05:57:52.301094", "premises": ["exists x. (Season(x) & x \u2260 Summer & x \u2260 Spring & x \u2260 Fall & x \u2260 Winter)", "all x. (Student(x) & WantsLongVacation(x) -> LovesSummerMost(x))", "FavoriteSeason(Emma, Summer)", "FavoriteSeason(Mia, ?)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. (Season(x) & x \u2260 Summer & x \u2260 Spring & x \u2260 Fall & x \u2260 Winter)\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. (Season(x) & x \u2260 Summer & x \u2260 Spring & x \u2260 Fall & x \u2260 Winter)\n                         ^\n"}
{"timestamp": "2025-06-10T05:57:52.293174", "premises": ["Seasons = {Spring, Summer, Fall, Winter}", "all x. (WantsLongVacation(x) -> LovesMost(x, Summer))", "FavoriteSeason(Emma, Summer)", "-Equals(FavoriteSeason(Mia, Summer))", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nSeasons = {Spring, Summer, Fall, Winter}\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nSeasons = {Spring, Summer, Fall, Winter}\n                 ^\n"}
{"timestamp": "2025-06-10T05:57:52.301854", "premises": ["Season(Spring) & Season(Summer) & Season(Fall) & Season(Winter)", "all x. (WantsLongVacation(x) -> LovesSummerMost(x))", "LovesSummerMost(Emma)", "exists y. (FavoriteSeason(Mia, y) & y \u2260 Summer)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists y. (FavoriteSeason(Mia, y) & y \u2260 Summer)\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists y. (FavoriteSeason(Mia, y) & y \u2260 Summer)\n                                      ^\n"}
{"timestamp": "2025-06-10T05:58:12.376332", "premises": ["all x. (Season(x) & (x = Spring | x = Summer | x = Fall | x = Winter))", "all x. (WantsLongVacation(x) -> FavoriteSeason(x, Summer))", "FavoriteSeason(Emma, Summer)", "-FavoriteSeason(Mia, Summer)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T05:58:12.391473", "premises": ["all x. (x = Spring | x = Summer | x = Fall | x = Winter)", "all x. (Student(x) & WantsLongVacation(x) -> Loves(x, Summer))", "Loves(Emma, Summer)", "-FavoriteSeason(Mia, Summer)", "WantsLongVacation(James)"], "conclusion": "FavoriteSeason(Mia, Spring)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T05:59:06.306067", "premises": ["all x. (Analog(x) -> -DigitalMedia(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService) -> 1984(HardcoverBook)"], "conclusion": "PrintedText(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, 1984/1, 1984/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, 1984/1, 1984/0\n"}
{"timestamp": "2025-06-10T05:59:06.315152", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService(1984)) -> HardcoverBook(1984)", "StreamingService(1984)"], "conclusion": "PrintedText(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1\n"}
{"timestamp": "2025-06-10T05:59:06.311602", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "StreamingService(1984) -> HardcoverBook(1984)", "StreamingService(1984)"], "conclusion": "PrintedText(1984)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (PrintedText(x) -> Analog(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (PrintedText(x) -> Analog(x))\n        ^\n"}
{"timestamp": "2025-06-10T05:59:06.325209", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService) -> 1984(HardcoverBook)", "1984(StreamingService) | 1984(HardcoverBook)"], "conclusion": "1984(PrintedText)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, PrintedText/1, PrintedText/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, PrintedText/1, PrintedText/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, PrintedText/1, PrintedText/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HardcoverBook/1, HardcoverBook/0, StreamingService/1, StreamingService/0, PrintedText/1, PrintedText/0\n"}
{"timestamp": "2025-06-10T05:59:56.276204", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService(1984) -> HardcoverBook(1984))"], "conclusion": "StreamingService(1984)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\n1984(StreamingService(1984) -> HardcoverBook(1984))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\n1984(StreamingService(1984) -> HardcoverBook(1984))\n                            ^\n"}
{"timestamp": "2025-06-10T05:59:56.279766", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService(1984)) -> HardcoverBook(1984)"], "conclusion": "StreamingService(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1\n"}
{"timestamp": "2025-06-10T06:00:48.429685", "premises": ["all x. (-Digital(x) | -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> Digital(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "HardcoverBook(1984) -> StreamingService(1984)"], "conclusion": "-StreamingService(1984)", "error_type": "<class 'KeyError'>", "error_message": "16", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 16\n"}
{"timestamp": "2025-06-10T06:00:48.426765", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(StreamingService(1984)) -> 1984(HardcoverBook(1984))"], "conclusion": "-StreamingService(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1, HardcoverBook/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1, HardcoverBook/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: StreamingService/1, HardcoverBook/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: StreamingService/1, HardcoverBook/1\n"}
{"timestamp": "2025-06-10T06:00:48.438582", "premises": ["all x. (DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (StreamingService(x) -> DigitalMedia(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "1984(x) -> (StreamingService(x) -> HardcoverBook(x))"], "conclusion": "-StreamingService(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: 1984/1, 1984/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: 1984/1, 1984/0\n"}
{"timestamp": "2025-06-10T06:00:48.439128", "premises": ["all x. (-DigitalMedia(x) -> -Analog(x))", "all x. (PrintedText(x) -> Analog(x))", "all x. (DigitalMedia(x) -> StreamingService(x))", "all x. (HardcoverBook(x) -> PrintedText(x))", "(1984(1984) & StreamingService(1984) -> HardcoverBook(1984))"], "conclusion": "-StreamingService(1984)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: 1984/1, 1984/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: 1984/1, 1984/0.\n\n\nFatal error:  The following symbols are used with multiple arities: 1984/1, 1984/0\n"}
{"timestamp": "2025-06-10T06:01:41.865932", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "all x. (RomanceLanguage(x) -> LanguageFamily(x))", "all x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (x \u2260 Basque -> -Related(Basque, x))"], "conclusion": "RomanceLanguage(Basque)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:01:41.872138", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguages)", "all x. all y. (LanguageFamily(x) & Member(y, x) -> Related(y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. -Related(x, Basque)"], "conclusion": "RomanceLanguage(Basque)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1\n"}
{"timestamp": "2025-06-10T06:01:41.878041", "premises": ["all x. (Romance(x) -> IndoEuropean(x))", "all x. (Romance(x) -> LanguageFamily(x))", "all x. all y. (LanguageFamily(x, y) -> Related(x, y))", "Romance(French) & Romance(Spanish)", "Related(German, Spanish)", "all x. -Related(Basque, x)"], "conclusion": "Romance(Basque)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LanguageFamily/2, LanguageFamily/1.\n\n\nFatal error:  The following symbols are used with multiple arities: LanguageFamily/2, LanguageFamily/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LanguageFamily/2, LanguageFamily/1.\n\n\nFatal error:  The following symbols are used with multiple arities: LanguageFamily/2, LanguageFamily/1\n"}
{"timestamp": "2025-06-10T06:01:41.883754", "premises": ["all x. (Romance(x) -> IndoEuropean(x))", "LanguageFamily(Romance)", "all x. all y. (In(x, y) & LanguageFamily(y) -> Related(x, y))", "Romance(French) & Romance(Spanish)", "Related(German, Spanish)", "-Related(Basque, y)"], "conclusion": "Romance(Basque)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Romance/1, Romance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Romance/1, Romance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Romance/1, Romance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Romance/1, Romance/0\n"}
{"timestamp": "2025-06-10T06:01:41.891769", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguages)", "all x. all y. (LanguageFamily(x) & Member(y, x) & Member(z, x) -> Related(y, z))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (Basque(x) -> -Related(x, _))"], "conclusion": "RomanceLanguage(Basque)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Basque/1, Basque/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Basque/1, Basque/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Basque/1, Basque/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Basque/1, Basque/0\n"}
{"timestamp": "2025-06-10T06:02:36.632662", "premises": ["all x. (Romance(x) -> IndoEuropean(x))", "LanguageFamily(RomanceLanguages)", "all x. all y. (Member(x, LanguageFamily) & Member(y, LanguageFamily) & x \u2260 y -> Related(x, y))", "Romance(French) & Romance(Spanish)", "Related(German, Spanish)", "all y. \u00acRelated(Basque, y)"], "conclusion": "Romance(German)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (Member(x, LanguageFamily) & Member(y, LanguageFamily) & x \u2260 y -> Related(x, y))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (Member(x, LanguageFamily) & Member(y, LanguageFamily) & x \u2260 y -> Related(x, y))\n                                                                         ^\n"}
{"timestamp": "2025-06-10T06:02:36.634114", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "all x. (RomanceLanguage(x) -> FamilyOfLanguages(x))", "all x. all y. (FamilyOfLanguages(x) & LanguageMember(x, y) -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (Language(x) & x \u2260 Basque -> -Related(x, Basque))"], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Language(x) & x \u2260 Basque -> -Related(x, Basque))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Language(x) & x \u2260 Basque -> -Related(x, Basque))\n                        ^\n"}
{"timestamp": "2025-06-10T06:02:36.648321", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "RomanceLanguageFamily", "all x. all y. (LanguageFamily(x) & Member(x, y) -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "-exists x. (Basque(x) & Related(Basque, x))"], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Basque/1, Basque/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Basque/1, Basque/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Basque/1, Basque/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Basque/1, Basque/0\n"}
{"timestamp": "2025-06-10T06:02:36.645808", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguages)", "all x. (LanguageFamily(x) -> all y. (MemberOf(y, x) -> Related(y)))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "-Related(Basque, x)"], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1\n"}
{"timestamp": "2025-06-10T06:02:36.652496", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguages)", "all x. all y. (LanguageFamily(x) & Member(x, y) & x \u2260 y -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (Basque(x) -> \u2200y. (x \u2260 y -> \u00acRelated(x, y)))"], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & Member(x, y) & x \u2260 y -> Related(x, y))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & Member(x, y) & x \u2260 y -> Related(x, y))\n                                                    ^\n"}
{"timestamp": "2025-06-10T06:02:36.653367", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguages)", "all x. all y. (LanguageFamily(x) & Member(y, x) -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "-Related(Basque, x) for all x."], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'for'.\n-Related(Basque, x) for all x.\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'for'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'for'.\n-Related(Basque, x) for all x.\n                    ^\n"}
{"timestamp": "2025-06-10T06:02:36.648433", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "RomanceLanguagesIsAFamily", "all x. (Family(x) -> Related(x))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (-Related(Basque, x))"], "conclusion": "RomanceLanguage(German)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1\n"}
{"timestamp": "2025-06-10T06:03:29.680256", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "all x. (RomanceLanguage(x) -> LanguageFamily(x))", "all x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (Basque(x) -> -Related(x, x) & -Related(x, Basque(x)))"], "conclusion": "IndoEuropeanLanguage(French)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:03:29.695052", "premises": ["all x. (RomanceLanguage(x) -> IndoEuropeanLanguage(x))", "LanguageFamily(RomanceLanguage)", "all x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))", "RomanceLanguage(French) & RomanceLanguage(Spanish)", "Related(German, Spanish)", "all x. (Basque(x) -> -Related(x, y))"], "conclusion": "IndoEuropeanLanguage(French)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (LanguageFamily(x) & LanguageFamily(y) & x \u2260 y -> Related(x, y))\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:03:29.698646", "premises": ["all x. (Romance(x) -> IndoEuropean(x))", "LanguageFamily(Romance)", "all x. (LanguageFamily(x) -> Related(x))", "Romance(French) & Romance(Spanish)", "Related(German, Spanish)", "all x. (-Related(Basque, x))"], "conclusion": "IndoEuropean(French)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1, Romance/1, Romance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1, Romance/1, Romance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Related/2, Related/1, Romance/1, Romance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Related/2, Related/1, Romance/1, Romance/0\n"}
{"timestamp": "2025-06-10T06:05:02.643755", "premises": ["Striker(ROBERT_LEWANDOWSKI) [BG] Strikers are soccer players.  FOL: all x. (Striker(x) -> SoccerPlayer(x)) Robert Lewandowski left Bayern Munchen.  FOL: Left(ROBERT_LEWANDOWSKI, BAYERN_MUNCHEN) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (Left(x, y) -> -PlaysFor(x, y))"], "conclusion": "PlaysFor(ROBERT_LEWANDOWSKI, BAYERN_MUNCHEN)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nStriker(ROBERT_LEWANDOWSKI) [BG] Strikers are soccer players.  FOL: all x. (Striker(x) -> SoccerPlayer(x)) Robert Lewandowski left Bayern Munchen.  FOL: Left(ROBERT_LEWANDOWSKI, BAYERN_MUNCHEN) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (Left(x, y) -> -PlaysFor(x, y))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nStriker(ROBERT_LEWANDOWSKI) [BG] Strikers are soccer players.  FOL: all x. (Striker(x) -> SoccerPlayer(x)) Robert Lewandowski left Bayern Munchen.  FOL: Left(ROBERT_LEWANDOWSKI, BAYERN_MUNCHEN) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (Left(x, y) -> -PlaysFor(x, y))\n                            ^\n"}
{"timestamp": "2025-06-10T06:05:43.642693", "premises": ["all x. (Striker(x) -> SoccerPlayer(x)) [BG] Robert Lewandowski left Bayern Munchen.  FOL: LeftBy(Lewandowski, BayernMunchen) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (LeftBy(x, y) -> -PlayFor(x, y))"], "conclusion": "Star(Lewandowski)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Striker(x) -> SoccerPlayer(x)) [BG] Robert Lewandowski left Bayern Munchen.  FOL: LeftBy(Lewandowski, BayernMunchen) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (LeftBy(x, y) -> -PlayFor(x, y))\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Striker(x) -> SoccerPlayer(x)) [BG] Robert Lewandowski left Bayern Munchen.  FOL: LeftBy(Lewandowski, BayernMunchen) [BG] If a player left a team they no longer play for that team.  FOL: all x. all y. (LeftBy(x, y) -> -PlayFor(x, y))\n                                       ^\n"}
{"timestamp": "2025-06-10T06:06:45.393780", "premises": ["City(Billings) & In(Billings, Montana)  FOL: (City(Billings) & In(Billings, Montana))", "In(Butte, Montana) & In(Helena, Montana) & In(Missoula, Montana)", "In(WhiteSulphurSprings, same_state) & In(Butte, same_state)  FOL: (same_state is a state) & In(WhiteSulphurSprings, same_state) & In(Butte, same_state)", "\u00acIn(Pierre, Montana)", "all x. (In(x, Butte) \u2192 \u00acIn(x, Pierre))", "In(Butte, same_state) & In(Pierre, same_state) </PREMISES> <CONCLUSION>  FOL: exists x. (In(Butte, x) & In(Pierre, x)) </CONCLUSION> <EVALUATE>", "exists x. (In(Butte, x) & In(Pierre, x))"], "conclusion": "In(Butte, same_state) & In(Pierre, same_state)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nCity(Billings) & In(Billings, Montana)  FOL: (City(Billings) & In(Billings, Montana))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nCity(Billings) & In(Billings, Montana)  FOL: (City(Billings) & In(Billings, Montana))\n                                        ^\n"}
{"timestamp": "2025-06-10T06:06:45.405825", "premises": ["City(Billings) & In(Billings, Montana)", "all x. (City(x) & In(x, Montana) -> (Butte(x) | Helena(x) | Missoula(x)))", "SameState(WhiteSulphurSprings, Butte)", "-In(Pierre, Montana)", "all x. (In(x, Butte) -> -In(x, Pierre))"], "conclusion": "SameState(Butte, Pierre) -> SameState(Butte, Pierre)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0\n"}
{"timestamp": "2025-06-10T06:06:45.436064", "premises": ["City(Billings) & In(Montana, Billings)", "In(Montana, Butte) & In(Montana, Helena) & In(Montana, Missoula)", "In(State1, WhiteSulphurSprings) & In(State1, Butte)", "Not(In(Montana, Pierre))", "-In(Butte, Pierre)"], "conclusion": "In(State1, Butte) & In(State1, Pierre)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-06-10T06:07:49.865580", "premises": ["City(Billings) & In(Billings, Montana)", "all x. (City(x) & (x = Butte | x = Helena | x = Missoula) -> In(x, Montana))", "City(WhiteSulphurSprings) & City(Butte) & SameState(WhiteSulphurSprings, Butte)", "-In(Pierre, Montana)", "all x. (In(x, Butte) -> -In(x, Pierre))"], "conclusion": "City(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </PREMISES> <CONCLUSION> Pierre and Bismarck are in the same state.  FOL: City(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nCity(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </PREMISES> <CONCLUSION> Pierre and Bismarck are in the same state.  FOL: City(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </CONCLUSION> <EVALUATE>\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nCity(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </PREMISES> <CONCLUSION> Pierre and Bismarck are in the same state.  FOL: City(Pierre) & City(Bismarck) & SameState(Pierre, Bismarck) </CONCLUSION> <EVALUATE>\n                                                            ^\n"}
{"timestamp": "2025-06-10T06:07:49.869069", "premises": ["City(Billings) & In(Billings, Montana)", "all x. (In(x, Montana) -> (Butte(x) | Helena(x) | Missoula(x)))", "In(WhiteSulphurSprings, State) & In(Butte, State) & -In(WhiteSulphurSprings, State) | In(Butte, State)", "State = State & In(Butte, State) which reduces to In(Butte, State)", "-In(Pierre, Montana)", "all x. (In(x, Butte) -> -In(x, Pierre))"], "conclusion": "In(Pierre, State) & In(Bismarck, State)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'which'.\nState = State & In(Butte, State) which reduces to In(Butte, State)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'which'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'which'.\nState = State & In(Butte, State) which reduces to In(Butte, State)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:07:49.873457", "premises": ["In(Billings, Montana)", "In(Butte, Montana) & In(Helena, Montana) & In(Missoula, Montana)", "In(WhiteSulphurSprings, Montana) & In(Butte, Montana)", "-In(Pierre, Montana)", "all x. (In(x, Butte) -> -In(x, Pierre))", "In(Pierre, ?) & In(Bismarck, ?) </PREMISES> <CONCLUSION> In(Bismarck, Montana) </CONCLUSION> <EVALUATE>", "In(WhiteSulphurSprings, Montana)", "In(x, Montana)", "-In(x, Montana)", "-In(Pierre, Montana)", "In(Bismarck, ?)"], "conclusion": "In(Bismarck, Montana)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nIn(Pierre, ?) & In(Bismarck, ?) </PREMISES> <CONCLUSION> In(Bismarck, Montana) </CONCLUSION> <EVALUATE>\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nIn(Pierre, ?) & In(Bismarck, ?) </PREMISES> <CONCLUSION> In(Bismarck, Montana) </CONCLUSION> <EVALUATE>\n                                ^\n"}
{"timestamp": "2025-06-10T06:07:49.874021", "premises": ["City(Billings) & In(Billings, Montana) \u2192 City(Billings)", "all x. (In(x, Montana) \u2192 City(x) & City(x))", "City(WhiteSulphurSprings) & City(Butte) \u2192 SameState(WhiteSulphurSprings, Butte)", "- (City(Pierre) & In(Pierre, Montana))", "all x. (City(x) & In(x, Butte) \u2192 -In(x, Pierre))"], "conclusion": "SameState(Pierre, Bismarck)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nCity(Billings) & In(Billings, Montana) \u2192 City(Billings)\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nCity(Billings) & In(Billings, Montana) \u2192 City(Billings)\n                                       ^\n"}
{"timestamp": "2025-06-10T06:07:49.874893", "premises": ["City(InMontana, Billings)", "CitiesInMontana = {Butte, Helena, Missoula}", "SameState(WhiteSulphurSprings, Butte)", "-City(InMontana, Pierre)", "all x. (InButte(x) -> -City(InPierre, x))"], "conclusion": "SameState(Pierre, Bismarck)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nCitiesInMontana = {Butte, Helena, Missoula}\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nCitiesInMontana = {Butte, Helena, Missoula}\n                        ^\n"}
{"timestamp": "2025-06-10T06:08:47.141332", "premises": ["City(Billings) & InMontana(Billings)", "all x. (InMontana(x) -> (Butte(x) | Helena(x) | Missoula(x)))", "InSameState(WhiteSulphurSprings, Butte)", "-InMontana(Pierre)", "-InPierre(x) | -Butte(x)"], "conclusion": "InMontana(Missoula)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0\n"}
{"timestamp": "2025-06-10T06:08:47.153489", "premises": ["City(Billings) & In(Montana, Billings)", "all x. (City(x) & In(Montana, x) -> Butte(x) | Helena(x) | Missoula(x))", "SameState(WhiteSulphurSprings, Butte)", "City(Pierre) & -In(Montana, Pierre)", "all x. (City(x) & In(Butte, x) -> -In(Pierre, x))"], "conclusion": "In(Montana, Missoula)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Butte/1, Butte/0, Missoula/1, Missoula/0\n"}
{"timestamp": "2025-06-10T06:09:42.275182", "premises": ["all x. all y. (InternationalStudentInUs(x) & Visa(x, y) -> F1Visa(x, y) | J1Visa(x, y)) International students in US have either an F1 visa or a J1 visa.  FOL: all x. (InternationalStudentInUs(x) -> (F1Visa(x) | J1Visa(x))) International students in US have either an F1 visa or a J1 visa.  FOL: (F1Visa(Mike) | J1Visa(Mike))", "(F1Visa(x) -> (ApplyForCPT(x) | ApplyForOPT(x)))", "(F1Visa(x) -> (ApplyForCPT(x) | ApplyForOPT(x)))", "InternationalStudentInUs(Mike)", "(ApplyForCPT(Mike) -> WantsToWorkInUs(Mike))", "(ApplyForCPT(Mike) -> WantsToWorkInUs(Mike))"], "conclusion": "F1Visa(Mike)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'International'.\nall x. all y. (InternationalStudentInUs(x) & Visa(x, y) -> F1Visa(x, y) | J1Visa(x, y)) International students in US have either an F1 visa or a J1 visa.  FOL: all x. (InternationalStudentInUs(x) -> (F1Visa(x) | J1Visa(x))) International students in US have either an F1 visa or a J1 visa.  FOL: (F1Visa(Mike) | J1Visa(Mike))\n                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'International'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'International'.\nall x. all y. (InternationalStudentInUs(x) & Visa(x, y) -> F1Visa(x, y) | J1Visa(x, y)) International students in US have either an F1 visa or a J1 visa.  FOL: all x. (InternationalStudentInUs(x) -> (F1Visa(x) | J1Visa(x))) International students in US have either an F1 visa or a J1 visa.  FOL: (F1Visa(Mike) | J1Visa(Mike))\n                                                                                        ^\n"}
{"timestamp": "2025-06-10T06:11:14.553572", "premises": ["all x. (Cow(x) -> Bovine(x))", "exists x. (Pet(x) & Cow(x))", "all x. (Bovine(x) -> Domesticated(x))", "all x. (Domesticated(x) -> -Alligator(x))", "Alligator(Ted)"], "conclusion": "Pet(Ted)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (Bovine(x) -> Domesticated(x))\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (Bovine(x) -> Domesticated(x))\n                ^\n"}
{"timestamp": "2025-06-10T06:11:14.562933", "premises": ["all x. (Cow(x) -> Bovine(x))", "exists x. (Pet(x) & Cow(x))", "all x. (Bovine(x) -> Domesticated(x))", "all x. (Domesticated(x) & Alligator(x) -> -)", "Alligator(Ted)"], "conclusion": "Pet(Ted)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (Domesticated(x) & Alligator(x) -> -)\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (Domesticated(x) & Alligator(x) -> -)\n                                           ^\n"}
{"timestamp": "2025-06-10T06:13:56.032085", "premises": ["IvyLeagueResearchUniversity(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven)", "Endowment(YaleUniversity, 42.3 Billion)", "TEXT: A list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.  FOL:"], "conclusion": "IvyLeagueResearchUniversity(X) & MovedTo(X, NewHaven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 Billion)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 Billion)\n                            ^\n"}
{"timestamp": "2025-06-10T06:13:56.035442", "premises": ["YaleUniversity(IvyLeagueResearchUniversity & Private)", "MovedTo(NewHaven, YaleUniversity, 1716)", "EndowmentValue(YaleUniversity, 42.3 billion)", "OrganizedInto(YaleUniversity, residential colleges & Yale Graduate School of Arts and Sciences & twelve professional schools)", "ListOfResidentialColleges(YaleUniversity, Benjamin Franklin College & Berkeley College & Branford College & Davenport College & Ezra Stiles College & Grace Hopper College & Jonathan Edwards College & Morse College & Pauli Murray College & Pierson College & Saybrook College & Silliman College & Timothy Dwight College & Trumbull College)"], "conclusion": "MovedTo(NewHaven, IvyLeagueResearchUniversity & Private, 1716)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nMovedTo(NewHaven, IvyLeagueResearchUniversity & Private, 1716)\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nMovedTo(NewHaven, IvyLeagueResearchUniversity & Private, 1716)\n                                              ^\n"}
{"timestamp": "2025-06-10T06:13:56.033293", "premises": ["IvyLeagueResearchUniversity(YaleUniversity) & Private(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven, 1716)", "Endowment(YaleUniversity, 42.3Billion)", "NumberofCollegesAndSchools(YaleUniversity, 27)", "ResidentialColleges(YaleUniversity, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "MovedTo(IvyLeagueResearchUniversity, NewHaven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3Billion)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3Billion)\n                            ^\n"}
{"timestamp": "2025-06-10T06:13:56.037958", "premises": ["IvyLeague(YaleUniversity) & Private(YaleUniversity) & ResearchUniversity(YaleUniversity)", "Moved(YaleUniversity, NewHaven, 1716)", "Endowment(YaleUniversity, 42.3 * 10^9)", "27 = Count(ConstituentColleges(YaleUniversity))", "ResidentialColleges(YaleUniversity) = {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege}"], "conclusion": "Moved(IvyLeagueResearchUniversity, NewHaven, _)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 * 10^9)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 * 10^9)\n                            ^\n"}
{"timestamp": "2025-06-10T06:13:56.032603", "premises": ["MovedTo(NewHaven, YaleUniversity, 1716)", "EndowmentValue(YaleUniversity, 42.3 billion)", "NumberofConstituentColleges(YaleUniversity, 27)", "ResidentialCollege(YaleUniversity, BenjaminFranklinCollege) & ResidentialCollege(YaleUniversity, BerkeleyCollege) & ResidentialCollege(YaleUniversity, BranfordCollege) & ResidentialCollege(YaleUniversity, DavenportCollege) & ResidentialCollege(YaleUniversity, EzraStilesCollege) & ResidentialCollege(YaleUniversity, GraceHopperCollege) & ResidentialCollege(YaleUniversity, JonathanEdwardsCollege) & ResidentialCollege(YaleUniversity, MorseCollege) & ResidentialCollege(YaleUniversity, PauliMurrayCollege) & ResidentialCollege(YaleUniversity, PiersonCollege) & ResidentialCollege(YaleUniversity, SaybrookCollege) & ResidentialCollege(YaleUniversity, SillimanCollege) & ResidentialCollege(YaleUniversity, TimothyDwightCollege) & ResidentialCollege(YaleUniversity, TrumbullCollege)"], "conclusion": "MovedTo(NewHaven, X, Y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:13:56.039858", "premises": ["YaleUniversity", "IvyLeague(YaleUniversity) & Private(YaleUniversity) & ResearchUniversity(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven, 1716)", "EndowmentValue(YaleUniversity, 42.3Billion)", "OrganizedInto(YaleUniversity, 27, ConstituentCollegesAndSchools)", "College(YaleUniversity, BenjaminFranklinCollege) & College(YaleUniversity, BerkeleyCollege) & College(YaleUniversity, BranfordCollege) & College(YaleUniversity, DavenportCollege) & College(YaleUniversity, EzraStilesCollege) & College(YaleUniversity, GraceHopperCollege) & College(YaleUniversity, JonathanEdwardsCollege) & College(YaleUniversity, MorseCollege) & College(YaleUniversity, PauliMurrayCollege) & College(YaleUniversity, PiersonCollege) & College(YaleUniversity, SaybrookCollege) & College(YaleUniversity, SillimanCollege) & College(YaleUniversity, TimothyDwightCollege) & College(YaleUniversity, TrumbullCollege)"], "conclusion": "Private(IvyLeagueUniversity) & IvyLeague(IvyLeagueUniversity) & ResearchUniversity(IvyLeagueUniversity) & MovedTo(IvyLeagueUniversity, NewHaven, _)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3Billion)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3Billion)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:13:56.040479", "premises": ["IvyLeagueResearchUniversity(YaleUniversity) & Private(YaleUniversity)", "MovedTo(NewHaven, YaleUniversity, 1716)", "Endowment(YaleUniversity, 42.3)", "OrganizedInto(YaleUniversity, 27, ResidentialColleges | YaleGraduateSchoolOfArtsAndSciences | TwelveProfessionalSchools)", "ResidentialColleges(YaleUniversity, BenjaminFranklinCollege | BerkeleyCollege | BranfordCollege | DavenportCollege | EzraStilesCollege | GraceHopperCollege | JonathanEdwardsCollege | MorseCollege | PauliMurrayCollege | PiersonCollege | SaybrookCollege | SillimanCollege | TimothyDwightCollege | TrumbullCollege)"], "conclusion": "MovedTo(NewHaven, PrivateIvyLeagueResearchUniversity)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3)\n                            ^\n"}
{"timestamp": "2025-06-10T06:13:56.034008", "premises": ["IvyLeagueResearchUniversity(YaleUniversity) & Private(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven)", "ValuedAt(YaleUniversity, 42.3 billion)", "ConstituentColleges(YaleUniversity, 27)", "ResidentialColleges(YaleUniversity)"], "conclusion": "(Private(x) & IvyLeagueResearchUniversity(x) & MovedTo(x, NewHaven))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3 billion)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3 billion)\n                           ^\n"}
{"timestamp": "2025-06-10T06:13:56.034678", "premises": ["Private(IvyLeagueResearchUniversity(YaleUniversity))", "MovedTo(NewHaven, YaleUniversity, 1716)", "ValuedAt(42.3Billion, Endowment(YaleUniversity))", "OrganizedInto(27, ConstituentCollegesAndSchools(YaleUniversity))", "ResidentialColleges(YaleUniversity, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "MovedTo(NewHaven, Private(IvyLeagueResearchUniversity))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedAt(42.3Billion, Endowment(YaleUniversity))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedAt(42.3Billion, Endowment(YaleUniversity))\n           ^\n"}
{"timestamp": "2025-06-10T06:15:16.769698", "premises": ["IvyLeagueResearchUniversity(YALE_UNIVERSITY) & Private(YALE_UNIVERSITY)", "MovedTo(YALE_UNIVERSITY, NewHaven, 1716)", "ValuedAt(YALE_UNIVERSITY, 42.3 Billion)", "ConstituentColleges(YALE_UNIVERSITY, 27)", "ResidentialColleges(YALE_UNIVERSITY, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "LargestUniversityEndowment(YALE_UNIVERSITY)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedAt(YALE_UNIVERSITY, 42.3 Billion)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedAt(YALE_UNIVERSITY, 42.3 Billion)\n                            ^\n"}
{"timestamp": "2025-06-10T06:15:16.770290", "premises": ["YaleUniversity -> (IvyLeagueResearchUniversity & Private)", "MovedToNewHaven(YaleUniversity, 1716)", "LargerEndowment(YaleUniversity, $42.3 billion)", "OrganizedInto27Colleges(YaleUniversity)", "ListOfResidentialColleges(YaleUniversity)"], "conclusion": "LargestUniversityEndowment(YaleUniversity)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nLargerEndowment(YaleUniversity, $42.3 billion)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nLargerEndowment(YaleUniversity, $42.3 billion)\n                                   ^\n"}
{"timestamp": "2025-06-10T06:15:16.771358", "premises": ["Private(YaleUniversity) & IvyLeague(YaleUniversity) & ResearchUniversity(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven, 1716)", "Endowment(YaleUniversity, 42.3 Billion)", "ConstituentColleges(YaleUniversity, 27) & ResidentialColleges(YaleUniversity) & GraduateSchool(YaleUniversity) & ProfessionalSchools(YaleUniversity)", "ResidentialColleges(YaleUniversity, {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege})"], "conclusion": "LargestEndowment(YaleUniversity, EducationalInstitutions)  Please note that the translation of the conclusion into FOL expressions is still pending, and you need to provide the actual conclusion for me to proceed.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Please'.\nLargestEndowment(YaleUniversity, EducationalInstitutions)  Please note that the translation of the conclusion into FOL expressions is still pending, and you need to provide the actual conclusion for me to proceed.\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Please'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Please'.\nLargestEndowment(YaleUniversity, EducationalInstitutions)  Please note that the translation of the conclusion into FOL expressions is still pending, and you need to provide the actual conclusion for me to proceed.\n                                                           ^\n"}
{"timestamp": "2025-06-10T06:15:16.772202", "premises": ["PrivateUniversity(Yale) & IvyLeagueUniversity(Yale) & ResearchUniversity(Yale)", "MovedToNewHaven(Yale, 1716)", "EndowmentValue(Yale, 42.3 billion)", "OrganizedInto(Yale, 27)", "ResidentialColleges(Yale, [BenjaminFranklin, Berkeley, Branford, Davenport, EzraStiles, GraceHopper, JonathanEdwards, Morse, PauliMurray, Pierson, Saybrook, Silliman, TimothyDwight, Trumbull])"], "conclusion": "LargestEndowment(Yale)  The FOL expression for the conclusion cannot be determined as the premises do not provide any information about the endowments of other educational institutions.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nLargestEndowment(Yale)  The FOL expression for the conclusion cannot be determined as the premises do not provide any information about the endowments of other educational institutions.\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nLargestEndowment(Yale)  The FOL expression for the conclusion cannot be determined as the premises do not provide any information about the endowments of other educational institutions.\n                        ^\n"}
{"timestamp": "2025-06-10T06:15:16.777107", "premises": ["IvyLeagueResearchUniversity(YaleUniversity)", "TEXT: Yale university's endowment was valued at $42.3 billion.  FOL: Endowment(YaleUniversity, 42.3Billion)", "TEXT: A list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.  FOL:"], "conclusion": "LargestUniversityEndowment(YaleUniversity)  However, this conclusion does not follow from the given premises. The largest university endowment is not explicitly mentioned in any of the premises.   Therefore, the correct answer is:  The conclusion does not follow from the premises.  Note: The evaluation of the premises and conclusion is based on the information provided. The actual evaluation may vary depending on the specific context and interpretation of the premises and conclusion.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\nLargestUniversityEndowment(YaleUniversity)  However, this conclusion does not follow from the given premises. The largest university endowment is not explicitly mentioned in any of the premises.   Therefore, the correct answer is:  The conclusion does not follow from the premises.  Note: The evaluation of the premises and conclusion is based on the information provided. The actual evaluation may vary depending on the specific context and interpretation of the premises and conclusion.\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\nLargestUniversityEndowment(YaleUniversity)  However, this conclusion does not follow from the given premises. The largest university endowment is not explicitly mentioned in any of the premises.   Therefore, the correct answer is:  The conclusion does not follow from the premises.  Note: The evaluation of the premises and conclusion is based on the information provided. The actual evaluation may vary depending on the specific context and interpretation of the premises and conclusion.\n                                            ^\n"}
{"timestamp": "2025-06-10T06:15:16.777744", "premises": ["IvyLeague(YaleUniversity)", "MovedToNewHaven(YaleUniversity)", "ValuedAt42Point3Billion(YaleUniversity)", "OrganizedInto27Colleges(YaleUniversity)", "ResidentialColleges(BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege)"], "conclusion": "LargestUniversityEndowment(YaleUniversity)  Since the conclusion is not provided, it is not possible to determine whether it follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Since'.\nLargestUniversityEndowment(YaleUniversity)  Since the conclusion is not provided, it is not possible to determine whether it follows from the premises.\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Since'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Since'.\nLargestUniversityEndowment(YaleUniversity)  Since the conclusion is not provided, it is not possible to determine whether it follows from the premises.\n                                            ^\n"}
{"timestamp": "2025-06-10T06:15:16.779551", "premises": ["YaleUniversity -> (Private & IvyLeague & ResearchUniversity)", "Moved(YaleUniversity, NewHaven, 1716)", "HasEndowment(YaleUniversity, 42.3)", "NumberOfColleges(YaleUniversity, 27)", "ResidentialColleges(YaleUniversity, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "LargerEndowment(YaleUniversity, AnyEducationalInstitution)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nHasEndowment(YaleUniversity, 42.3)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nHasEndowment(YaleUniversity, 42.3)\n                               ^\n"}
{"timestamp": "2025-06-10T06:15:16.778862", "premises": ["YALEUNIVERSITY = privateIvyLeagueResearchUniversity", "MovedTo(YALEUNIVERSITY, NewHaven, 1716)", "Endowment(YALEUNIVERSITY) = 42.3 billion", "NumberofCollegesAndSchools(YALEUNIVERSITY) = 27", "ResidentialColleges(YALEUNIVERSITY) = {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege}"], "conclusion": "LargestUniversityEndowment(YALEUNIVERSITY)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nEndowment(YALEUNIVERSITY) = 42.3 billion\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nEndowment(YALEUNIVERSITY) = 42.3 billion\n                              ^\n"}
{"timestamp": "2025-06-10T06:15:16.778333", "premises": ["all x. (YaleUniversity(x) -> PrivateIvyLeagueResearchUniversity(x))", "MovedToNewHaven(YaleUniversity, 1716)", "EndowmentValue(YaleUniversity, 42.3 Billion)", "ResidentialColleges(YaleUniversity) & GraduateSchool(YaleUniversity) & ProfessionalSchools(YaleUniversity)", "(BenjaminFranklinCollege(YaleUniversity) & BerkeleyCollege(YaleUniversity) & BranfordCollege(YaleUniversity) & DavenportCollege(YaleUniversity) & EzraStilesCollege(YaleUniversity) & GraceHopperCollege(YaleUniversity) & JonathanEdwardsCollege(YaleUniversity) & MorseCollege(YaleUniversity) & PauliMurrayCollege(YaleUniversity) & PiersonCollege(YaleUniversity) & SaybrookCollege(YaleUniversity) & SillimanCollege(YaleUniversity) & TimothyDwightCollege(YaleUniversity) & TrumbullCollege(YaleUniversity))"], "conclusion": "LargestUniversityEndowment(YaleUniversity)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 Billion)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 Billion)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:15:16.772612", "premises": ["Member(YALE_UNIVERSITY, PRIVATE_IVY_LEAGUE_RESEARCH_UNIVERSITY) Yale University moved to New Haven in 1716. YEAR = Constant('1716') NEWHAVEN = Constant('New Haven') FOL: MovedTo(YALE_UNIVERSITY, YEAR, NEWHAVEN) Yale university's endowment was valued at $42.3 billion. ENDOWMENT = Constant('42.3 billion') FOL: ValuedEndowment(YALE_UNIVERSITY, ENDOWMENT) Yale University has been organized into 27 constituent colleges and schools: the residential colleges, the Yale Graduate School of Arts and Sciences, and twelve professional schools. NUMBER_OF_CONSTITUENT_COLLEGES = Constant('27') FOL: OrganizedInto(YALE_UNIVERSITY, NUMBER_OF_CONSTITUENT_COLLEGES) A list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College. LIST_OF_RESIDENTIAL_COLLEGES = [     Constant('Benjamin Franklin College'),     Constant('Berkeley College'),     Constant('Branford College'),     Constant('Davenport College'),     Constant('Ezra Stiles College'),     Constant('Grace Hopper College'),     Constant('Jonathan Edwards College'),     Constant('Morse College'),     Constant('Pauli Murray College'),     Constant('Pierson College'),     Constant('Saybrook College'),     Constant('Silliman College'),     Constant('Timothy Dwight College'),     Constant('Trumbull College') ] FOL: ListOfResidentialColleges(YALE_UNIVERSITY, LIST_OF_RESIDENTIAL_COLLEGES) </PREMISES> <CONCLUSION> Yale University has the largest university endowment of any educational institution. </CONCLUSION> <EVALUATE>", "Member(YaleUniversity, PrivateIvyLeagueResearchUniversity)", "MovedTo(YaleUniversity, 1716, NewHaven)", "ValuedEndowment(YaleUniversity, 42.3 billion)", "OrganizedInto(YaleUniversity, 27)", "ListOfResidentialColleges(YaleUniversity, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "ValuedEndowment(YaleUniversity, 42.3 billion)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedEndowment(YaleUniversity, 42.3 billion)\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedEndowment(YaleUniversity, 42.3 billion)\n                                  ^\n"}
{"timestamp": "2025-06-10T06:16:25.279202", "premises": ["University(Yale) -> (Private(Yale) & IvyLeague(Yale) & ResearchUniversity(Yale))", "MovedTo(Yale, NewHaven, 1716)", "Endowment(Yale, 42.3 billion)", "ConstituentColleges(Yale, 27)", "ResidentialColleges(Yale, {BenjaminFranklin, Berkeley, Branford, Davenport, EzraStiles, GraceHopper, JonathanEdwards, Morse, PauliMurray, Pierson, Saybrook, Silliman, TimothyDwight, Trumbull})"], "conclusion": "ResidentialCollege(Pierson, Yale)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(Yale, 42.3 billion)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(Yale, 42.3 billion)\n                  ^\n"}
{"timestamp": "2025-06-10T06:16:25.283104", "premises": ["Private(IvyLeagueResearchUniversity(YaleUniversity))", "MoveTo(YaleUniversity, NewHaven, 1716)", "Endowment(YaleUniversity, $42.3 billion)", "exists x. (YaleConstituentCollegeOrSchool(x) & (ResidentialCollege(x) | YaleGraduateSchoolOfArtsAndSciences(x) | ProfessionalSchool(x)))", "exists x. (ResidentialCollege(x) & (BenjaminFranklinCollege(x) | BerkeleyCollege(x) | BranfordCollege(x) | DavenportCollege(x) | EzraStilesCollege(x) | GraceHopperCollege(x) | JonathanEdwardsCollege(x) | MorseCollege(x) | PauliMurrayCollege(x) | PiersonCollege(x) | SaybrookCollege(x) | SillimanCollege(x) | TimothyDwightCollege(x) | TrumbullCollege(x)))"], "conclusion": "ResidentialCollege(PiersonCollege) & YaleConstituentCollegeOrSchool(PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, $42.3 billion)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, $42.3 billion)\n                             ^\n"}
{"timestamp": "2025-06-10T06:16:25.283707", "premises": ["PrivateIvyLeagueResearchUniversity(YaleUniversity)", "MovedToNewHaven(YaleUniversity, 1716)", "EndowmentValue(YaleUniversity, 42.3 billion)", "ConstituentCollegesAndSchools(YaleUniversity, 27)", "ResidentialColleges(YaleUniversity, {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege})"], "conclusion": "ResidentialCollege(YaleUniversity, PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:16:25.284315", "premises": ["Private(IvyLeagueResearchUniversity(YaleUniversity))", "MovedTo(YaleUniversity, NewHaven, 1716)", "ValuedAt(YaleUniversity, 42.3 billion, Endowment)", "OrganizedInto(YaleUniversity, ResidentialColleges, GraduateSchoolOfArtsAndSciences, ProfessionalSchools)", "ResidentialColleges(YaleUniversity, BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege)", "ResidentialCollege(PiersonCollege, YaleUniversity) </PREMISES> <CONCLUSION> Pierson College is a residential college at Yale. </CONCLUSION> <EVALUATE>"], "conclusion": "ResidentialCollege(PiersonCollege, YaleUniversity)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3 billion, Endowment)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3 billion, Endowment)\n                           ^\n"}
{"timestamp": "2025-06-10T06:16:25.284633", "premises": ["YaleUniversity \u2261 PrivateIvyLeagueResearchUniversity(YaleUniversity)", "MovedToNewHaven(YaleUniversity, 1716)", "EndowmentValue(YaleUniversity, 42.3Billion)", "Constituent(YaleUniversity, ResidentialCollege) | Constituent(YaleUniversity, YaleGraduateSchoolOfArtsAndSciences) | Constituent(YaleUniversity, TwelveProfessionalSchools)", "ResidentialCollege \u2261 {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege}"], "conclusion": "PiersonCollege \u2261 ResidentialCollege(PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nPiersonCollege \u2261 ResidentialCollege(PiersonCollege)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nPiersonCollege \u2261 ResidentialCollege(PiersonCollege)\n               ^\n"}
{"timestamp": "2025-06-10T06:16:25.285214", "premises": ["University(Yale) & Private(Yale) & IvyLeague(Yale) & ResearchUniversity(Yale)", "Moved(Yale, NewHaven, 1716)", "Endowment(Yale, 42.3)", "ConstituentColleges(Yale, 27)", "ResidentialColleges(Yale, {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege})"], "conclusion": "ResidentialCollege(Yale, PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(Yale, 42.3)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(Yale, 42.3)\n                  ^\n"}
{"timestamp": "2025-06-10T06:16:25.279851", "premises": ["Private(IvyLeagueResearchUniversity(YaleUniversity))", "MovedTo(YaleUniversity, NewHaven, 1716)", "ValuedAt(YaleUniversity, 42.3, billion)", "ComposedOf(YaleUniversity, 27, (ResidentialColleges | YaleGraduateSchoolOfArtsAndSciences | TwelveProfessionalSchools))", "ResidentialCollegesAt(YaleUniversity, (BenjaminFranklinCollege | BerkeleyCollege | BranfordCollege | DavenportCollege | EzraStilesCollege | GraceHopperCollege | JonathanEdwardsCollege | MorseCollege | PauliMurrayCollege | PiersonCollege | SaybrookCollege | SillimanCollege | TimothyDwightCollege | TrumbullCollege))"], "conclusion": "ResidentialCollegeAt(YaleUniversity, PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3, billion)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nValuedAt(YaleUniversity, 42.3, billion)\n                           ^\n"}
{"timestamp": "2025-06-10T06:16:25.280500", "premises": ["University(Yale) & Private(Yale) & IvyLeague(Yale) & ResearchUniversity(Yale)", "Moved(Yale, NewHaven, 1716)", "EndowmentValue(Yale, 42.3Billion)", "OrganizedInto(Yale, ResidentialColleges, YaleGraduateSchoolOfArtsAndSciences, TwelveProfessionalSchools)", "ResidentialColleges = {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege}"], "conclusion": "ResidentialColleges(PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(Yale, 42.3Billion)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(Yale, 42.3Billion)\n                       ^\n"}
{"timestamp": "2025-06-10T06:16:25.281140", "premises": ["IvyLeagueResearchUniversity(YaleUniversity)", "MovedTo(YaleUniversity, NewHaven, 1716)", "EndowmentValue(YaleUniversity, 42.3 billion)", "ConstituentCollegesAndSchools(YaleUniversity, 27, ResidentialColleges, YaleGraduateSchoolOfArtsAndSciences, TwelveProfessionalSchools)", "ResidentialColleges(YaleUniversity, [BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege])"], "conclusion": "ResidentialCollege(YaleUniversity, PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowmentValue(YaleUniversity, 42.3 billion)\n                                 ^\n"}
{"timestamp": "2025-06-10T06:16:25.281998", "premises": ["YaleUniversity(X) -> Private(X) & IvyLeague(X) & ResearchUniversity(X)", "MovedToNewHaven(YaleUniversity, 1716)", "Endowment(YaleUniversity, 42.3 billion)", "ConstituentCollegesAndSchools(YaleUniversity, 27)", "ResidentialCollegesAtYale = {BenjaminFranklinCollege, BerkeleyCollege, BranfordCollege, DavenportCollege, EzraStilesCollege, GraceHopperCollege, JonathanEdwardsCollege, MorseCollege, PauliMurrayCollege, PiersonCollege, SaybrookCollege, SillimanCollege, TimothyDwightCollege, TrumbullCollege}"], "conclusion": "ResidentialCollegesAtYale(PiersonCollege)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 billion)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nEndowment(YaleUniversity, 42.3 billion)\n                            ^\n"}
{"timestamp": "2025-06-10T06:17:14.430059", "premises": ["BritishSitcom(Badults) & MemberOfPappys(StarsOf(Badults))", "PilotedDate = 'July 2013', PilotedOn(Badults, BBCThree, PilotedDate)", "WorkingTitle = 'The Secret Dude Society', WorkingTitleFor(Badults, WorkingTitle)", "ScriptEditor = 'Andrew Collins', ScriptEditorFor(Badults, ScriptEditor)"], "conclusion": "ScriptEditorFor(WorkingTitleFor(Badults, WorkingTitle), ScriptEditor)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '2013''.\nPilotedDate = 'July 2013', PilotedOn(Badults, BBCThree, PilotedDate)\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '2013''.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '2013''.\nPilotedDate = 'July 2013', PilotedOn(Badults, BBCThree, PilotedDate)\n                    ^\n"}
{"timestamp": "2025-06-10T06:17:14.431584", "premises": ["BritishSitcom(Badults) & Starring(Badults, Pappys)", "Piloted(Badults, July 2013) & On(Badults, BBCThree)", "WorkingTitle(\"The Secret Dude Society\") & UsedFor(Badults, \"The Secret Dude Society\")", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "ScriptEditor(WorkingTitle(\"The Secret Dude Society\"), AndrewCollins)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nScriptEditor(WorkingTitle(\"The Secret Dude Society\"), AndrewCollins)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nScriptEditor(WorkingTitle(\"The Secret Dude Society\"), AndrewCollins)\n                               ^\n"}
{"timestamp": "2025-06-10T06:17:14.433119", "premises": ["Sitcom(Badults) & British(Badults) & Member(Pappys, Badults)", "PilotDate(Badults, July 2013) & BBCThree(Badults)", "WorkingTitle(Badults, \"The Secret Dude Society\")", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "exists x. (WorkingTitle(x, \"The Secret Dude Society\") & ScriptEditor(x, AndrewCollins))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nexists x. (WorkingTitle(x, \"The Secret Dude Society\") & ScriptEditor(x, AndrewCollins))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nexists x. (WorkingTitle(x, \"The Secret Dude Society\") & ScriptEditor(x, AndrewCollins))\n                                ^\n"}
{"timestamp": "2025-06-10T06:17:14.447801", "premises": ["SitcomSeries(Badults) & MembersOfPappys(stars(Badults))", "Piloted(Badults, july2013, BBCThree)", "WorkingTitle(Badults, TheSecretDudeSociety)", "ScriptEditor(AndrewCollins, Badults)"], "conclusion": "ScriptEditor(AndrewCollins, Series(WorkingTitle(Title, TheSecretDudeSociety)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WorkingTitle/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WorkingTitle/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WorkingTitle/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WorkingTitle/2\n"}
{"timestamp": "2025-06-10T06:17:14.451907", "premises": ["SitcomSeries(Badults) & British(Badults) & MemberOfPappys(*)", "PilotedOn(Badults, BBCThree, July2013)", "WorkingTitle(\"The Secret Dude Society\", Badults)", "ScriptEditor(AndrewCollins, Badults)"], "conclusion": "ScriptEditor(AndrewCollins, WorkingTitle(\"The Secret Dude Society\", *))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nScriptEditor(AndrewCollins, WorkingTitle(\"The Secret Dude Society\", *))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nScriptEditor(AndrewCollins, WorkingTitle(\"The Secret Dude Society\", *))\n                                              ^\n"}
{"timestamp": "2025-06-10T06:17:14.455438", "premises": ["Sitcom(Badults) & British(Badults) & Starring(Badults, Pappys)", "Pilot(Badults, July2013, BBCThree)", "WorkingTitle(Badults, TheSecretDudeSociety)", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "ScriptEditor(Series(WorkingTitle(TheSecretDudeSociety)), AndrewCollins)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WorkingTitle/2, WorkingTitle/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WorkingTitle/2, WorkingTitle/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WorkingTitle/2, WorkingTitle/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WorkingTitle/2, WorkingTitle/1\n"}
{"timestamp": "2025-06-10T06:18:06.306431", "premises": ["BritishSitcom(Badults) & Starring(Badults, MembersOfPappys)", "Piloted(Badults, July 2013) & AiredOn(Badults, BBCThree)", "WorkingTitle(\"The Secret Dude Society\", Badults)", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "-exists x. (MemberOfPappys(x) & Starring(x, ShowThat(PilotedOn(BBCTwo) | PilotedOn(BBCThree))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n-exists x. (MemberOfPappys(x) & Starring(x, ShowThat(PilotedOn(BBCTwo) | PilotedOn(BBCThree))))\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n-exists x. (MemberOfPappys(x) & Starring(x, ShowThat(PilotedOn(BBCTwo) | PilotedOn(BBCThree))))\n                                                                       ^\n"}
{"timestamp": "2025-06-10T06:18:06.307214", "premises": ["BritishSitcom(Badults) & CastOf(Badults, Pappys)", "Pilot(Badults, July 2013, BBCThree)", "WorkingTitle(Badults, TheSecretDudeSociety)", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "-exists x. ((CastOf(x, Pappys) & Pilot(x, _, BBCTwo)) | (CastOf(x, Pappys) & Pilot(x, _, BBCThree)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '2013'.  Expected token ')'.\nPilot(Badults, July 2013, BBCThree)\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '2013'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '2013'.  Expected token ')'.\nPilot(Badults, July 2013, BBCThree)\n                    ^\n"}
{"timestamp": "2025-06-10T06:18:06.324628", "premises": ["Sitcom(Badults) & MembersOfPappys(Stars(Badults))", "Piloted(Badults, July2013, BBCThree)", "WorkingTitle(\"The Secret Dude Society\", Badults)", "ScriptEditor(AndrewCollins, Badults)"], "conclusion": "-exists x. exists y. (MembersOfPappys(x) & Stars(x, y) & Piloted(y, BBCTwo) | Piloted(y, BBCThree))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(\"The Secret Dude Society\", Badults)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(\"The Secret Dude Society\", Badults)\n                  ^\n"}
{"timestamp": "2025-06-10T06:18:06.325619", "premises": ["BritishSitcomSeries(Badults) & MembersOfPappys(stars(Badults))", "Piloted(Badults, July2013, BBCThree)", "WorkingTitle(Badults, \"The Secret Dude Society\")", "ScriptEditor(AndrewCollins, Badults)"], "conclusion": "-exists x. (MembersOfPappys(x) & exists y. (Piloted(y, _, BBCTwo) | Piloted(y, _, BBCThree) & stars(y, x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(Badults, \"The Secret Dude Society\")\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(Badults, \"The Secret Dude Society\")\n                           ^\n"}
{"timestamp": "2025-06-10T06:18:06.326441", "premises": ["BritishSitcom(Badults) & MembersOfPappys(StarringOf(Badults))", "Piloted(Badults, BBCThree, July2013)", "WorkingTitle(\"The Secret Dude Society\", Badults)", "ScriptEditor(AndrewCollins, Badults)"], "conclusion": "-exists x. exists y. (MembersOfPappys(x) & StarringOf(y) & Piloted(y, BBCTwo, _) & Piloted(y, BBCThree, _))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(\"The Secret Dude Society\", Badults)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Secret'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Secret'.  Expected token ')'.\nWorkingTitle(\"The Secret Dude Society\", Badults)\n                  ^\n"}
{"timestamp": "2025-06-10T06:18:06.329707", "premises": ["Sitcom(Badults) & MembersOfPappys(stars(Badults))", "PilotIn(2013, July, Badults, BBCThree)", "WorkingTitle(Badults, The_Secret_Dude_Society)", "ScriptEditor(Andrew_Collins, Badults)"], "conclusion": "-exists x. (MembersOfPappys(x) & exists y. (Sitcom(y) & PilotIn(_, _, y, BBCTwo) | PilotIn(_, _, y, BBCThree) & stars(y, x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: stars/2, stars/1.\n\n\nFatal error:  The following symbols are used with multiple arities: stars/2, stars/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: stars/2, stars/1.\n\n\nFatal error:  The following symbols are used with multiple arities: stars/2, stars/1\n"}
{"timestamp": "2025-06-10T06:18:06.332848", "premises": ["BritishSitcom(Badults) & MembersOfPappys(StarOf(Badults))", "PilotOn(Badults, BBCThree, July2013)", "WorkingTitle(Badults, TheSecretDudeSociety)", "ScriptEditor(Badults, AndrewCollins)"], "conclusion": "-exists x. (MembersOfPappys(x) & StarOf(x, y) & PilotOn(y, BBCTwo, z) | PilotOn(y, BBCThree, z))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: StarOf/2, StarOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: StarOf/2, StarOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: StarOf/2, StarOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: StarOf/2, StarOf/1\n"}
{"timestamp": "2025-06-10T06:18:54.690444", "premises": ["all x. (GrowthCompany(x) -> Volatile(x))", "all x. (Volatile(x) -> -SuitableForRetirementFund(x))", "exists x. exists y. (Stock(x) & GrowthCompany(y) & SameStock(x, y))", "all x. (MatureCompany(x) -> SuitableForRetirementFund(x))", "MatureCompany(KO)"], "conclusion": "Stock(KO)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nexists x. exists y. (Stock(x) & GrowthCompany(y) & SameStock(x, y))\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nexists x. exists y. (Stock(x) & GrowthCompany(y) & SameStock(x, y))\n                                                                  ^\n"}
{"timestamp": "2025-06-10T06:19:46.847952", "premises": ["all x. (GrowthCompany(x) -> (Stock(x) -> Volatile(x)))", "all x. (Volatile(x) -> -SuitableForRetirementFund(x))", "exists x. exists y. (Company(x) & Stock(y, x) & GrowthCompany(x))", "all x. (MatureCompany(x) -> (Stock(x) -> SuitableForRetirementFund(x)))", "MatureCompany(KO) & Stock(KO)"], "conclusion": "(Stock(KO) & MatureCompany(KO)) & (exists x. exists y. (Company(x) & Stock(y, x) & GrowthCompany(x) & Stock(KO, x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stock/2, Stock/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Stock/2, Stock/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stock/2, Stock/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Stock/2, Stock/1\n"}
{"timestamp": "2025-06-10T06:20:41.815377", "premises": ["all x. (GrowthCompanyStock(x) -> Volatile(x))", "all x. (Volatile(x) -> -SuitableForRetirementFund(x))", "exists x. (CompanyStock(x) & GrowthCompanyStock(x))", "all x. (MatureCompanyStock(x) -> SuitableForRetirementFund(x))"], "conclusion": "MatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) | -Volatile(KO))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) | -Volatile(KO))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) | -Volatile(KO))\n                       ^\n"}
{"timestamp": "2025-06-10T06:20:41.816784", "premises": ["all x. (GrowthCompanyStock(x) -> Volatile(x))", "Volatile(x) -> -RetirementFundSuitable(x)", "exists x. (CompanyStock(x) & GrowthCompanyStock(x))", "all x. (MatureCompanyStock(x) -> RetirementFundSuitable(x))"], "conclusion": "MatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) & -Volatile(KO)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) & -Volatile(KO)) </CONCLUSION> <EVALUATE>\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMatureCompanyStock(KO) </PREMISES> <CONCLUSION> If KO is a growth company\u2019s stock or if its price is volatile, then KO is neither a company\u2019s stock nor is its price volatile.  FOL: (GrowthCompanyStock(KO) | Volatile(KO)) -> (-CompanyStock(KO) & -Volatile(KO)) </CONCLUSION> <EVALUATE>\n                       ^\n"}
{"timestamp": "2025-06-10T06:20:41.816901", "premises": ["all x. (GrowthCompany(x) -> VolatileStock(x))", "(VolatileStock(x) -> -RetirementFundSuitable(x))", "exists x. (Company(x) & GrowthCompany(x))", "all x. (MatureCompany(x) -> RetirementFundSuitable(x))", "MatureCompany(KO)"], "conclusion": "(GrowthCompany(KO) | VolatileStock(KO)) -> (-Company(KO) & -VolatileStock(KO))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n(GrowthCompany(KO) | VolatileStock(KO)) -> (-Company(KO) & -VolatileStock(KO))\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n(GrowthCompany(KO) | VolatileStock(KO)) -> (-Company(KO) & -VolatileStock(KO))\n                 ^\n"}
{"timestamp": "2025-06-10T06:21:39.620723", "premises": ["all x. all y. (Istanbul(y) & From(x, y) -> (Number34(x)))", "all x. (\u00acNumber34(x) -> \u00acIstanbul(x))", "From(JoePlate, Istanbul)", "Number35(TomPlate)", "all x. (Number35(x) -> \u00acNumber34(x))"], "conclusion": "Number34(JoePlate)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:21:39.623902", "premises": ["all x. (IstanbulPlate(x) -> 34Starts(x))", "all x. (\u00ac34Starts(x) -> \u00acIstanbulPlate(x))", "IstanbulPlate(Joe)", "35Starts(Tom)", "all x. (35Starts(x) -> -34Starts(x))"], "conclusion": "34Starts(Joe)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:21:39.639539", "premises": ["all x. (Istanbul(x) -> BeginsWith34(x))", "all x. (\u00acBeginsWith34(x) -> \u00acIstanbul(x))", "Istanbul(JoePlate)", "BeginsWith35(TomPlate)", "all x. (BeginsWith35(x) -> \u00acBeginsWith34(x))"], "conclusion": "BeginsWith34(JoePlate)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 604: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:22:37.693747", "premises": ["all x. (FromIstanbul(x) <-> BeginsWith34(x))", "all x. (-FromIstanbul(x) <-> -BeginsWith34(x))", "FromIstanbul(Joe)", "BeginsWith35(Tom)", "BeginsWith35(x) -> -BeginsWith34(x)"], "conclusion": "FromIstanbul(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'BeginsWith34'.  Expected token ')'.\n(> BeginsWith34(x)) -> all x. (FromIstanbul(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'BeginsWith34'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'BeginsWith34'.  Expected token ')'.\n(> BeginsWith34(x)) -> all x. (FromIstanbul(x))\n   ^\n"}
{"timestamp": "2025-06-10T06:24:16.994268", "premises": ["all x. (StudentJobOnCampus(x) -> NeedsMoneyForTuition(x))", "all x. (FrequentTakeoutOrderer(x) -> StudentJobOnCampus(x))", "(FrequentTakeoutOrderer(Mary) & -EnjoyDiningHallMeals(Mary)) | (-FrequentTakeoutOrderer(Mary) & EnjoyDiningHallMeals(Mary))", "all x. (EnjoyDiningHallMeals(x) -> -PickyEater(x))", "all x. (EnjoyDiningHallMeals(x) -> SpendTimeInDiningHalls(x))", "(StudentJobOnCampus(Mary) & NeedsMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedsMoneyForTuition(Mary))"], "conclusion": "NeedsMoneyForTuition(Mary) </PREMISES> <CONCLUSION> FOL: (NeedsMoneyForTuition(Mary) & -FrequentTakeoutOrderer(Mary)) | (NeedsMoneyForTuition(Mary) & EnjoyDiningHallMeals(Mary))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNeedsMoneyForTuition(Mary) </PREMISES> <CONCLUSION> FOL: (NeedsMoneyForTuition(Mary) & -FrequentTakeoutOrderer(Mary)) | (NeedsMoneyForTuition(Mary) & EnjoyDiningHallMeals(Mary))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNeedsMoneyForTuition(Mary) </PREMISES> <CONCLUSION> FOL: (NeedsMoneyForTuition(Mary) & -FrequentTakeoutOrderer(Mary)) | (NeedsMoneyForTuition(Mary) & EnjoyDiningHallMeals(Mary))\n                           ^\n"}
{"timestamp": "2025-06-10T06:24:17.018802", "premises": ["(WorkInStudentJobsOnCampus(x) -> NeedsToEarnMoney(x))", "(OrderTakeoutFrequentlyInCollege(x) -> WorkInStudentJobsOnCampus(x))", "(OrderTakeoutFrequentlyInCollege(x) | EnjoyDiningHallMealsAndRecipes(x))", "(EnjoyDiningHallMealsAndRecipes(x) -> NotPickyEater(x))", "(EnjoyDiningHallMealsAndRecipes(x) -> SpendLotOfTimeEatingAndCatchingUpWithFriends(x))", "(WorkInStudentJobsOnCampus(Mary) & NeedsToEarnMoney(Mary) -> NotPickyEater(Mary) & -NeedsToEarnMoney(Mary))", "NeedsToEarnMoney(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>", "WorkInStudentJobsOnCampus(x) -> NeedsToEarnMoney(x)", "OrderTakeoutFrequentlyInCollege(x) -> WorkInStudentJobsOnCampus(x)", "(OrderTakeoutFrequentlyInCollege(x) | EnjoyDiningHallMealsAndRecipes(x))", "EnjoyDiningHallMealsAndRecipes(x) -> NotPickyEater(x)", "EnjoyDiningHallMealsAndRecipes(Mary) -> NotPickyEater(Mary)", "EnjoyDiningHallMealsAndRecipes(x) -> SpendLotOfTimeEatingAndCatchingUpWithFriends(x)", "EnjoyDiningHallMealsAndRecipes(Mary) -> SpendLotOfTimeEatingAndCatchingUpWithFriends(Mary)", "WorkInStudentJobsOnCampus(Mary) & NeedsToEarnMoney(Mary) -> NotPickyEater(Mary) & -NeedsToEarnMoney(Mary)", "(EnjoyDiningHallMealsAndRecipes(Mary) & SpendLotOfTimeEatingAndCatchingUpWithFriends(Mary)) -> NotPickyEater(Mary) & -NeedsToEarnMoney(Mary)", "EnjoyDiningHallMealsAndRecipes(Mary) & SpendLotOfTimeEatingAndCatchingUpWithFriends(Mary)", "NotPickyEater(Mary) & -NeedsToEarnMoney(Mary)", "WorkInStudentJobsOnCampus(Mary) & NeedsToEarnMoney(Mary)"], "conclusion": "NeedsToEarnMoney(Mary)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNeedsToEarnMoney(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNeedsToEarnMoney(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                       ^\n"}
{"timestamp": "2025-06-10T06:24:17.024795", "premises": ["all x. (WorkOnCampus(x) -> NeedEarnMoney(x))", "all x. (OrderTakeoutFrequently(x) -> WorkOnCampus(x))", "(OrderTakeoutFrequently(x) | EnjoyDiningHall(x))", "all x. (EnjoyDiningHall(x) -> NotPicky(x))", "all x. (EnjoyDiningHall(x) -> SpendTimeInDiningHalls(x))"], "conclusion": "Mary(WorkOnCampus(Mary) & NeedEarnMoney(Mary)) \u2192 (NotPicky(Mary) & -NeedEarnMoney(Mary))) </PREMISES> <CONCLUSION> Mary needs to earn money to help pay for her college tuition.  FOL: NeedEarnMoney(Mary) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nMary(WorkOnCampus(Mary) & NeedEarnMoney(Mary)) \u2192 (NotPicky(Mary) & -NeedEarnMoney(Mary))) </PREMISES> <CONCLUSION> Mary needs to earn money to help pay for her college tuition.  FOL: NeedEarnMoney(Mary) </CONCLUSION> <EVALUATE>\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nMary(WorkOnCampus(Mary) & NeedEarnMoney(Mary)) \u2192 (NotPicky(Mary) & -NeedEarnMoney(Mary))) </PREMISES> <CONCLUSION> Mary needs to earn money to help pay for her college tuition.  FOL: NeedEarnMoney(Mary) </CONCLUSION> <EVALUATE>\n                        ^\n"}
{"timestamp": "2025-06-10T06:24:17.031431", "premises": ["all x. (StudentJob(x) -> NeedToEarnMoney(x))", "all x. (TakeoutOrdering(x) -> StudentJob(x))", "(TakeoutOrdering(Any) | DiningHallMeals(Any))", "all x. (DiningHallMeals(x) -> -Picky(x))", "all x. (DiningHallMeals(x) -> SpendTimeEating(x))", "Mary -> ((StudentJob(Mary) & NeedToEarnMoney(Mary)) -> (-Picky(Mary) & -NeedToEarnMoney(Mary)))"], "conclusion": "-Picky(Mary) & -NeedToEarnMoney(Mary)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mary/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mary/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mary/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mary/0\n"}
{"timestamp": "2025-06-10T06:24:17.035947", "premises": ["all x. (StudentJobOnCampus(x) -> NeedToEarnMoney(x))", "all x. (OrderTakeoutFrequently(x) -> StudentJobOnCampus(x))", "exists x. (OrderTakeoutFrequently(x) | DiningHallFan(x))", "all x. (DiningHallFan(x) -> NotPickyEater(x))", "all x. (DiningHallFan(x) -> SpendLotTimeEating(x))", "Mary & StudentJobOnCampus(Mary) & NeedToEarnMoney(Mary) -> -PickyEater(Mary) & -NeedToEarnMoney(Mary)"], "conclusion": "NeedToEarnMoney(Mary)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mary/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mary/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mary/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mary/0\n"}
{"timestamp": "2025-06-10T06:26:07.692658", "premises": ["all x. (WorkInStudentJobOnCampus(x) -> NeedToEarnMoneyToHelpPayForCollegeTuition(x))", "all x. (OrderTakeoutFrequentlyInCollege(x) -> WorkInStudentJobOnCampus(x))", "((OrderTakeoutFrequentlyInCollege(x) & -EnjoyDiningHallMealsAndRecipes(x)) | (-OrderTakeoutFrequentlyInCollege(x) & EnjoyDiningHallMealsAndRecipes(x)))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> -PickyEater(x))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> SpendLotOfTimeEatingAndCatchingUpInCampusDiningHalls(x))", "(WorkInStudentJobOnCampus(Mary) & NeedToEarnMoneyToHelpPayForCollegeTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyToHelpPayForCollegeTuition(Mary))"], "conclusion": "-PickyEater(Mary) & SpendLotOfTimeEatingAndCatchingUpInCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendLotOfTimeEatingAndCatchingUpInCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendLotOfTimeEatingAndCatchingUpInCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                                                                               ^\n"}
{"timestamp": "2025-06-10T06:26:07.701603", "premises": ["all x. (WorkInStudentJob(x) -> NeedToEarnMoneyForTuition(x))", "all x. (OrderTakeoutFrequently(x) -> WorkInStudentJob(x))", "all x. ((OrderTakeoutFrequently(x) & -EnjoyDiningHall(x)) | (-OrderTakeoutFrequently(x) & EnjoyDiningHall(x)))", "all x. (EnjoyDiningHall(x) -> -PickyEater(x))", "all x. (EnjoyDiningHall(x) -> SpendTimeEating(x))", "(WorkInStudentJob(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))", "-PickyEater(Mary) & SpendTimeEating(Mary) </PREMISES> <CONCLUSION> <EVALUATE>  ---  <PREMISES> If people work in student jobs on campus, then they need to earn money to help pay for their college tuition.  FOL: all x. (WorkInStudentJob(x) -> NeedToEarnMoneyForTuition(x))", "all x. (OrderTakeoutFrequently(x) -> WorkInStudentJob(x))", "all x. ((OrderTakeoutFrequently(x) & -EnjoyDiningHall(x)) | (-OrderTakeoutFrequently(x) & EnjoyDiningHall(x)))", "all x. (EnjoyDiningHall(x) -> -PickyEater(x))", "all x. (EnjoyDiningHall(x) -> SpendTimeEating(x))", "(WorkInStudentJob(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))"], "conclusion": "-PickyEater(Mary) & SpendTimeEating(Mary) </PREMISES> <CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendTimeEating(Mary) </PREMISES> <CONCLUSION> <EVALUATE>\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendTimeEating(Mary) </PREMISES> <CONCLUSION> <EVALUATE>\n                                          ^\n"}
{"timestamp": "2025-06-10T06:26:07.692010", "premises": ["all x. (WorkInStudentJobsOnCampus(x) -> NeedToEarnMoneyForTuition(x))", "all x. (OrderTakeoutFrequentlyInCollege(x) -> WorkInStudentJobsOnCampus(x))", "((OrderTakeoutFrequentlyInCollege(Person) & -EnjoyDiningHallMealsAndRecipes(Person)) | (-OrderTakeoutFrequentlyInCollege(Person) & EnjoyDiningHallMealsAndRecipes(Person)))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> -PickyEater(x))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> SpendALotOfTimeEatingAndCatchingUpWithFriendsInDiningHalls(x))", "Mary(WorkInStudentJobsOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))"], "conclusion": "(WorkInStudentJobsOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary)) & EnjoyDiningHallMealsAndRecipes(Mary) -> SpendALotOfTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nMary(WorkInStudentJobsOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nMary(WorkInStudentJobsOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))\n                                     ^\n"}
{"timestamp": "2025-06-10T06:26:07.699719", "premises": ["all x. (WorkInStudentJobsOnCampus(x) -> NeedMoneyToHelpPayForCollegeTuition(x))", "all x. (OrderTakeoutFrequentlyInCollege(x) -> WorkInStudentJobsOnCampus(x))", "all x. (OrderTakeoutFrequentlyInCollege(x) | EnjoyDiningHallMealsAndRecipes(x))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> NotPickyEater(x))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(x))", "(WorkInStudentJobsOnCampus(Mary) & NeedMoneyToHelpPayForCollegeTuition(Mary)) -> (NotPickyEater(Mary) & NotNeedMoneyToHelpPayForCollegeTuition(Mary))"], "conclusion": "NotPickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNotPickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls. </CONCLUSION> <EVALUATE>\n                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNotPickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls. </CONCLUSION> <EVALUATE>\n                                                                                                ^\n"}
{"timestamp": "2025-06-10T06:26:07.722388", "premises": ["all x. (StudentJobOnCampus(x) -> NeedsToEarnMoneyToHelpPayForCollegeTuition(x))", "all x. (FrequentlyOrdersTakeoutInCollege(x) -> StudentJobOnCampus(x))", "(FrequentlyOrdersTakeoutInCollege(x) | EnjoysDiningHallMealsAndRecipes(x))", "all x. (EnjoysDiningHallMealsAndRecipes(x) -> -PickyEater(x))", "all x. (EnjoysDiningHallMealsAndRecipes(x) -> SpendsALotOfTimeEatingAndCatchingUpWithFriendsInCampusDiningHalls(x))"], "conclusion": "(StudentJobOnCampus(Mary) & NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) -> (-PickyEater(Mary) & -NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.  FOL: EnjoysDiningHallMealsAndRecipes(Mary) -> (-PickyEater(Mary) & SpendsALotOfTimeEatingAndCatchingUpWithFriendsInCampusDiningHalls(Mary))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(StudentJobOnCampus(Mary) & NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) -> (-PickyEater(Mary) & -NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.  FOL: EnjoysDiningHallMealsAndRecipes(Mary) -> (-PickyEater(Mary) & SpendsALotOfTimeEatingAndCatchingUpWithFriendsInCampusDiningHalls(Mary))\n                                                                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(StudentJobOnCampus(Mary) & NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) -> (-PickyEater(Mary) & -NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) </PREMISES> <CONCLUSION> Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.  FOL: EnjoysDiningHallMealsAndRecipes(Mary) -> (-PickyEater(Mary) & SpendsALotOfTimeEatingAndCatchingUpWithFriendsInCampusDiningHalls(Mary))\n                                                                                                                                                         ^\n"}
{"timestamp": "2025-06-10T06:26:07.699841", "premises": ["all x. (WorkInStudentJobs(x) -> NeedToEarnMoney(x))", "all x. (OrderTakeoutFrequently(x) -> WorkInStudentJobs(x))", "all x. ((OrderTakeoutFrequently(x) & -EnjoyDiningHall(x)) | (-OrderTakeoutFrequently(x) & EnjoyDiningHall(x)))", "all x. (EnjoyDiningHall(x) -> -PickyEater(x))", "all x. (EnjoyDiningHall(x) -> SpendTimeInDiningHalls(x))", "(WorkInStudentJobs(Mary) & NeedToEarnMoney(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoney(Mary))"], "conclusion": "(-PickyEater(Mary) & SpendTimeInDiningHalls(Mary)) | (PickyEater(Mary) & -SpendTimeInDiningHalls(Mary))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. (OrderTakeoutFrequently(x) -> WorkInStudentJobs(x))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. (OrderTakeoutFrequently(x) -> WorkInStudentJobs(x))\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:26:07.724753", "premises": ["all x. (StudentJobOnCampus(x) -> NeedToEarnMoneyForTuition(x))", "all x. (OrderTakeoutFrequentlyInCollege(x) -> StudentJobOnCampus(x))", "((OrderTakeoutFrequentlyInCollege(James) & -EnjoyDiningHall(James)) | (-OrderTakeoutFrequentlyInCollege(James) & EnjoyDiningHall(James)))", "all x. (EnjoyDiningHall(x) -> -PickyEater(x))", "all x. (EnjoyDiningHall(x) -> SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(x))", "(StudentJobOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary))"], "conclusion": "-PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary) </PREMISES> <CONCLUSION> FOL: (StudentJobOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary)) FOL: -PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary)  Since Mary works in student jobs on campus and needs to earn money for tuition, she meets the antecedent condition in the conditional premise, so she must meet the consequent condition, which is that she is neither picky nor needs to earn money for tuition.  This means that she is not picky.  Also, if Mary enjoys dining hall meals and recipes (which is possible since she works in student jobs on campus and needs to earn money for tuition, implying she orders takeout frequently), then she spends a lot of time eating and catching up with friends in the dining halls.  Therefore, Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary) </PREMISES> <CONCLUSION> FOL: (StudentJobOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary)) FOL: -PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary)  Since Mary works in student jobs on campus and needs to earn money for tuition, she meets the antecedent condition in the conditional premise, so she must meet the consequent condition, which is that she is neither picky nor needs to earn money for tuition.  This means that she is not picky.  Also, if Mary enjoys dining hall meals and recipes (which is possible since she works in student jobs on campus and needs to earn money for tuition, implying she orders takeout frequently), then she spends a lot of time eating and catching up with friends in the dining halls.  Therefore, Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.\n                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary) </PREMISES> <CONCLUSION> FOL: (StudentJobOnCampus(Mary) & NeedToEarnMoneyForTuition(Mary)) -> (-PickyEater(Mary) & -NeedToEarnMoneyForTuition(Mary)) FOL: -PickyEater(Mary) & SpendTimeEatingAndCatchingUpWithFriendsInDiningHalls(Mary)  Since Mary works in student jobs on campus and needs to earn money for tuition, she meets the antecedent condition in the conditional premise, so she must meet the consequent condition, which is that she is neither picky nor needs to earn money for tuition.  This means that she is not picky.  Also, if Mary enjoys dining hall meals and recipes (which is possible since she works in student jobs on campus and needs to earn money for tuition, implying she orders takeout frequently), then she spends a lot of time eating and catching up with friends in the dining halls.  Therefore, Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.\n                                                                               ^\n"}
{"timestamp": "2025-06-10T06:27:49.215173", "premises": ["all x. (WorksInStudentJobOnCampus(x) -> NeedsToEarnMoneyToHelpPayForCollegeTuition(x))", "all x. (OrdersTakeoutFrequentlyInCollege(x) -> WorksInStudentJobOnCampus(x))", "((OrdersTakeoutFrequentlyInCollege(Person) & -EnjoyDiningHallMealsAndRecipes(Person)) | (-OrdersTakeoutFrequentlyInCollege(Person) & EnjoyDiningHallMealsAndRecipes(Person)))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> -PickyEater(x))", "all x. (EnjoyDiningHallMealsAndRecipes(x) -> SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(x))", "(WorksInStudentJobOnCampus(Mary) & NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary)) -> (-PickyEater(Mary) & -NeedsToEarnMoneyToHelpPayForCollegeTuition(Mary))"], "conclusion": "(-PickyEater(Mary) | (PickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary))) </PREMISES> <CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(-PickyEater(Mary) | (PickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary))) </PREMISES> <CONCLUSION>\n                                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(-PickyEater(Mary) | (PickyEater(Mary) & SpendALotOfTimeEatingAndCatchingUpWithFriendsInTheCampusDiningHalls(Mary))) </PREMISES> <CONCLUSION>\n                                                                                                                     ^\n"}
{"timestamp": "2025-06-10T06:28:51.893157", "premises": ["all x. (Bakery(x) -> -Spicy(x))", "all x. (Cupcake(x) -> Bakery(x))", "all x. (Hotpot(x) -> Spicy(x))", "all x. (ProductOfBakedByMelissa(x) -> Cupcake(x))", "(Spicy(DriedThaiChilies) | Bakery(DriedThaiChilies)) -> (Hotpot(DriedThaiChilies) | Spicy(DriedThaiChilies))"], "conclusion": "ProductOfBakedByMelissa(DriedThaiChilies)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(Spicy(DriedThaiChilies) | Bakery(DriedThaiChilies)) -> (Hotpot(DriedThaiChilies) | Spicy(DriedThaiChilies))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(Spicy(DriedThaiChilies) | Bakery(DriedThaiChilies)) -> (Hotpot(DriedThaiChilies) | Spicy(DriedThaiChilies))\n                                 ^\n"}
{"timestamp": "2025-06-10T06:28:51.918750", "premises": ["all x. (Bakery(x) -> -Spicy(x))", "all x. (Cupcake(x) -> Bakery(x))", "all x. (Hotpot(x) -> Spicy(x))", "all x. (ProductOfBakedByMelissa(x) -> Cupcake(x))", "all x. (DriedThaiChilies(x) & (Spicy(x) | Bakery(x)) -> (Hotpot(x) | Spicy(x)))"], "conclusion": "ProductOfBakedByMelissa(DriedThaiChilies)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DriedThaiChilies/1, DriedThaiChilies/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DriedThaiChilies/1, DriedThaiChilies/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DriedThaiChilies/1, DriedThaiChilies/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DriedThaiChilies/1, DriedThaiChilies/0\n"}
{"timestamp": "2025-06-10T06:29:49.466235", "premises": ["all x. (Bakery(x) -> -Spicy(x))", "all x. (Cupcake(x) -> Bakery(x))", "all x. (Hotpot(x) -> Spicy(x))", "all x. (ProductOfBakedByMelissa(x) -> Cupcake(x))", "all x. ((Spicy(x) | Bakery(x)) -> (Hotpot(x) | Spicy(x)))"], "conclusion": "-ProductOfBakedByMelissa(DriedThaiChilies)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. ((Spicy(x) | Bakery(x)) -> (Hotpot(x) | Spicy(x)))\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. ((Spicy(x) | Bakery(x)) -> (Hotpot(x) | Spicy(x)))\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:31:51.475076", "premises": ["all x. -Spicy(Bakery(x))", "all x. (Cupcake(x) -> Bakery(x))", "all x. (Hotpot(x) -> Spicy(x))", "all x. (ProductOfBakedByMelissa(x) -> Cupcake(x))", "(Spicy(DriedThaiChilies) | Bakery(DriedThaiChilies)) -> (Hotpot(DriedThaiChilies) | Spicy(DriedThaiChilies))"], "conclusion": "-ProductOfBakedByMelissa(DriedThaiChilies) & -Bakery(DriedThaiChilies)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Bakery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Bakery/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Bakery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Bakery/1\n"}
{"timestamp": "2025-06-10T06:33:59.045200", "premises": ["all x. (ListedInYelpsRecommendations(x) -> -ReceiveManyNegativeReviews(x))", "all x. (RatingGreaterThan9(x) -> ListedInYelpsRecommendations(x))", "exists x. (-ProvideTakeOutService(x) & ReceiveManyNegativeReviews(x))", "all x. (PopularAmongLocalResidents(x) -> RatingGreaterThan9(x))", "ListedInYelpsRecommendations(\u201cSubway\u201d) | PopularAmongLocalResidents(\u201cSubway\u201d)"], "conclusion": "all x. (ProvideTakeOutService(x) & ReceiveManyNegativeReviews(x) -> (RatingGreaterThan9(x) & -ProvideTakeOutService(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (ProvideTakeOutService(x) & ReceiveManyNegativeReviews(x) -> (RatingGreaterThan9(x) & -ProvideTakeOutService(x)))\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (ProvideTakeOutService(x) & ReceiveManyNegativeReviews(x) -> (RatingGreaterThan9(x) & -ProvideTakeOutService(x)))\n                                                                 ^\n"}
{"timestamp": "2025-06-10T06:35:57.196142", "premises": ["all x. (ListedInYelpsRecommendations(x) -> -ReceiveManyNegativeReviews(x))", "all x. (RatingGreaterThan9(x) -> ListedInYelpsRecommendations(x))", "exists x. (\u00acProvideTakeOutService(x) & ReceiveManyNegativeReviews(x))", "all x. (PopularAmongLocalResidents(x) -> RatingGreaterThan9(x))", "(RatingGreaterThan9(Subway) | PopularAmongLocalResidents(Subway))"], "conclusion": "-ProvideTakeOutService(Subway)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 607: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 607: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:35:57.203429", "premises": ["(ListedInYelpsRecommendations(x) -> -ReceiveManyNegativeReviews(x))", "all x. (Rating(x, GreaterThan 9) -> ListedInYelpsRecommendations(x))", "exists x. (-ProvideTakeOutService(x) & ReceiveManyNegativeReviews(x))", "all x. (PopularAmongLocalResidents(x) -> Rating(x, GreaterThan 9))", "(Rating(Subway, GreaterThan 9) | PopularAmongLocalResidents(Subway))"], "conclusion": "-ProvideTakeOutService(Subway)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '9'.  Expected token ')'.\nall x. (Rating(x, GreaterThan 9) -> ListedInYelpsRecommendations(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '9'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '9'.  Expected token ')'.\nall x. (Rating(x, GreaterThan 9) -> ListedInYelpsRecommendations(x))\n                              ^\n"}
{"timestamp": "2025-06-10T06:35:57.199009", "premises": ["all x. (YelpRecommendation(x) -> -ManyNegativeReviews(x))", "all x. (Rating(x, >9) -> YelpRecommendation(x))", "exists x. (NotProvideTakeOutService(x) & ManyNegativeReviews(x))", "all x. (PopularAmongLocalResidents(x) -> Rating(x, >9))", "SubwayHasRatingGreaterThan9() | PopularAmongLocalResidents(Subway)"], "conclusion": "-ProvideTakeOutService(Subway)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (NotProvideTakeOutService(x) & ManyNegativeReviews(x))\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (NotProvideTakeOutService(x) & ManyNegativeReviews(x))\n                                       ^\n"}
{"timestamp": "2025-06-10T06:37:29.082534", "premises": ["all x. all y. (GoodGuy(x) & SuperheroMovie(y) -> Win(x, y))", "SuperheroMovie(TheSurprisingAdventuresOfSirDigbyChickenCaesar)", "all x. (GoodGuy(x) -> Fight(x, BadGuy(x))) & all x. (BadGuy(x) -> Fight(x, GoodGuy(x)))", "Fight(Digby, NemesisOfDigby)", "all x. (SuperheroMovie(x) & NamedAfter(x, Character) -> GoodGuy(Character))", "NamedAfter(TheSurprisingAdventuresOfSirDigbyChickenCaesar, Digby)", "all x. all y. (Win(x, y) -> Lose(y, x))", "all x. all y. (SuperheroMovie(x) & NamedAfter(x, y) -> Appears(y, x))"], "conclusion": "Lose(NemesisOfDigby, Digby)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (SuperheroMovie(x) & NamedAfter(x, Character) -> GoodGuy(Character))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (SuperheroMovie(x) & NamedAfter(x, Character) -> GoodGuy(Character))\n                                      ^\n"}
{"timestamp": "2025-06-10T06:37:29.084460", "premises": ["all x. (SuperheroMovie(x) -> GoodGuyWin(x))", "SuperheroMovie(SirDigbyChickenCaesar)", "all x. all y. (GoodGuy(x) & BadGuy(y) -> Fight(x, y)) FOL: all x. all y. (BadGuy(x) & GoodGuy(y) -> Fight(x, y))", "Fight(SirDigby, Nemesis(SirDigby))", "all x. (SuperheroMovie(x) & NamedAfter(x, y) -> GoodGuy(y))", "NamedAfter(SirDigbyChickenCaesar, SirDigby)", "all x. all y. (Fight(x, y) & Win(x) -> Lose(y))", "all x. (SuperheroMovie(x) & NamedAfter(x, y) -> AppearsIn(x, y))"], "conclusion": "Lose(Nemesis(SirDigby))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nall x. all y. (GoodGuy(x) & BadGuy(y) -> Fight(x, y)) FOL: all x. all y. (BadGuy(x) & GoodGuy(y) -> Fight(x, y))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nall x. all y. (GoodGuy(x) & BadGuy(y) -> Fight(x, y)) FOL: all x. all y. (BadGuy(x) & GoodGuy(y) -> Fight(x, y))\n                                                      ^\n"}
{"timestamp": "2025-06-10T06:37:29.104366", "premises": ["all x. all y. (SuperheroMovie(x) & GoodGuy(x) & BadGuy(y) -> Lose(y))", "SuperheroMovie(SurprisingAdventuresOfSirDigbyChickenCaesar)", "all x. all y. (GoodGuy(x) & BadGuy(y) -> Fight(x, y)) & all x. all y. (BadGuy(x) & GoodGuy(y) -> Fight(x, y))", "Fight(SirDigby, Nemeses(SirDigby))", "all x. (SuperheroMovie(x) & NamedAfter(x) -> GoodGuy(x))", "NamedAfter(SurprisingAdventuresOfSirDigbyChickenCaesar, SirDigby)", "all x. all y. (Win(x, y) -> Lose(y))", "all x. (SuperheroMovie(x) & NamedAfter(x) -> AppearsIn(x))"], "conclusion": "Lose(Nemeses(SirDigby))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1\n"}
{"timestamp": "2025-06-10T06:37:29.109951", "premises": ["all x. (SuperheroMovie(x) -> GoodGuy(x) -> Win(x))", "SuperheroMovie(SurprisingAdventures)", "GoodGuy(x) & BadGuy(y) -> Fight(x, y) & Fight(y, x)", "Fight(SirDigby, Nemesis)", "all x. (SuperheroMovie(x) & NamedAfter(x) -> GoodGuy(Character))", "NamedAfter(SurprisingAdventures, SirDigby)", "all x. all y. (Fight(x, y) & Win(x) -> Lose(y))", "all x. (SuperheroMovie(x) & NamedAfter(x) -> Character(x))"], "conclusion": "Lose(Nemesis)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1, Character/1, Character/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1, Character/1, Character/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1, Character/1, Character/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NamedAfter/2, NamedAfter/1, Character/1, Character/0\n"}
{"timestamp": "2025-06-10T06:37:29.109313", "premises": ["all x. (SuperheroMovie(x) -> GoodGuysWin(x))", "SuperheroMovie(SurprisingAdventures)", "all x. (GoodGuy(x) -> Fight(x, BadGuy(x))) & all x. (BadGuy(x) -> Fight(x, GoodGuy(x)))", "Fight(SirDigby, Nemesis(SirDigby))", "all x. (SuperheroMovie(x) & NamedAfter(x, Character(y)) -> GoodGuy(y))", "NamedAfter(SurprisingAdventures, SirDigby)", "all x. (Win(x, y) -> Lose(y, x))", "all x. (SuperheroMovie(x) & NamedAfter(x, Character(y)) -> Appear(x, y))"], "conclusion": "Lose(Nemesis(SirDigby), SirDigby)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BadGuy/1, GoodGuy/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BadGuy/1, GoodGuy/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BadGuy/1, GoodGuy/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BadGuy/1, GoodGuy/1\n"}
{"timestamp": "2025-06-10T06:38:25.573672", "premises": ["all x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. all y. (Person(x) & Reads(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> Knowledge(x))", "all x. all y. (Person(x) & Reads(x, y) -> GainKnowledge(x))", "all x. (GainKnowledge(x) -> Smarter(x))", "Reads(Harry, Walden)"], "conclusion": "Knowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. all y. (Person(x) & Reads(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. all y. (Person(x) & Reads(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^\n"}
{"timestamp": "2025-06-10T06:38:25.576599", "premises": ["all x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> Knowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (Knowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> Knowledge(x))", "all x. (Reads(x, y) -> Knowledge(x))", "all x. (Knowledge(x) -> Smarter(x))", "Reads(Harry, Walden)"], "conclusion": "Knowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> Knowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (Knowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> Knowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (Knowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^\n"}
{"timestamp": "2025-06-10T06:38:25.580248", "premises": ["all x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> BecomesSmarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>", "(Book(Walden) -> ContainsKnowledge(Walden)) & Reads(Harry, Walden)"], "conclusion": "ContainsKnowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> BecomesSmarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> BecomesSmarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>\n                                         ^\n"}
{"timestamp": "2025-06-10T06:38:25.583252", "premises": ["all x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Read(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Read(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> Knowledge(x))", "all x. (Person(x) & Read(x, y) -> GainKnowledge(x))", "all x. (GainKnowledge(x) -> Smarter(x))", "Read(Harry, Walden)"], "conclusion": "Knowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Read(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Read(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Person(x) & Read(x, y) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Read(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^\n"}
{"timestamp": "2025-06-10T06:38:25.586274", "premises": ["all x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> ContainsKnowledge(x))", "all x. (Reads(x, y) -> GainsKnowledge(x))", "all x. (GainsKnowledge(x) -> Smarter(x))"], "conclusion": "ContainsKnowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: ContainsKnowledge(Walden) </CONCLUSION> <EVALUATE>\n                                         ^\n"}
{"timestamp": "2025-06-10T06:38:25.589225", "premises": ["all x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> Knowledge(x))", "all x. (Reads(x, y) -> GainsKnowledge(x))", "all x. (GainsKnowledge(x) -> Smarter(x))"], "conclusion": "Knowledge(Walden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Walden contains knowledge.  FOL: Knowledge(Walden) </CONCLUSION> <EVALUATE>\n                                 ^\n"}
{"timestamp": "2025-06-10T06:39:18.173619", "premises": ["all x. (Book(x) -> Knowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Read(x) -> GainKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Read(Harry, Walden) </PREMISES> <CONCLUSION> Harry is smarter than before.  FOL: Smarter(Harry) </CONCLUSION> <EVALUATE>"], "conclusion": "Smarter(Harry) FOL: Read(Harry, Walden) FOL: GainKnowledge(Harry) FOL: Smarter(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nSmarter(Harry) FOL: Read(Harry, Walden) FOL: GainKnowledge(Harry) FOL: Smarter(Harry)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nSmarter(Harry) FOL: Read(Harry, Walden) FOL: GainKnowledge(Harry) FOL: Smarter(Harry)\n               ^\n"}
{"timestamp": "2025-06-10T06:39:18.173087", "premises": ["all x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Harry is smarter than before.  FOL: Smarter(Harry) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> ContainsKnowledge(x))", "all x. (Reads(x, y) -> GainsKnowledge(x))", "all x. (GainsKnowledge(x) -> Smarter(x))", "Reads(Harry, Walden)"], "conclusion": "Smarter(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Harry is smarter than before.  FOL: Smarter(Harry) </CONCLUSION> <EVALUATE>\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> Harry is smarter than before.  FOL: Smarter(Harry) </CONCLUSION> <EVALUATE>\n                                         ^\n"}
{"timestamp": "2025-06-10T06:40:03.033340", "premises": ["all x. (Book(x) -> HasKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, Book(y)) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>", "all x. (Book(x) -> HasKnowledge(x))", "all x. (Reads(x, Book(y)) -> GainsKnowledge(x))", "all x. (GainsKnowledge(x) -> Smarter(x))"], "conclusion": "all x. (Smarter(x) -> GainsKnowledge(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> HasKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, Book(y)) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> HasKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, Book(y)) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) [BG] Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>\n                                    ^\n"}
{"timestamp": "2025-06-10T06:40:03.036920", "premises": ["all x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "all x. (Smarter(x) -> GainsKnowledge(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Book(x) -> ContainsKnowledge(x)) [BG] When a person reads a book, that person gains knowledge.  FOL: all x. (Reads(x, y) -> GainsKnowledge(x)) [BG] If a person gains knowledge, they become smarter.  FOL: all x. (GainsKnowledge(x) -> Smarter(x)) Harry read the book \u201cWalden\u201d by Henry Thoreau.  FOL: Reads(Harry, Walden) </PREMISES> <CONCLUSION> A person who is smarter has gained knowledge.  FOL: all x. (Smarter(x) -> GainsKnowledge(x)) </CONCLUSION> <EVALUATE>\n                                         ^\n"}
{"timestamp": "2025-06-10T06:41:39.644894", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (LanguageGenerationTask(x) | LanguageUnderstandingTask(x)))", "all x. (NaturalLanguageProcessingTask(x) & TextSequenceOutput(x) -> LanguageGenerationTask(x))", "MachineTranslation(NaturalLanguageProcessingTask)", "TextSequenceOutput(MachineTranslation)"], "conclusion": "LanguageUnderstandingTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0, MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0, MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0, MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0, MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-06-10T06:41:39.678578", "premises": ["(NaturalLanguageProcessingTask(x) -> (LanguageGenerationTask(x) | LanguageUnderstandingTask(x)))", "(NaturalLanguageProcessingTask(x) & TextSequence(Output(x)) -> LanguageGenerationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "Output(MachineTranslation(x)) -> TextSequence(Output(MachineTranslation(x)))"], "conclusion": "MachineTranslation(x) -> LanguageUnderstandingTask(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1\n"}
{"timestamp": "2025-06-10T06:41:39.684498", "premises": ["(Task(x) & NLP(x)) -> (GenerationTask(x) | UnderstandingTask(x))", "all x. (NLP(x) & OutputIsTextSequence(x) -> GenerationTask(x))", "MachineTranslation(x) -> NLP(x)", "OutputIsTextSequence(MachineTranslation)"], "conclusion": "MachineTranslation(x) -> UnderstandingTask(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-06-10T06:43:01.827211", "premises": ["exists x. (Managed(x) & some y. (Pet(y) & AllowedIn(x, y)))", "all x. (Managed(x) -> RequiresDeposit(x))", "all x. (SecurityDeposit(x) >= OneMonthRent(x))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "OneMonthRent(TheOliveGarden) = 2000", "(AllowedIn(TheOliveGarden, Fluffy) & SecurityDeposit(TheOliveGarden) <= 1500) -> Rents(TheOliveGarden, Tom)", "2000 > 1500"], "conclusion": "Rents(TheOliveGarden, Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (SecurityDeposit(x) >= OneMonthRent(x))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (SecurityDeposit(x) >= OneMonthRent(x))\n                           ^\n"}
{"timestamp": "2025-06-10T06:43:01.833792", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (ManagedBuilding(x) -> (Deposit(x) = OneMonthRent(x) | MoreThan(Deposit(x), OneMonthRent(x))))", "Cat(Fluffy) & BelongsTo(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "OneMonthRent(OliveGarden) = 2000", "all x. (ManagedBuilding(x) -> (PetsAllowed(x) & Deposit(x) \u2264 1500 -> WillRentTom(x)))", "2000 > 1500"], "conclusion": "WillRentTom(OliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2264'.  Expected token ')'.\nall x. (ManagedBuilding(x) -> (PetsAllowed(x) & Deposit(x) \u2264 1500 -> WillRentTom(x)))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2264'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2264'.  Expected token ')'.\nall x. (ManagedBuilding(x) -> (PetsAllowed(x) & Deposit(x) \u2264 1500 -> WillRentTom(x)))\n                                                           ^\n"}
{"timestamp": "2025-06-10T06:43:01.834338", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "For(x, Managed(x) -> RequiresDeposit(x))", "exists x. (SecurityDeposit(x) & (MonthlyRent(x) | MoreThan(MonthlyRent(x))))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "MonthlyRent(TheOliveGarden) = 2000", "RentalDecision(Tom) <- (PetsAllowed(TheOliveGarden) & AllowedToMoveIn(Tom, Fluffy) & SecurityDeposit <= 1500)", "MoreThan(2000, 1500)"], "conclusion": "RentalDecision(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nFor(x, Managed(x) -> RequiresDeposit(x))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nFor(x, Managed(x) -> RequiresDeposit(x))\n                  ^\n"}
{"timestamp": "2025-06-10T06:43:01.827681", "premises": ["exists x. (Pet(x) & ManagedBuilding(y) & x is in y & AllowedPets(x, y))", "all x. (ManagedBuilding(x) -> exists z. Deposit(z) & Required(x, z))", "all x. (Deposit(x) & Required(y, x) -> (OneMonthRent(y) = x | More(x, OneMonthRent(y))))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "OneMonthRent(OliveGarden) = 2000", "AllowedPets(Fluffy, y) & Deposit(y) & Required(y, y) & More(1500, y) -> WillRent(Tom, y)", "1500 < 2000"], "conclusion": "WillRent(Tom, OliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nexists x. (Pet(x) & ManagedBuilding(y) & x is in y & AllowedPets(x, y))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nexists x. (Pet(x) & ManagedBuilding(y) & x is in y & AllowedPets(x, y))\n                                           ^\n"}
{"timestamp": "2025-06-10T06:43:01.836772", "premises": ["exists x. (ManagedBuilding(x) & AllowsPets(x))", "ManagedBuilding(x) -> RequiresDeposit(x)", "-ManagedBuilding(x) | RequiresDeposit(x) >= MonthRent(x)", "Cat(Fluffy) & Owns(Tom, Fluffy)", "Cat(x) -> Pet(x)", "ManagedBuilding(OliveGarden)", "MonthRent(OliveGarden) = 2000", "(AllowsPets(x) & Pet(Fluffy) & Owns(Tom, Fluffy) & RequiresDeposit(x) <= 1500) -> RentsIn(x, Tom)", "2000 > 1500"], "conclusion": "RentsIn(OliveGarden, Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n-ManagedBuilding(x) | RequiresDeposit(x) >= MonthRent(x)\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n-ManagedBuilding(x) | RequiresDeposit(x) >= MonthRent(x)\n                                         ^\n"}
{"timestamp": "2025-06-10T06:43:01.837972", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (DepositRequired(x) -> (OneMonthRent(x) | MoreThanOneMonthRent(x)))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "OneMonthRent(TheOliveGarden) = 2000", "(PetsAllowed(ManagedBuilding) & DepositUnder1500(ManagedBuilding)) -> WillRent(Tom, ManagedBuilding)", "2000 > 1500"], "conclusion": "WillRent(Tom, TheOliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n2000 > 1500\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n2000 > 1500\n     ^\n"}
{"timestamp": "2025-06-10T06:43:01.838668", "premises": ["exists x. exists y. (Managed(x) & Pet(y) & In(y, x))", "all x. (Managed(x) -> RequiresDeposit(x))", "all x. (Managed(x) -> (SecurityDeposit(x) >= MonthRent(x) | SecurityDeposit(x) > MonthRent(x)))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "MonthRent(TheOliveGarden) = 2000", "(Managed(x) & AllowedToMoveInWithFluffy(Tom, x) & SecurityDeposit(x) <= 1500) <-> TomWillRent(x)", "2000 > 1500"], "conclusion": "TomWillRent(TheOliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (Managed(x) -> (SecurityDeposit(x) >= MonthRent(x) | SecurityDeposit(x) > MonthRent(x)))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (Managed(x) -> (SecurityDeposit(x) >= MonthRent(x) | SecurityDeposit(x) > MonthRent(x)))\n                                          ^\n"}
{"timestamp": "2025-06-10T06:43:01.828038", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "all x. (Managed(x) -> DepositRequired(x))", "all x. (SecurityDeposit(x) -> (MonthlyRent(x) <= SecurityDeposit(x)))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "MonthlyRent(TheOliveGarden, 2000)", "(PetsAllowed(TheOliveGarden) & SecurityDeposit(TheOliveGarden) <= 1500)", "2000 > 1500"], "conclusion": "(PetsAllowed(TheOliveGarden) & SecurityDeposit(TheOliveGarden) <= 1500)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\n(PetsAllowed(TheOliveGarden) & SecurityDeposit(TheOliveGarden) <= 1500)\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\n(PetsAllowed(TheOliveGarden) & SecurityDeposit(TheOliveGarden) <= 1500)\n                                                               ^\n"}
{"timestamp": "2025-06-10T06:43:01.832325", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "all x. (Managed(x) -> DepositRequired(x))", "all x. (SecurityDeposit(x) -> (OneMonthRent(x) | More(x)))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "OneMonthRent(TheOliveGarden) 2000", "(PetsAllowed(TheOliveGarden) & SecurityDeposit(TheOliveGarden) 1500) -> Rents(TheOliveGarden, Tom)", "2000 > 1500"], "conclusion": "Rents(TheOliveGarden, Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '2000'.\nOneMonthRent(TheOliveGarden) 2000\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '2000'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '2000'.\nOneMonthRent(TheOliveGarden) 2000\n                             ^\n"}
{"timestamp": "2025-06-10T06:43:01.843851", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "exists y. (Managed(y) -> DepositRequired(y))", "exists y. (DepositRequired(y) -> (MonthRent(y) = Deposit(y) | More(Deposit(y), MonthRent(y))))", "HasCat(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(OliveGarden)", "MonthRent(OliveGarden, 2000)", "((exists x. (Managed(x) & PetsAllowed(x) & AllowedIn(x, Tom, Fluffy) & DepositRequired(x) & LessOrEqual(Deposit(x), 1500))) -> RentApartment(Tom, x)) & ((exists x. (Managed(x) & PetsAllowed(x) & AllowedIn(x, Tom, Fluffy) & DepositRequired(x) & LessOrEqual(Deposit(x), 1500))) <- RentApartment(Tom, x))", "More(2000, 1500)"], "conclusion": "RentApartment(Tom, OliveGarden)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthRent/2, MonthRent/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthRent/2, MonthRent/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthRent/2, MonthRent/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthRent/2, MonthRent/1\n"}
{"timestamp": "2025-06-10T06:44:35.843347", "premises": ["all x. (ManagedBuilding(x) -> AllowedPets(x)) | exists x. (ManagedBuilding(x) & AllowedPets(x))", "all x. (ManagedBuilding(x) -> RequiresDeposit(x))", "Deposits(x) = MonthlyRent(x) | Deposits(x) > MonthlyRent(x))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthlyRent(TheOliveGarden) = 2000", "(AllowedPets(TheOliveGarden) & Deposits(TheOliveGarden) <= 1500) <-> (AllowedMoveIn(Tom, TheOliveGarden, Fluffy))", "2000 > 1500"], "conclusion": "AllowedMoveIn(Tom, TheOliveGarden, Fluffy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nDeposits(x) = MonthlyRent(x) | Deposits(x) > MonthlyRent(x))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nDeposits(x) = MonthlyRent(x) | Deposits(x) > MonthlyRent(x))\n                                           ^\n"}
{"timestamp": "2025-06-10T06:44:35.847552", "premises": ["exists x. (ManagedBuilding(x) & PetAllowed(x))", "exists x. (ManagedBuilding(x) & PetAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (ManagedBuilding(x) -> (Deposit(x, OneMonthRent(x)) | Deposit(x, MoreThanOneMonthRent(x))))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthlyRent(TheOliveGarden, 2000)", "(ManagedBuilding(x) & PetAllowed(x) & Deposit(x, 1500) -> RentableBy(Tom, x))", "2000 > 1500"], "conclusion": "RentableBy(Tom, TheOliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n2000 > 1500\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n2000 > 1500\n     ^\n"}
{"timestamp": "2025-06-10T06:44:35.848542", "premises": ["exists x. (ManagedBuilding(x) & AllowedPets(x))", "all x. (ManagedBuilding(x) -> RequiredDeposit(x))", "(MonthlyRent(x) -> SecurityDeposit(x)) | More(x)", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthlyRent(TheOliveGarden, 2000)", "(AllowedPets(Tom, Fluffy) & NoMoreThanSecurityDeposit(1500)) <-> WillRent(Tom, TheOliveGarden)", "2000 > 1500"], "conclusion": "AllowedPets(Tom, Fluffy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'WillRent'.  Expected token ')'.\n(> WillRent(Tom, TheOliveGarden) -> (AllowedPets(Tom, Fluffy) & NoMoreThanSecurityDeposit(1500)))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'WillRent'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'WillRent'.  Expected token ')'.\n(> WillRent(Tom, TheOliveGarden) -> (AllowedPets(Tom, Fluffy) & NoMoreThanSecurityDeposit(1500)))\n   ^\n"}
{"timestamp": "2025-06-10T06:44:35.849542", "premises": ["exists x. (ManagedBuilding(x) & AllowPets(x))", "all x. (ManagedBuilding(x) -> RequiresDeposit(x))", "all x. (SecurityDeposit(x) -> ((MonthlyRent(x) = SecurityDeposit(x)) | (MonthlyRent(x) < SecurityDeposit(x))))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthlyRent(TheOliveGarden) = 2000", "(AllowsMoveInWithPet(Tom, Fluffy) & (NoMoreThan1500(SecurityDeposit) -> RentApartment(Tom, TheOliveGarden)))", "2000 > 1500"], "conclusion": "AllowsMoveInWithPet(Tom, Fluffy) & (NoMoreThan1500(SecurityDeposit) -> RentApartment(Tom, TheOliveGarden))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. (SecurityDeposit(x) -> ((MonthlyRent(x) = SecurityDeposit(x)) | (MonthlyRent(x) < SecurityDeposit(x))))\n                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. (SecurityDeposit(x) -> ((MonthlyRent(x) = SecurityDeposit(x)) | (MonthlyRent(x) < SecurityDeposit(x))))\n                                                                                       ^\n"}
{"timestamp": "2025-06-10T06:44:35.842470", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "TEXT: A deposit is required to rent an apartment in a managed building.  FOL: all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (ManagedBuilding(x) -> DepositAtLeastAMonthsRent(x))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "MonthlyRent(OliveGarden, 2000)", "((PetsAllowed(OliveGarden) & DepositNoMoreThan1500(OliveGarden)) -> RentsApartment(Tom, OliveGarden, Fluffy))", "2000 > 1500"], "conclusion": "RentsApartment(Tom, OliveGarden, Fluffy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'A'.\nTEXT: A deposit is required to rent an apartment in a managed building.  FOL: all x. (ManagedBuilding(x) -> DepositRequired(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'A'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'A'.\nTEXT: A deposit is required to rent an apartment in a managed building.  FOL: all x. (ManagedBuilding(x) -> DepositRequired(x))\n      ^\n"}
{"timestamp": "2025-06-10T06:44:35.844214", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "all x. (Managed(x) -> RequiredDeposit(x))", "all x. (Deposit(x) >= MonthlyRent(x))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(TheOliveGarden)", "MonthlyRent(TheOliveGarden) = 2000", "Managed(y) & AllowedToMoveIn(y, Tom, Fluffy) & Deposit(y) <= 1500 -> WillRent(y, Tom)", "2000 > 1500"], "conclusion": "AllowedToMoveIn(TheOliveGarden, Tom, Fluffy) & Deposit(TheOliveGarden) <= 1500", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nAllowedToMoveIn(TheOliveGarden, Tom, Fluffy) & Deposit(TheOliveGarden) <= 1500\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nAllowedToMoveIn(TheOliveGarden, Tom, Fluffy) & Deposit(TheOliveGarden) <= 1500\n                                                                       ^\n"}
{"timestamp": "2025-06-10T06:44:35.854427", "premises": ["exists x. (ManagedBuilding(x) & PetAllowed(x))", "all x. (ManagedBuilding(x) -> RequiresDeposit(x))", "all x. (Deposit(x) -> (EqualsOneMonthRent(x) | MoreThanOneMonthRent(x)))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "OneMonthRent(TheOliveGarden, 2000)", "(ManagedBuilding(x) & PetAllowed(x) & Deposit(x) & LessThanOrEqualTo1500(Deposit(x))) <-> RentingAllowed(Tom, x, Fluffy)", "2000 > 1500"], "conclusion": "RentingAllowed(Tom, TheOliveGarden, Fluffy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'RentingAllowed'.  Expected token ')'.\n(> RentingAllowed(Tom, x, Fluffy) -> (ManagedBuilding(x) & PetAllowed(x) & Deposit(x) & LessThanOrEqualTo1500(Deposit(x))))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'RentingAllowed'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'RentingAllowed'.  Expected token ')'.\n(> RentingAllowed(Tom, x, Fluffy) -> (ManagedBuilding(x) & PetAllowed(x) & Deposit(x) & LessThanOrEqualTo1500(Deposit(x))))\n   ^\n"}
{"timestamp": "2025-06-10T06:44:35.843801", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "(DepositRequired & ManagedBuilding)", "(Deposit = 1*MonthRent) | (Deposit > 1*MonthRent)", "HasPet(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "1*MonthRent(TheOliveGarden) = 2000", "(ManagedBuilding(x) & PetsAllowed(x) & Deposit <= 1500) -> RentableBy(Tom, x) & RentableBy(Tom, x) -> (ManagedBuilding(x) & PetsAllowed(x) & Deposit <= 1500)", "2000 > 1500"], "conclusion": "ManagedBuilding(TheOliveGarden) & PetsAllowed(TheOliveGarden) & Deposit(TheOliveGarden) <= 1500", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nManagedBuilding(TheOliveGarden) & PetsAllowed(TheOliveGarden) & Deposit(TheOliveGarden) <= 1500\n                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nManagedBuilding(TheOliveGarden) & PetsAllowed(TheOliveGarden) & Deposit(TheOliveGarden) <= 1500\n                                                                                        ^\n"}
{"timestamp": "2025-06-10T06:44:35.845034", "premises": ["exists x. exists y. (Pet(x) & ManagedBuilding(y) & In(x, y))", "all y. (ManagedBuilding(y) -> RequiredDeposit(y))", "exists x. exists y. (Deposit(x) & ManagedBuilding(y) & >= x, OneMonthRent(y))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "OneMonthRent(OliveGarden, 2000)", "(AllowedToMoveIn(Fluffy, Tom) & <= 1500, Deposit(OliveGarden)) | (\u00acAllowedToMoveIn(Fluffy, Tom) & \u00ac<= 1500, Deposit(OliveGarden))", "> 2000, 1500"], "conclusion": "AllowedToMoveIn(Fluffy, Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nexists x. exists y. (Deposit(x) & ManagedBuilding(y) & >= x, OneMonthRent(y))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nexists x. exists y. (Deposit(x) & ManagedBuilding(y) & >= x, OneMonthRent(y))\n                                                           ^\n"}
{"timestamp": "2025-06-10T06:44:35.860797", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (ManagedBuilding(x) & DepositRequired(x) -> (Deposit(x, MonthlyRent(x)) | Deposit(x, MoreThanMonthlyRent(x))))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthlyRent(TheOliveGarden, 2000)", "(ManagedBuilding(x) & AllowedToMoveIn(x, Fluffy) & Deposit(x, 1500)) -> WillRent(Tom, x)", "MoreThan(2000, 1500)"], "conclusion": "Pet(Fluffy) & ManagedBuilding(TheOliveGarden) & DepositRequired(TheOliveGarden) & Deposit(TheOliveGarden, 2000) & MoreThan(2000, 1500)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/1\n"}
{"timestamp": "2025-06-10T06:46:11.091405", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (Deposit(x) -> (EqualToOneMonthRent(x) | More(x)))", "Cat(Fluffy) & From(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "Rent(OliveGarden, 2000)", "all x. (ManagedBuilding(x) -> (PetsAllowed(x) & DepositRequired(x) -> Deposit(x) <= 1500))", "More(2000, 1500)", "all x. (ManagedBuilding(x) & PetsAllowed(x) -> (Deposit(x) -> (EqualToOneMonthRent(x) | More(x))))  FOL: ManagedBuilding(OliveGarden) & PetsAllowed(OliveGarden) -> (Deposit(OliveGarden) -> (EqualToOneMonthRent(OliveGarden) | More(OliveGarden)))  FOL: ManagedBuilding(OliveGarden) & PetsAllowed(OliveGarden) -> (Deposit(OliveGarden) -> (2000 -> (EqualToOneMonthRent(OliveGarden) | More(OliveGarden)))  FOL: ManagedBuilding(OliveGarden) & PetsAllowed(OliveGarden) -> (Deposit(OliveGarden) -> (2000 -> More(OliveGarden)))  FOL: Deposit(OliveGarden) -> (2000 | More(OliveGarden))"], "conclusion": "More(OliveGarden)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. (ManagedBuilding(x) -> (PetsAllowed(x) & DepositRequired(x) -> Deposit(x) <= 1500))\n                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. (ManagedBuilding(x) -> (PetsAllowed(x) & DepositRequired(x) -> Deposit(x) <= 1500))\n                                                                                 ^\n"}
{"timestamp": "2025-06-10T06:46:11.094126", "premises": ["exists x. (ManagedBuilding(x) & Pet(y) & AllowedIn(x, y))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (DepositRequired(x) -> (OneMonthRent(x) = Deposit(x) | More(Deposit(x), OneMonthRent(x))))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "OneMonthRent(OliveGarden) = 2000", "(AllowedIn(M, Fluffy) & Deposit(M) <= 1500) <-> WillRent(Tom, M)", "More(2000, 1500)"], "conclusion": "(Deposit(OliveGarden) = 2000 | More(Deposit(OliveGarden), 2000))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'WillRent'.  Expected token ')'.\n(> WillRent(Tom, M) -> (AllowedIn(M, Fluffy) & Deposit(M) <= 1500))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'WillRent'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'WillRent'.  Expected token ')'.\n(> WillRent(Tom, M) -> (AllowedIn(M, Fluffy) & Deposit(M) <= 1500))\n   ^\n"}
{"timestamp": "2025-06-10T06:46:11.101406", "premises": ["exists x. (ManagedBuilding(x) & AllowedPets(x))", "all x. (ManagedBuilding(x) -> RequiresDeposit(x))", "exists x. (SecurityDeposit(x) & (x = 2000 | x > 2000))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "Rent(TheOliveGarden) = 2000", "(AllowedPets(TheOliveGarden) & SecurityDeposit(TheOliveGarden) <= 1500) -> Renting(Tom, TheOliveGarden)", "2000 > 1500"], "conclusion": "SecurityDeposit(TheOliveGarden) = 2000 | SecurityDeposit(TheOliveGarden) > 2000", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nSecurityDeposit(TheOliveGarden) = 2000 | SecurityDeposit(TheOliveGarden) > 2000\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nSecurityDeposit(TheOliveGarden) = 2000 | SecurityDeposit(TheOliveGarden) > 2000\n                                                                         ^\n"}
{"timestamp": "2025-06-10T06:46:11.102737", "premises": ["exists x. exists y. (ManagedBuilding(x) & Pet(y) & Allowed(y, x))", "all x. (ManagedBuilding(x) -> RequiredDeposit(x))", "all x. (RequiredDeposit(x) -> (EqualsMonthRent(RequiredDeposit(x)) | MoreThanMonthRent(RequiredDeposit(x))))", "Cat(Fluffy) & Owner(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "MonthRent(TheOliveGarden, 2000)", "(Allowed(Fluffy, x) & LessThanDeposit(x, 1500)) -> WillRent(Tom, x)", "2000 > 1500"], "conclusion": "MoreThanMonthRent(RequiredDeposit(TheOliveGarden))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n2000 > 1500\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n2000 > 1500\n     ^\n"}
{"timestamp": "2025-06-10T06:46:11.103932", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (DepositRequired(x) -> (OneMonthRent(x) | MoreThanOneMonthRent(x)))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "OneMonthRent(TheOliveGarden) = 2000", "(ManagedBuilding(x) & PetsAllowed(x) & DepositRequired(x) & DepositNoMoreThan1500(x)) <-> RentsFrom(x, Tom)", "2000 > 1500"], "conclusion": "DepositRequired(TheOliveGarden) & (DepositNoMoreThan1500(TheOliveGarden) | MoreThanOneMonthRent(TheOliveGarden))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'RentsFrom'.  Expected token ')'.\n(> RentsFrom(x, Tom) -> (ManagedBuilding(x) & PetsAllowed(x) & DepositRequired(x) & DepositNoMoreThan1500(x)))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'RentsFrom'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'RentsFrom'.  Expected token ')'.\n(> RentsFrom(x, Tom) -> (ManagedBuilding(x) & PetsAllowed(x) & DepositRequired(x) & DepositNoMoreThan1500(x)))\n   ^\n"}
{"timestamp": "2025-06-10T06:46:11.105309", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "all x. (DepositRequired(x) -> (Deposit(x, oneMonthRent(x)) | MoreThanDeposit(x, oneMonthRent(x))))", "Cat(Fluffy) & OwnedBy(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(TheOliveGarden)", "oneMonthRent(TheOliveGarden) = 2000", "all x. (ManagedBuilding(x) -> (PetsAllowed(x) & Deposit(x, 1500) -> Rent(x)))", "2000 > 1500"], "conclusion": "Deposit(TheOliveGarden, 2000) | MoreThanDeposit(TheOliveGarden, 2000)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n2000 > 1500\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n2000 > 1500\n     ^\n"}
{"timestamp": "2025-06-10T06:46:11.094855", "premises": ["exists x. (ManagedBuilding(x) & PetsAllowed(x))", "all x. (ManagedBuilding(x) -> DepositRequired(x))", "(Deposit = OneMonthRent | Deposit > OneMonthRent)", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "Rent(OliveGarden, 2000)", "(TomAllowedToRentWithFluffy -> Deposit <= 1500) & (Deposit <= 1500 -> TomAllowedToRentWithFluffy)", "2000 > 1500"], "conclusion": "Deposit(OliveGarden, 2000) | Deposit(OliveGarden, >2000)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\n(Deposit = OneMonthRent | Deposit > OneMonthRent)\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\n(Deposit = OneMonthRent | Deposit > OneMonthRent)\n                                  ^\n"}
{"timestamp": "2025-06-10T06:46:11.099569", "premises": ["exists x. (ManagedBuilding(x) & AllowedIn(x, Pets))", "exists x. (ManagedBuilding(x) & RequiresDeposit(x))", "exists x. (ManagedBuilding(x) & (OneMonthsRent(x) = SecurityDeposit(x) | MoreThan(SecurityDeposit(x), OneMonthsRent(x))))", "Cat(Fluffy) & BelongsTo(Fluffy, Tom)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "OneMonthsRent(OliveGarden) = 2000", "AllowedIn(OliveGarden, Pet(Fluffy)) & LessThanOrEqualTo(SecurityDeposit(OliveGarden), 1500)", "MoreThan(2000, 1500)"], "conclusion": "(SecurityDeposit(OliveGarden) = 2000) | MoreThan(SecurityDeposit(OliveGarden), 2000)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Pet/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Pet/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Pet/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Pet/1\n"}
{"timestamp": "2025-06-10T06:46:11.095348", "premises": ["exists x. (Managed(x) & PetsAllowed(x))", "all x. (Managed(x) -> DepositRequired(x))", "all x. (DepositRequired(x) -> (MonthlyRent(x) = SecurityDeposit(x) | SecurityDeposit(x) > MonthlyRent(x)))", "Cat(Fluffy) & Owner(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "Managed(OliveGarden)", "MonthlyRent(OliveGarden) = 2000", "(PetsAllowed(OliveGarden) & Owner(Tom, Fluffy) & SecurityDeposit(OliveGarden) <= 1500) -> Managed(OliveGarden)", "2000 > 1500"], "conclusion": "SecurityDeposit(OliveGarden) = 2000 | SecurityDeposit(OliveGarden) > 2000", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nSecurityDeposit(OliveGarden) = 2000 | SecurityDeposit(OliveGarden) > 2000\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nSecurityDeposit(OliveGarden) = 2000 | SecurityDeposit(OliveGarden) > 2000\n                                                                   ^\n"}
{"timestamp": "2025-06-10T06:46:11.108076", "premises": ["exists y. exists x. (ManagedBuilding(y) & Pet(x) & AllowedIn(y, x))", "all y. (ManagedBuilding(y) -> RequiredDeposit(y))", "(EqualDeposit(MonthlyRent) | MoreDeposit(MonthlyRent))", "Cat(Fluffy) & Owns(Tom, Fluffy)", "all x. (Cat(x) -> Pet(x))", "ManagedBuilding(OliveGarden)", "MonthlyRent(OliveGarden, 2000)", "(AllowedIn(OliveGarden, Fluffy) & LessThanDeposit(1500)) -> WillRent(Tom, OliveGarden)", "MoreThan(2000, 1500)"], "conclusion": "(EqualDeposit(2000) | MoreDeposit(2000))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonthlyRent/2, MonthlyRent/0\n"}
{"timestamp": "2025-06-10T06:47:21.451808", "premises": ["all x. (LovedByTourists(x) -> Max'sFavoriteAnimal(x))", "all x. all y. (FromAustralia(x, y) -> LovedByTourists(x))", "all x. (Quokka(x) \u2192 FromAustralia(x, Australia))", "all x. (Max'sFavoriteAnimal(x) -> VeryFluffy(x))", "all x. (Max'sFavoriteAnimal(x) -> LoveToSleep(x))", "all x. ((VeryFluffy(x) & Koala(x)) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\nall x. (Quokka(x) \u2192 FromAustralia(x, Australia))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\nall x. (Quokka(x) \u2192 FromAustralia(x, Australia))\n                  ^\n"}
{"timestamp": "2025-06-10T06:47:21.460265", "premises": ["all x. (LovedByTourists(x) -> MaxFavorite(x))", "all x. all y. (From(x, y) & Australia(y) -> LovedByTourists(x))", "all x. (Quokka(x) -> From(x, Australia))", "all x. (MaxFavorite(x) -> VeryFluffy(x))", "all x. (MaxFavorite(x) -> LoveToSleep(x))", "all x. (VeryFluffy(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0\n"}
{"timestamp": "2025-06-10T06:47:21.456378", "premises": ["all x. (LovedByTourists(x) -> MaxsFavorite(x))", "all x. (AnimalFromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> AnimalFromAustralia(x))", "all x. (MaxsFavorite(x) -> VeryFluffy(x))", "all x. (MaxsFavorite(x) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:47:21.460398", "premises": ["all x. (LovedByTourists(x) -> FavoriteAnimal(x, Max))", "all x. all y. (From(x, y) & Australia(y) -> LovedByTourists(x))", "all x. (Quokka(x) -> From(x, Australia))", "all x. (FavoriteAnimal(x, Max) -> VeryFluffy(x))", "all x. (FavoriteAnimal(x, Max) -> LoveToSleep(x))", "(VeryFluffy(x) & Koala(x)) -> -Quokka(x)"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:47:21.475548", "premises": ["all x. (LovedByTourists(x) -> MaxFavorite(x))", "all x. (FromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> FromAustralia(x))", "all x. (MaxFavorite(x) -> Fluffy(x))", "all x. (MaxFavorite(x) -> Sleep(x))", "all x. ((Fluffy(x) & Koala(x)) -> \u00acQuokka(x))"], "conclusion": "Sleep(Koala)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 630: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 630: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:47:21.475800", "premises": ["all x. (LovedByTourists(x) -> FavoriteAnimal(x))", "all x. all y. (FromAustralia(y) & Animal(x) & From(x, y) -> LovedByTourists(x))", "all x. (Quokka(x) -> FromAustralia(x))", "all x. (FavoriteAnimal(x) -> VeryFluffy(x))", "all x. (FavoriteAnimal(x) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:47:21.476741", "premises": ["all x. (LovedByTourists(x) -> MaxFavoriteAnimal(x))", "all x. (AnimalFromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> AnimalFromAustralia(x))", "all x. (MaxFavoriteAnimal(x) -> VeryFluffy(x))", "all x. (MaxFavoriteAnimal(x) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:47:21.476338", "premises": ["all x. (LovedByTourists(x) -> FavoriteOfMax(x))", "all x. all y. (From(x, y) & Australia(y) -> LovedByTourists(x))", "all x. (Quokka(x) -> From(x, Australia))", "all x. (FavoriteOfMax(x) -> VeryFluffy(x))", "all x. (FavoriteOfMax(x) -> LoveToSleep(x))", "all x. (VeryFluffy(x) & Koala(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:47:21.479045", "premises": ["all x. (LovedByTourists(x) -> MaxFavorite(x))", "all x. (LovedByTourists(x) -> MaxFavorite(x))", "all x. (AnimalFromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> AnimalFromAustralia(x))", "all x. (MaxFavorite(x) -> VeryFluffy(x))", "all x. (MaxFavorite(x) -> LoveToSleep(x))", "all x. (VeryFluffy(x) & Koala(x) -> -Quokka(x))"], "conclusion": "LoveToSleep(Koala)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:48:30.161972", "premises": ["all x. (LovedByTourists(x) -> MaxsFavorite(x))", "all x. (FromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> FromAustralia(x))", "all x. (MaxsFavorite(x) -> VeryFluffy(x))", "all x. (MaxsFavorite(x) -> LovesToSleep(x))", "(Koala(x) & VeryFluffy(x)) -> -Quokka(x)"], "conclusion": "(LovesToSleep(Koala) & Koala) | (Koala & Quokka)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Koala/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Koala/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Koala/0\n"}
{"timestamp": "2025-06-10T06:48:30.157997", "premises": ["all x. (LovedByTourists(x) -> MaxsFavoriteAnimals(x))", "all x. (FromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> FromAustralia(x))", "all x. (MaxsFavoriteAnimals(x) -> VeryFluffy(x))", "all x. (MaxsFavoriteAnimals(x) -> LoveToSleep(x))", "all x. (VeryFluffy(x) & Koala(x) -> -Quokka(x))"], "conclusion": "(VeryFluffy(Koala) & LoveToSleep(Koala) & Quokka(Koala))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:48:30.185615", "premises": ["all x. (LovedByTourists(x) -> FavoritesOfMax(x))", "all x. (AnimalsFromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> AnimalsFromAustralia(x))", "all x. (FavoritesOfMax(x) -> VeryFluffy(x))", "all x. (FavoritesOfMax(x) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "(LoveToSleep(Koala) & Quokka(Koala))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:48:30.189530", "premises": ["all x. (LovedByTourists(x) -> MaxsFavoriteAnimal(x))", "all x. (LovedByTourists(x) -> MaxsFavoriteAnimal(x))", "all x. (AnimalFromAustralia(x) -> LovedByTourists(x))", "all x. (Quokka(x) -> AnimalFromAustralia(x))", "all x. (MaxsFavoriteAnimal(x) -> VeryFluffy(x))", "all x. (MaxsFavoriteAnimal(x) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "(LoveToSleep(Koala) & Quokka(Koala))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:49:36.039515", "premises": ["all x. all y. (LovedBy(x, y) -> FavoriteAnimal(x, Max))", "all x. all y. (Animal(x) & From(x, y) & Australia(y) -> LovedBy(x, Tourist))", "all x. (Quokka(x) -> Animal(x) & From(x, Australia))", "all x. (FavoriteAnimal(x, Max) -> VeryFluffy(x))", "all x. (FavoriteAnimal(x, Max) -> LoveToSleep(x))", "all x. (Koala(x) & VeryFluffy(x) -> -Quokka(x))"], "conclusion": "(Quokka( Koala) & -LoveToSleep(Koala) & -VeryFluffy(Koala)) | (Quokka( Koala) & LoveToSleep(Koala) & -VeryFluffy(Koala)) | (Quokka( Koala) & -LoveToSleep(Koala) & VeryFluffy(Koala)) | (Quokka( Koala) & LoveToSleep(Koala) & VeryFluffy(Koala))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Australia/1, Australia/0, Koala/1, Koala/0\n"}
{"timestamp": "2025-06-10T06:51:13.827232", "premises": ["(Kind(x) | Evil(x))", "all x. (Ugly(x) -> -Handsome(x))", "all x. (Evil(x) -> Ugly(x))", "all x. (Gentleman(x) -> Handsome(x))", "all x. (CEO(x) -> Gentleman(x))", "Gentleman(Harry)"], "conclusion": "(Gentleman(Harry) & (CEO(Harry) | Kind(Harry)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Ugly(x) -> -Handsome(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Ugly(x) -> -Handsome(x))\n        ^\n"}
{"timestamp": "2025-06-10T06:54:18.812917", "premises": ["all x. (Man(x) -> (Kind(x) | Evil(x)))", "all x. (Ugly(x) -> -Handsome(x))", "all x. (Evil(x) -> Ugly(x))", "all x. (Gentleman(x) -> Handsome(x))", "all x. (CEO(x) -> Gentleman(x))", "Gentleman(Harry)"], "conclusion": "((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) -> ((-Kind(Harry) | -CEO(Harry))) FOL: ((Evil(Harry) & Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) & ((-Evil(Harry) & -Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) & -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) | -CEO(Harry)) & Evil(Harry) & Ugly(Harry)) | ((-Kind(Harry) | -CEO(Harry)) & -Evil(Harry) & -Ugly(Harry)) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | ((-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry)) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) -> ((-Kind(Harry) | -CEO(Harry))) FOL: ((Evil(Harry) & Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) & ((-Evil(Harry) & -Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) & -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) | -CEO(Harry)) & Evil(Harry) & Ugly(Harry)) | ((-Kind(Harry) | -CEO(Harry)) & -Evil(Harry) & -Ugly(Harry)) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | ((-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry)) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry)\n                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) -> ((-Kind(Harry) | -CEO(Harry))) FOL: ((Evil(Harry) & Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) & ((-Evil(Harry) & -Ugly(Harry)) -> (-Kind(Harry) | -CEO(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) & -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) | -CEO(Harry)) & Evil(Harry) & Ugly(Harry)) | ((-Kind(Harry) | -CEO(Harry)) & -Evil(Harry) & -Ugly(Harry)) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | ((-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) | -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) FOL: (-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry)) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) | -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry)) & ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))) FOL: -((Kind(Harry) & -CEO(Harry)) & (Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry)) & (-Evil(Harry) & -Ugly(Harry))) FOL: -((Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry))) & -((Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & -CEO(Harry) & Evil(Harry) & Ugly(Harry)) | (Kind(Harry) & -CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry) & -Evil(Harry) & -Ugly(Harry)) | (-CEO(Harry) & -Evil(Harry) & -Ugly(Harry))) FOL: ((-Kind(Harry) & Evil(Harry) & Ugly(Harry)) | (-CEO(Harry) & Evil(Harry) & Ugly(Harry))) | ((-Kind(Harry)\n                                                                                                ^\n"}
{"timestamp": "2025-06-10T06:54:18.828035", "premises": ["all x. (Man(x) -> (Kind(x) | Evil(x)))", "Man(x) -> (Kind(x) | Evil(x))  No ugly person is handsome.  FOL: all x. (Ugly(x) -> -Handsome(x))", "all x. (Ugly(x) -> -Handsome(x))  All evil people are ugly.  FOL: all x. (Evil(x) -> Ugly(x))", "all x. (Evil(x) -> Ugly(x))  All gentlemen are handsome.  FOL: all x. (Gentleman(x) -> Handsome(x))", "all x. (Gentleman(x) -> Handsome(x))  All CEOs are gentlemen.  FOL: all x. (CEO(x) -> Gentleman(x))", "all x. (CEO(x) -> Gentleman(x))  Harry is a gentleman.  FOL: Gentleman(Harry)", "Gentleman(Harry)  </PREMISES> <CONCLUSION> If Harry is either both evil and ugly, or neither evil nor ugly, then Harry is neither kind nor a CEO.  FOL: -(Kind(Harry) | CEO(Harry)) -> ((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry)))"], "conclusion": "((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) -> -(Kind(Harry) | CEO(Harry))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'No'.\nMan(x) -> (Kind(x) | Evil(x))  No ugly person is handsome.  FOL: all x. (Ugly(x) -> -Handsome(x))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'No'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'No'.\nMan(x) -> (Kind(x) | Evil(x))  No ugly person is handsome.  FOL: all x. (Ugly(x) -> -Handsome(x))\n                               ^\n"}
{"timestamp": "2025-06-10T06:54:18.855921", "premises": ["Kind(x) | Evil(x)", "\u00acHandsome(x) | \u00acUgly(x)", "Evil(x) -> Ugly(x)", "Gentleman(x) -> Handsome(x)", "CEO(x) -> Gentleman(x)", "Gentleman(Harry) & Handsome(Harry)"], "conclusion": "((Evil(Harry) & Ugly(Harry)) | (-Evil(Harry) & -Ugly(Harry))) -> (-Kind(Harry) & -CEO(Harry))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte\n"}
{"timestamp": "2025-06-10T06:55:59.327324", "premises": ["all x. (TwinsOrTriplets(x) -> SpendTimeWithSiblings(x))", "all x. (HaveSameAgeSiblings(x) -> TwinsOrTriplets(x))", "all x. (ComplainAboutSiblings(x) -> HaveSameAgeSiblings(x))", "all x. (NotLiveAtHome(x) -> NotDevelopStrongBonds(x))", "all x. (SpendTimeWithSiblings(x) -> NotLiveAtHome(x))", "((TwinsOrTriplets(Luke) & DevelopStrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -DevelopStrongBonds(Luke)))"], "conclusion": "SpendTimeWithSiblings(Luke) </PREMISES> <CONCLUSION>  FOL:  (((TwinsOrTriplets(Luke) & DevelopStrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -DevelopStrongBonds(Luke))) -> SpendTimeWithSiblings(Luke)) </CONCLUSION> <EVALUATE> Since the conclusion is not a direct consequence of the premises, we can conclude that the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nSpendTimeWithSiblings(Luke) </PREMISES> <CONCLUSION>  FOL:  (((TwinsOrTriplets(Luke) & DevelopStrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -DevelopStrongBonds(Luke))) -> SpendTimeWithSiblings(Luke)) </CONCLUSION> <EVALUATE> Since the conclusion is not a direct consequence of the premises, we can conclude that the conclusion does not follow from the premises.\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nSpendTimeWithSiblings(Luke) </PREMISES> <CONCLUSION>  FOL:  (((TwinsOrTriplets(Luke) & DevelopStrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -DevelopStrongBonds(Luke))) -> SpendTimeWithSiblings(Luke)) </CONCLUSION> <EVALUATE> Since the conclusion is not a direct consequence of the premises, we can conclude that the conclusion does not follow from the premises.\n                            ^\n"}
{"timestamp": "2025-06-10T06:55:59.362578", "premises": ["all x. (Twin(x) | Triplets(x) -> SpendTimeWithSiblings(x))", "all x. (SameAgeSiblings(x) -> (Twin(x) | Triplets(x)))", "all x. (OftenComplainAboutSiblings(x) -> SameAgeSiblings(x))", "all x. (-LiveAtHome(x) -> -DevelopStrongBonds(x))", "all x. (SpendTimeWithSiblings(x) -> OftenNotLiveAtHome(x))", "((Twin(Luke) & DevelopStrongBonds(Luke)) | (-Twin(Luke) & -DevelopStrongBonds(Luke)))", "SpendTimeWithSiblings(Luke) </PREMISES> <CONCLUSION> <EVALUATE>", "((Twin(Luke) & DevelopStrongBonds(Luke)) | (-Twin(Luke) & -DevelopStrongBonds(Luke)))", "all x. (Twin(x) | Triplets(x) -> SpendTimeWithSiblings(x))  FOL: (Twin(Luke) | Triplets(Luke) -> SpendTimeWithSiblings(Luke))", "-Twin(Luke) & -DevelopStrongBonds(Luke)  FOL: ((-Twin(Luke) & -DevelopStrongBonds(Luke)) | (-Twin(Luke) & -DevelopStrongBonds(Luke)))", "-SpendTimeWithSiblings(Luke)  FOL: (-Twin(Luke) | -Triplets(Luke) -> -SpendTimeWithSiblings(Luke))", "-SpendTimeWithSiblings(Luke)  FOL: -SpendTimeWithSiblings(Luke)", "SpendTimeWithSiblings(Luke)", "-Twin(Luke) & -DevelopStrongBonds(Luke)  FOL: ((Twin(Luke) & DevelopStrongBonds(Luke)) | (-Twin(Luke) & -DevelopStrongBonds(Luke)))", "all x. (SameAgeSiblings(x) -> (Twin(x) | Triplets(x)))  FOL: SameAgeSiblings(Luke) -> (Twin(Luke) | Triplets(Luke))", "-SameAgeSiblings(Luke)  FOL: -SameAgeSiblings(Luke)", "-Twin(Luke) & -DevelopStrongBonds(Luke)  FOL: ((Twin(Luke) & DevelopStrongBonds(Luke)) | (-Twin(Luke) & -DevelopStrongBonds(Luke)))", "-SpendTimeWithSiblings(Luke)  FOL: (-Twin(Luke) | -Triplets(Luke) -> -SpendTimeWithSiblings(Luke))", "-SpendTimeWithSiblings(Luke)  FOL: -SpendTimeWithSiblings(Luke)", "SpendTimeWithSiblings(Luke)", "OftenComplainAboutSiblings(Luke)  FOL: OftenComplainAboutSiblings(Luke)", "SameAgeSiblings(Luke)  FOL: all x. (OftenComplainAboutSiblings(x) -> SameAgeSiblings(x))", "Twin(Luke) | Triplets(Luke)  FOL: all x. (SameAgeSiblings(x) -> (Twin(x) | Triplets(x)))", "Twin(Luke) | Triplets(Luke)  FOL: Twin(Luke) | Triplets(Luke)", "SpendTimeWithSiblings(Luke)  FOL: all x. (Twin(x) | Triplets(x) -> SpendTimeWithSiblings(x))"], "conclusion": "SpendTimeWithSiblings(Luke)  FOL: SpendTimeWithSiblings(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nSpendTimeWithSiblings(Luke)  FOL: SpendTimeWithSiblings(Luke)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nSpendTimeWithSiblings(Luke)  FOL: SpendTimeWithSiblings(Luke)\n                             ^\n"}
{"timestamp": "2025-06-10T06:57:18.608060", "premises": ["all x. (Twins(x) | Triplets(x) -> SpendTimeHangingOutWithSiblings(x))", "all x. (SameAgeSiblings(x) -> (Twins(x) | Triplets(x)))", "all x. (ComplainAboutAnnoyingSiblings(x) -> SameAgeSiblings(x))", "all x. (-LiveAtHomeRegularly(x) -> -DevelopStrongBonds(x))", "all x. (SpendTimeHangingOutWithSiblings(x) -> -LiveAtHomeRegularly(x))"], "conclusion": "(Twins(Luke) & DevelopStrongBonds(Luke)) | \u00ac(Twins(Luke) | DevelopStrongBonds(Luke)) </PREMISES> <CONCLUSION> Luke complains often about annoying siblings.  FOL: ComplainAboutAnnoyingSiblings(Luke) </CONCLUSION> <EVALUATE>  FOL: ComplainAboutAnnoyingSiblings(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(Twins(Luke) & DevelopStrongBonds(Luke)) | \u00ac(Twins(Luke) | DevelopStrongBonds(Luke)) </PREMISES> <CONCLUSION> Luke complains often about annoying siblings.  FOL: ComplainAboutAnnoyingSiblings(Luke) </CONCLUSION> <EVALUATE>  FOL: ComplainAboutAnnoyingSiblings(Luke)\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(Twins(Luke) & DevelopStrongBonds(Luke)) | \u00ac(Twins(Luke) | DevelopStrongBonds(Luke)) </PREMISES> <CONCLUSION> Luke complains often about annoying siblings.  FOL: ComplainAboutAnnoyingSiblings(Luke) </CONCLUSION> <EVALUATE>  FOL: ComplainAboutAnnoyingSiblings(Luke)\n                                                         ^\n"}
{"timestamp": "2025-06-10T06:58:42.030301", "premises": ["(TwinsOrTriplets(x) -> SpendTimeWithSiblings(x))", "(SameAgedSiblings(x) -> TwinsOrTriplets(x))", "(ComplainAboutSiblings(x) -> SameAgedSiblings(x))", "(-LiveAtHomeRegularly(x) -> -StrongBonds(x))", "(SpendTimeWithSiblings(x) -> -LiveAtHomeRegularly(x))"], "conclusion": "((TwinsOrTriplets(Luke) & StrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -StrongBonds(Luke))) <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -TwinsOrTriplets(Luke) & -StrongBonds(Luke) & -ComplainAboutSiblings(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<CONCLUSION>'.\n((TwinsOrTriplets(Luke) & StrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -StrongBonds(Luke))) <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -TwinsOrTriplets(Luke) & -StrongBonds(Luke) & -ComplainAboutSiblings(Luke)\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<CONCLUSION>'.\n((TwinsOrTriplets(Luke) & StrongBonds(Luke)) | (-TwinsOrTriplets(Luke) & -StrongBonds(Luke))) <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -TwinsOrTriplets(Luke) & -StrongBonds(Luke) & -ComplainAboutSiblings(Luke)\n                                                                                              ^\n"}
{"timestamp": "2025-06-10T06:58:42.049510", "premises": ["all x. (Twin(x) | Triplets(x) -> SpendTimeWithSiblings(x))", "all x. (HasSameAgeSiblings(x) -> (Twin(x) | Triplets(x)))", "all x. (ComplainAboutSiblings(x) -> HasSameAgeSiblings(x))", "all x. (-LiveAtHome(x) -> -StrongBonds(x))", "all x. (SpendTimeWithSiblings(x) -> OftenNotLiveAtHome(x))"], "conclusion": "((Twin(Luke) & StrongBonds(Luke)) | (-Twin(Luke) & -StrongBonds(Luke))) </PREMISES> <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -Twin(Luke) & -Triplets(Luke) & -ComplainAboutSiblings(Luke) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((Twin(Luke) & StrongBonds(Luke)) | (-Twin(Luke) & -StrongBonds(Luke))) </PREMISES> <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -Twin(Luke) & -Triplets(Luke) & -ComplainAboutSiblings(Luke) </CONCLUSION> <EVALUATE>\n                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((Twin(Luke) & StrongBonds(Luke)) | (-Twin(Luke) & -StrongBonds(Luke))) </PREMISES> <CONCLUSION> Luke is neither a twin nor triplet nor complains often about annoying siblings.  FOL: -Twin(Luke) & -Triplets(Luke) & -ComplainAboutSiblings(Luke) </CONCLUSION> <EVALUATE>\n                                                                        ^\n"}
{"timestamp": "2025-06-10T06:59:42.517234", "premises": ["Cost(GRETest, 205)", "all x. (Applicant(x) & GRE(x) & EconomicHardship(x) -> FinancialAid(x))", "EconomicHardship(x) <-> (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearOutOfWork(DadOfTom)"], "conclusion": "FinancialAid(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^\n"}
{"timestamp": "2025-06-10T06:59:42.516607", "premises": ["GRECost = 205", "all x. (GREApplicant(x) & EconomicHardship(x) -> ETSProvidesFinancialAid(x))", "EconomicHardship(x) \u2261 (InsufficientFunds(x) | InsufficientResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearUnemployed(DadOfTom)"], "conclusion": "ETSProvidesFinancialAid(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (InsufficientFunds(x) | InsufficientResources(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (InsufficientFunds(x) | InsufficientResources(x))\n                    ^\n"}
{"timestamp": "2025-06-10T06:59:42.521941", "premises": ["CostToTakeGRETest(205)", "ProvidesFinancialAid(ETS, x, y) <- GREApplicant(x) & EconomicHardship(y)", "EconomicHardship(x) <- TooLittleMoney(x) | TooFewResources(x)", "LivesInSingleParentFamily(Tom)", "MoreThanAYearUnemployed(Tom's Dad)"], "conclusion": "CanApplyForFinancialAid(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Dad'.  Expected token ')'.\nMoreThanAYearUnemployed(Tom's Dad)\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Dad'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Dad'.  Expected token ')'.\nMoreThanAYearUnemployed(Tom's Dad)\n                              ^\n"}
{"timestamp": "2025-06-10T06:59:42.514563", "premises": ["TestCost(GRE, 205)", "all x. (EconomicHardship(x) & GREApplicant(x) -> FinancialAid(x))", "all x. (EconomicHardship(x) <-> (TooLittleMoney(x) & TooFewResources(x)))", "Parent(SingleParentFamily, Tom) & Parent(Tom, SingleParentFamily)", "Unemployed(SingleParentFamily) & MoreThanAYear(SingleParentFamily)"], "conclusion": "FinancialAid(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (TooLittleMoney(x) & TooFewResources(x))) -> all x. (EconomicHardship(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (TooLittleMoney(x) & TooFewResources(x))) -> all x. (EconomicHardship(x))\n                      ^\n"}
{"timestamp": "2025-06-10T06:59:42.564475", "premises": ["CostOfGRE($205)", "providesFinancialAid(ets, x) <- (GREApplicant(x) & EconomicHardship(x))", "EconomicHardship(x) <- (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)"], "conclusion": "OutOfWork(TomDad) & MoreThanAYear </PREMISES> <CONCLUSION> Tom can apply for financial aid from ETS to take the GRE test.  FOL: GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom) </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we can use a theorem prover like Prover9. We need to define the predicates and constants first, and then use the premises to derive the conclusion.  Here is a possible definition of the predicates and constants: ```prolog :- object test. :- constant ets. :- constant Tom. :- constant TomDad. :- constant $205. :- predicate GREApplicant/1. :- predicate EconomicHardship/1. :- predicate SingleParentFamily/1. :- predicate OutOfWork/1. :- predicate TooLittleMoney/1. :- predicate TooFewResources/1. :- predicate providesFinancialAid/2. :- predicate CostOfGRE/1. ```  Now we can use the premises to derive the conclusion: ```prolog :- use_module(library(clpfd)). :- use_module(library(clp_basics)).  GREApplicant(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). EconomicHardship(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). providesFinancialAid(ets, Tom) :- GREApplicant(Tom), EconomicHardship(Tom). CostOfGRE($205). ```  We can use the `prove` command to check whether the conclusion follows from the premises: ```prolog ?- prove(GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom)). ```  If the conclusion is true, the theorem prover will return a yes answer. Otherwise, it will return a no answer.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nOutOfWork(TomDad) & MoreThanAYear </PREMISES> <CONCLUSION> Tom can apply for financial aid from ETS to take the GRE test.  FOL: GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom) </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we can use a theorem prover like Prover9. We need to define the predicates and constants first, and then use the premises to derive the conclusion.  Here is a possible definition of the predicates and constants: ```prolog :- object test. :- constant ets. :- constant Tom. :- constant TomDad. :- constant $205. :- predicate GREApplicant/1. :- predicate EconomicHardship/1. :- predicate SingleParentFamily/1. :- predicate OutOfWork/1. :- predicate TooLittleMoney/1. :- predicate TooFewResources/1. :- predicate providesFinancialAid/2. :- predicate CostOfGRE/1. ```  Now we can use the premises to derive the conclusion: ```prolog :- use_module(library(clpfd)). :- use_module(library(clp_basics)).  GREApplicant(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). EconomicHardship(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). providesFinancialAid(ets, Tom) :- GREApplicant(Tom), EconomicHardship(Tom). CostOfGRE($205). ```  We can use the `prove` command to check whether the conclusion follows from the premises: ```prolog ?- prove(GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom)). ```  If the conclusion is true, the theorem prover will return a yes answer. Otherwise, it will return a no answer.\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nOutOfWork(TomDad) & MoreThanAYear </PREMISES> <CONCLUSION> Tom can apply for financial aid from ETS to take the GRE test.  FOL: GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom) </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we can use a theorem prover like Prover9. We need to define the predicates and constants first, and then use the premises to derive the conclusion.  Here is a possible definition of the predicates and constants: ```prolog :- object test. :- constant ets. :- constant Tom. :- constant TomDad. :- constant $205. :- predicate GREApplicant/1. :- predicate EconomicHardship/1. :- predicate SingleParentFamily/1. :- predicate OutOfWork/1. :- predicate TooLittleMoney/1. :- predicate TooFewResources/1. :- predicate providesFinancialAid/2. :- predicate CostOfGRE/1. ```  Now we can use the premises to derive the conclusion: ```prolog :- use_module(library(clpfd)). :- use_module(library(clp_basics)).  GREApplicant(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). EconomicHardship(Tom) :- SingleParentFamily(Tom), OutOfWork(TomDad). providesFinancialAid(ets, Tom) :- GREApplicant(Tom), EconomicHardship(Tom). CostOfGRE($205). ```  We can use the `prove` command to check whether the conclusion follows from the premises: ```prolog ?- prove(GREApplicant(Tom) & EconomicHardship(Tom) & providesFinancialAid(ets, Tom)). ```  If the conclusion is true, the theorem prover will return a yes answer. Otherwise, it will return a no answer.\n                                  ^\n"}
{"timestamp": "2025-06-10T06:59:42.565096", "premises": ["Cost(GreTest, 205)", "all x. (GreApplicant(x) & EconomicHardship(x) -> FinancialAid(x))", "EconomicHardship(x) \u2261 (LittleMoney(x) | FewResources(x))", "SingleParentFamily(Tom)", "UnemployedForMoreThanAYear(Tom'sDad)"], "conclusion": "FinancialAid(Tom)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (LittleMoney(x) | FewResources(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (LittleMoney(x) | FewResources(x))\n                    ^\n"}
{"timestamp": "2025-06-10T07:00:37.958057", "premises": ["CostOfGRETest(205)", "all x. (GREApplicant(x) & EconomicHardship(x) -> ProvidesAid(ETS, x))", "(no formal translation)", "SingleParentFamily(Tom)", "OutOfWork(TomDad) & DurationOfOutOfWork(TomDad, OverOneYear)"], "conclusion": "-CostOfGRETest(x) | x < 300", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n-CostOfGRETest(x) | x < 300\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n-CostOfGRETest(x) | x < 300\n                      ^\n"}
{"timestamp": "2025-06-10T07:00:37.963637", "premises": ["CostOfGRETtest(205)", "ProvidesFinancialAid(Ets, Applicant, EconomicHardship)", "EconomicHardship(TooLittleMoneyOrFewResources)", "LivesInSingleParentFamily(Tom)", "UnemployedForOverAYear(Tom's dad)"], "conclusion": "-CostOfGRETtest(300) However, we can't derive this from the given premises.  Note: The premises do not provide any information about the cost of the GRE test, only the cost of taking the test being $205.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\n-CostOfGRETtest(300) However, we can't derive this from the given premises.  Note: The premises do not provide any information about the cost of the GRE test, only the cost of taking the test being $205.\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\n-CostOfGRETtest(300) However, we can't derive this from the given premises.  Note: The premises do not provide any information about the cost of the GRE test, only the cost of taking the test being $205.\n                     ^\n"}
{"timestamp": "2025-06-10T07:00:37.959727", "premises": ["Cost(GREtest, 205)", "all x. (GREapplicant(x) & EconomicHardship(x) -> ProvidesAid(ETS, x))", "EconomicHardship(x) <-> (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearUnemployed(Tom's dad)"], "conclusion": "-Cost(GREtest, 300)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^\n"}
{"timestamp": "2025-06-10T07:00:37.965262", "premises": ["CostOfGRETest(205)", "Aid(ETS, x) & GREApplicant(x) & EconomicHardship(x)", "EconomicHardship(x) <-> (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "OutOfWorkForMoreThanAYear(TomsDad)"], "conclusion": "CostOfGRETest(x) & x < 300", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nCostOfGRETest(x) & x < 300\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nCostOfGRETest(x) & x < 300\n                     ^\n"}
{"timestamp": "2025-06-10T07:00:37.965548", "premises": ["Price(GREtest, 205)", "all x. (GREapplicant(x) & EconomicHardship(x) -> ProvidesAid(ETS, x))", "EconomicHardship(x) <-> (LackMoney(x) | LackResources(x))", "SingleParentFamily(Tom)", "NoJob(Tom's dad, more than 1 year)"], "conclusion": "Price(GREtest, less than 300)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'than'.  Expected token ')'.\nPrice(GREtest, less than 300)\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'than'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'than'.  Expected token ')'.\nPrice(GREtest, less than 300)\n                    ^\n"}
{"timestamp": "2025-06-10T07:00:37.969129", "premises": ["Cost(GRE, 205)", "all x. (GREApplicant(x) & InEconomicHardship(x) -> ProvidesAid(ETS, x))", "EconomicHardship(x) -> (TooLittleMoney(x) | TooFewResources(x))", "Family(SingleParent, Tom)", "OutOfWork(DadOf(Tom), 1 Year)"], "conclusion": "Cost(GRE, LessThan(300))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Year'.  Expected token ')'.\nOutOfWork(DadOf(Tom), 1 Year)\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Year'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Year'.  Expected token ')'.\nOutOfWork(DadOf(Tom), 1 Year)\n                        ^\n"}
{"timestamp": "2025-06-10T07:00:37.971869", "premises": ["$205 = CostToTakeGRE", "FinancialAid(GREApplicant(x)) -> EconomicHardship(x)", "EconomicHardship(x) -> (TooLittleMoney(x) | TooFewResources(x))", "TooLittleMoney(Tom)", "TooFewResources(Tom)"], "conclusion": "-CostToTakeGRE > $300", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n-CostToTakeGRE > $300\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n-CostToTakeGRE > $300\n               ^\n"}
{"timestamp": "2025-06-10T07:00:37.972143", "premises": ["$205 = CostOf(GreTest)", "exists x. (FinancialAid(x) & GREApplicant(x) & EconomicHardship(x))", "EconomicHardship(x) <- (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearUnemployed(DadOf(Tom))"], "conclusion": "$300 > CostOf(GreTest)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\n$300 > CostOf(GreTest)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\n$300 > CostOf(GreTest)\n     ^\n"}
{"timestamp": "2025-06-10T07:01:31.377252", "premises": ["CostOfGRETest(205)", "all x. (GREApplicant(x) & ProveEconomicHardship(x) -> FinancialAid(x))", "EconomicHardship(x) <-> (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "-Employed(TomDad) & MoreThanAYear(TomDad)"], "conclusion": "-exists x. (GREApplicant(x) & FinancialAid(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^\n"}
{"timestamp": "2025-06-10T07:01:31.383417", "premises": ["$GREtestCost = 205", "exists x. (FinancialAid(x) & GREApplicant(x) & EconomicHardship(x))", "$EconomicHardship = EconomicHardship(HavingTooLittleMoney | HavingTooFewResources)", "SingleParentFamily($Tom)", "LongerThanOneYear($TomDad) & OutOfWork($TomDad)"], "conclusion": "-exists x. FinancialAid(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n$EconomicHardship = EconomicHardship(HavingTooLittleMoney | HavingTooFewResources)\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 321, in attempt_adjuncts\n    expression = self.attempt_EqualityExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 464, in attempt_EqualityExpression\n    expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n$EconomicHardship = EconomicHardship(HavingTooLittleMoney | HavingTooFewResources)\n                                                          ^\n"}
{"timestamp": "2025-06-10T07:01:31.397957", "premises": ["Cost(GreTest, 205)", "all x. (Applicant(x) & GreTest(x) & EconomicHardship(x) -> ProvidesFinancialAid(Ets, x))", "EconomicHardship(x) <-> (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearUnemployed(Tom'sDad)"], "conclusion": "-exists x. (Applicant(x) & GreTest(x) & EconomicHardship(x) & ProvidesFinancialAid(Ets, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (TooLittleMoney(x) | TooFewResources(x)) -> EconomicHardship(x))\n                      ^\n"}
{"timestamp": "2025-06-10T07:01:31.398703", "premises": ["GRETestCost = 205", "all x. (GREApplicant(x) & EconomicHardship(x) -> FinancialAid(x))", "EconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearOutOfWork(TomDad)"], "conclusion": "-exists x. (GREApplicant(x) & EconomicHardship(x) & FinancialAid(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))\n                    ^\n"}
{"timestamp": "2025-06-10T07:01:31.399435", "premises": ["CostOfGRETest(205)", "ProvidesFinancialAid(ETS, GREApplicant(x), EconomicHardship(x))", "EconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "OutOfWork(Tom\u2019sDad)"], "conclusion": "-exists x. (GREApplicant(x) & EconomicHardship(x) & ReceivesFinancialAid(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nEconomicHardship(x) \u2261 (TooLittleMoney(x) | TooFewResources(x))\n                    ^\n"}
{"timestamp": "2025-06-10T07:01:31.393712", "premises": ["Cost(GRETest, 205)", "all x. (ApplyForTest(x, GRETest) & ProveHardship(x) -> FinancialAid(x))", "all x. (HardshipByLittleMoney(x) | HardshipByFewResources(x) -> Hardship(x))", "SingleParentFamily(Tom)", "OutOfWorkForMoreThanAYear(Tom'sDad)"], "conclusion": "-exists x. (ApplyForTest(x, GRETest) & FinancialAid(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    OutOfWorkForMoreThanAYear(%%START ERROR%%Tom'sDad%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    OutOfWorkForMoreThanAYear(%%START ERROR%%Tom'sDad%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T07:01:31.397196", "premises": ["GREcost = 205", "FinancialAid(GREapplicant) <- EconomicHardship(GREapplicant)", "EconomicHardship(x) <- (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "OutOfWorkForMoreThanAYear(Tom\u2019sDad)"], "conclusion": "-FinancialAid(GREapplicant)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xe2 in position 627: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 627: invalid continuation byte\n"}
{"timestamp": "2025-06-10T07:01:31.402467", "premises": ["$205 = GRECost", "all x. (EconomicHardship(x) -> ReceivesFinancialAidFromEts(x))", "EconomicHardship(x) = (TooLittleMoney(x) | TooFewResources(x))", "SingleParentFamily(Tom)", "MoreThanAYearOutOfWork(DadOfTom)"], "conclusion": "-exists x. (GREApplicant(x) & EconomicHardship(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EconomicHardship/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EconomicHardship/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EconomicHardship/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EconomicHardship/1\n"}
{"timestamp": "2025-06-10T07:03:05.487923", "premises": ["(SpillALotOfFood(x) -> -TidyConsistently(x) & -EnjoyCleaning(x))", "all x. (Foodie(x) & GoOutFrequently(x) -> SpillALotOfFood(x))", "(GrowUpAsOnlyChild(x) -> TidyConsistently(x) & EnjoyCleaning(x))", "(BusyParents(x) -> GrowUpAsOnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillALotOfFood(Peter) & GrowUpAsOnlyChild(Peter)) | \u00ac(SpillALotOfFood(Peter) & GrowUpAsOnlyChild(Peter)))", "TidyConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> If Peter is not an only child, then Peter does not spill a lot of food.  FOL: -GrowUpAsOnlyChild(Peter) -> -SpillALotOfFood(Peter)", "-SpillALotOfFood(Peter) -> TidyConsistently(Peter) & EnjoyCleaning(Peter)"], "conclusion": "-GrowUpAsOnlyChild(Peter) -> TidyConsistently(Peter) & EnjoyCleaning(Peter) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\n-GrowUpAsOnlyChild(Peter) -> TidyConsistently(Peter) & EnjoyCleaning(Peter) </CONCLUSION>\n                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\n-GrowUpAsOnlyChild(Peter) -> TidyConsistently(Peter) & EnjoyCleaning(Peter) </CONCLUSION>\n                                                                            ^\n"}
{"timestamp": "2025-06-10T07:03:05.503297", "premises": ["(SpillFoodOnClothing(x) -> -TidySpaceConsistently(x) & -EnjoyCleaning(x))", "all x. (Foodie(x) & GoOutFrequently(x) -> SpillFoodOnClothing(x))", "all x. (OnlyChild(x) -> TidySpaceConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighIncome(x) -> BusyParents(x))", "((SpillFoodOnClothing(Peter) & OnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)))"], "conclusion": "TidySpaceConsistently(Peter) & EnjoyCleaning(Peter)", "error_type": "<class 'KeyError'>", "error_message": "26", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 26\n"}
{"timestamp": "2025-06-10T07:03:05.504170", "premises": ["all x. (SpillFoodOnClothing(x) -> -TidySpacesConsistently(x) & -EnjoyCleaning(x))", "all x. (Fooie(x) & FrequentlyGoOutToFindFoodRestaurants(x) -> SpillFoodOnClothing(x))", "all x. (OnlyChild(x) -> TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncomeHousehold(x) -> BusyParents(x))", "((SpillFoodOnClothing(Peter) & OnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)))"], "conclusion": "TidySpacesConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> Peter tidies his space consistently and enjoys the process of cleaning. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTidySpacesConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> Peter tidies his space consistently and enjoys the process of cleaning. </CONCLUSION> <EVALUATE>\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTidySpacesConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> Peter tidies his space consistently and enjoys the process of cleaning. </CONCLUSION> <EVALUATE>\n                                                     ^\n"}
{"timestamp": "2025-06-10T07:03:05.507098", "premises": ["all x. (SpillAFoodOnClothing(x) -> (-TidySpaceConsistently(x) & -EnjoyCleaning(x)))", "all x. (Foodie(x) -> SpillAFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> (TidySpaceConsistently(x) & EnjoyCleaning(x)))", "all x. (BusyParent(x) -> GrewUpAsOnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParent(x))", "((SpillAFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillAFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)))", "TidySpaceConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> In the previous premises, we already found the appropriate FOL expression for the conclusion. So the conclusion is already proved in previous premises.", "all x. (SpillAFoodOnClothing(x) -> (-TidySpaceConsistently(x) & -EnjoyCleaning(x)))", "all x. (Foodie(x) -> SpillAFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> (TidySpaceConsistently(x) & EnjoyCleaning(x)))", "all x. (BusyParent(x) -> GrewUpAsOnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParent(x))", "((SpillAFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillAFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)))"], "conclusion": "TidySpaceConsistently(Peter) & EnjoyCleaning(Peter)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTidySpaceConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> In the previous premises, we already found the appropriate FOL expression for the conclusion. So the conclusion is already proved in previous premises.\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTidySpaceConsistently(Peter) & EnjoyCleaning(Peter) </PREMISES> <CONCLUSION> In the previous premises, we already found the appropriate FOL expression for the conclusion. So the conclusion is already proved in previous premises.\n                                                    ^\n"}
{"timestamp": "2025-06-10T07:06:34.260361", "premises": ["all x. (SpillsALotOfFoodOnClothing(x) -> (-TidySpace(x) & EnjoyCleaning(x)))", "all x. (Foodie(x) & GoesOutFrequently(x) -> SpillsALotOfFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> (TidySpace(x) & EnjoyCleaning(x)))", "all x. (ParentsBusy(x) -> GrewUpAsOnlyChild(x))", "all x. (HighNetIncome(x) -> ParentsBusy(x))", "((SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillsALotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)))"], "conclusion": "(Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) </PREMISES> <CONCLUSION>  FOL: ((SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter)))  FOL: (-SpillsALotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)) -> (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: SpillsALotOfFoodOnClothing(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: ParentsBusy(Peter) -> GrewUpAsOnlyChild(Peter)  FOL: ParentsBusy(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> ParentsBusy(Peter)  FOL: ParentsBusy(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(P", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) </PREMISES> <CONCLUSION>  FOL: ((SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter)))  FOL: (-SpillsALotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)) -> (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: SpillsALotOfFoodOnClothing(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: ParentsBusy(Peter) -> GrewUpAsOnlyChild(Peter)  FOL: ParentsBusy(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> ParentsBusy(Peter)  FOL: ParentsBusy(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(P\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) </PREMISES> <CONCLUSION>  FOL: ((SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter)))  FOL: (-SpillsALotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)) -> (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: SpillsALotOfFoodOnClothing(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: ParentsBusy(Peter) -> GrewUpAsOnlyChild(Peter)  FOL: ParentsBusy(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> ParentsBusy(Peter)  FOL: ParentsBusy(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: Foodie(Peter) & GoesOutFrequently(Peter) -> SpillsALotOfFoodOnClothing(Peter)  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (-TidySpace(Peter) & EnjoyCleaning(Peter))  FOL: (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter) -> (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter))  FOL: (SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (Foodie(Peter) & GoesOutFrequently(Peter)) | HighNetIncome(Peter)  FOL: Foodie(Peter) & GoesOutFrequently(P\n                                                                  ^\n"}
{"timestamp": "2025-06-10T07:06:34.267170", "premises": ["all x. (SpillsALotOfFood(x) -> -TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (Foodie(x) -> SpillsALotOfFood(x))", "all x. (OnlyChild(x) -> TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillsALotOfFood(Peter) & OnlyChild(Peter)) | (-SpillsALotOfFood(Peter) & -OnlyChild(Peter)))"], "conclusion": "(Foodie(Peter) | HighNetIncome(Peter)) </PREMISES>  <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: Foodie(Peter) | HighNetIncome(Peter) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(Foodie(Peter) | HighNetIncome(Peter)) </PREMISES>  <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: Foodie(Peter) | HighNetIncome(Peter) </CONCLUSION>\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(Foodie(Peter) | HighNetIncome(Peter)) </PREMISES>  <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: Foodie(Peter) | HighNetIncome(Peter) </CONCLUSION>\n                                       ^\n"}
{"timestamp": "2025-06-10T07:06:34.278007", "premises": ["all x. (SpillFoodOnClothing(x) -> NotTidySpaces(x) & EnjoyCleaning(x))", "all x. (Foodie(x) & GoesOutFrequently(x) -> SpillFoodOnClothing(x))", "all x. (OnlyChild(x) -> TidySpaces(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillFoodOnClothing(Peter) & OnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)))"], "conclusion": "Foodie(Peter) | HighNetIncome(Peter) </PREMISES> <CONCLUSION> FOL: ((Foodie(Peter) & -HighNetIncome(Peter)) | (-Foodie(Peter) & HighNetIncome(Peter))) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFoodie(Peter) | HighNetIncome(Peter) </PREMISES> <CONCLUSION> FOL: ((Foodie(Peter) & -HighNetIncome(Peter)) | (-Foodie(Peter) & HighNetIncome(Peter))) </CONCLUSION>\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFoodie(Peter) | HighNetIncome(Peter) </PREMISES> <CONCLUSION> FOL: ((Foodie(Peter) & -HighNetIncome(Peter)) | (-Foodie(Peter) & HighNetIncome(Peter))) </CONCLUSION>\n                                     ^\n"}
{"timestamp": "2025-06-10T07:06:34.284852", "premises": ["all x. (SpillLotOfFoodOnClothing(x) -> (-TidySpacesConsistently(x) & -EnjoyCleaning(x)))", "all x. (FoodieWhoGoOutFrequently(x) -> SpillLotOfFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (HaveBusyParents(x) -> GrewUpAsOnlyChild(x))", "all x. (HouseholdWithHighNetIncome(x) -> HaveBusyParents(x))"], "conclusion": "((SpillLotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillLotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: (FoodieWhoGoOutFrequently(Peter) | HouseholdWithHighNetIncome(Peter)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((SpillLotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillLotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: (FoodieWhoGoOutFrequently(Peter) | HouseholdWithHighNetIncome(Peter)) </CONCLUSION> <EVALUATE>\n                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((SpillLotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillLotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.  FOL: (FoodieWhoGoOutFrequently(Peter) | HouseholdWithHighNetIncome(Peter)) </CONCLUSION> <EVALUATE>\n                                                                                                                                ^\n"}
{"timestamp": "2025-06-10T07:06:34.294771", "premises": ["all x. (SpillFoodOnClothing(x) -> \u00acTidySpaceConsistently(x) & \u00acEnjoyCleaning(x))", "all x. (Foodie(x) & GoOutFrequently(x) -> SpillFoodOnClothing(x))", "all x. (OnlyChild(x) -> TidySpaceConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillFoodOnClothing(Peter) & OnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)))"], "conclusion": "(Foodie(Peter) & GoOutFrequently(Peter)) | HighNetIncome(Peter)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 632: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 632: invalid continuation byte\n"}
{"timestamp": "2025-06-10T07:08:26.746205", "premises": ["all x. (SpillFoodOnClothing(x) -> (-TidySpaceConsistently(x) & EnjoyCleaning(x)))", "all x. (Foodie(x) & GoesOutOfFrequently(x) -> SpillFoodOnClothing(x))", "all x. (RaisedAsOnlyChild(x) -> (TidySpaceConsistently(x) & EnjoyCleaning(x)))", "all x. (BusyParents(x) -> RaisedAsOnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))"], "conclusion": "((SpillFoodOnClothing(Peter) & RaisedAsOnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -RaisedAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoesOutOfFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & GoesOutOfFrequently(Peter) & -HighNetIncome(Peter))) <EVALUATE>  The conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((SpillFoodOnClothing(Peter) & RaisedAsOnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -RaisedAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoesOutOfFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & GoesOutOfFrequently(Peter) & -HighNetIncome(Peter))) <EVALUATE>  The conclusion follows from the premises.\n                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((SpillFoodOnClothing(Peter) & RaisedAsOnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -RaisedAsOnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoesOutOfFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & GoesOutOfFrequently(Peter) & -HighNetIncome(Peter))) <EVALUATE>  The conclusion follows from the premises.\n                                                                                                                      ^\n"}
{"timestamp": "2025-06-10T07:08:26.756199", "premises": ["all x. (SpillAFood(x) -> -TidySpaces(x) & EnjoyCleaning(x))", "all x. (Foodie(x) & GoOutFrequently(x) -> SpillAFood(x))", "all x. (OnlyChild(x) -> TidySpaces(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillAFood(Peter) & OnlyChild(Peter)) | (-SpillAFood(Peter) & -OnlyChild(Peter)))"], "conclusion": "((Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income. </CONCLUSION> <EVALUATE>\n                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income. </CONCLUSION> <EVALUATE>\n                                                                                    ^\n"}
{"timestamp": "2025-06-10T07:08:26.756561", "premises": ["all x. (SpillAFood(x) -> -TidySpacesConsistently(x) & -EnjoyCleaning(x))", "all x. (Foodie(x) & FrequentDiner(x) -> SpillAFood(x))", "all x. (OnlyChild(x) -> TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))"], "conclusion": "((SpillAFood(Peter) & OnlyChild(Peter)) | (-SpillAFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & FrequentDiner(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -FrequentDiner(Peter) & -HighNetIncome(Peter))) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<CONCLUSION>'.\n((SpillAFood(Peter) & OnlyChild(Peter)) | (-SpillAFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & FrequentDiner(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -FrequentDiner(Peter) & -HighNetIncome(Peter))) </CONCLUSION> <EVALUATE>\n                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<CONCLUSION>'.\n((SpillAFood(Peter) & OnlyChild(Peter)) | (-SpillAFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & FrequentDiner(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -FrequentDiner(Peter) & -HighNetIncome(Peter))) </CONCLUSION> <EVALUATE>\n                                                                                                ^\n"}
{"timestamp": "2025-06-10T07:08:26.760690", "premises": ["all x. (SpillFoodOnClothing(x) -> -TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (Foodie(x) & GoesOutFrequently(x) -> SpillFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> TidySpacesConsistently(x) & EnjoyCleaning(x))", "all x. (BusyParents(x) -> GrewUpAsOnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "((SpillFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter)))", "((Foodie(Peter) & GoesOutFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -GoesOutFrequently(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> <EVALUATE>"], "conclusion": "((Foodie(Peter) & GoesOutFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -GoesOutFrequently(Peter) & -HighNetIncome(Peter)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((Foodie(Peter) & GoesOutFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -GoesOutFrequently(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> <EVALUATE>\n                                                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((Foodie(Peter) & GoesOutFrequently(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -GoesOutFrequently(Peter) & -HighNetIncome(Peter))) </PREMISES> <CONCLUSION> <EVALUATE>\n                                                                                                                                           ^\n"}
{"timestamp": "2025-06-10T07:08:26.765851", "premises": ["all x. (SpillsALotOfFoodOnClothing(x) -> (NotTidySpacesConsistently(x) & EnjoyCleaning(x)))", "all x. (FoodieWhoGoOutFrequently(x) -> SpillsALotOfFoodOnClothing(x))", "all x. (GrewUpAsOnlyChild(x) -> (TidySpacesConsistently(x) & EnjoyCleaning(x)))", "all x. (ParentsVeryBusy(x) -> GrewUpAsOnlyChild(x))", "all x. (HouseholdWithHighNetIncome(x) -> ParentsVeryBusy(x))", "(SpillsALotOfFoodOnClothing(Peter) & GrewUpAsOnlyChild(Peter)) | (-SpillsALotOfFoodOnClothing(Peter) & -GrewUpAsOnlyChild(Peter))", "(FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter)) | (-FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter)) </PREMISES> <CONCLUSION> If Peter is not a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income, then Peter is a foodie who goes out frequently to find new food restaurants to try and does not belong to a household with a high net income. </CONCLUSION> <EVALUATE>", "(-FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter)) -> (FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter))", "-((FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter))) -> (FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter))", "-((FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter))) -> (FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter))"], "conclusion": "-((FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter))) -> (FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter)) | (-FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter)) </PREMISES> <CONCLUSION> If Peter is not a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income, then Peter is a foodie who goes out frequently to find new food restaurants to try and does not belong to a household with a high net income. </CONCLUSION> <EVALUATE>\n                                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(FoodieWhoGoOutFrequently(Peter) & HouseholdWithHighNetIncome(Peter)) | (-FoodieWhoGoOutFrequently(Peter) & -HouseholdWithHighNetIncome(Peter)) </PREMISES> <CONCLUSION> If Peter is not a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income, then Peter is a foodie who goes out frequently to find new food restaurants to try and does not belong to a household with a high net income. </CONCLUSION> <EVALUATE>\n                                                                                                                                                ^\n"}
{"timestamp": "2025-06-10T07:08:26.766386", "premises": ["all x. (SpillFoodOnClothing(x) -> (NotTidySpaces(x) & EnjoyCleaning(x)))", "all x. (Foodie(x) -> SpillFoodOnClothing(x))", "all x. (OnlyChild(x) -> (TidySpaces(x) & EnjoyCleaning(x)))", "all x. (BusyParents(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParents(x))", "(SpillFoodOnClothing(Peter) & OnlyChild(Peter)) | (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: (-SpillFoodOnClothing(Peter) & -OnlyChild(Peter)) -> (Foodie(Peter) & HighNetIncome(Peter))"], "conclusion": "(Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\n(Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter)) </CONCLUSION> <EVALUATE>\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\n(Foodie(Peter) & HighNetIncome(Peter)) | (-Foodie(Peter) & -HighNetIncome(Peter)) </CONCLUSION> <EVALUATE>\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T07:08:26.774432", "premises": ["all x. (SpillFood(x) -> (-TidySpaces(x) & EnjoyCleaning(x)))", "all x. (Foodie(x) -> GoOutFrequently(x) \u2192 SpillFood(x))", "all x. (OnlyChild(x) -> (TidySpaces(x) & EnjoyCleaning(x)))", "all x. (BusyParent(x) -> OnlyChild(x))", "all x. (HighNetIncome(x) -> BusyParent(x))"], "conclusion": "((SpillFood(Peter) & OnlyChild(Peter)) | (-SpillFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoOutFrequently(Peter) & HighNetIncome(Peter)) | (Foodie(Peter) & GoOutFrequently(Peter) & -HighNetIncome(Peter)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((SpillFood(Peter) & OnlyChild(Peter)) | (-SpillFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoOutFrequently(Peter) & HighNetIncome(Peter)) | (Foodie(Peter) & GoOutFrequently(Peter) & -HighNetIncome(Peter)))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((SpillFood(Peter) & OnlyChild(Peter)) | (-SpillFood(Peter) & -OnlyChild(Peter))) </PREMISES> <CONCLUSION> Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.  FOL: ((Foodie(Peter) & GoOutFrequently(Peter) & HighNetIncome(Peter)) | (Foodie(Peter) & GoOutFrequently(Peter) & -HighNetIncome(Peter)))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T07:09:04.001282", "premises": ["all x. (FirTree(x) -> Evergreen(x))"], "conclusion": "exists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>\n                                            ^\n"}
{"timestamp": "2025-06-10T07:09:04.007251", "premises": ["all x. (FirTree(x) -> Evergreen(x))"], "conclusion": "exists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x))\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (ObjectOfWorship(x) & FirTree(x)) </PREMISES> <CONCLUSION> Some evergreens are not objects of worship.  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x)) </CONCLUSION> <EVALUATE>  FOL: exists x. (Evergreen(x) & -ObjectOfWorship(x))\n                                            ^\n"}
{"timestamp": "2025-06-10T07:10:00.570443", "premises": ["(PicurisMountains -> In(NM|TX, PicurisMountains))", "Visited(JuanDeOnate, PicurisMountains)", "Donated(PicurisMountains)", "-exists x. exists y. (In(TX, x) & MountainRange(x) & In(x, y) & Mine(y) & Donated(y))"], "conclusion": "Visited(JuanDeOnate, NM)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(PicurisMountains -> In(NM|TX, PicurisMountains))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(PicurisMountains -> In(NM|TX, PicurisMountains))\n                          ^\n"}
{"timestamp": "2025-06-10T07:10:00.580423", "premises": ["PicurisMountains(MountainRangeInNMOrTx(PicurisMountains))", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine) & LocatedIn(HardingPegmatiteMine, PicurisMountains)"], "conclusion": "-exists x. (MountainRangeInTx(x) & Donated(Mine(x))) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in New Mexico.  FOL: Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains)) </CONCLUSION> <EVALUATE> We define MountainRangeInNMOrTx as an abbreviation for MountainRangeInNM(x) | MountainRangeInTx(x). FOL:   MountainRangeInNMOrTx(x) := MountainRangeInNM(x) | MountainRangeInTx(x)   PicurisMountains(MountainRangeInNMOrTx(PicurisMountains)) &   Visited(JuanDeOnate, PicurisMountains) &   Donated(HardingPegmatiteMine) &   LocatedIn(HardingPegmatiteMine, PicurisMountains) &   -exists x. (MountainRangeInTx(x) & Donated(Mine(x)))   ->   Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTx(x) & Donated(Mine(x))) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in New Mexico.  FOL: Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains)) </CONCLUSION> <EVALUATE> We define MountainRangeInNMOrTx as an abbreviation for MountainRangeInNM(x) | MountainRangeInTx(x). FOL:   MountainRangeInNMOrTx(x) := MountainRangeInNM(x) | MountainRangeInTx(x)   PicurisMountains(MountainRangeInNMOrTx(PicurisMountains)) &   Visited(JuanDeOnate, PicurisMountains) &   Donated(HardingPegmatiteMine) &   LocatedIn(HardingPegmatiteMine, PicurisMountains) &   -exists x. (MountainRangeInTx(x) & Donated(Mine(x)))   ->   Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTx(x) & Donated(Mine(x))) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in New Mexico.  FOL: Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains)) </CONCLUSION> <EVALUATE> We define MountainRangeInNMOrTx as an abbreviation for MountainRangeInNM(x) | MountainRangeInTx(x). FOL:   MountainRangeInNMOrTx(x) := MountainRangeInNM(x) | MountainRangeInTx(x)   PicurisMountains(MountainRangeInNMOrTx(PicurisMountains)) &   Visited(JuanDeOnate, PicurisMountains) &   Donated(HardingPegmatiteMine) &   LocatedIn(HardingPegmatiteMine, PicurisMountains) &   -exists x. (MountainRangeInTx(x) & Donated(Mine(x)))   ->   Visited(JuanDeOnate, MountainRangeInNM(PicurisMountains))\n                                                     ^\n"}
{"timestamp": "2025-06-10T07:10:00.582528", "premises": ["PicurisMountains \u2208 NewMexico \u222a Texas", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine) & In(HardingPegmatiteMine, PicurisMountains)", "all x. (InMountainRange(x, Texas) -> -DonatedMine(x))"], "conclusion": "Visited(JuanDeOnate, InMountainRange(x, NewMexico))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nPicurisMountains \u2208 NewMexico \u222a Texas\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nPicurisMountains \u2208 NewMexico \u222a Texas\n                 ^\n"}
{"timestamp": "2025-06-10T07:10:00.590884", "premises": ["all x. (PicurisMountains(x) -> (NewMexico(x) | Texas(x)))", "Visited(JuanDeOnate, PicurisMountains)", "LocatedIn(PegmatiteMine, PicurisMountains) & Donated(PegmatiteMine)", "all x. all y. (Texas(x) & MountainRange(x) -> (LocatedIn(y, x) -> -Donated(y)))"], "conclusion": "Visited(JuanDeOnate, NewMexico)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0\n"}
{"timestamp": "2025-06-10T07:10:00.594155", "premises": ["PicurisMountains(In(PicurisMountains, NewMexico)) | PicurisMountains(In(PicurisMountains, Texas))", "Visited(Onate, PicurisMountains)", "Donated(HardingPegmatiteMine) & LocatedIn(HardingPegmatiteMine, PicurisMountains)", "-exists x. (MountainRange(x) & In(x, Texas) & exists y. (Mine(y) & LocatedIn(y, x) & Donated(y)))"], "conclusion": "Visited(Onate, exists x. (MountainRange(x) & In(x, NewMexico)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Visited(%%START ERROR%%Onate,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Visited(%%START ERROR%%Onate,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T07:10:00.594028", "premises": ["all x. (PicurisMountains(x) -> (MountainRangeInNewMexico(x) | MountainRangeInTexas(x)))", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine)", "all x. (MountainRangeInTexas(x) -> exists y. (MountainRange(x) & LocatedIn(y, x) & Mine(y) & -Donated(y)))"], "conclusion": "Visited(JuanDeOnate, x) & MountainRangeInNewMexico(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0\n"}
{"timestamp": "2025-06-10T07:10:52.510419", "premises": ["PicurisMountains(MountainRangeInNMorTX)", "PicurisMountains(MountainRangeInNM) | PicurisMountains(MountainRangeInTX)", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine, PicurisMountains)", "-exists x. (MountainRangeInTX(x) & HasMine(x) & Donated(Mine))"], "conclusion": "Visited(JuanDeOnate, MountainRangeInTX)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0, MountainRangeInTX/1, MountainRangeInTX/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0, MountainRangeInTX/1, MountainRangeInTX/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0, MountainRangeInTX/1, MountainRangeInTX/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0, MountainRangeInTX/1, MountainRangeInTX/0\n"}
{"timestamp": "2025-06-10T07:10:52.512263", "premises": ["PicurisMountainsInNewMexico | PicurisMountainsInTexas", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine)", "-exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in Texas.  FOL: Visited(JuanDeOnate, PicurisMountains) & PicurisMountainsInTexas & -exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </CONCLUSION> <EVALUATE>", "PicurisMountainsInNewMexico | PicurisMountainsInTexas", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine)", "-exists x. (MountainRangeInTexas(x) & HasDonatedMine(x))"], "conclusion": "Visited(JuanDeOnate, PicurisMountains) & PicurisMountainsInTexas", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in Texas.  FOL: Visited(JuanDeOnate, PicurisMountains) & PicurisMountainsInTexas & -exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </CONCLUSION> <EVALUATE>\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </PREMISES> <CONCLUSION> Juan de Onate visited a mountain range in Texas.  FOL: Visited(JuanDeOnate, PicurisMountains) & PicurisMountainsInTexas & -exists x. (MountainRangeInTexas(x) & HasDonatedMine(x)) </CONCLUSION> <EVALUATE>\n                                                         ^\n"}
{"timestamp": "2025-06-10T07:10:52.517718", "premises": ["PicurisMountains \u2208 (NewMexico | Texas)", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine) & LocatedIn(HardingPegmatiteMine, PicurisMountains)", "-exists x. (MountainRangeInTexas(x) & Mine(x) & Donated(x))"], "conclusion": "Visited(JuanDeOnate, x), x \u2208 MountainRangeInTexas", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nVisited(JuanDeOnate, x), x \u2208 MountainRangeInTexas\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nVisited(JuanDeOnate, x), x \u2208 MountainRangeInTexas\n                       ^\n"}
{"timestamp": "2025-06-10T07:10:52.518243", "premises": ["PicurisMountains(InNewMexico(PicurisMountains) | InTexas(PicurisMountains))", "Visited(Onate, PicurisMountains)", "Donated(HardingPegmatiteMine & LocatedIn(PicurisMountains, HardingPegmatiteMine))", "-exists x. exists y. (InTexas(x) & LocatedIn(x, y) & Mine(y) & Donated(y))"], "conclusion": "Visited(Onate, exists x. (InTexas(x) & MountainRange(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nPicurisMountains(InNewMexico(PicurisMountains) | InTexas(PicurisMountains))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nPicurisMountains(InNewMexico(PicurisMountains) | InTexas(PicurisMountains))\n                                               ^\n"}
{"timestamp": "2025-06-10T07:10:52.518672", "premises": ["PicurisMountains(NM|TX)", "Visited(JuanDeOnate, PicurisMountains)", "LocatedIn(HardingPegmatiteMine, PicurisMountains)", "-exists x. (MountainRange(x) & In(x, TX) & LocatedIn(HasMine(x), x) & Donated(HasMine(x)))"], "conclusion": "Visited(JuanDeOnate, Exists x. (MountainRange(x) & In(x, TX)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nVisited(JuanDeOnate, Exists x. (MountainRange(x) & In(x, TX)))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nVisited(JuanDeOnate, Exists x. (MountainRange(x) & In(x, TX)))\n                            ^\n"}
{"timestamp": "2025-06-10T07:10:52.521438", "premises": ["MountainRangeIn(NM) | MountainRangeIn(Texas)", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine)", "all x. all y. (MountainRangeIn(Texas, x) & HasMine(x, y) & Donated(y) -> False)"], "conclusion": "Visited(JuanDeOnate, x) & MountainRangeIn(Texas, x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MountainRangeIn/1, MountainRangeIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MountainRangeIn/1, MountainRangeIn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MountainRangeIn/1, MountainRangeIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MountainRangeIn/1, MountainRangeIn/2\n"}
{"timestamp": "2025-06-10T07:10:52.525240", "premises": ["(PicurisMountains \u2208 NewMexico) | (PicurisMountains \u2208 Texas)", "Visited(Onate, PicurisMountains)", "Donated(MineInPicurisMountains)", "-exists x. (MountainRangeInTexas(x) & Mine(x) & Donated(x))"], "conclusion": "Visited(Onate, x) & MountainRangeInTexas(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.  Expected token ')'.\n(PicurisMountains \u2208 NewMexico) | (PicurisMountains \u2208 Texas)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.  Expected token ')'.\n(PicurisMountains \u2208 NewMexico) | (PicurisMountains \u2208 Texas)\n                  ^\n"}
{"timestamp": "2025-06-10T07:10:52.525747", "premises": ["all x. (PicurisMountains(x) -> In(x, NewMexico) | In(x, Texas))", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine)", "all x. (MountainRangeInTexas(x) -> -DonatedMine(x))"], "conclusion": "Visited(JuanDeOnate, x) & In(x, Texas) & MountainRangeInTexas(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0\n"}
{"timestamp": "2025-06-10T07:12:00.582824", "premises": ["(MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains))", "Visited(PicurisMountains, JuanDeOnate)", "(LocatedIn(PicurisMountains, HardingPegmatiteMine) & Donated(HardingPegmatiteMine))", "-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) </PREMISES> <CONCLUSION> The Harding Pegmatite Mine is not located in a mountain range in New Mexico.  FOL: (MountainRangeInNewMexico(HardingPegmatiteMine) -> Donated(HardingPegmatiteMine)) </CONCLUSION> <EVALUATE>", "(MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains))", "Visited(PicurisMountains, JuanDeOnate)", "(LocatedIn(PicurisMountains, HardingPegmatiteMine) & Donated(HardingPegmatiteMine))", "-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x)))"], "conclusion": "(MountainRangeInNewMexico(HardingPegmatiteMine) -> Donated(HardingPegmatiteMine))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) </PREMISES> <CONCLUSION> The Harding Pegmatite Mine is not located in a mountain range in New Mexico.  FOL: (MountainRangeInNewMexico(HardingPegmatiteMine) -> Donated(HardingPegmatiteMine)) </CONCLUSION> <EVALUATE>\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) </PREMISES> <CONCLUSION> The Harding Pegmatite Mine is not located in a mountain range in New Mexico.  FOL: (MountainRangeInNewMexico(HardingPegmatiteMine) -> Donated(HardingPegmatiteMine)) </CONCLUSION> <EVALUATE>\n                                                          ^\n"}
{"timestamp": "2025-06-10T07:12:00.614408", "premises": ["(MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains))", "Visited(PicurisMountains, JuanDeOnate)", "LocatedIn(PicurisMountains, HardingPegmatiteMine) & Donated(HardingPegmatiteMine)", "-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) </PREMISES> <CONCLUSION> The Harding Pegmatite Mine is not located in a mountain range in New Mexico.  FOL: -MountainRangeInNewMexico(PicurisMountains)"], "conclusion": "-LocatedIn(PicurisMountains, HardingPegmatiteMine) | -MountainRangeInNewMexico(PicurisMountains) We know that the mine is located in Picuris Mountains, hence we need to show that Picuris Mountains is not a mountain range in New Mexico. FOL: -MountainRangeInNewMexico(PicurisMountains) From the first premise we know that Picuris Mountains are a mountain range in New Mexico or Texas. FOL: (MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains)) If Picuris Mountains are a mountain range in New Mexico, then the mine is located in a mountain range in New Mexico, which contradicts our conclusion. FOL: -MountainRangeInNewMexico(PicurisMountains) -> -LocatedIn(PicurisMountains, HardingPegmatiteMine) Thus, Picuris Mountains must be a mountain range in Texas. FOL: MountainRangeInTexas(PicurisMountains) From the third premise we know that there are no mountain ranges in Texas with donated mines, hence Picuris Mountains cannot be a mountain range in Texas. FOL: -exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) This is a contradiction, hence our assumption that Picuris Mountains are a mountain range in New Mexico must be false. FOL: -MountainRangeInNewMexico(PicurisMountains)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'We'.\n-LocatedIn(PicurisMountains, HardingPegmatiteMine) | -MountainRangeInNewMexico(PicurisMountains) We know that the mine is located in Picuris Mountains, hence we need to show that Picuris Mountains is not a mountain range in New Mexico. FOL: -MountainRangeInNewMexico(PicurisMountains) From the first premise we know that Picuris Mountains are a mountain range in New Mexico or Texas. FOL: (MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains)) If Picuris Mountains are a mountain range in New Mexico, then the mine is located in a mountain range in New Mexico, which contradicts our conclusion. FOL: -MountainRangeInNewMexico(PicurisMountains) -> -LocatedIn(PicurisMountains, HardingPegmatiteMine) Thus, Picuris Mountains must be a mountain range in Texas. FOL: MountainRangeInTexas(PicurisMountains) From the third premise we know that there are no mountain ranges in Texas with donated mines, hence Picuris Mountains cannot be a mountain range in Texas. FOL: -exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) This is a contradiction, hence our assumption that Picuris Mountains are a mountain range in New Mexico must be false. FOL: -MountainRangeInNewMexico(PicurisMountains)\n                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'We'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'We'.\n-LocatedIn(PicurisMountains, HardingPegmatiteMine) | -MountainRangeInNewMexico(PicurisMountains) We know that the mine is located in Picuris Mountains, hence we need to show that Picuris Mountains is not a mountain range in New Mexico. FOL: -MountainRangeInNewMexico(PicurisMountains) From the first premise we know that Picuris Mountains are a mountain range in New Mexico or Texas. FOL: (MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains)) If Picuris Mountains are a mountain range in New Mexico, then the mine is located in a mountain range in New Mexico, which contradicts our conclusion. FOL: -MountainRangeInNewMexico(PicurisMountains) -> -LocatedIn(PicurisMountains, HardingPegmatiteMine) Thus, Picuris Mountains must be a mountain range in Texas. FOL: MountainRangeInTexas(PicurisMountains) From the third premise we know that there are no mountain ranges in Texas with donated mines, hence Picuris Mountains cannot be a mountain range in Texas. FOL: -exists x. (MountainRangeInTexas(x) & Donated(MineIn(x))) This is a contradiction, hence our assumption that Picuris Mountains are a mountain range in New Mexico must be false. FOL: -MountainRangeInNewMexico(PicurisMountains)\n                                                                                                 ^\n"}
{"timestamp": "2025-06-10T07:12:00.611115", "premises": ["all x. (PicurisMountains(x) -> (NewMexico(x) | Texas(x)))", "Visited(Onate, PicurisMountains)", "all x. (In(PegmatiteMine, PicurisMountains) & Donated(PegmatiteMine) -> PegmatiteMine(x))", "all x. (Texas(x) & In(x, Mine) & Donated(x) -> False)"], "conclusion": "-In(PegmatiteMine, NewMexico)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0, PegmatiteMine/1, PegmatiteMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0, PegmatiteMine/1, PegmatiteMine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0, PegmatiteMine/1, PegmatiteMine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PicurisMountains/1, PicurisMountains/0, NewMexico/1, NewMexico/0, PegmatiteMine/1, PegmatiteMine/0\n"}
{"timestamp": "2025-06-10T07:12:00.614985", "premises": ["InNMorTX(PicurisMountains)", "Visited(JuanDeOnate, PicurisMountains)", "Donated(HardingPegmatiteMine) & LocatedIn(HardingPegmatiteMine, PicurisMountains)", "all x. (MountainRangeInTexas(x) -> \u00acexists y. (Mine(y) & LocatedIn(y, x) & Donated(y)))"], "conclusion": "\u00acexists x. (MountainRangeInNM(x) & LocatedIn(HardingPegmatiteMine, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n\u00acexists x. (MountainRangeInNM(x) & LocatedIn(HardingPegmatiteMine, x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n\u00acexists x. (MountainRangeInNM(x) & LocatedIn(HardingPegmatiteMine, x))\n        ^\n"}
{"timestamp": "2025-06-10T07:12:00.623596", "premises": ["PicurisMountains \u2208 {NewMexico, Texas} FOL: (PicurisMountains = NewMexico) | (PicurisMountains = Texas)", "Visited(JuanDeOnate, PicurisMountains)", "LocatedIn(HardingPegmatiteMine, PicurisMountains) & Donated(HardingPegmatiteMine)", "-exists x. (MountainRange(x) & In(x, Texas) & LocatedIn(HardM(x), x) & Donated(HardM(x)))"], "conclusion": "-LocatedIn(HardingPegmatiteMine, NewMexico)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nPicurisMountains \u2208 {NewMexico, Texas} FOL: (PicurisMountains = NewMexico) | (PicurisMountains = Texas)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nPicurisMountains \u2208 {NewMexico, Texas} FOL: (PicurisMountains = NewMexico) | (PicurisMountains = Texas)\n                 ^\n"}
{"timestamp": "2025-06-10T07:12:00.626788", "premises": ["(MountainRangeInNewMexico(PicurisMountains) | MountainRangeInTexas(PicurisMountains))", "Visited(JuanDeOnate, PicurisMountains)", "Donated(MineInThePicurisMountains)", "-exists x. (MountainRangeInTexas(x) & Donated(MineIn(x)))"], "conclusion": "-MineInThePicurisMountains", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MineInThePicurisMountains/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MineInThePicurisMountains/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MineInThePicurisMountains/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MineInThePicurisMountains/0\n"}
{"timestamp": "2025-06-10T07:12:00.627009", "premises": ["PicurisMountains(MountainRangeInNewMexicoOrTexas)", "Visited(PicurisMountains, JuanDeOnate)", "Donated(HardingPegmatiteMine, PicurisMountains)", "all x. (MountainRangeInTexas(x) -> -Donated(Mine(x)))"], "conclusion": "-MountainRangeInNewMexico(HardingPegmatiteMine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Donated/1, Donated/2, PicurisMountains/1, PicurisMountains/0\n"}
{"timestamp": "2025-06-10T07:13:24.291352", "premises": ["all x. all y. (Tall(x, y) -> CanBlock(x, y))", "all x. all y. (Tall(x, y) -> CanBlock(x, y))", "TallerThanAllInClass(Michael, MichaelsClass)", "all x. all y. all z. ((Tall(x, y) & Tall(y, z)) -> Tall(x, z))", "Tall(Peter, Michael)", "all x. (Shooting(x) & Not(Jumping(x)) -> CanBlock(Michael, x))", "-CanBlock(Michael, Windy)", "all x. (Shooter(x) & Jumping(x) -> GreatShooter(x))"], "conclusion": "exists x. (InClass(x, MichaelsClass) & ShorterThan(Peter, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Jumping/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Jumping/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Jumping/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Jumping/1\n"}
{"timestamp": "2025-06-10T07:13:57.129468", "premises": ["all x. all y. (Man(x) & Man(y) & TallerThan(x, y) -> CanBlockShooting(x, y))", "Man(Michael) & all x. (Man(x) & InClass(x, Michael) -> -TallerThan(x, Michael))", "all x. all y. all z. (TallerThan(x, y) & TallerThan(y, z) -> TallerThan(x, z))", "Man(Peter) & TallerThan(Peter, Michael)", "all x. (Man(x) & DoesNotJumpWhenShooting(x) -> CanBlockShooting(Michael, x))", "CanJumpWhenShooting(Windy) & -CanBlockShooting(Michael, Windy)", "all x. (Man(x) & CanJumpWhenShooting(x) -> GreatShooter(x))"], "conclusion": "all x. (Man(x) & InClass(x, Michael) -> TallerThan(Michael, x)) & TallerThan(Michael, Peter)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T07:13:57.875297", "premises": ["all x. all y. (Man(x) & Man(y) & TallerThan(x, y) -> CanBlockShooting(x, y))", "all x. (SameClass(x, Michael) -> ShorterThan(x, Michael))", "all x. all y. all z. (Man(x) & Man(y) & Man(z) & TallerThan(x, y) & TallerThan(y, z) -> TallerThan(x, z))", "TallerThan(Peter, Michael)", "all x. (Man(x) & -CanJump(x) -> CanBlockShooting(Michael, x))", "-CanBlockShooting(Michael, Windy)", "all x. (Man(x) & CanJump(x) -> GreatShooter(x))"], "conclusion": "all x. (SameClass(x, Michael) -> TallerThan(x, Peter))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T07:13:57.905443", "premises": ["all x. all y. (Man(x) & Man(y) & Taller(x, y) -> Block(x, y))", "all x. all y. all z. (Man(x) & Man(y) & Man(z) & Taller(x, y) & Taller(y, z) -> Taller(x, z))", "all x. (Man(Michael) & Classmate(Michael, x) -> Taller(Michael, x))", "Man(Peter) & Taller(Peter, Michael)", "all x. (Man(x) & -CanJump(x) -> Block(Michael, x))", "-Block(Michael, Windy)", "all x. (Man(x) & CanJump(x) -> GreatShooter(x))"], "conclusion": "all x. (Man(x) & Classmate(x, Michael) -> -Taller(Peter, x))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T07:15:21.840374", "premises": ["all x. all y. (TallerThan(x, y) -> CanBlockShooting(x, y))", "all z. (Man(z) & InClass(z) & -TallerThan(Michael, z))", "all x. all y. all z. ((TallerThan(x, y) & TallerThan(y, z)) -> TallerThan(x, z))", "TallerThan(Peter, Michael)", "all x. (-Jumping(x) -> CanBlockShooting(Michael, x))", "CanBlockShooting(Michael, Windy) \u2192 Jumping(Windy)", "all x. (Shooter(x) & Jumping(x) -> GreatShooter(x))"], "conclusion": "GreatShooter(Windy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nCanBlockShooting(Michael, Windy) \u2192 Jumping(Windy)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nCanBlockShooting(Michael, Windy) \u2192 Jumping(Windy)\n                                 ^\n"}
{"timestamp": "2025-06-10T07:15:21.949721", "premises": ["all x. all y. (TallerThan(x, y) -> CanBlock(x, y))", "exists x. (Man(x) & TallerThan(x, y) & ForAll(y). ClassMember(y))", "all x. all y. all z. (TallerThan(x, y) & TallerThan(y, z) -> TallerThan(x, z))", "exists x. (Man(x) & TallerThan(x, Michael))", "exists x. (Man(x) & CanBlock(x, y) & ~JumpWhenShooting(y))", "exists x. (Man(x) & ~CanBlock(x, Windy))", "all x. (Shooter(x) & JumpWhenShooting(x) -> GreatShooter(x))"], "conclusion": "GreatShooter(Windy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. (Man(x) & TallerThan(x, y) & ForAll(y). ClassMember(y))\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. (Man(x) & TallerThan(x, y) & ForAll(y). ClassMember(y))\n                                                ^\n"}
{"timestamp": "2025-06-10T07:15:21.951764", "premises": ["(Taller(x, y) <-> CanBlock(x, y))", "all x. all y. (Taller(x, y) -> CanBlock(x, y))", "all x. (Taller(Michael, x))", "all x. all y. all z. ((Taller(x, y) & Taller(y, z)) -> Taller(x, z))", "Taller(Peter, x)", "all x. all y. ((CanBlock(x, y) & -Jump(y)) -> CanBlock(Michael, y))", "-CanBlock(Michael, Windy)", "all x. (GreatShooter(x) -> CanJump(x))"], "conclusion": "GreatShooter(Windy) </PREMISES> <CONCLUSION> Windy is a great shooter.  FOL: GreatShooter(Windy) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nGreatShooter(Windy) </PREMISES> <CONCLUSION> Windy is a great shooter.  FOL: GreatShooter(Windy) </CONCLUSION> <EVALUATE>\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nGreatShooter(Windy) </PREMISES> <CONCLUSION> Windy is a great shooter.  FOL: GreatShooter(Windy) </CONCLUSION> <EVALUATE>\n                    ^\n"}
{"timestamp": "2025-06-10T07:16:48.505820", "premises": ["all x. all y. (Tall(x, y) -> CanBlock(x, y))", "Class(Michael) & all y. (Class(y) & ~y = Michael -> Tall(Michael, y))", "all x. all y. all z. ((Tall(x, y) & Tall(y, z)) -> Tall(x, z))", "Tall(Peter, Michael)", "all x. (~Jump(x) -> CanBlock(Michael, x))", "-CanBlock(Michael, Windy)", "all x. (Shooter(x) & Jump(x) -> GreatShooter(x))"], "conclusion": "CanBlock(Peter, Windy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Class(Michael) & all y ((Class(y) & (%%START ERROR%%~y = Michael%%END ERROR%%)) -> Tall(Michael,y))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Class(Michael) & all y ((Class(y) & (%%START ERROR%%~y = Michael%%END ERROR%%)) -> Tall(Michael,y))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T07:16:48.625750", "premises": ["all x. all y. (Taller(x, y) -> CanBlock(x, y))", "Taller(Michael, every x. Classmate(x, Michael))", "all x. all y. all z. (Taller(x, y) & Taller(y, z) -> Taller(x, z))", "Taller(Peter, Michael)", "all y. (-Jump(y) -> CanBlock(Michael, y))", "-CanBlock(Michael, Windy)", "all y. (Jump(y) & Shooter(y) -> GreatShooter(y))"], "conclusion": "CanBlock(Peter, Windy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nTaller(Michael, every x. Classmate(x, Michael))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nTaller(Michael, every x. Classmate(x, Michael))\n                      ^\n"}
{"timestamp": "2025-06-10T07:18:01.602223", "premises": ["Name(BarutinCove, Barutin)", "LocatedOn(BarutinCove, SnowIsland)", "MemberOf(SnowIsland, SouthShetlandIslands) & MemberOf(GreenwichIsland, SouthShetlandIslands) & MemberOf(DeceptionIsland, SouthShetlandIslands)", "MemberOf(SouthShetlandIslands, Antarctica)", "LocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C)"], "conclusion": "ForAll x. (MemberOf(x, Antarctica) -> Name(x, Barutin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nForAll x. (MemberOf(x, Antarctica) -> Name(x, Barutin))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nForAll x. (MemberOf(x, Antarctica) -> Name(x, Barutin))\n       ^\n"}
{"timestamp": "2025-06-10T07:18:01.614180", "premises": ["all x. (BarutinCove(x) -> NamedAfter(x, Barutin))", "On(SnowIsland, BarutinCove)", "exists x. (In(x, SouthShetlandIslands) & (x = SnowIsland | x = GreenwichIsland | x = DeceptionIsland))", "all x. (In(x, SouthShetlandIslands) -> In(x, Antarctica))", "all x. all y. all z. (On(z, x) & On(x, y) -> On(z, y))"], "conclusion": "all x. (In(x, Antarctica) -> NamedAfter(x, Barutin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BarutinCove/1, BarutinCove/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BarutinCove/1, BarutinCove/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BarutinCove/1, BarutinCove/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BarutinCove/1, BarutinCove/0\n"}
{"timestamp": "2025-06-10T07:18:01.622612", "premises": ["NamedAfter(BarutinCove, Barutin)", "Location(BarutinCove, SnowIsland)", "all x. (SouthShetlandIslands(x) -> (SnowIsland(x) | GreenwichIsland(x) | DeceptionIsland(x)))", "all x. (SouthShetlandIslands(x) -> PartOf(x, Antarctica))", "all A. all B. all C. (Location(A, B) & Location(B, C) -> Location(A, C))"], "conclusion": "NamedAfter(Barutin, all x. (Island(x) & PartOf(x, Antarctica)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    NamedAfter(%%START ERROR%%Barutin,all x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    NamedAfter(%%START ERROR%%Barutin,all x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T07:18:01.646962", "premises": ["NamedAfter(BarutinCove, Barutin)", "LocatedOn(BarutinCove, SnowIsland)", "SouthShetlandIslands(SnowIsland) & SouthShetlandIslands(GreenwichIsland) & SouthShetlandIslands(DeceptionIsland)", "PartOf(Antarctica, SouthShetlandIslands)", "(LocatedIn(A, B) & LocatedIn(B, C)) -> LocatedIn(A, C)"], "conclusion": "all x. (Island(x) & PartOf(Antarctica, x)) -> NamedAfter(x, Barutin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0\n"}
{"timestamp": "2025-06-10T07:19:06.991011", "premises": ["NamedAfter(BarutinCove, Barutin) & From(Bulinia, Barutin)", "LocatedIn(BarutinCove, SnowIsland) & LocatedIn(SnowIsland, SouthwestCoast)", "SouthShetlandIslands(SnowIsland)", "LocatedIn(SouthShetlandIslands, Antarctica)", "LocatedIn(A, C) <- LocatedIn(A, B) & LocatedIn(B, C) </PREMISES> <CONCLUSION> There is at least one cove in Antarctica named after a place in Bulgaria.  FOL: exists x. (LocatedIn(x, Antarctica) & NamedAfter(x, ?y) & From(Bulinia, ?y)) </CONCLUSION> <EVALUATE>", "NamedAfter(BarutinCove, Barutin) & From(Bulinia, Barutin)", "LocatedIn(BarutinCove, SnowIsland) & LocatedIn(SnowIsland, SouthwestCoast)", "SouthShetlandIslands(SnowIsland)", "LocatedIn(SouthShetlandIslands, Antarctica)", "LocatedIn(A, C) <- LocatedIn(A, B) & LocatedIn(B, C)"], "conclusion": "(LocatedIn(BarutinCove, Antarctica) & NamedAfter(BarutinCove, Barutin)) & From(Bulinia, Barutin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.  Expected token ')'.\n(LocatedIn(A, B) & LocatedIn(B, C) </PREMISES> <CONCLUSION> There is at least one cove in Antarctica named after a place in Bulgaria.  FOL: exists x. (LocatedIn(x, Antarctica) & NamedAfter(x, ?y) & From(Bulinia, ?y)) </CONCLUSION> <EVALUATE> -> LocatedIn(A, C))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.  Expected token ')'.\n(LocatedIn(A, B) & LocatedIn(B, C) </PREMISES> <CONCLUSION> There is at least one cove in Antarctica named after a place in Bulgaria.  FOL: exists x. (LocatedIn(x, Antarctica) & NamedAfter(x, ?y) & From(Bulinia, ?y)) </CONCLUSION> <EVALUATE> -> LocatedIn(A, C))\n                                   ^\n"}
{"timestamp": "2025-06-10T07:19:17.095238", "premises": ["NamedAfter(BarutinCove, Barutin)", "LocatedIn(BarutinCove, SnowIsland)", "Member(SnowIsland, SouthShetlandIslands)", "PartOf(SouthShetlandIslands, Antarctica)", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "exists x. (LocatedIn(x, Antarctica) & NamedAfter(x, Barutin) & LocatedIn(Barutin, Bulgaria))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T07:20:17.491860", "premises": ["all x. (NamedAfter(x, Barutin) -> Barutin(x))", "all x. (BarutinCove(x) -> OnCoastOf(x, SnowIsland))", "all x. (InSouthShetlandIslands(x) -> (SnowIsland(x) | GreenwichIsland(x) | DeceptionIsland(x)))", "all x. (InSouthShetlandIslands(x) -> In(x, Antarctica))", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "-LocatedIn(Barutin, Antarctica)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0, Barutin/1, Barutin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0, Barutin/1, Barutin/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0, Barutin/1, Barutin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0, Barutin/1, Barutin/0\n"}
{"timestamp": "2025-06-10T07:20:17.492653", "premises": ["NamedAfter(BarutinCove, Barutin)", "LocatedIn(BarutinCove, SnowIsland)", "LocatedIn(SnowIsland, SouthShetlandIslands)", "LocatedIn(SouthShetlandIslands, Antarctica)", "LocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C)"], "conclusion": "-LocatedIn(Barutin, Antarctica)", "error_type": "<class 'KeyError'>", "error_message": "10", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 10\n"}
{"timestamp": "2025-06-10T07:20:17.492512", "premises": ["NamedAfter(BarutinCove, Barutin)", "LocatedIn(BarutinCove, SnowIsland)", "all x. (SouthShetlandIsland(x) -> (SnowIsland(x) | GreenwichIsland(x) | DeceptionIsland(x)))", "all x. (SouthShetlandIsland(x) -> PartOf(x, Antarctica))", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "-LocatedIn(Barutin, Antarctica)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SnowIsland/1, SnowIsland/0\n"}
{"timestamp": "2025-06-10T07:20:17.511319", "premises": ["all x. all y. (NamedAfter(x, y) & Settlement(y) -> NamedAfter(x, Barutin))", "all x. (SouthwestCoastOf(x, SnowIsland) -> NamedAfter(x, Barutin))", "all x. (Member(x, ListOfIslands) -> Member(x, SouthShetlandIslands))", "all x. (SouthShetlandIslands(x) -> PartOf(x, Antarctica))", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "-LocatedIn(Barutin, Antarctica)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SouthShetlandIslands/1, SouthShetlandIslands/0\n"}
{"timestamp": "2025-06-10T07:21:39.688313", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -Empty(x))", "all x. (Airlines(x) -> CanTransportMultiplePassengers(x))", "all x. (Plane(x) -> Empty(x))", "all x. (Boeing707(x) -> Plane(x))", "-Airlines(Greyhound) -> -Plane(Greyhound)"], "conclusion": "Airlines(Greyhound)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (CanTransportMultiplePassengers(x) -> -Empty(x))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (CanTransportMultiplePassengers(x) -> -Empty(x))\n                                        ^\n"}
{"timestamp": "2025-06-10T07:21:39.706366", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -Empty(x))", "all x. (Airline(x) -> CanTransportMultiplePassengers(x))", "all x. (Plane(x) -> Empty(x))", "all x. (Boeing707(x) -> Plane(x))", "(\u00acAirline(Greyhound) -> \u00acPlane(Greyhound))"], "conclusion": "Airline(Greyhound)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 599: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 599: invalid continuation byte\n"}
{"timestamp": "2025-06-10T07:22:31.770183", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -Empty(x))", "all x. (CanTransportMultiplePassengers(x) -> -Empty(x))", "all x. (Airline(x) -> CanTransportMultiplePassengers(x))", "all x. (Plane(x) -> Empty(x))", "all x. (Boeing707(x) -> Plane(x))", "-Airline(Greyhound) -> all x. (Greyhound(x) -> Empty(x))"], "conclusion": "Boeing707(Greyhound)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Greyhound/1, Greyhound/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Greyhound/1, Greyhound/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Greyhound/1, Greyhound/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Greyhound/1, Greyhound/0\n"}
{"timestamp": "2025-06-10T07:24:23.755360", "premises": ["all x. (Mammal(x) -> Animal(x))", "all x. (Monkey(x) -> Mammal(x))", "((Monkey(x) & -Bird(x)) | (-Monkey(x) & Bird(x)))", "all x. (Bird(x) -> Fly(x))", "all x. (Animal(x) -> Breathe(x))", "(Fly(x) -> HasWings(x))", "-Fly(Rock) & -Bird(Rock) -> -Breathe(Rock)"], "conclusion": "Monkey(Rock)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Mammal(x) -> Animal(x))\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Mammal(x) -> Animal(x))\n                ^\n"}
{"timestamp": "2025-06-10T07:25:25.902154", "premises": ["all x. (Mammal(x) -> Animal(x))", "all x. (Monkey(x) -> Mammal(x))", "all x. (Animal(x) -> (Monkey(x) | Bird(x)))", "all x. (Bird(x) -> Fly(x))", "all x. (Animal(x) -> Breathe(x))", "all x. (Fly(x) -> HasWings(x))", "(\u00acFly(Rock) & \u00acBird(Rock)) -> (\u00acFly(Rock) & \u00acBreathe(Rock))"], "conclusion": "HasWings(Rock)", "error_type": "<class 'KeyError'>", "error_message": "27", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 27\n"}
{"timestamp": "2025-06-10T07:26:33.268994", "premises": ["all x. (Mammal(x) -> Animal(x))", "all x. (Monkey(x) -> Mammal(x))", "all x. (Animal(x) -> (Monkey(x) | Bird(x)))", "all x. (Bird(x) -> Fly(x))", "all x. (Animal(x) -> Breathe(x))", "all x. (Fly(x) -> HaveWings(x))", "-Fly(Rock) & -Bird(Rock) -> -Breathe(Rock))"], "conclusion": "-HaveWings(Rock)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n-Fly(Rock) & -Bird(Rock) -> -Breathe(Rock))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n-Fly(Rock) & -Bird(Rock) -> -Breathe(Rock))\n                                          ^\n"}
{"timestamp": "2025-06-10T07:26:33.291433", "premises": ["all x. (Mammal(x) -> Animal(x))", "all x. (Monkey(x) -> Mammal(x))", "all x. (Animal(x) -> (Monkey(x) | Bird(x)))", "all x. (Bird(x) -> Fly(x))", "all x. (Animal(x) -> Breathe(x))", "all x. (Fly(x) -> Wings(x))", "-Fly(Rock) & -Bird(Rock) -> -Fly(Rock) & -Breathe(Rock))"], "conclusion": "-Wings(Rock)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n-Fly(Rock) & -Bird(Rock) -> -Fly(Rock) & -Breathe(Rock))\n                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n-Fly(Rock) & -Bird(Rock) -> -Fly(Rock) & -Breathe(Rock))\n                                                       ^\n"}
{"timestamp": "2025-06-10T07:29:12.434659", "premises": ["all x. (Wedding(x) -> AtLeastOneChild(x))", "all x. (ParisHoneymoon(x) -> Wedding(x))", "all x. (JulyWedding(x) -> ParisHoneymoon(x))", "exists x. (JulyWedding(x) & WellAttended(x))", "(AtLeastOneChild(John) -> -ParisHoneymoon(John) & -Wedding(John))", "(WellAttended(Wedding(John)) -> (JulyWedding(John) | ParisHoneymoon(John)))"], "conclusion": "-WellAttended(Wedding(John))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wedding/1\n"}
{"timestamp": "2025-06-10T07:29:12.434785", "premises": ["all x. (HasWedding(x) -> HasAtLeastOneChild(x))", "all x. (TravelToParisForHoneymoon(x) -> HasWedding(x))", "all x. (WeddingInJuly(x) -> TravelToParisForHoneymoon(x))", "exists x. (WeddingInJuly(x) & WellAttended(x))", "(HasAtLeastOneChild(John) -> (-TravelToParisForHoneymoon(John) & -HasWedding(John)))", "(WellAttended(HasWedding(John)) -> (WeddingInJuly(HasWedding(John)) | (-WeddingInJuly(HasWedding(John)) & TravelToParisForHoneymoon(HasWedding(John)))))"], "conclusion": "-WellAttended(HasWedding(John))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1\n"}
{"timestamp": "2025-06-10T07:29:12.439146", "premises": ["all x. (HasWedding(x) -> HasChild(x))", "all x. (TravelToParisForHoneymoon(x) -> HasWedding(x))", "all x. (WeddingInJuly(x) -> TravelToParisForHoneymoon(x))", "exists x. (WeddingInJuly(x) & WellAttended(x))", "HasChild(John) -> (-TravelToParisForHoneymoon(John) & -HasWedding(John))", "(HasWedding(John) & WellAttended(John)) -> (WeddingInJuly(John) | TravelToParisForHoneymoon(John))"], "conclusion": "-WellAttended(HasWedding(John))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1\n"}
{"timestamp": "2025-06-10T07:30:25.688117", "premises": ["all x. (HasWedding(x) -> HasAtLeastOneChild(x))", "all x. (TravelToParisForHoneymoon(x) -> HasWedding(x))", "all x. (JulyWedding(x) -> TravelToParisForHoneymoon(Someone(x)))", "exists x. (JulyWedding(x) & WellAttended(x))", "-HasAtLeastOneChild(John) -> (-TravelToParisForHoneymoon(John) & -HasWedding(John))", "(HasWedding(John) & WellAttended(John)) -> ((JulyWedding(John) | -HasWedding(John) & TravelToParisForHoneymoon(John)))"], "conclusion": "HasAtLeastOneChild(John)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(HasWedding(John) & WellAttended(John)) -> ((JulyWedding(John) | -HasWedding(John) & TravelToParisForHoneymoon(John)))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(HasWedding(John) & WellAttended(John)) -> ((JulyWedding(John) | -HasWedding(John) & TravelToParisForHoneymoon(John)))\n                                      ^\n"}
{"timestamp": "2025-06-10T07:30:25.707580", "premises": ["all x. (Wedding(x) -> Child(x))", "all x. (ParisHoneymoon(x) -> Wedding(x))", "all x. (JulyWedding(x) -> ParisHoneymoon(x))", "exists x. (JulyWedding(x) & WellAttended(x))", "Child(john) -> -(ParisHoneymoon(john) | Wedding(john))", "(WellAttended(john) & Wedding(john)) \u2192 (JulyWedding(john) | ParisHoneymoon(john))"], "conclusion": "Child(john)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\n(WellAttended(john) & Wedding(john)) \u2192 (JulyWedding(john) | ParisHoneymoon(john))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\n(WellAttended(john) & Wedding(john)) \u2192 (JulyWedding(john) | ParisHoneymoon(john))\n                                     ^\n"}
{"timestamp": "2025-06-10T07:31:37.881815", "premises": ["all x. (Wedding(x) -> HasAtLeastOneChild(x))", "all x. (TravelToParisForHoneymoon(x) -> Wedding(x))", "all x. (JulyWedding(x) -> TravelToParisForHoneymoon(x))", "exists x. (JulyWedding(x) & WellAttended(x))", "HasAtLeastOneChild(John) -> (-TravelToParisForHoneymoon(John) & -Wedding(John))", "(Wedding(John) & WellAttended(John)) -> (JulyWedding(John) | TravelToParisForHoneymoon(John))"], "conclusion": "-WellAttended(Wedding(John)) & -TravelToParisForHoneymoon(John)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wedding/1\n"}
{"timestamp": "2025-06-10T07:31:37.921040", "premises": ["all x. (HasWedding(x) -> HasChild(x))", "all x. (TravelToParisForHoneymoon(x) -> HasWedding(x))", "all x. (WeddingInJuly(x) -> TravelToParisForHoneymoon(x))", "exists x. (WeddingInJuly(x) & WellAttended(x))", "HasChild(John) -> -TravelToParisForHoneymoon(John) & -HasWedding(John)", "(WellAttended(HasWedding(John)) -> (WeddingInJuly(HasWedding(John)) | TravelToParisForHoneymoon(John)))"], "conclusion": "-WellAttended(HasWedding(John)) & -TravelToParisForHoneymoon(John)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1\n"}
{"timestamp": "2025-06-10T07:31:37.925236", "premises": ["all x. (HasWedding(x) -> HasAtLeastOneChild(x))", "all x. (TravelToParisForHoneymoon(x) -> HasWedding(x))", "all x. (JulyWedding(x) -> TravelToParisForHoneymoon(x))", "exists x. (JulyWedding(x) & WellAttended(x))", "HasAtLeastOneChild(John) -> (-TravelToParisForHoneymoon(John) & -HasWedding(John))", "(WellAttended(HasWedding(John)) -> (JulyWedding(John) | TravelToParisForHoneymoon(John)))"], "conclusion": "-WellAttended(HasWedding(John)) & -TravelToParisForHoneymoon(John)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HasWedding/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HasWedding/1\n"}
{"timestamp": "2025-06-10T07:32:20.991391", "premises": ["exists x. (Mammal(x) & HaveTeeth(x))", "-HaveTeeth(Platypus)", "Mammal(Platypus)"], "conclusion": "HaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>  The theorem solver can now be used to evaluate the conclusion from the premises.  The problem can be expressed in a Prover9-compatible format as follows:  1. all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)) 2. -HaveTeeth(Platypus) 3. Mammal(Platypus) 4. HaveTeeth(Human)  The conclusion can be expressed as: Mammal(Platypus) & -HaveTeeth(Platypus)  Using a Prover9-like theorem solver, we can check whether the conclusion follows from the premises.  The Prover9 command to check this would be: ?f = ((Mammal(Platypus) & -HaveTeeth(Platypus)) :- [1,2,3,4], [all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)), -HaveTeeth(Platypus), Mammal(Platypus), HaveTeeth(Human)])  If the theorem solver returns \"yes\", then the conclusion follows from the premises. If it returns \"no\", then the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>  The theorem solver can now be used to evaluate the conclusion from the premises.  The problem can be expressed in a Prover9-compatible format as follows:  1. all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)) 2. -HaveTeeth(Platypus) 3. Mammal(Platypus) 4. HaveTeeth(Human)  The conclusion can be expressed as: Mammal(Platypus) & -HaveTeeth(Platypus)  Using a Prover9-like theorem solver, we can check whether the conclusion follows from the premises.  The Prover9 command to check this would be: ?f = ((Mammal(Platypus) & -HaveTeeth(Platypus)) :- [1,2,3,4], [all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)), -HaveTeeth(Platypus), Mammal(Platypus), HaveTeeth(Human)])  If the theorem solver returns \"yes\", then the conclusion follows from the premises. If it returns \"no\", then the conclusion does not follow from the premises.\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>  The theorem solver can now be used to evaluate the conclusion from the premises.  The problem can be expressed in a Prover9-compatible format as follows:  1. all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)) 2. -HaveTeeth(Platypus) 3. Mammal(Platypus) 4. HaveTeeth(Human)  The conclusion can be expressed as: Mammal(Platypus) & -HaveTeeth(Platypus)  Using a Prover9-like theorem solver, we can check whether the conclusion follows from the premises.  The Prover9 command to check this would be: ?f = ((Mammal(Platypus) & -HaveTeeth(Platypus)) :- [1,2,3,4], [all x. (Mammal(x) -> HaveTeeth(x)) :- exists x. (Mammal(x) & HaveTeeth(x)), -HaveTeeth(Platypus), Mammal(Platypus), HaveTeeth(Human)])  If the theorem solver returns \"yes\", then the conclusion follows from the premises. If it returns \"no\", then the conclusion does not follow from the premises.\n                 ^\n"}
{"timestamp": "2025-06-10T07:32:20.992819", "premises": ["exists x. (Mammal(x) & Teeth(x))", "-Teeth(Platypus)", "all x. (Platypus(x) -> Mammal(x))"], "conclusion": "Teeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -Teeth(Platypus) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -Teeth(Platypus) </CONCLUSION> <EVALUATE>\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -Teeth(Platypus) </CONCLUSION> <EVALUATE>\n             ^\n"}
{"timestamp": "2025-06-10T07:32:20.993420", "premises": ["exists x. (Mammal(x) & HaveTeeth(x))", "-HaveTeeth(Platypus)", "Mammal(Platypus)"], "conclusion": "HaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHaveTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HaveTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                 ^\n"}
{"timestamp": "2025-06-10T07:32:20.998733", "premises": ["exists x. (Mammal(x) & HasTeeth(x))", "-HasTeeth(Platypus)", "Mammal(Platypus)"], "conclusion": "HasTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Platypus are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                ^\n"}
{"timestamp": "2025-06-10T07:33:30.105959", "premises": ["exists x. (Mammal(x) & HasTeeth(x))", "-HasTeeth(Platypus)", "Mammal(Platypus)"], "conclusion": "HasTeeth(Human) </PREMISES> <CONCLUSION> Humans are mammals.  FOL: Mammal(Human) </CONCLUSION> <EVALUATE>  This conclusion does indeed follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Humans are mammals.  FOL: Mammal(Human) </CONCLUSION> <EVALUATE>  This conclusion does indeed follow from the premises.\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Humans are mammals.  FOL: Mammal(Human) </CONCLUSION> <EVALUATE>  This conclusion does indeed follow from the premises.\n                ^\n"}
{"timestamp": "2025-06-10T07:34:10.206552", "premises": ["all x. (Plunger(x) -> Sucks(x)) Vacuums suck.  FOL: all x. (Vacuum(x) -> Sucks(x)) Vampires suck.  FOL: all x. (Vampire(x) -> Sucks(x)) Space is a vacuum.  FOL: all x. (Space(x) -> Vacuum(x)) A duster is a household appliance that doesn't suck.  FOL: all x. (Duster(x) -> -Sucks(x))"], "conclusion": "all x. (Space(x) -> Sucks(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Vacuums'.\nall x. (Plunger(x) -> Sucks(x)) Vacuums suck.  FOL: all x. (Vacuum(x) -> Sucks(x)) Vampires suck.  FOL: all x. (Vampire(x) -> Sucks(x)) Space is a vacuum.  FOL: all x. (Space(x) -> Vacuum(x)) A duster is a household appliance that doesn't suck.  FOL: all x. (Duster(x) -> -Sucks(x))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Vacuums'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Vacuums'.\nall x. (Plunger(x) -> Sucks(x)) Vacuums suck.  FOL: all x. (Vacuum(x) -> Sucks(x)) Vampires suck.  FOL: all x. (Vampire(x) -> Sucks(x)) Space is a vacuum.  FOL: all x. (Space(x) -> Vacuum(x)) A duster is a household appliance that doesn't suck.  FOL: all x. (Duster(x) -> -Sucks(x))\n                                ^\n"}
{"timestamp": "2025-06-10T07:34:10.219381", "premises": ["Suck(Plunger)", "Suck(Vacuum)", "Suck(Vampire)", "Vacuum(Space)", "-Suck(Duster)"], "conclusion": "Suck(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0\n"}
{"timestamp": "2025-06-10T07:34:10.219504", "premises": ["Suck(Plunger)", "Suck(Vacuum)", "Suck(Vampire)", "Vacuum(Space)", "-Suck(Duster)"], "conclusion": "Suck(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0\n"}
{"timestamp": "2025-06-10T07:34:10.219577", "premises": ["all x. (Plunger(x) -> Suck(x))", "all x. (Vac(x) -> Suck(x))", "all x. (Vampire(x) -> Suck(x))", "all x. (Space(x) -> Vac(x))", "all x. (Duster(x) -> -Suck(x))"], "conclusion": "Suck(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0\n"}
{"timestamp": "2025-06-10T07:34:10.231726", "premises": ["all x. (Plunger(x) -> Suck(x))", "all x. (Vacuum(x) -> Suck(x))", "all x. (Vampire(x) -> Suck(x))", "all x. (Space(x) -> Vacuum(x))", "all x. (Duster(x) -> -Suck(x))"], "conclusion": "Suck(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0\n"}
{"timestamp": "2025-06-10T07:34:10.232158", "premises": ["Sucks(Plunger)", "Sucks(Vacuum)", "Sucks(Vampire)", "IsVacuum(Space)", "\u00acSucks(Duster)"], "conclusion": "Sucks(Space)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte\n"}
{"timestamp": "2025-06-10T07:34:56.364387", "premises": ["Suck(Plunger)", "Suck(Vacuum)", "Suck(Vampire)", "IsVacuum(Space)", "-Suck(Duster)"], "conclusion": "Vampire(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vampire/1, Vampire/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vampire/1, Vampire/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vampire/1, Vampire/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vampire/1, Vampire/0\n"}
{"timestamp": "2025-06-10T07:34:56.373151", "premises": ["Suck(Plunger)", "Suck(Vacuum)", "Suck(Vampire)", "Space \u2261 Vacuum", "-Suck(Duster)"], "conclusion": "Vampire(Space)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nSpace \u2261 Vacuum\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nSpace \u2261 Vacuum\n      ^\n"}
{"timestamp": "2025-06-10T07:34:56.380739", "premises": ["Plunger(Suction)", "Vacuum(Suction)", "Vampire(Suction)", "Space(Vacuum)", "-Duster(Suction)"], "conclusion": "Vampire(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0, Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0, Space/1, Space/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0, Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0, Space/1, Space/0\n"}
{"timestamp": "2025-06-10T07:34:56.386162", "premises": ["all x. (Plunger(x) -> Suck(x))", "all x. (Vacuum(x) -> Suck(x))", "all x. (Vampire(x) -> Suck(x))", "all x. (Space(x) -> Vacuum(x))", "all x. (Duster(x) -> -Suck(x))"], "conclusion": "Vampire(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Space/1, Space/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Space/1, Space/0\n"}
{"timestamp": "2025-06-10T07:34:56.391932", "premises": ["Suck(Plunger)", "Suck(Vacuum)", "Suck(Vampire)", "IsAVacuum(Space)", "-Suck(Duster)"], "conclusion": "Vampire(Space)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vampire/1, Vampire/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vampire/1, Vampire/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vampire/1, Vampire/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vampire/1, Vampire/0\n"}
{"timestamp": "2025-06-10T07:34:56.392412", "premises": ["all x. (Plunger(x) -> Suck(x))", "all x. (Vacuum(x) -> Suck(x))", "all x. (Vampire(x) -> Suck(x))", "Space(Vacuum)", "all x. (Duster(x) -> -Suck(x))"], "conclusion": "Vampire(Vacuum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vacuum/1, Vacuum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vacuum/1, Vacuum/0\n"}
{"timestamp": "2025-06-10T07:35:43.763258", "premises": ["Plunges", "Vacuums", "Vampires", "Space", "-Sucks"], "conclusion": "all x. (HouseholdAppliance(x) -> Sucks(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sucks/0, Sucks/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Sucks/0, Sucks/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sucks/0, Sucks/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Sucks/0, Sucks/1\n"}
{"timestamp": "2025-06-10T07:36:56.303994", "premises": ["all x. (ML(x) -> (Categorizes(x, Supervised) | Categorizes(x, Unsupervised) | Categorizes(x, Reinforcement)))", "all x. (Unsupervised(x) -> -RequiresLabelledData(x))", "all x. (StateOfTheArtTextSummarizationModel(x) -> ML(x))", "-all x. (StateOfTheArtTextSummarizationModel(x) & Reinforcement(x))", "all x. (ML(x) -> RequiresLabelledData(x))"], "conclusion": "all x. (StateOfTheArtTextSummarizationModel(x) -> Supervised(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reinforcement/1, Reinforcement/0, Unsupervised/1, Unsupervised/0, Supervised/1, Supervised/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Reinforcement/1, Reinforcement/0, Unsupervised/1, Unsupervised/0, Supervised/1, Supervised/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reinforcement/1, Reinforcement/0, Unsupervised/1, Unsupervised/0, Supervised/1, Supervised/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Reinforcement/1, Reinforcement/0, Unsupervised/1, Unsupervised/0, Supervised/1, Supervised/0\n"}
{"timestamp": "2025-06-10T07:36:56.304113", "premises": ["all x. (MachineLearning(x) -> SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x))", "all x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))", "exists x. (Trained(x, MachineLearning))", "-ReinforcementLearning(Trained(HasStateOfTheArtTextSummarizationModel, _))", "all x. (Trains(HasStateOfTheArtTextSummarizationModel, x) & MachineLearning(x) -> RequiresLabelledData(x))"], "conclusion": "SupervisedLearning(Trained(HasStateOfTheArtTextSummarizationModel, _))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Trained/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Trained/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Trained/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Trained/2\n"}
{"timestamp": "2025-06-10T07:36:56.306072", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))", "exists x. (StateOfTheArtTextSummarizationModel(x) & TrainedWith(MachineLearning, x))", "-TrainedWith(ReinforcementLearning, StateOfTheArtTextSummarizationModel)", "exists x. (MachineLearning(x) & RequiresLabelledData(x) & UsedToTrain(TextSummarizationModel, x))"], "conclusion": "UsedToTrain(StateOfTheArtTextSummarizationModel, SupervisedLearning)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, MachineLearning/1, MachineLearning/0, SupervisedLearning/1, SupervisedLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, MachineLearning/1, MachineLearning/0, SupervisedLearning/1, SupervisedLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, MachineLearning/1, MachineLearning/0, SupervisedLearning/1, SupervisedLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, MachineLearning/1, MachineLearning/0, SupervisedLearning/1, SupervisedLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0\n"}
{"timestamp": "2025-06-10T07:36:56.325217", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "-LabelledData(x) -> UnsupervisedLearning(x)", "TrainedBy(MachineLearningAlgorithms, StateOfTheArtTextSummarizationModel)", "-TrainedBy(ReinforcementLearning, StateOfTheArtTextSummarizationModel)", "LabelledData(MachineLearningAlgorithmsForTextSummarization)"], "conclusion": "TrainedBy(SupervisedLearning, StateOfTheArtTextSummarizationModel)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, SupervisedLearning/1, SupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, SupervisedLearning/1, SupervisedLearning/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, SupervisedLearning/1, SupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, SupervisedLearning/1, SupervisedLearning/0\n"}
{"timestamp": "2025-06-10T07:36:56.328346", "premises": ["SupervisedLearning | UnsupervisedLearning | ReinforcementLearning", "all x. (-LabelledData(x) -> Unsupervised(x))", "MLAlg(TextSummarizationModel) -> TrainedWithML(TextSummarizationModel)", "-RLAlg(TextSummarizationModel) -> -TrainedWithRL(TextSummarizationModel)", "all x. (LabelledData(x) -> RequiresLabelledData(x))"], "conclusion": "TrainedWithML(TextSummarizationModel) -> SupervisedLearning(TextSummarizationModel)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SupervisedLearning/0, SupervisedLearning/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SupervisedLearning/0, SupervisedLearning/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SupervisedLearning/0, SupervisedLearning/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SupervisedLearning/0, SupervisedLearning/1\n"}
{"timestamp": "2025-06-10T07:36:56.332651", "premises": ["SupervisedLearning | UnsupervisedLearning | ReinforcementLearning", "all x. (UnsupervisedLearning(x) -> -LabelledData(x))", "exists x. (MLAlgorithm(x) & TrainedWith(x, TextSummarizationModel))", "all x. (ReinforcementLearning(x) -> -TrainedWith(x, TextSummarizationModel))", "all x. (MLAlgorithm(x) & ForTraining(x, TextSummarizationModel) -> LabelledData(x))"], "conclusion": "-UnsupervisedLearning(x) & -ReinforcementLearning(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/0, ReinforcementLearning/1, UnsupervisedLearning/0, UnsupervisedLearning/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/0, ReinforcementLearning/1, UnsupervisedLearning/0, UnsupervisedLearning/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/0, ReinforcementLearning/1, UnsupervisedLearning/0, UnsupervisedLearning/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/0, ReinforcementLearning/1, UnsupervisedLearning/0, UnsupervisedLearning/1\n"}
{"timestamp": "2025-06-10T07:38:02.553801", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))", "exists x. (StateOfTheArtTextSummarizationModel(x) & TrainedWith(x, MachineLearning))", "-ReinforcementLearning(StateOfTheArtTextSummarizationModel)", "exists x. (MachineLearning(x) & UsedFor(x, TextSummarizationModel) & RequiresLabelledData(x))"], "conclusion": "UsedFor(UnsupervisedLearning, StateOfTheArtTextSummarizationModel)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineLearning/1, MachineLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0, UnsupervisedLearning/1, UnsupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineLearning/1, MachineLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0, UnsupervisedLearning/1, UnsupervisedLearning/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineLearning/1, MachineLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0, UnsupervisedLearning/1, UnsupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineLearning/1, MachineLearning/0, StateOfTheArtTextSummarizationModel/1, StateOfTheArtTextSummarizationModel/0, UnsupervisedLearning/1, UnsupervisedLearning/0\n"}
{"timestamp": "2025-06-10T07:38:02.556292", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))", "TrainedWithMachineLearning(StateOfTheArtTextSummarizationModel)", "-ReinforcementLearning(StateOfTheArtTextSummarizationModel)", "RequiresLabelledData(MLAlgorithmForTrainingTextSummarizationModel)"], "conclusion": "UnsupervisedLearning(StateOfTheArtTextSummarizationModel)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))\n                              ^\n"}
{"timestamp": "2025-06-10T07:38:02.576825", "premises": ["all x. (MachineLearningAlgorithm(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -LabelledData(x))", "exists x. (TextSummarizationModel(x) & TrainedWith(x, MachineLearningAlgorithm))", "-exists x. (TextSummarizationModel(x) & TrainedWith(x, ReinforcementLearningAlgorithm))", "exists x. (MachineLearningAlgorithm(x) & For(x, TextSummarizationModel) & LabelledData(x))"], "conclusion": "exists x. (TextSummarizationModel(x) & TrainedWith(x, UnsupervisedLearningAlgorithm))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TextSummarizationModel/1, TextSummarizationModel/0, MachineLearningAlgorithm/1, MachineLearningAlgorithm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TextSummarizationModel/1, TextSummarizationModel/0, MachineLearningAlgorithm/1, MachineLearningAlgorithm/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TextSummarizationModel/1, TextSummarizationModel/0, MachineLearningAlgorithm/1, MachineLearningAlgorithm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TextSummarizationModel/1, TextSummarizationModel/0, MachineLearningAlgorithm/1, MachineLearningAlgorithm/0\n"}
{"timestamp": "2025-06-10T07:38:02.577117", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -RequiresLabelledData(x))", "exists x. (MachineLearning(x) & UsedFor(x, TrainingTextSummarizationModel))", "-ReinforcementLearning(UsedFor(TrainingTextSummarizationModel))", "exists x. (MachineLearning(x) & RequiresLabelledData(x) & UsedFor(x, TrainingTextSummarizationModel))"], "conclusion": "UnsupervisedLearning(UsedFor(TrainingTextSummarizationModel))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UsedFor/2, UsedFor/1.\n\n\nFatal error:  The following symbols are used with multiple arities: UsedFor/2, UsedFor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UsedFor/2, UsedFor/1.\n\n\nFatal error:  The following symbols are used with multiple arities: UsedFor/2, UsedFor/1\n"}
{"timestamp": "2025-06-10T07:38:02.577656", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "all x. (UnsupervisedLearning(x) -> -LabelledData(x))", "all x. (TextSummarizationModel(x) -> TrainedWith(x, MachineLearning))", "-TrainedWith(TextSummarizationModel, ReinforcementLearning)", "all x. (TrainedWith(x, MachineLearning) -> LabelledData(x))"], "conclusion": "all x. (TextSummarizationModel(x) -> UnsupervisedLearning(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, TextSummarizationModel/1, TextSummarizationModel/0, MachineLearning/1, MachineLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, TextSummarizationModel/1, TextSummarizationModel/0, MachineLearning/1, MachineLearning/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, TextSummarizationModel/1, TextSummarizationModel/0, MachineLearning/1, MachineLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, TextSummarizationModel/1, TextSummarizationModel/0, MachineLearning/1, MachineLearning/0\n"}
{"timestamp": "2025-06-10T07:38:02.580982", "premises": ["all x. (MachineLearning(x) -> (SupervisedLearning(x) | UnsupervisedLearning(x) | ReinforcementLearning(x)))", "UnsupervisedLearning(x) -> -LabelledData(x)", "all x. (MachineLearning(x) -> TrainedWith(x, TextSummarizationModel))", "-TrainedWith(ReinforcementLearning, TextSummarizationModel)", "all x. (MachineLearning(x) & TrainedWith(x, TextSummarizationModel) -> LabelledData(x))"], "conclusion": "TrainedWith(UnsupervisedLearning, TextSummarizationModel)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, UnsupervisedLearning/1, UnsupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, UnsupervisedLearning/1, UnsupervisedLearning/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, UnsupervisedLearning/1, UnsupervisedLearning/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ReinforcementLearning/1, ReinforcementLearning/0, UnsupervisedLearning/1, UnsupervisedLearning/0\n"}
{"timestamp": "2025-06-10T07:41:54.212679", "premises": ["ArtificialSelection(x) -> DeliberateSelectiveBreeding(x) & DomesticAnimal(x)  FOL: BreedingBack", "BredBack(HeckCattle, 1920s, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. exists y. (BredBack(x) & Resemble(x, y) & Extinct(y))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nArtificialSelection(x) -> DeliberateSelectiveBreeding(x) & DomesticAnimal(x)  FOL: BreedingBack\n                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nArtificialSelection(x) -> DeliberateSelectiveBreeding(x) & DomesticAnimal(x)  FOL: BreedingBack\n                                                                              ^\n"}
{"timestamp": "2025-06-10T07:41:54.221392", "premises": ["BreedingBackIsArtificialSelection", "BredBack(HeckCattle, 1920s, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. exists y. (ToBeBredBack(x) & Resemble(x, y) & Extinct(y))"], "conclusion": "exists x. ArtificiallySelected(x) & HeckCattle(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0\n"}
{"timestamp": "2025-06-10T07:41:54.226609", "premises": ["ArtificialSelection(x) <-> (DomesticAnimal(x) & DeliberateSelectiveBreeding(x))", "BredBack(HeckCattle, aurochs, 1920s)", "Animal(HeckCattle)", "Animal(aurochs)", "exists x. exists y. (ToBeBredBack(x) & Resemble(x, y) & Extinct(y))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (DomesticAnimal(x) & DeliberateSelectiveBreeding(x)) -> ArtificialSelection(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (DomesticAnimal(x) & DeliberateSelectiveBreeding(x)) -> ArtificialSelection(x))\n                      ^\n"}
{"timestamp": "2025-06-10T07:41:54.221073", "premises": ["all x. (BreedingBack(x) -> ArtificialSelection(x))", "BreedingBack(HeckCattle)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. exists y. (BredBack(x) & Resemble(x, y) & Extinct(y))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0\n"}
{"timestamp": "2025-06-10T07:41:54.237176", "premises": ["ArtificialSelection(BreedingBack) & exists x. (DomesticAnimal(x) & DeliberateSelectiveBreeding(x, BreedingBack))", "BredBack(HeckCattle, 1920s, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. (BredBack(x) & Resemble(x, ExtinctAnimal))"], "conclusion": "exists x. (HeckCattle(x) & ArtificiallySelected(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BredBack/1, BredBack/3, HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BredBack/1, BredBack/3, HeckCattle/1, HeckCattle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BredBack/1, BredBack/3, HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BredBack/1, BredBack/3, HeckCattle/1, HeckCattle/0\n"}
{"timestamp": "2025-06-10T07:41:54.237424", "premises": ["ArtificialSelection(HeckCattle) <- IsFormOf(BreedingBack, ArtificialSelection)", "WasBredBackIn(HeckCattle, 1920s) & Resemble(HeckCattle, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. exists y. (ToBeBredBack(x) & IsExtinct(y) & Resemble(x, y))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, ArtificialSelection/1, ArtificialSelection/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, ArtificialSelection/1, ArtificialSelection/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, ArtificialSelection/1, ArtificialSelection/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, ArtificialSelection/1, ArtificialSelection/0\n"}
{"timestamp": "2025-06-10T07:41:54.237952", "premises": ["all x. (BreedingBack(x) -> ArtificialSelection(x))", "BredBack(HeckCattle, 1920s, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. (ToBeBredBack(x) & Resemble(x, ExtinctAnimal))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0\n"}
{"timestamp": "2025-06-10T07:41:54.238440", "premises": ["all x. (ArtificialSelection(x) -> (DeliberateSelectiveBreeding(x) & DomesticAnimal(x)))", "ArtificialSelection(HeckCattle)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. (BredBack(x) & Similar(x, ExtinctAnimal))"], "conclusion": "exists x. (HeckCattle(x) & ArtificialSelection(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0\n"}
{"timestamp": "2025-06-10T07:41:54.240487", "premises": ["all x. (BreedingBack(x) -> ArtificialSelection(x))", "exists x. (HeckCattle(x) & BreedingBack(x) & -ArtificiallySelectedIn1920s(x) & Resemble(x, Aurochs))", "all x. (HeckCattle(x) -> Animal(x))", "all x. (Aurochs(x) -> Animal(x))", "exists x. exists y. (ToBeBredBack(x) & Resemble(x, y) & Extinct(y))"], "conclusion": "exists x. (HeckCattle(x) & ArtificiallySelected(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Aurochs/1, Aurochs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Aurochs/1, Aurochs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Aurochs/1, Aurochs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Aurochs/1, Aurochs/0\n"}
{"timestamp": "2025-06-10T07:42:47.304591", "premises": ["ArtificialSelectionByDomesticAnimals(BreedingBack)", "BredBack(HeckCattle, Aurochs, 1920s)", "all x. (HeckCattle(x) -> Animal(x))", "all x. (Aurochs(x) -> Animal(x))", "exists x. exists y. (ToBeBredBack(x) & Resemble(x, y) -> Extinct(y))"], "conclusion": "Extinct(Aurochs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, Aurochs/1, Aurochs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, Aurochs/1, Aurochs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, Aurochs/1, Aurochs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeckCattle/1, HeckCattle/0, Aurochs/1, Aurochs/0\n"}
{"timestamp": "2025-06-10T07:42:47.308613", "premises": ["all x. (DomesticAnimal(x) & BreedingBack(x) -> ArtificialSelection(x))", "BreedingBack(HeckCattle, 1920s, Aurochs)", "Animal(HeckCattle)", "Animal(Aurochs)"], "conclusion": "exists x. (BreedingBack(x) & Resembles(x, ExtinctAnimal)) <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<CONCLUSION>'.\nexists x. (BreedingBack(x) & Resembles(x, ExtinctAnimal)) <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs)\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<CONCLUSION>'.\nexists x. (BreedingBack(x) & Resembles(x, ExtinctAnimal)) <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs)\n                                                          ^\n"}
{"timestamp": "2025-06-10T07:42:47.304939", "premises": ["all x. (BreedingBack(x) -> ArtificalSelection(x) & DomesticAnimals(x))", "BreedingBack(HeckCattle)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. (AnimalToBeBredBack(x) & Similar(x, Extinct(x)))"], "conclusion": "Extinct(Aurochs)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (BreedingBack(x) -> ArtificalSelection(x) & DomesticAnimals(x))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (BreedingBack(x) -> ArtificalSelection(x) & DomesticAnimals(x))\n                      ^\n"}
{"timestamp": "2025-06-10T07:42:47.334897", "premises": ["BreedingBack(is, artificial_selection, by, DeliberateSelectiveBreedingOfDomesticAnimals)", "BredBack(HeckCattle, to, Resemble, Aurochs, in, 1920s)", "Animal(HeckCattle)", "Animal(Aurochs)"], "conclusion": "SomeAnimal(toBeBredBack) & Resemble(toBeBredBack, Animal(extinct)) </PREMISES> <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nSomeAnimal(toBeBredBack) & Resemble(toBeBredBack, Animal(extinct)) </PREMISES> <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs) </CONCLUSION> <EVALUATE>\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nSomeAnimal(toBeBredBack) & Resemble(toBeBredBack, Animal(extinct)) </PREMISES> <CONCLUSION> Aurochs are extinct.  FOL: Extinct(Aurochs) </CONCLUSION> <EVALUATE>\n                                                                   ^\n"}
{"timestamp": "2025-06-10T07:42:47.338166", "premises": ["ArtificialSelectionByDeliberateSelectiveBreedingOfDomesticAnimals(BreedingBack)", "BredBackIn1920s(HeckCattle)", "Animal(HeckCattle)", "Animal(Aurochs)", "exists x. (Animal(x) & BredBack(x) & Resemble(x, ExtinctAnimal))"], "conclusion": "Extinct(Aurochs) </PREMISES> <CONCLUSION> Aurochs are extinct. </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we need to evaluate the logical consistency of the premises and the conclusion.  From the first premise, we know that breeding back is a form of artificial selection by the deliberate selective breeding of domestic animals. This provides a definition of breeding back.  The second premise states that Heck cattle were bred-back in the 1920s to resemble the aurochs. This tells us that Heck cattle were bred-back, which is a specific instance of breeding back.  The third and fourth premises establish that Heck cattle and aurochs are animals. This provides a common category for Heck cattle and aurochs.  The fifth premise states that some animals to be bred-back resemble animals that are extinct. This implies that the characteristics of animals to be bred-back are similar to those of extinct animals.  From the premises, we can infer that aurochs are extinct because they resemble animals that are extinct (fifth premise). This is consistent with the conclusion that aurochs are extinct.  Therefore, the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nExtinct(Aurochs) </PREMISES> <CONCLUSION> Aurochs are extinct. </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we need to evaluate the logical consistency of the premises and the conclusion.  From the first premise, we know that breeding back is a form of artificial selection by the deliberate selective breeding of domestic animals. This provides a definition of breeding back.  The second premise states that Heck cattle were bred-back in the 1920s to resemble the aurochs. This tells us that Heck cattle were bred-back, which is a specific instance of breeding back.  The third and fourth premises establish that Heck cattle and aurochs are animals. This provides a common category for Heck cattle and aurochs.  The fifth premise states that some animals to be bred-back resemble animals that are extinct. This implies that the characteristics of animals to be bred-back are similar to those of extinct animals.  From the premises, we can infer that aurochs are extinct because they resemble animals that are extinct (fifth premise). This is consistent with the conclusion that aurochs are extinct.  Therefore, the conclusion follows from the premises.\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nExtinct(Aurochs) </PREMISES> <CONCLUSION> Aurochs are extinct. </CONCLUSION> <EVALUATE>  To determine whether the conclusion follows from the premises, we need to evaluate the logical consistency of the premises and the conclusion.  From the first premise, we know that breeding back is a form of artificial selection by the deliberate selective breeding of domestic animals. This provides a definition of breeding back.  The second premise states that Heck cattle were bred-back in the 1920s to resemble the aurochs. This tells us that Heck cattle were bred-back, which is a specific instance of breeding back.  The third and fourth premises establish that Heck cattle and aurochs are animals. This provides a common category for Heck cattle and aurochs.  The fifth premise states that some animals to be bred-back resemble animals that are extinct. This implies that the characteristics of animals to be bred-back are similar to those of extinct animals.  From the premises, we can infer that aurochs are extinct because they resemble animals that are extinct (fifth premise). This is consistent with the conclusion that aurochs are extinct.  Therefore, the conclusion follows from the premises.\n                 ^\n"}
{"timestamp": "2025-06-10T07:43:40.174854", "premises": ["all x. (Student(x) -> Human(x))", "all x. (Studying(x) -> Student(x))", "((Studying(x) & -Teaches(x)) | (-Studying(x) & Teaches(x)))", "all x. (Young(x) -> -Teaches(x))", "-Teaches(Jerry) & -Manager(Jerry)", "((Young(Rose) & -Student(Rose)) | (-Young(Rose) & Student(Rose)))"], "conclusion": "Young(Jerry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (Young(x) -> -Teaches(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (Young(x) -> -Teaches(x))\n               ^\n"}
{"timestamp": "2025-06-10T07:44:29.309517", "premises": ["all x. (Student(x) -> Human(x))", "all x. (Studies(x) -> Student(x))", "(Studies(x) & -Teaches(x)) | (-Studies(x) & Teaches(x))", "all x. (Young(x) -> -Teaches(x))", "-Teaches(Jerry) & -Manager(Jerry)", "Young(Rose) | Student(Rose)"], "conclusion": "-Young(Jerry)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Studies(x) -> Student(x))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Studies(x) -> Student(x))\n                   ^\n"}
{"timestamp": "2025-06-10T07:45:22.002096", "premises": ["all x. (Student(x) -> Human(x))", "all x. (Studies(x) -> Student(x))", "Studies(x) | Teach(x)", "all x. (Young(x) -> -Teach(x))", "-Teach(Jerry) & -Manager(Jerry)", "Young(Rose) | Student(Rose)"], "conclusion": "Human(Rose) | Manager(Rose)", "error_type": "<class 'KeyError'>", "error_message": "25", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 273, in token\n    tok = self._buffer[self._currentIndex + location]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 514, in attempt_ApplicationExpression\n    if self.inRange(0) and self.token(0) == Tokens.OPEN:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 25\n"}
{"timestamp": "2025-06-10T07:46:17.008841", "premises": ["all x. (Student(x) -> Human(x))", "all x. (Studies(x) -> Student(x))", "Studies(x) | Teaches(x)", "all x. (Young(x) -> -Teaches(x))", "-Teaches(Jerry) & -Manager(Jerry)", "Young(Rose) | Student(Rose)"], "conclusion": "Human(Rose) | Manager(Jerry)", "error_type": "<class 'KeyError'>", "error_message": "25", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 25\n"}
{"timestamp": "2025-06-10T07:48:10.961150", "premises": ["all x. (NewVesselPress(x) -> (PublishingHouse(x) & TranslatesIntoEnglish(x)))", "all x. (NewVesselPress(x) & Published(x) -> InEnglish(x))", "Published(NewVesselPress, NeapolitanChronicles)", "TranslatedFrom(Italian, NeapolitanChronicles)"], "conclusion": "Published(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Neapolitan Chronicles is an English book.  FOL: InEnglish(NeapolitanChronicles) </CONCLUSION> <EVALUATE>  We can use Prover9 to determine whether the conclusion follows from the premises. First, we need to combine the premises into a single set of clauses. Then, we can use the \"check\" command in Prover9 to see if the conclusion follows from the premises.  Here is the combined set of premises in Prover9 format:  1. all x. (NewVesselPress(x) -> (PublishingHouse(x) & TranslatesIntoEnglish(x))) 2. all x. (NewVesselPress(x) & Published(x) -> InEnglish(x)) 3. Published(NewVesselPress, NeapolitanChronicles) 4. TranslatedFrom(Italian, NeapolitanChronicles) 5. Published(NewVesselPress, PalaceOfFlies)  The conclusion in Prover9 format is:  6. InEnglish(NeapolitanChronicles)  We can then use the \"check\" command in Prover9 to see if the conclusion follows from the premises:  check [1-6].  If Prover9 returns \"no countermodel found\", then the conclusion follows from the premises. Otherwise, it will return a countermodel showing that the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nPublished(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Neapolitan Chronicles is an English book.  FOL: InEnglish(NeapolitanChronicles) </CONCLUSION> <EVALUATE>  We can use Prover9 to determine whether the conclusion follows from the premises. First, we need to combine the premises into a single set of clauses. Then, we can use the \"check\" command in Prover9 to see if the conclusion follows from the premises.  Here is the combined set of premises in Prover9 format:  1. all x. (NewVesselPress(x) -> (PublishingHouse(x) & TranslatesIntoEnglish(x))) 2. all x. (NewVesselPress(x) & Published(x) -> InEnglish(x)) 3. Published(NewVesselPress, NeapolitanChronicles) 4. TranslatedFrom(Italian, NeapolitanChronicles) 5. Published(NewVesselPress, PalaceOfFlies)  The conclusion in Prover9 format is:  6. InEnglish(NeapolitanChronicles)  We can then use the \"check\" command in Prover9 to see if the conclusion follows from the premises:  check [1-6].  If Prover9 returns \"no countermodel found\", then the conclusion follows from the premises. Otherwise, it will return a countermodel showing that the conclusion does not follow from the premises.\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nPublished(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Neapolitan Chronicles is an English book.  FOL: InEnglish(NeapolitanChronicles) </CONCLUSION> <EVALUATE>  We can use Prover9 to determine whether the conclusion follows from the premises. First, we need to combine the premises into a single set of clauses. Then, we can use the \"check\" command in Prover9 to see if the conclusion follows from the premises.  Here is the combined set of premises in Prover9 format:  1. all x. (NewVesselPress(x) -> (PublishingHouse(x) & TranslatesIntoEnglish(x))) 2. all x. (NewVesselPress(x) & Published(x) -> InEnglish(x)) 3. Published(NewVesselPress, NeapolitanChronicles) 4. TranslatedFrom(Italian, NeapolitanChronicles) 5. Published(NewVesselPress, PalaceOfFlies)  The conclusion in Prover9 format is:  6. InEnglish(NeapolitanChronicles)  We can then use the \"check\" command in Prover9 to see if the conclusion follows from the premises:  check [1-6].  If Prover9 returns \"no countermodel found\", then the conclusion follows from the premises. Otherwise, it will return a countermodel showing that the conclusion does not follow from the premises.\n                                         ^\n"}
{"timestamp": "2025-06-10T07:48:10.975866", "premises": ["PublishingHouse(NewVesselPress) & SpecializesIn(NewVesselPress, TranslateForeignLiteratureIntoEnglish)", "all x. (PublishedBook(x) & PublishedBy(NewVesselPress) -> InEnglish(x))", "PublishedBook(NeapolitanChronicles) & PublishedBy(NewVesselPress, NeapolitanChronicles)", "TranslatedFrom(NeapolitanChronicles, Italian)", "PublishedBook(PalaceOfFlies) & PublishedBy(NewVesselPress, PalaceOfFlies)"], "conclusion": "InEnglish(NeapolitanChronicles)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PublishedBy/2, PublishedBy/1.\n\n\nFatal error:  The following symbols are used with multiple arities: PublishedBy/2, PublishedBy/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PublishedBy/2, PublishedBy/1.\n\n\nFatal error:  The following symbols are used with multiple arities: PublishedBy/2, PublishedBy/1\n"}
{"timestamp": "2025-06-10T07:49:12.396647", "premises": ["exists x. (PublishingHouse(x) & NewVesselPress(x) & TranslatesForeignLiterature(x, English))", "exists x. (PublishedBy(x, NewVesselPress) & InEnglish(x))", "PublishedBy(NeapolitanChronicles, NewVesselPress)", "TranslatedFrom(NeapolitanChronicles, Italian)", "PublishedBy(PalaceOfFlies, NewVesselPress)"], "conclusion": "PublishedBy(HarryPotter, NewVesselPress)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewVesselPress/1, NewVesselPress/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewVesselPress/1, NewVesselPress/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewVesselPress/1, NewVesselPress/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewVesselPress/1, NewVesselPress/0\n"}
{"timestamp": "2025-06-10T07:50:13.505248", "premises": ["PublishingHouse(NewVesselPress) & TranslatesToEnglish(NewVesselPress)", "all x. (PublishedBy(NewVesselPress, x) -> InEnglish(x))", "PublishedBy(NewVesselPress, NeapolitanChronicles)", "TranslatedFrom(Italian, NeapolitanChronicles)", "PublishedBy(NewVesselPress, PalaceOfFlies)"], "conclusion": "TranslatedFrom(Italian, PalaceOfFlies)", "error_type": "<class 'KeyError'>", "error_message": "9", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 9\n"}
{"timestamp": "2025-06-10T07:50:13.521884", "premises": ["all x. (PublishingHouse(x) & SpecializeInTranslatingForeign(x, English) -> SpecializeInTranslatingFrom(x, OtherLanguages))", "all x. (PublishedBy(NewVesselPress, x) -> InLanguage(x, English))", "PublishedBy(NewVesselPress, NeapolitanChronicles)", "TranslatedFrom(NeapolitanChronicles, Italian)"], "conclusion": "PublishedBy(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Palace of Flies was translated from Italian.  FOL: TranslatedFrom(PalaceOfFlies, Italian) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nPublishedBy(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Palace of Flies was translated from Italian.  FOL: TranslatedFrom(PalaceOfFlies, Italian) </CONCLUSION> <EVALUATE>\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nPublishedBy(NewVesselPress, PalaceOfFlies) </PREMISES> <CONCLUSION> Palace of Flies was translated from Italian.  FOL: TranslatedFrom(PalaceOfFlies, Italian) </CONCLUSION> <EVALUATE>\n                                           ^\n"}
{"timestamp": "2025-06-10T07:51:56.350843", "premises": ["all x. all y. (HomeHasMonitor(x, y) -> WorkAtHome(x))", "all x. all y. (HomeHasMonitor(x, y) -> WorkAtHome(x))  All people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.  We introduce the relation HasHomeOffice(x, y) to capture the idea of having a fully stocked and impressive home office, and derive the implication that this is equivalent to owning a large desktop monitor at their home, captured by the universal rule HomeHasMonitor(x, y) \u2192 HasHomeOffice(x, y). FOL: all x. all y. (HasHomeOffice(x, y) -> HomeHasMonitor(x, y))", "all x. all y. (HasHomeOffice(x, y) -> HomeHasMonitor(x, y))  All people who work regularly and often at home spend their free time tidying and organizing the spaces in their homes.  We introduce the relation WorkAtHome(x) to capture the idea of working regularly and often at home, and derive the implication that people who work at home spend their free time tidying and organizing the spaces in their homes, captured by the universal rule WorkAtHome(x) \u2192 TidyHome(x). FOL: all x. (WorkAtHome(x) -> TidyHome(x))", "all x. (WorkAtHome(x) -> TidyHome(x))  All people who work regularly and often at home visit the office supply store regularly.  We introduce the relation WorkAtHome(x) to capture the idea of working regularly and often at home, and derive the implication that people who work at home visit the office supply store regularly, captured by the universal rule WorkAtHome(x) \u2192 VisitOfficeSupplyStore(x). FOL: all x. (WorkAtHome(x) -> VisitOfficeSupplyStore(x))", "all x. (WorkAtHome(x) -> VisitOfficeSupplyStore(x))  If people spend their free time tidying and organizing the spaces in their home, then they do not go to bed late and wake up every day after noon.  We introduce the relation TidyHome(x) to capture the idea of spending their free time tidying and organizing the spaces in their home, and derive the implication that people who tidy their homes do not go to bed late and wake up every day after noon, captured by the universal rule TidyHome(x) \u2192 -BedLate(x). FOL: all x. (TidyHome(x) -> -BedLate(x))", "all x. (TidyHome(x) -> -BedLate(x))  Remy either both goes to bed late and wakes up every day after noon and spends their free time tidying and organizing the spaces in their home, or they do not go to bed late and wake up every day after noon nor spend their free time tidying and organizing the spaces in their home.  We introduce the relation BedLate(x) and TidyHome(x) to capture the ideas of going to bed late and spending their free time tidying and organizing the spaces in their home, and derive the implication that Remy either satisfies both BedLate(x) and TidyHome(x) or neither, captured by the existential rule exists x. (BedLate(x) & TidyHome(x)) | exists x. (-BedLate(x) & -TidyHome(x)). FOL: (exists x. (BedLate(x) & TidyHome(x)) | exists x. (-BedLate(x) & -TidyHome(x)))", "(exists x. (BedLate(x) & TidyHome(x)) | exists x. (-BedLate(x) & -TidyHome(x)))  Remy visits the office supply store regularly.  We derive the implication that if Remy does not satisfy both BedLate(x) and TidyHome(x), then Remy visits the office supply store regularly, captured by the universal rule -BedLate(x) & -TidyHome(x) \u2192 VisitOfficeSupplyStore(x). FOL: all x. (-BedLate(x) & -TidyHome(x) -> VisitOfficeSupplyStore(x))"], "conclusion": "all x. (-BedLate(x) & -TidyHome(x) -> VisitOfficeSupplyStore(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'All'.\nall x. all y. (HomeHasMonitor(x, y) -> WorkAtHome(x))  All people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.  We introduce the relation HasHomeOffice(x, y) to capture the idea of having a fully stocked and impressive home office, and derive the implication that this is equivalent to owning a large desktop monitor at their home, captured by the universal rule HomeHasMonitor(x, y) \u2192 HasHomeOffice(x, y). FOL: all x. all y. (HasHomeOffice(x, y) -> HomeHasMonitor(x, y))\n                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'All'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'All'.\nall x. all y. (HomeHasMonitor(x, y) -> WorkAtHome(x))  All people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.  We introduce the relation HasHomeOffice(x, y) to capture the idea of having a fully stocked and impressive home office, and derive the implication that this is equivalent to owning a large desktop monitor at their home, captured by the universal rule HomeHasMonitor(x, y) \u2192 HasHomeOffice(x, y). FOL: all x. all y. (HasHomeOffice(x, y) -> HomeHasMonitor(x, y))\n                                                       ^\n"}
{"timestamp": "2025-06-10T07:53:48.029256", "premises": ["all x. (OwnsLargeDesktopMonitorAtHome(x) -> WorksRegularlyAndOftenAtHome(x))", "all x. (HasFullyStockedAndImpressiveHomeOffice(x) -> OwnsLargeDesktopMonitorAtHome(x))", "all x. (WorksRegularlyAndOftenAtHome(x) -> SpendsFreeTimeTidyingAndOrganizing(x))", "all x. (WorksRegularlyAndOftenAtHome(x) -> VisitsOfficeSupplyStoreRegularly(x))", "all x. (SpendsFreeTimeTidyingAndOrganizing(x) -> -(GoesToBedLate(x) & WakesUpEveryDayAfterNoon(x)))", "((GoesToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendsFreeTimeTidyingAndOrganizing(Remy)) | (-GoesToBedLate(Remy) & -WakesUpEveryDayAfterNoon(Remy) & -SpendsFreeTimeTidyingAndOrganizing(Remy)))"], "conclusion": "HasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION>  FOL:  exists x. (HasFullyStockedAndImpressiveHomeOffice(x) & VisitsOfficeSupplyStoreRegularly(x)) </CONCLUSION> FOL:  all x. (OwnsLargeDesktopMonitorAtHome(x) -> WorksRegularlyAndOftenAtHome(x)) all x. (HasFullyStockedAndImpressiveHomeOffice(x) -> OwnsLargeDesktopMonitorAtHome(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> SpendsFreeTimeTidyingAndOrganizing(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> VisitsOfficeSupplyStoreRegularly(x)) all x. (SpendsFreeTimeTidyingAndOrganizing(x) -> -(GoesToBedLate(x) & WakesUpEveryDayAfterNoon(x))) ((GoesToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendsFreeTimeTidyingAndOrganizing(Remy)) | (-GoesToBedLate(Remy) & -WakesUpEveryDayAfterNoon(Remy) & -SpendsFreeTimeTidyingAndOrganizing(Remy))) HasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION>  FOL:  exists x. (HasFullyStockedAndImpressiveHomeOffice(x) & VisitsOfficeSupplyStoreRegularly(x)) </CONCLUSION> FOL:  all x. (OwnsLargeDesktopMonitorAtHome(x) -> WorksRegularlyAndOftenAtHome(x)) all x. (HasFullyStockedAndImpressiveHomeOffice(x) -> OwnsLargeDesktopMonitorAtHome(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> SpendsFreeTimeTidyingAndOrganizing(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> VisitsOfficeSupplyStoreRegularly(x)) all x. (SpendsFreeTimeTidyingAndOrganizing(x) -> -(GoesToBedLate(x) & WakesUpEveryDayAfterNoon(x))) ((GoesToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendsFreeTimeTidyingAndOrganizing(Remy)) | (-GoesToBedLate(Remy) & -WakesUpEveryDayAfterNoon(Remy) & -SpendsFreeTimeTidyingAndOrganizing(Remy))) HasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy)\n                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION>  FOL:  exists x. (HasFullyStockedAndImpressiveHomeOffice(x) & VisitsOfficeSupplyStoreRegularly(x)) </CONCLUSION> FOL:  all x. (OwnsLargeDesktopMonitorAtHome(x) -> WorksRegularlyAndOftenAtHome(x)) all x. (HasFullyStockedAndImpressiveHomeOffice(x) -> OwnsLargeDesktopMonitorAtHome(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> SpendsFreeTimeTidyingAndOrganizing(x)) all x. (WorksRegularlyAndOftenAtHome(x) -> VisitsOfficeSupplyStoreRegularly(x)) all x. (SpendsFreeTimeTidyingAndOrganizing(x) -> -(GoesToBedLate(x) & WakesUpEveryDayAfterNoon(x))) ((GoesToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendsFreeTimeTidyingAndOrganizing(Remy)) | (-GoesToBedLate(Remy) & -WakesUpEveryDayAfterNoon(Remy) & -SpendsFreeTimeTidyingAndOrganizing(Remy))) HasFullyStockedAndImpressiveHomeOffice(Remy) & VisitsOfficeSupplyStoreRegularly(Remy)\n                                                                                      ^\n"}
{"timestamp": "2025-06-10T07:53:48.074599", "premises": ["all x. (OwnLargeDesktopMonitorAtHome(x) -> WorkRegularlyAndOftenAtHome(x))", "all x. (HaveFullyStockedAndImpressiveHomeOffice(x) -> OwnLargeDesktopMonitorAtHome(x))", "all x. (WorkRegularlyAndOftenAtHome(x) -> SpendFreeTimeTidyingAndOrganizing(x))", "all x. (WorkRegularlyAndOftenAtHome(x) -> VisitOfficeSupplyStoreRegularly(x))", "all x. (SpendFreeTimeTidyingAndOrganizing(x) -> -GoToBedLate(x) & WakeUpAfterNoon(x))", "(GoToBedLate(Remy) & WakeUpAfterNoon(Remy) & SpendFreeTimeTidyingAndOrganizing(Remy)) | (-GoToBedLate(Remy) & -WakeUpAfterNoon(Remy) & -SpendFreeTimeTidyingAndOrganizing(Remy))"], "conclusion": "HaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION> Remy has a fully stocked and impressive home office and also visits the office supply store regularly. </CONCLUSION> <EVALUATE>  FOL: all x. (HaveFullyStockedAndImpressiveHomeOffice(x) -> OwnLargeDesktopMonitorAtHome(x))  all x. (OwnLargeDesktopMonitorAtHome(x) -> WorkRegularlyAndOftenAtHome(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> SpendFreeTimeTidyingAndOrganizing(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> VisitOfficeSupplyStoreRegularly(x))  all x. (SpendFreeTimeTidyingAndOrganizing(x) -> -GoToBedLate(x) & WakeUpAfterNoon(x))  (GoToBedLate(Remy) & WakeUpAfterNoon(Remy) & SpendFreeTimeTidyingAndOrganizing(Remy)) | (-GoToBedLate(Remy) & -WakeUpAfterNoon(Remy) & -SpendFreeTimeTidyingAndOrganizing(Remy))  HaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION> Remy has a fully stocked and impressive home office and also visits the office supply store regularly. </CONCLUSION> <EVALUATE>  FOL: all x. (HaveFullyStockedAndImpressiveHomeOffice(x) -> OwnLargeDesktopMonitorAtHome(x))  all x. (OwnLargeDesktopMonitorAtHome(x) -> WorkRegularlyAndOftenAtHome(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> SpendFreeTimeTidyingAndOrganizing(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> VisitOfficeSupplyStoreRegularly(x))  all x. (SpendFreeTimeTidyingAndOrganizing(x) -> -GoToBedLate(x) & WakeUpAfterNoon(x))  (GoToBedLate(Remy) & WakeUpAfterNoon(Remy) & SpendFreeTimeTidyingAndOrganizing(Remy)) | (-GoToBedLate(Remy) & -WakeUpAfterNoon(Remy) & -SpendFreeTimeTidyingAndOrganizing(Remy))  HaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy)\n                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy) </PREMISES> <CONCLUSION> Remy has a fully stocked and impressive home office and also visits the office supply store regularly. </CONCLUSION> <EVALUATE>  FOL: all x. (HaveFullyStockedAndImpressiveHomeOffice(x) -> OwnLargeDesktopMonitorAtHome(x))  all x. (OwnLargeDesktopMonitorAtHome(x) -> WorkRegularlyAndOftenAtHome(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> SpendFreeTimeTidyingAndOrganizing(x))  all x. (WorkRegularlyAndOftenAtHome(x) -> VisitOfficeSupplyStoreRegularly(x))  all x. (SpendFreeTimeTidyingAndOrganizing(x) -> -GoToBedLate(x) & WakeUpAfterNoon(x))  (GoToBedLate(Remy) & WakeUpAfterNoon(Remy) & SpendFreeTimeTidyingAndOrganizing(Remy)) | (-GoToBedLate(Remy) & -WakeUpAfterNoon(Remy) & -SpendFreeTimeTidyingAndOrganizing(Remy))  HaveFullyStockedAndImpressiveHomeOffice(Remy) & VisitOfficeSupplyStoreRegularly(Remy)\n                                                                                      ^\n"}
{"timestamp": "2025-06-10T07:55:36.686539", "premises": ["all x. (OwnsMonitorAtHome(x) -> WorksRegularlyAtHome(x))", "all x. (FullyStockedHomeOffice(x) -> OwnsMonitorAtHome(x))", "all x. (WorksRegularlyAtHome(x) -> TidiesHome(x))", "all x. (WorksRegularlyAtHome(x) -> VisitsOfficeSupplyStore(x))", "all x. (TidiesHome(x) -> -LatesToBed(x) & NotWakesAfterNoon(x))", "((LatesToBed(Remy) & NotWakesAfterNoon(Remy) & TidiesHome(Remy)) | (-LatesToBed(Remy) & -NotWakesAfterNoon(Remy) & -TidiesHome(Remy)))"], "conclusion": "(LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </CONCLUSION>\n                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LatesToBed(Remy) | VisitsOfficeSupplyStore(Remy)) -> (-TidiesHome(Remy) & -FullyStockedHomeOffice(Remy)) </CONCLUSION>\n                                                                                                          ^\n"}
{"timestamp": "2025-06-10T07:55:36.713078", "premises": ["all x. (OwnsLargeDesktopMonitorAtHome(x) -> WorkRegularlyOftenAtHome(x))", "all x. (FullyStockedImpressiveHomeOffice(x) -> OwnsLargeDesktopMonitorAtHome(x))", "all x. (WorkRegularlyOftenAtHome(x) -> SpendFreeTimeTidyingOrganizing(x))", "all x. (WorkRegularlyOftenAtHome(x) -> VisitOfficeSupplyStore(x))", "all x. (SpendFreeTimeTidyingOrganizing(x) -> -(GoToBedLate(x) & WakeUpEveryDayAfterNoon(x)))", "(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendFreeTimeTidyingOrganizing(Remy)) | -(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy)) & -SpendFreeTimeTidyingOrganizing(Remy))"], "conclusion": "(GoToBedLate(Remy) | VisitOfficeSupplyStore(Remy)) -> -(SpendFreeTimeTidyingOrganizing(Remy) | FullyStockedImpressiveHomeOffice(Remy))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendFreeTimeTidyingOrganizing(Remy)) | -(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy)) & -SpendFreeTimeTidyingOrganizing(Remy))\n                                                                                                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy) & SpendFreeTimeTidyingOrganizing(Remy)) | -(GoToBedLate(Remy) & WakesUpEveryDayAfterNoon(Remy)) & -SpendFreeTimeTidyingOrganizing(Remy))\n                                                                                                                                                                                           ^\n"}
{"timestamp": "2025-06-10T07:55:36.721097", "premises": ["all x. (HomeMonitor(x) -> WorkAtHome(x))", "all x. (FullyStockedHomeOffice(x) -> HomeMonitor(x))", "all x. (WorkAtHome(x) -> TidyHome(x))", "all x. (WorkAtHome(x) -> VisitOfficeSupplyStore(x))", "all x. (TidyHome(x) -> -LateNight(x) & -WakeUpAfterNoon(x))"], "conclusion": "((LateNight(Remy) & TidyHome(Remy)) | (-LateNight(Remy) & -TidyHome(Remy))) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LateNight(Remy) | VisitOfficeSupplyStore(Remy)) -> -TidyHome(Remy) & -FullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n((LateNight(Remy) & TidyHome(Remy)) | (-LateNight(Remy) & -TidyHome(Remy))) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LateNight(Remy) | VisitOfficeSupplyStore(Remy)) -> -TidyHome(Remy) & -FullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>\n                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n((LateNight(Remy) & TidyHome(Remy)) | (-LateNight(Remy) & -TidyHome(Remy))) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: (LateNight(Remy) | VisitOfficeSupplyStore(Remy)) -> -TidyHome(Remy) & -FullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>\n                                                                            ^\n"}
{"timestamp": "2025-06-10T07:55:36.726500", "premises": ["all x. (OwnsLargeDesktopMonitor(x) -> WorksAtHome(x))", "all x. (HasFullyStockedHomeOffice(x) -> OwnsLargeDesktopMonitor(x))", "all x. (WorksAtHome(x) -> TidiesAndOrganizes(x))", "all x. (WorksAtHome(x) -> VisitsOfficeSupplyStore(x))", "all x. (TidiesAndOrganizes(x) -> -(GoesToBedLate(x) & WakesUpAfterNoon(x)))"], "conclusion": "(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy) & TidiesAndOrganizes(Remy)) | -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) & -TidiesAndOrganizes(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: -VisitsOfficeSupplyStore(Remy) & -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) -> -TidiesAndOrganizes(Remy) & -HasFullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy) & TidiesAndOrganizes(Remy)) | -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) & -TidiesAndOrganizes(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: -VisitsOfficeSupplyStore(Remy) & -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) -> -TidiesAndOrganizes(Remy) & -HasFullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>\n                                                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy) & TidiesAndOrganizes(Remy)) | -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) & -TidiesAndOrganizes(Remy)) </PREMISES> <CONCLUSION> If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.  FOL: -VisitsOfficeSupplyStore(Remy) & -(GoesToBedLate(Remy) & WakesUpAfterNoon(Remy)) -> -TidiesAndOrganizes(Remy) & -HasFullyStockedHomeOffice(Remy) </CONCLUSION> <EVALUATE>\n                                                                                                                                                       ^\n"}
{"timestamp": "2025-06-10T07:58:29.884319", "premises": ["- (Library(x) & ComputerScience(x))", "all x. (UniversityPartTimeJob(x) -> Library(x))", "all x. (DatabaseCourse(x) -> ComputerScience(x))", "all x. (David(x) -> DatabaseCourse(x))", "all x. (Lab(x) -> David(x))", "Lab(James)", "-UniversityPartTimeJob(Jack) & -Lab(Jack)"], "conclusion": "-UniversityPartTimeJob(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (David(x) -> DatabaseCourse(x))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (David(x) -> DatabaseCourse(x))\n                                   ^\n"}
{"timestamp": "2025-06-10T07:59:42.376078", "premises": ["-exists x. (WorkInLibrary(x) & FromComputerScience(x))", "all x. (PartTimeJobByUniversity(x) -> WorkInLibrary(x))", "all x. (TakeDatabaseCourse(x) -> FromComputerScience(x))", "all x. (InstructedByDavid(x) -> TakeDatabaseCourse(x))", "all x. (WorkInLab(x) -> InstructedByDavid(x))", "WorkInLab(James)", "-PartTimeJobByUniversity(Jack) & -WorkInLab(Jack)"], "conclusion": "(TakeDatabaseCourse(James) | PartTimeJobByUniversity(James))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\n-exists x. (WorkInLibrary(x) & FromComputerScience(x))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\n-exists x. (WorkInLibrary(x) & FromComputerScience(x))\n                                                  ^\n"}
{"timestamp": "2025-06-10T08:02:40.781561", "premises": ["all x. (Hawk(x) -> -Lands(x))", "exists x. (Bird(x) & Hawk(x))"], "conclusion": "all x. (Bird(x) -> Lands(x)) </PREMISES> <CONCLUSION> All birds land  FOL: all x. (Bird(x) -> Lands(x)) </CONCLUSION> <EVALUATE> We start by assuming the premises:  1. all x. (Hawk(x) -> -Lands(x)) 2. exists x. (Bird(x) & Hawk(x))  We want to show that:  all x. (Bird(x) -> Lands(x))  Suppose, for the sake of contradiction, that there exists a bird x such that x does not land. Then, we have:  Bird(x) & -Lands(x)  Since some birds are hawks (by premise 2), we know that there exists a hawk y such that Bird(y) & Hawk(y). Let y be such a hawk.  Since y is a hawk, we know that y does not land (by premise 1):  Hawk(y) -> -Lands(y) Hawk(y) -Lands(y)  Now, since y is a bird (because it's a hawk), we have:  Bird(y) & -Lands(y)  This is a contradiction, because we assumed that there exists a bird x such that x does not land. Therefore, our assumption must be false, and we conclude that:  all x. (Bird(x) -> Lands(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (Bird(x) -> Lands(x)) </PREMISES> <CONCLUSION> All birds land  FOL: all x. (Bird(x) -> Lands(x)) </CONCLUSION> <EVALUATE> We start by assuming the premises:  1. all x. (Hawk(x) -> -Lands(x)) 2. exists x. (Bird(x) & Hawk(x))  We want to show that:  all x. (Bird(x) -> Lands(x))  Suppose, for the sake of contradiction, that there exists a bird x such that x does not land. Then, we have:  Bird(x) & -Lands(x)  Since some birds are hawks (by premise 2), we know that there exists a hawk y such that Bird(y) & Hawk(y). Let y be such a hawk.  Since y is a hawk, we know that y does not land (by premise 1):  Hawk(y) -> -Lands(y) Hawk(y) -Lands(y)  Now, since y is a bird (because it's a hawk), we have:  Bird(y) & -Lands(y)  This is a contradiction, because we assumed that there exists a bird x such that x does not land. Therefore, our assumption must be false, and we conclude that:  all x. (Bird(x) -> Lands(x))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (Bird(x) -> Lands(x)) </PREMISES> <CONCLUSION> All birds land  FOL: all x. (Bird(x) -> Lands(x)) </CONCLUSION> <EVALUATE> We start by assuming the premises:  1. all x. (Hawk(x) -> -Lands(x)) 2. exists x. (Bird(x) & Hawk(x))  We want to show that:  all x. (Bird(x) -> Lands(x))  Suppose, for the sake of contradiction, that there exists a bird x such that x does not land. Then, we have:  Bird(x) & -Lands(x)  Since some birds are hawks (by premise 2), we know that there exists a hawk y such that Bird(y) & Hawk(y). Let y be such a hawk.  Since y is a hawk, we know that y does not land (by premise 1):  Hawk(y) -> -Lands(y) Hawk(y) -Lands(y)  Now, since y is a bird (because it's a hawk), we have:  Bird(y) & -Lands(y)  This is a contradiction, because we assumed that there exists a bird x such that x does not land. Therefore, our assumption must be false, and we conclude that:  all x. (Bird(x) -> Lands(x))\n                             ^\n"}
{"timestamp": "2025-06-10T08:03:42.102851", "premises": ["exists x. exists y. exists z. exists w. (Monday(x) & Time(y, 8) & TV(z) & w = Roses & On(x, y, z, w))", "all x. all y. (Rose(x) & On(x, y) -> y = TheBachelor)", "all x. (On(x, TheBachelor) -> PortraysRealLives(x))", "all x. (PortraysRealLives(x) -> RealityTVShow(x))", "-RealityTVShow(BreakingBad)"], "conclusion": "On(Monday, Time(8, pm), TV, BreakingBad)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Time/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Time/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Time/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Time/2\n"}
{"timestamp": "2025-06-10T08:03:42.102983", "premises": ["exists x. exists y. (RosesGivenOut(x, y) & Day(x, Monday) & Time(x, 8pm) & TV(y))", "all x. (RosesGivenOut(x) & TV(x) -> Bachelor(x))", "all x. (Bachelor(x) -> PortraysRealPeople(x))", "all x. (PortraysRealPeople(x) -> RealityTVShow(x))", "-RealityTVShow(BreakingBad)"], "conclusion": "RealityTVShow(BreakingBad) | -Day(BreakingBad, Monday) | -Time(BreakingBad, 8pm)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RosesGivenOut/1, RosesGivenOut/2.\n\n\nFatal error:  The following symbols are used with multiple arities: RosesGivenOut/1, RosesGivenOut/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RosesGivenOut/1, RosesGivenOut/2.\n\n\nFatal error:  The following symbols are used with multiple arities: RosesGivenOut/1, RosesGivenOut/2\n"}
{"timestamp": "2025-06-10T08:03:42.097491", "premises": ["exists t. exists d. (RoseGivenOutOnTv(t, d) & TimeIs(t, 8 pm) & DayIs(d, Monday))", "all x. (RoseGivenOutOnTv(x) -> OnTheBachelor(x))", "all x. (OnTheBachelor(x) -> PortraysRealLives(x))", "all x. (PortraysRealLives(x) -> RealityTv(x))", "-RealityTv(BreakingBad)"], "conclusion": "On(BreakingBad, Monday, 8 pm)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'pm'.  Expected token ')'.\nOn(BreakingBad, Monday, 8 pm)\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'pm'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'pm'.  Expected token ')'.\nOn(BreakingBad, Monday, 8 pm)\n                          ^\n"}
{"timestamp": "2025-06-10T08:03:42.116848", "premises": ["exists x. exists y. (Monday(y) & Eightpm(x) & RosesGivenOutOnTV(x, y))", "all x. all y. (RosesGivenOutOnTV(x, y) -> OnTheBachelor(x, y))", "all x. all y. (OnTheBachelor(x, y) -> PortraysLivesOfRealPeople(x, y))", "all x. all y. (PortraysLivesOfRealPeople(x, y) -> RealityTVShow(x, y))", "-RealityTVShow(BreakingBad)"], "conclusion": "OnTV(BreakingBad, Eightpm, Monday)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTVShow/1, RealityTVShow/2, Monday/1, Monday/0, Eightpm/1, Eightpm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTVShow/1, RealityTVShow/2, Monday/1, Monday/0, Eightpm/1, Eightpm/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTVShow/1, RealityTVShow/2, Monday/1, Monday/0, Eightpm/1, Eightpm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTVShow/1, RealityTVShow/2, Monday/1, Monday/0, Eightpm/1, Eightpm/0\n"}
{"timestamp": "2025-06-10T08:03:42.126136", "premises": ["exists t. exists d. (OnTV(t, d) & Monday(d) & 8pm(t) & RosesGiven(t, d))", "all x. (RosesGiven(x) -> OnTheBachelor(x))", "all x. (OnTheBachelor(x) -> RealPeoplePortrayed(x))", "all x. (RealPeoplePortrayed(x) -> RealityTVShow(x))", "-RealityTVShow(BreakingBad)"], "conclusion": "OnTV(BreakingBad, Monday) & 8pm(8pmTime) & Monday(MondayDay)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RosesGiven/1, RosesGiven/2, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RosesGiven/1, RosesGiven/2, Monday/1, Monday/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RosesGiven/1, RosesGiven/2, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RosesGiven/1, RosesGiven/2, Monday/1, Monday/0\n"}
{"timestamp": "2025-06-10T08:03:42.132350", "premises": ["exists t. exists r. (Monday(t) & Hour(8) & Time(t) & OnTV(t, r) & RoseGivenOut(t, r))", "all r. all t. (RoseGivenOut(t, r) -> OnTheBachelor(r))", "all x. (OnTheBachelor(x) -> PortraysRealPeople(x))", "all x. (PortraysRealPeople(x) -> RealityTV(x))", "-RealityTV(BreakingBad)"], "conclusion": "OnTV(Time(8), Hour(8), Monday(BreakingBad))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Time/1, Hour/1, Monday/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Time/1, Hour/1, Monday/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Time/1, Hour/1, Monday/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Time/1, Hour/1, Monday/1\n"}
{"timestamp": "2025-06-10T08:04:53.992261", "premises": ["exists x. exists y. (TV(x, y) & RosesGivenOut(x, y))", "all x. all y. (TV(x, y) & RosesGivenOut(x, y) -> OnBachelor(x, y))", "all x. all y. (OnBachelor(x, y) -> PortraysRealPeople(x, y))", "all x. all y. (PortraysRealPeople(x, y) -> RealityTV(x, y))", "-RealityTV(BreakingBad)"], "conclusion": "TV(BreakingBad, Monday, 8) & RosesGivenOut(Monday, 8)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, TV/2, TV/3.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, TV/2, TV/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, TV/2, TV/3.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, TV/2, TV/3\n"}
{"timestamp": "2025-06-10T08:04:53.992378", "premises": ["exists x. exists y. (RosesAreGivenOutOnTvAt(x, y) & x = 8 & y = Monday)", "all x. all y. (RosesAreGivenOutOnTvAt(x, y) -> OnTheBachelor(x, y))", "all x. all y. (OnTheBachelor(x, y) -> PortraysRealPeople(x, y))", "all x. all y. (PortraysRealPeople(x, y) -> RealityTv(x, y))", "-RealityTv(BreakingBad)"], "conclusion": "(RealityTv(BreakingBad) | exists x. exists y. (OnTv(BreakingBad, x, y) & RosesAreGivenOutOnTvAt(x, y) & x = 8 & y = Monday))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTv/2, RealityTv/1.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTv/2, RealityTv/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTv/2, RealityTv/1.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTv/2, RealityTv/1\n"}
{"timestamp": "2025-06-10T08:04:54.013327", "premises": ["exists x. (Time(x) & Monday(x) & Hour(x, 20) & RosesGivenOut(x, TV))", "all x. (RosesGivenOut(x, TV) -> OnTheBachelor(x))", "all x. (OnTheBachelor(x) -> PortrayRealPeople(x))", "all x. (PortrayRealPeople(x) -> RealityTVShow(x))", "-RealityTVShow(BreakingBad)"], "conclusion": "TVShow(BreakingBad) & OnTV(BreakingBad) & RosesGivenOut(BreakingBad, TV) & Time(BreakingBad, Monday) & Hour(BreakingBad, 20)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Time/1, Time/2, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Time/1, Time/2, Monday/1, Monday/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Time/1, Time/2, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Time/1, Time/2, Monday/1, Monday/0\n"}
{"timestamp": "2025-06-10T08:04:54.016852", "premises": ["exists x. exists y. exists z. (RoseGivenOutOnTV(x, y, z) & Monday(y) & AtEightPm(z))", "all x. all y. all z. (RoseGivenOutOnTV(x, y, z) -> OnTheBachelor(x, y, z))", "all x. all y. all z. (OnTheBachelor(x, y, z) -> PortraysRealPeople(x, y, z))", "all x. all y. all z. (PortraysRealPeople(x, y, z) -> RealityTVShow(x, y, z))", "-RealityTVShow(BreakingBad, Monday, AtEightPm)"], "conclusion": "OnTV(BreakingBad, Monday, AtEightPm)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AtEightPm/1, AtEightPm/0, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AtEightPm/1, AtEightPm/0, Monday/1, Monday/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AtEightPm/1, AtEightPm/0, Monday/1, Monday/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AtEightPm/1, AtEightPm/0, Monday/1, Monday/0\n"}
{"timestamp": "2025-06-10T08:04:54.013142", "premises": ["exists x. exists y. (Rose(x, y) & MondayAt8pm(y) & OnTV(y))", "all x. all y. (Rose(x, y) & OnTV(y) -> TheBachelor(x))", "all x. (TheBachelor(x) -> PortraysRealPeople(x))", "all x. (PortraysRealPeople(x) -> RealityTV(x))", "-RealityTV(BreakingBad)"], "conclusion": "TV(BreakingBad) & MondayAt8pm(x) & OnTV(x) & Rose(x, y)  Since Breaking Bad is not a reality TV show, the conclusion cannot follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Since'.\nTV(BreakingBad) & MondayAt8pm(x) & OnTV(x) & Rose(x, y)  Since Breaking Bad is not a reality TV show, the conclusion cannot follow from the premises.\n                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Since'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Since'.\nTV(BreakingBad) & MondayAt8pm(x) & OnTV(x) & Rose(x, y)  Since Breaking Bad is not a reality TV show, the conclusion cannot follow from the premises.\n                                                         ^\n"}
{"timestamp": "2025-06-10T08:06:00.896437", "premises": ["exists x. (x = MondayAt8pm & RosesGivenOutOnTV(x))", "all x. (RosesGivenOutOnTV(x) -> OnTheBachelor(x))", "all x. (OnTheBachelor(x) -> PortraysRealPeople(x))", "all x. (PortraysRealPeople(x) -> RealityTVShow(x))", "-RealityTVShow(BreakingBad)"], "conclusion": "(RosesGivenOutDuring(BreakingBad) -> MondayAt8pm) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\n(RosesGivenOutDuring(BreakingBad) -> MondayAt8pm) </CONCLUSION>\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\n(RosesGivenOutDuring(BreakingBad) -> MondayAt8pm) </CONCLUSION>\n                                                  ^\n"}
{"timestamp": "2025-06-10T08:06:00.905846", "premises": ["exists x. exists y. (Monday(x) & Time(y, 8) & RosesGivenOutOnTV(x, y))", "exists x. exists y. (Monday(x) & Time(y, 8) & RosesGivenOutOnTV(x, y))", "all x. all y. (RosesGivenOutOnTV(x, y) -> OnTheBachelor(x, y))", "all x. all y. (OnTheBachelor(x, y) -> PortraysRealPeople(x, y))", "all x. all y. (PortraysRealPeople(x, y) -> RealityTV(x, y))", "-RealityTV(BreakingBad)"], "conclusion": "RosesGivenOutDuring(BreakingBad) -> (Monday(When) & Time(Time, 8))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, Time/2, Time/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, Time/2, Time/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, Time/2, Time/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealityTV/1, RealityTV/2, Time/2, Time/0\n"}
{"timestamp": "2025-06-10T08:06:00.907568", "premises": ["exists x. (OnTV(Roses(x)) & Monday(8pm) & AtTime(x, 8pm))", "all x. (OnTV(Roses(x)) -> OnBachelor(Roses(x)))", "all x. (OnBachelor(x) -> PortraysLivesOfRealPeople(x))", "all x. (PortraysLivesOfRealPeople(x) -> RealityTV(x))", "-RealityTV(BreakingBad)"], "conclusion": "OnTV(Roses(x)) & During(BreakingBad(x)) -> (Monday(8pm) & AtTime(x, 8pm))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BreakingBad/0, BreakingBad/1.\n\n\nFatal error:  The following symbols are used with multiple arities: BreakingBad/0, BreakingBad/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BreakingBad/0, BreakingBad/1.\n\n\nFatal error:  The following symbols are used with multiple arities: BreakingBad/0, BreakingBad/1\n"}
{"timestamp": "2025-06-10T08:06:40.909723", "premises": ["NaziGermanPolitician(HeinrichSchmidt)", "HeinrichScmidt was a member of the Nazi party in Germany, which makes him a Nazi German politician.", "HeinrichScmidt was a member of the Nazi party in Germany, which makes him a Nazi German politician.", "MemberOfPrussianStateParliament(HeinrichHeinrichScmidt) & MemberOfNaziReichstag(HeinrichHeinrichScmidt)"], "conclusion": "-German(HeinrichSchmidt) | Russian(HeinrichSchmidt)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'was'.\nHeinrichScmidt was a member of the Nazi party in Germany, which makes him a Nazi German politician.\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'was'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'was'.\nHeinrichScmidt was a member of the Nazi party in Germany, which makes him a Nazi German politician.\n               ^\n"}
{"timestamp": "2025-06-10T08:06:40.919628", "premises": ["German(HeinrichScmidt)", "German(HeinrichSchmidt)"], "conclusion": "German(HeinrichSchmidt)  However, the original conclusion statement is: \"Heinrich Schmidt was either German or Russian.\" Since we cannot conclude that Heinrich Schmidt is Russian, we can only conclude that he is German. The original conclusion statement is not fully supported by the premises.  So, the correct evaluation for the conclusion would be:", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\nGerman(HeinrichSchmidt)  However, the original conclusion statement is: \"Heinrich Schmidt was either German or Russian.\" Since we cannot conclude that Heinrich Schmidt is Russian, we can only conclude that he is German. The original conclusion statement is not fully supported by the premises.  So, the correct evaluation for the conclusion would be:\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\nGerman(HeinrichSchmidt)  However, the original conclusion statement is: \"Heinrich Schmidt was either German or Russian.\" Since we cannot conclude that Heinrich Schmidt is Russian, we can only conclude that he is German. The original conclusion statement is not fully supported by the premises.  So, the correct evaluation for the conclusion would be:\n                         ^\n"}
{"timestamp": "2025-06-10T08:06:40.923116", "premises": ["all x. (HeinrichSchmidt(x) -> NaziGermanPolitician(x))", "all x. (HeinrichSchmidt(x) -> (MemberOfPrussianStateParliament(x) & MemberOfNaziReichstag(x)))"], "conclusion": "(MemberOfPrussianStateParliament(HeinrichSchmidt) & MemberOfNaziReichstag(HeinrichSchmidt)) -> (German(HeinrichSchmidt) | Russian(HeinrichSchmidt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeinrichSchmidt/1, HeinrichSchmidt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeinrichSchmidt/1, HeinrichSchmidt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeinrichSchmidt/1, HeinrichSchmidt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeinrichSchmidt/1, HeinrichSchmidt/0\n"}
{"timestamp": "2025-06-10T08:06:40.932414", "premises": ["all x. (HeinrichScmidt(x) -> Nazi(x) & German(x))", "Member(HeinrichScmidt, PrussianStateParliament) & Member(HeinrichScmidt, NaziReichstag)"], "conclusion": "(German(HeinrichSchmidt) & -Russian(HeinrichSchmidt)) | (-German(HeinrichSchmidt) & Russian(HeinrichSchmidt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeinrichScmidt/1, HeinrichScmidt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeinrichScmidt/1, HeinrichScmidt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeinrichScmidt/1, HeinrichScmidt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HeinrichScmidt/1, HeinrichScmidt/0\n"}
{"timestamp": "2025-06-10T08:07:20.889629", "premises": ["Schmidt -> NaziGermanPolitician", "Schmidt(NaziGermanPolitician)", "all x. (HeeinrichSchmidt(x) -> (PrussianStateParliament(x) & NaziReichstag(x)))", "HeeinrichSchmidt(PrussianStateParliament & NaziReichstag)"], "conclusion": "exists x. (NaziGermanPolitician(x) & PrussianStateParliament(x) & NaziReichstag(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nHeeinrichSchmidt(PrussianStateParliament & NaziReichstag)\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nHeeinrichSchmidt(PrussianStateParliament & NaziReichstag)\n                                         ^\n"}
{"timestamp": "2025-06-10T08:07:20.908693", "premises": ["NaziGermanPolitician(HeinrichScmidt)", "NaziGermanPolitician(HeinrichScmidt)"], "conclusion": "Member(HeeinrichScmidt, PrussianStateParliament) & Member(HeeinrichScmidt, NaziReichstag) </PREMISES> <CONCLUSION> Some Nazi German politician was part of both the Prussian State Parliament and the Nazi Reichstag.  FOL: exists x. (NaziGermanPolitician(x) & Member(x, PrussianStateParliament) & Member(x, NaziReichstag)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMember(HeeinrichScmidt, PrussianStateParliament) & Member(HeeinrichScmidt, NaziReichstag) </PREMISES> <CONCLUSION> Some Nazi German politician was part of both the Prussian State Parliament and the Nazi Reichstag.  FOL: exists x. (NaziGermanPolitician(x) & Member(x, PrussianStateParliament) & Member(x, NaziReichstag)) </CONCLUSION> <EVALUATE>\n                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMember(HeeinrichScmidt, PrussianStateParliament) & Member(HeeinrichScmidt, NaziReichstag) </PREMISES> <CONCLUSION> Some Nazi German politician was part of both the Prussian State Parliament and the Nazi Reichstag.  FOL: exists x. (NaziGermanPolitician(x) & Member(x, PrussianStateParliament) & Member(x, NaziReichstag)) </CONCLUSION> <EVALUATE>\n                                                                                          ^\n"}
{"timestamp": "2025-06-10T08:07:56.425524", "premises": ["Politician(HeinrichSchmidt) & NaziGerman(HeinrichSchmidt)", "all x. (NaziGerman(x) & German(x) -> Politician(x))", "Politician(HeinrichSchmidt) & NaziGerman(HeinrichSchmidt)", "MemberOf(HeinrichSchmidt, PrussianStateParliament) & MemberOf(HeinrichSchmidt, NaziReichstag) </PREMISES> <CONCLUSION> No politicians are part of the Nazi Reichstag.  FOL: -exists x. (Politician(x) & MemberOf(x, NaziReichstag))"], "conclusion": "all x. (Politician(x) -> -MemberOf(x, NaziReichstag)) </CONCLUSION> <EVALUATE> Since we have that Heeinrich Schmidt is a member of the Nazi Reichstag and is a politician, this directly contradicts our conclusion. Thus, we can conclude that the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\nall x. (Politician(x) -> -MemberOf(x, NaziReichstag)) </CONCLUSION> <EVALUATE> Since we have that Heeinrich Schmidt is a member of the Nazi Reichstag and is a politician, this directly contradicts our conclusion. Thus, we can conclude that the conclusion does not follow from the premises.\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\nall x. (Politician(x) -> -MemberOf(x, NaziReichstag)) </CONCLUSION> <EVALUATE> Since we have that Heeinrich Schmidt is a member of the Nazi Reichstag and is a politician, this directly contradicts our conclusion. Thus, we can conclude that the conclusion does not follow from the premises.\n                                                      ^\n"}
{"timestamp": "2025-06-10T08:09:11.747337", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(x) & LowSurvivalRate(x)) -> -BileDuctCancer(x)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.745768", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.745691", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.745566", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "-MildFlu(x) | -LowSurvivalRate(x)", "-BileDuctCancer(ColorectalCancer) | -LowSurvivalRate(ColorectalCancer)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.757628", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "- (BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer))"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.757214", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.756722", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "-LowSurvivalRate(MildFlu)", "- (BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer) -> -BileDuctCancer(ColorectalCancer))"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.763927", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "-exists x. (MildFlu(x) & LowSurvivalRate(x))", "-((BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer))"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:09:11.767355", "premises": ["DeadlyDisease(x) -> LowSurvivalRate(x)", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "SevereCancer(ColorectalCancer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.674929", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.678788", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> HighSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.683696", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))"], "conclusion": "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer) </PREMISES> <CONCLUSION> If colorectal cancer is a bile duct cancer or a Cholangiocarcinoma, then colorectal cancer is a bile duct cancer and a mild flu.  FOL: (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer) </PREMISES> <CONCLUSION> If colorectal cancer is a bile duct cancer or a Cholangiocarcinoma, then colorectal cancer is a bile duct cancer and a mild flu.  FOL: (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer)) </CONCLUSION> <EVALUATE>\n                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer) </PREMISES> <CONCLUSION> If colorectal cancer is a bile duct cancer or a Cholangiocarcinoma, then colorectal cancer is a bile duct cancer and a mild flu.  FOL: (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer)) </CONCLUSION> <EVALUATE>\n                                                                                                            ^\n"}
{"timestamp": "2025-06-10T08:10:34.695825", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.696909", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.696066", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.696496", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:10:34.699294", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) & MildFlu(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.250437", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "-MildFlu(ColorectalCancer) & -Cholangiocarcinoma(ColorectalCancer) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.245770", "premises": ["DeadlyDisease(x) -> LowSurvivalRate(x)", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "-MildFlu(x) | -LowSurvivalRate(x)", "BileDuctCancer(x) & LowSurvivalRate(x) -> -BileDuctCancer(x)"], "conclusion": "-MildFlu(x) & -Cholangiocarcinoma(x) -> (BileDuctCancer(x) | Cholangiocarcinoma(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.246400", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-LowSurvivalRate(x) -> -MildFlu(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "(-MildFlu(ColorectalCancer) & -Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.245886", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-MildFlu(x) -> -LowSurvivalRate(x))", "-BileDuctCancer(ColorectalCancer) | -LowSurvivalRate(ColorectalCancer)"], "conclusion": "-MildFlu(ColorectalCancer) & -Cholangiocarcinoma(ColorectalCancer) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.260433", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (-MildFlu(x) | LowSurvivalRate(x))", "-(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "-(MildFlu(ColorectalCancer) & Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.261363", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "- (MildFlu(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.260892", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(x) & LowSurvivalRate(x)) -> -BileDuctCancer(x)"], "conclusion": "-((MildFlu(x) & Cholangiocarcinoma(x)) -> (BileDuctCancer(x) | Cholangiocarcinoma(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.268585", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "-(MildFlu(ColorectalCancer) & Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.269128", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "-MildFlu(ColorectalCancer) & -Cholangiocarcinoma(ColorectalCancer) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:11:58.271234", "premises": ["all x. (DeadlyDisease(x) -> LowSurvivalRate(x))", "all x. (SevereCancer(x) -> DeadlyDisease(x))", "SevereCancer(BileDuctCancer)", "all x. (Cholangiocarcinoma(x) -> BileDuctCancer(x))", "all x. (MildFlu(x) -> -LowSurvivalRate(x))", "(BileDuctCancer(ColorectalCancer) & LowSurvivalRate(ColorectalCancer)) -> -BileDuctCancer(ColorectalCancer)"], "conclusion": "- (MildFlu(ColorectalCancer) & Cholangiocarcinoma(ColorectalCancer)) -> (BileDuctCancer(ColorectalCancer) | Cholangiocarcinoma(ColorectalCancer))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BileDuctCancer/1, BileDuctCancer/0\n"}
{"timestamp": "2025-06-10T08:13:46.895972", "premises": ["all x. (EatSalads(x) -> ConsciousAboutHealth(x))", "all x. (HealthConsciousChildhood(x) -> EatSalads(x))", "all x. (FulfillNutritionalDailyIntakes(x) -> HealthConsciousChildhood(x))", "all x. (GoodRelationships(x) -> FulfillNutritionalDailyIntakes(x))", "all x. (GoodRelationships(x) -> -EatSalads(x))", "all x. (VisitGym(x) -> FulfillNutritionalDailyIntakes(x))", "((HealthConsciousChildhood(Taylor) & GoodRelationships(Taylor)) | (\u00acHealthConsciousChildhood(Taylor) & \u00acGoodRelationships(Taylor)))"], "conclusion": "EatSalads(Taylor)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 665: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 665: invalid continuation byte\n"}
{"timestamp": "2025-06-10T08:15:34.725004", "premises": ["all x. (EatSaladsRegularly(x) -> VeryConscious(x))", "all x. all y. (GrewUpInHealthConsciousHome(x, y) -> EatSaladsRegularly(x))", "all x. all y. (FulfillsDailyNutritionalIntakes(x) & GrewUpIn(x, y) -> HealthConsciousHome(y))", "all x. (GoodRelationship(x) -> FulfillsDailyNutritionalIntakes(x))", "all x. (GoodRelationship(x) -> -EatSaladsRegularly(x))", "all x. (VisitGymDaily(x) -> FulfillsDailyNutritionalIntakes(x))", "(True(grewUpInHealthConsciousHome(Taylor)) & True(goodRelationship(Taylor))) | (\u00acTrue(grewUpInHealthConsciousHome(Taylor)) & \u00acTrue(goodRelationship(Taylor)))"], "conclusion": "VisitGymDaily(Taylor) </PREMISES> <CONCLUSION> Taylor visits the gym at least once a day.  FOL: FulfillsDailyNutritionalIntakes(Taylor) & -EatSaladsRegularly(Taylor) </CONCLUSION> <EVALUATE> Let us first analyze the given premises. FOL: all x. (EatSaladsRegularly(x) -> VeryConscious(x)) FOL: all x. all y. (GrewUpInHealthConsciousHome(x, y) -> EatSaladsRegularly(x)) FOL: all x. all y. (FulfillsDailyNutritionalIntakes(x) & GrewUpIn(x, y) -> HealthConsciousHome(y)) FOL: all x. (GoodRelationship(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: all x. (GoodRelationship(x) -> -EatSaladsRegularly(x)) FOL: all x. (VisitGymDaily(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: (True(grewUpInHealthConsciousHome(Taylor)) & True(goodRelationship(Taylor))) | (\u00acTrue(grewUpInHealthConsciousHome(Taylor)) & \u00acTrue(goodRelationship(Taylor))) FOL: VisitGymDaily(Taylor)  We can prove the conclusion using the premises and the given FOL expressions. First, we can prove that Taylor fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Since Taylor visits the gym at least once a day, she always fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Now, we can prove that Taylor does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  We can prove this by assuming the opposite: FOL: EatSaladsRegularly(Taylor)  This implies that Taylor has a good relationship with her parents: FOL: GoodRelationship(Taylor)  But if Taylor has a good relationship with her parents, then she does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  This contradicts our initial assumption, so we can conclude that Taylor does not eat salads regularly.  Finally, we can prove that Taylor visits the gym at least once a day: FOL: VisitGymDaily(Taylor)  Therefore, the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nVisitGymDaily(Taylor) </PREMISES> <CONCLUSION> Taylor visits the gym at least once a day.  FOL: FulfillsDailyNutritionalIntakes(Taylor) & -EatSaladsRegularly(Taylor) </CONCLUSION> <EVALUATE> Let us first analyze the given premises. FOL: all x. (EatSaladsRegularly(x) -> VeryConscious(x)) FOL: all x. all y. (GrewUpInHealthConsciousHome(x, y) -> EatSaladsRegularly(x)) FOL: all x. all y. (FulfillsDailyNutritionalIntakes(x) & GrewUpIn(x, y) -> HealthConsciousHome(y)) FOL: all x. (GoodRelationship(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: all x. (GoodRelationship(x) -> -EatSaladsRegularly(x)) FOL: all x. (VisitGymDaily(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: (True(grewUpInHealthConsciousHome(Taylor)) & True(goodRelationship(Taylor))) | (\u00acTrue(grewUpInHealthConsciousHome(Taylor)) & \u00acTrue(goodRelationship(Taylor))) FOL: VisitGymDaily(Taylor)  We can prove the conclusion using the premises and the given FOL expressions. First, we can prove that Taylor fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Since Taylor visits the gym at least once a day, she always fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Now, we can prove that Taylor does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  We can prove this by assuming the opposite: FOL: EatSaladsRegularly(Taylor)  This implies that Taylor has a good relationship with her parents: FOL: GoodRelationship(Taylor)  But if Taylor has a good relationship with her parents, then she does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  This contradicts our initial assumption, so we can conclude that Taylor does not eat salads regularly.  Finally, we can prove that Taylor visits the gym at least once a day: FOL: VisitGymDaily(Taylor)  Therefore, the conclusion follows from the premises.\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nVisitGymDaily(Taylor) </PREMISES> <CONCLUSION> Taylor visits the gym at least once a day.  FOL: FulfillsDailyNutritionalIntakes(Taylor) & -EatSaladsRegularly(Taylor) </CONCLUSION> <EVALUATE> Let us first analyze the given premises. FOL: all x. (EatSaladsRegularly(x) -> VeryConscious(x)) FOL: all x. all y. (GrewUpInHealthConsciousHome(x, y) -> EatSaladsRegularly(x)) FOL: all x. all y. (FulfillsDailyNutritionalIntakes(x) & GrewUpIn(x, y) -> HealthConsciousHome(y)) FOL: all x. (GoodRelationship(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: all x. (GoodRelationship(x) -> -EatSaladsRegularly(x)) FOL: all x. (VisitGymDaily(x) -> FulfillsDailyNutritionalIntakes(x)) FOL: (True(grewUpInHealthConsciousHome(Taylor)) & True(goodRelationship(Taylor))) | (\u00acTrue(grewUpInHealthConsciousHome(Taylor)) & \u00acTrue(goodRelationship(Taylor))) FOL: VisitGymDaily(Taylor)  We can prove the conclusion using the premises and the given FOL expressions. First, we can prove that Taylor fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Since Taylor visits the gym at least once a day, she always fulfills her daily nutritional intakes: FOL: FulfillsDailyNutritionalIntakes(Taylor)  Now, we can prove that Taylor does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  We can prove this by assuming the opposite: FOL: EatSaladsRegularly(Taylor)  This implies that Taylor has a good relationship with her parents: FOL: GoodRelationship(Taylor)  But if Taylor has a good relationship with her parents, then she does not eat salads regularly: FOL: -EatSaladsRegularly(Taylor)  This contradicts our initial assumption, so we can conclude that Taylor does not eat salads regularly.  Finally, we can prove that Taylor visits the gym at least once a day: FOL: VisitGymDaily(Taylor)  Therefore, the conclusion follows from the premises.\n                      ^\n"}
{"timestamp": "2025-06-10T08:18:22.400297", "premises": ["all x. (EatSaladsRegularly(x) -> ConsciousAboutHealthAndEatingHabits(x))", "all x. (HealthConsciousChildhoodHome(x) -> EatSaladsRegularly(x))", "all x. (FulfillNutritionalDailyIntakes(x) -> HealthConsciousChildhoodHome(x))", "all x. (GoodRelationshipWithParents(x) -> FulfillNutritionalDailyIntakes(x))", "all x. (GoodRelationshipWithParents(x) -> -EatSaladsRegularly(x))", "all x. (VisitGymAtLeastOnceADay(x) -> FulfillNutritionalDailyIntakes(x))", "((GoodRelationshipWithParents(Taylor) & HealthConsciousChildhoodHome(Taylor)) | (-GoodRelationshipWithParents(Taylor) & -HealthConsciousChildhoodHome(Taylor)))", "-HealthConsciousChildhoodHome(Taylor) & -VisitGymAtLeastOnceADay(Taylor) </PREMISES> <CONCLUSION> Taylor neither grew up in a health-conscious childhood home nor does she visit the gym at least once a day. </CONCLUSION> <EVALUATE>  ---  <PREMISES> All dispensable things are environment-friendly.  FOL: all x. (Dispensable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Dispensable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (Good(x) -> -Bad(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet) </PREMISES> <CONCLUSION> A worksheet is not dispensable. </CONCLUSION> <EVALUATE>  ---  <PREMISES> A La Liga soccer team ranks higher than another if it receives more points.  FOL: all x. all y. (LaLiga(x) & LaLiga(y) & MorePoints(x, y) -> HigherRank(x, y))", "all x. all y. (LaLiga(x) & LaLiga(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> HigherRank(x, y))", "LaLiga(RealMadrid) & LaLiga(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona) </PREMISES> <CONCLUSION> In La Liga 2021-2022, Real Madrid ranks higher than Barcelona. </CONCLUSION> <EVALUATE>  ---  <PREMISES> All athletes are good at sports.  FOL: all x. (Athlete(x) -> GoodAtSports(x))", "all x. (OlympicGoldMedalWinner(x) -> Athlete(x))", "all x. (Scientist(x) -> -GoodAtSports(x))", "all x. (NobelLaureate(x) -> Scientist(x))", "GoodAtSports(Amy) | OlympicGoldMedalWinner(Amy)", "-NobelLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy) </PREMISES> <CONCLUSION> If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate. </CONCLUSION> <EVALUATE>  ---  <PREMISES> All people who are respected by others are people who contribute to the country.  FOL: all x. (Respected(x) -> ContributeToCountry(x))", "all x. (Respected(x) -> ContributeToCountry(x))", "all x. (HaveVisitWithoutAnyFees(x) -> Respected(x))", "all x. (Army(x) -> HaveVisitWithoutAnyFees(x))", "all x. (Thief(x) -> Prison(x))", "all x. (Prison(x) -> BadRecord(x))", "((Thief(James) & -Prison(James)) | (-Thief(James) & Prison(James)))", "((BadRecord(James) & -Respected(James)) | (-BadRecord(James) & Respected(James)))", "ContributeToCountry(James) </PREMISES> <CONCLUSION> James contributes to the country. </CONCLUSION> <EVALUATE>  ---  <PREMISES> No songs are visual.  FOL: all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception) </PREMISES> <CONCLUSION> Inception is a folk song. </CONCLUSION> <EVALUATE>  ---  <PREMISES> Every chef can cook.  FOL: all x. (Chef(x) -> Cook(x))", "exists x. (-Chef(x) & Cook(x))", "all x. (Cook(x) -> (MakeScrambledEggs(x) & MakePasta(x)))", "all x. (MakeCookies(x) & MakeMuffins(x) -> Baker(x))", "all x. ((Baker(x) & MakeScrambledEggs(x)) -> MakeGoodBreakfast(x))", "MakeCookies(Luke) & MakeScrambledEggs(Luke) & MakeMuffins(Luke) & -MakePasta(Luke)", "MakeGoodBreakfast(Luke) </PREMISES> <CONCLUSION> Luke can make a good breakfast. </CONCLUSION> <EVALUATE>  ---  <PREMISES> ETS develops various standardized tests primarily in the United States for K-12 and higher education.  FOL: exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))", "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION> ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions. </CONCLUSION> <EVALUATE>  ---  <PREMISES> China is one of BRICS and its economy is emerging.  FOL: all x. (China(x) -> BRICS(x) & EmergingEconomy(x))", "all x. (India(x) -> BRICS(x) & EmergingEconomy(x))", "all x. all y. (From(x, y) & China(y) -> Speak(x, Chinese))", "all x. all y. (From(x, y) & India(y) -> Speak(x, Hindi) | Speak(x, English))", "exists x. exists y. (From(x, y) & India(y))", "exists x. (BRICS(x) & Speak(x, Hindi)) </PREMISES> <CONCLUSION> There is a person from BRICS speaking Hindi. </CONCLUSION> <EVALUATE>  ---  <PREMISES> All people who eat salads regularly are very conscious about their health and eating habits.  FOL: all x. (EatSaladsRegularly(x) -> ConsciousAboutHealthAndEatingHabits(x))", "all x. (HealthConsciousChildhoodHome(x) -> EatSaladsRegularly(x))", "all x. (FulfillNutritionalDailyIntakes(x) -> HealthConsciousChildhoodHome(x))", "all x. (GoodRelationshipWithParents(x) -> FulfillNutritionalDailyIntakes(x))", "all x. (GoodRelationshipWithParents(x) -> -EatSaladsRegularly(x))", "all x. (VisitGymAtLeastOnceADay(x) -> FulfillNutritionalDailyIntakes(x))", "((GoodRelationshipWithParents(Taylor) & HealthConsciousChildhoodHome(Taylor)) | (-GoodRelationshipWithParents(Taylor) & -HealthConsciousChildhoodHome(Taylor)))"], "conclusion": "-HealthConsciousChildhoodHome(Taylor) & -VisitGymAtLeastOnceADay(Taylor) </PREMISES> <CONCLUSION> Taylor neither grew up in a health-conscious childhood home nor does she visit the gym at least once a day. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-HealthConsciousChildhoodHome(Taylor) & -VisitGymAtLeastOnceADay(Taylor) </PREMISES> <CONCLUSION> Taylor neither grew up in a health-conscious childhood home nor does she visit the gym at least once a day. </CONCLUSION> <EVALUATE>\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-HealthConsciousChildhoodHome(Taylor) & -VisitGymAtLeastOnceADay(Taylor) </PREMISES> <CONCLUSION> Taylor neither grew up in a health-conscious childhood home nor does she visit the gym at least once a day. </CONCLUSION> <EVALUATE>\n                                                                         ^\n"}
{"timestamp": "2025-06-10T08:18:22.404089", "premises": ["all x. (SaladEater(x) -> HealthConscious(x))", "all x. (HealthConsciousChildhoodHome(x) -> SaladEater(x))", "all x. (FulfillDailyIntakes(x) -> HealthConsciousChildhoodHome(x))", "all x. (GoodRelationship(x) -> FulfillDailyIntakes(x))", "all x. (GoodRelationship(x) -> -SaladEater(x))", "all x. (GymVisitor(x) -> FulfillDailyIntakes(x))", "(exists x. (HealthConsciousChildhoodHome(Taylor) & GoodRelationship(Taylor)) | exists x. (-HealthConsciousChildhoodHome(Taylor) & -GoodRelationship(Taylor)))"], "conclusion": "-HealthConsciousChildhoodHome(Taylor) & -GymVisitor(Taylor)", "error_type": "<class 'KeyError'>", "error_message": "25", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 25\n"}
{"timestamp": "2025-06-10T08:18:22.415190", "premises": ["all x. (EatSaladsRegularly(x) <-> VeryConscious(x))", "all x. (HealthConsciousHome(x) -> EatSaladsRegularly(x))", "all x. (FulfillNutritionalIntakes(x) -> HealthConsciousHome(x))", "all x. (GoodRelationship(x) -> FulfillNutritionalIntakes(x))", "all x. (GoodRelationship(x) -> -EatSaladsRegularly(x))", "all x. (GymDaily(x) -> FulfillNutritionalIntakes(x))", "((HealthConsciousHome(Taylor) & GoodRelationship(Taylor)) -> ((\u00acHealthConsciousHome(Taylor)) & \u00acGoodRelationship(Taylor)))"], "conclusion": "-TaylorVisitsGymDaily -> -TaylorGrewUpInHealthConsciousHome", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'VeryConscious'.  Expected token ')'.\n(> VeryConscious(x)) -> all x. (EatSaladsRegularly(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'VeryConscious'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'VeryConscious'.  Expected token ')'.\n(> VeryConscious(x)) -> all x. (EatSaladsRegularly(x))\n   ^\n"}
{"timestamp": "2025-06-10T08:19:03.050287", "premises": ["SportingEvent(OlympicGames)", "In(Tokyo, LastOlympicGames)", "MostMedalsWon(US, Tokyo)"], "conclusion": "SportingEvent(WorldChampionships)  In this case, the theorem prover would conclude that the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'In'.\nSportingEvent(WorldChampionships)  In this case, the theorem prover would conclude that the conclusion follows from the premises.\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'In'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'In'.\nSportingEvent(WorldChampionships)  In this case, the theorem prover would conclude that the conclusion follows from the premises.\n                                   ^\n"}
{"timestamp": "2025-06-10T08:19:03.067805", "premises": ["SportingEvent(OlympicGames)", "SportingEvent(OlympicGames)", "LocatedIn(Tokyo, LastOlympicGames)", "WonMostMedals(InUnitedStates, LastOlympicGames) </PREMISES> <CONCLUSION> The world championships is a sporting event.  FOL: SportingEvent(WorldChampionships) </CONCLUSION> <EVALUATE>", "SportingEvent(OlympicGames)", "LocatedIn(Tokyo, LastOlympicGames)", "WonMostMedals(InUnitedStates, LastOlympicGames)"], "conclusion": "SportingEvent(WorldChampionships)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nWonMostMedals(InUnitedStates, LastOlympicGames) </PREMISES> <CONCLUSION> The world championships is a sporting event.  FOL: SportingEvent(WorldChampionships) </CONCLUSION> <EVALUATE>\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nWonMostMedals(InUnitedStates, LastOlympicGames) </PREMISES> <CONCLUSION> The world championships is a sporting event.  FOL: SportingEvent(WorldChampionships) </CONCLUSION> <EVALUATE>\n                                                ^\n"}
{"timestamp": "2025-06-10T08:19:03.084306", "premises": ["SportingEvent(OlympicGames)", "OlympicGames(Tokyo)", "MostMedalsWon(UnitedStates, Tokyo)"], "conclusion": "SportingEvent(WorldChampionships)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OlympicGames/1, OlympicGames/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OlympicGames/1, OlympicGames/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OlympicGames/1, OlympicGames/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OlympicGames/1, OlympicGames/0\n"}
{"timestamp": "2025-06-10T08:19:42.433610", "premises": ["SportingEvent(OlympicGames)", "In(OlympicGames, Tokyo)", "WonMostMedals(In(UnitedStates, Tokyo))"], "conclusion": "-In(OlympicGames, Tokyo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-06-10T08:19:42.440945", "premises": ["SportingEvent(OlympicGames)", "In(Tokyo, OlympicGames)", "WonMostMedals(UnitedStates, In(Tokyo, OlympicGames))"], "conclusion": "-In(Tokyo, OlympicGames)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-06-10T08:19:42.435322", "premises": ["SportingEvent(OlympicGames)", "In(OlympicGames, Tokyo)", "WonMostMedals(In(Tokyo, OlympicGames), UnitedStates)"], "conclusion": "-In(OlympicGames, Tokyo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-06-10T08:19:42.440843", "premises": ["SportingEvent(OlympicGames)", "LastOlympicGames & In(Tokyo, LastOlympicGames)", "WonMostMedals(UnitedStates, Tokyo)"], "conclusion": "-In(Tokyo, LastOlympicGames)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LastOlympicGames/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LastOlympicGames/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LastOlympicGames/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LastOlympicGames/0\n"}
{"timestamp": "2025-06-10T08:20:32.690581", "premises": ["OlympicGames(OlympicGames) -> SportingEvent(OlympicGames)", "all x. (OlympicGames(x) -> SportingEvent(x))", "LastOlympicGames(OlympicGamesInTokyo)"], "conclusion": "MostMedalsInTheLastOlympicGames(UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsInTheLastOlympicGames(UnitedStates) </CONCLUSION> <EVALUATE> The following logical expressions can be used to determine whether the conclusion follows from the premises using a theorem solver like Prover9:  ``` :- object(prover9). :- modeh(forall, (0+), (0+), (0+), (0+)). :- modeh(exists, (0+), (0+), (0+), (0+)). :- modeh(neg, (0+), (0+), (0+), (0+)). :- modeb(equ, (0+), (0+), (0+), (0+)). :- modeb(and, (0+), (0+), (0+), (0+)). :- modeb(or, (0+), (0+), (0+), (0+)). :- modeb(not, (0+), (0+), (0+), (0+)).  :- object(sport). :- modeb(sporting_event, (0+), (0+), (0+), (0+)). :- modeb(olympic_games, (0+), (0+), (0+), (0+)).  :- object(location). :- modeb(location, (0+), (0+), (0+), (0+)). :- modeb(tokyo, (0+), (0+), (0+), (0+)).  :- object(country). :- modeb(country, (0+), (0+), (0+), (0+)). :- modeb(united_states, (0+), (0+), (0+), (0+)).  :- object(medals). :- modeb(most_medals, (0+), (0+), (0+), (0+)).  :- object(expression). :- modeb(expression, (0+), (0+), (0+), (0+)).  :- facts. olympic_games(olympic_games) -> sporting_event(olympic_games). last_olympic_games(olympic_games_in_tokyo). most_medals_in_last_olympic_games(united_states).  :- query(forall(x, olympic_games(x) -> sporting_event(x))). :- query(forall(x, last_olympic_games(x) -> location(x) = tokyo)). :- query(forall(x, last_olympic_games(x) -> most_medals_in_last_olympic_games(x) = united_states)).  :- query(most_medals_in_last_olympic_games(united_states)). ```", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMostMedalsInTheLastOlympicGames(UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsInTheLastOlympicGames(UnitedStates) </CONCLUSION> <EVALUATE> The following logical expressions can be used to determine whether the conclusion follows from the premises using a theorem solver like Prover9:  ``` :- object(prover9). :- modeh(forall, (0+), (0+), (0+), (0+)). :- modeh(exists, (0+), (0+), (0+), (0+)). :- modeh(neg, (0+), (0+), (0+), (0+)). :- modeb(equ, (0+), (0+), (0+), (0+)). :- modeb(and, (0+), (0+), (0+), (0+)). :- modeb(or, (0+), (0+), (0+), (0+)). :- modeb(not, (0+), (0+), (0+), (0+)).  :- object(sport). :- modeb(sporting_event, (0+), (0+), (0+), (0+)). :- modeb(olympic_games, (0+), (0+), (0+), (0+)).  :- object(location). :- modeb(location, (0+), (0+), (0+), (0+)). :- modeb(tokyo, (0+), (0+), (0+), (0+)).  :- object(country). :- modeb(country, (0+), (0+), (0+), (0+)). :- modeb(united_states, (0+), (0+), (0+), (0+)).  :- object(medals). :- modeb(most_medals, (0+), (0+), (0+), (0+)).  :- object(expression). :- modeb(expression, (0+), (0+), (0+), (0+)).  :- facts. olympic_games(olympic_games) -> sporting_event(olympic_games). last_olympic_games(olympic_games_in_tokyo). most_medals_in_last_olympic_games(united_states).  :- query(forall(x, olympic_games(x) -> sporting_event(x))). :- query(forall(x, last_olympic_games(x) -> location(x) = tokyo)). :- query(forall(x, last_olympic_games(x) -> most_medals_in_last_olympic_games(x) = united_states)).  :- query(most_medals_in_last_olympic_games(united_states)). ```\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMostMedalsInTheLastOlympicGames(UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsInTheLastOlympicGames(UnitedStates) </CONCLUSION> <EVALUATE> The following logical expressions can be used to determine whether the conclusion follows from the premises using a theorem solver like Prover9:  ``` :- object(prover9). :- modeh(forall, (0+), (0+), (0+), (0+)). :- modeh(exists, (0+), (0+), (0+), (0+)). :- modeh(neg, (0+), (0+), (0+), (0+)). :- modeb(equ, (0+), (0+), (0+), (0+)). :- modeb(and, (0+), (0+), (0+), (0+)). :- modeb(or, (0+), (0+), (0+), (0+)). :- modeb(not, (0+), (0+), (0+), (0+)).  :- object(sport). :- modeb(sporting_event, (0+), (0+), (0+), (0+)). :- modeb(olympic_games, (0+), (0+), (0+), (0+)).  :- object(location). :- modeb(location, (0+), (0+), (0+), (0+)). :- modeb(tokyo, (0+), (0+), (0+), (0+)).  :- object(country). :- modeb(country, (0+), (0+), (0+), (0+)). :- modeb(united_states, (0+), (0+), (0+), (0+)).  :- object(medals). :- modeb(most_medals, (0+), (0+), (0+), (0+)).  :- object(expression). :- modeb(expression, (0+), (0+), (0+), (0+)).  :- facts. olympic_games(olympic_games) -> sporting_event(olympic_games). last_olympic_games(olympic_games_in_tokyo). most_medals_in_last_olympic_games(united_states).  :- query(forall(x, olympic_games(x) -> sporting_event(x))). :- query(forall(x, last_olympic_games(x) -> location(x) = tokyo)). :- query(forall(x, last_olympic_games(x) -> most_medals_in_last_olympic_games(x) = united_states)).  :- query(most_medals_in_last_olympic_games(united_states)). ```\n                                              ^\n"}
{"timestamp": "2025-06-10T08:20:32.696125", "premises": ["SportingEvent(OlympicGames)", "LastOlympicGames(Tokyo)"], "conclusion": "MostMedalsIn(Tokyo, UnitedStates) </B PREMISES> <B CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(Tokyo, UnitedStates) </B CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</B'.\nMostMedalsIn(Tokyo, UnitedStates) </B PREMISES> <B CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(Tokyo, UnitedStates) </B CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</B'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</B'.\nMostMedalsIn(Tokyo, UnitedStates) </B PREMISES> <B CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(Tokyo, UnitedStates) </B CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T08:20:32.694852", "premises": ["SportingEvent(OlympicGames)", "In(Tokyo, LastOlympicGames)"], "conclusion": "MostMedalsIn(WonBy(UnitedStates, In(Tokyo, LastOlympicGames))) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(WonBy(UnitedStates, LastOlympicGames)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMostMedalsIn(WonBy(UnitedStates, In(Tokyo, LastOlympicGames))) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(WonBy(UnitedStates, LastOlympicGames)) </CONCLUSION> <EVALUATE>\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMostMedalsIn(WonBy(UnitedStates, In(Tokyo, LastOlympicGames))) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(WonBy(UnitedStates, LastOlympicGames)) </CONCLUSION> <EVALUATE>\n                                                               ^\n"}
{"timestamp": "2025-06-10T08:20:32.701918", "premises": ["SportingEvent(OlympicGames)", "SportingEvent(OlympicGames)", "In(Tokyo, LastOlympicGames)"], "conclusion": "MostMedalsIn(Tokyo, UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(LastOlympicGames, UnitedStates) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMostMedalsIn(Tokyo, UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(LastOlympicGames, UnitedStates) </CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMostMedalsIn(Tokyo, UnitedStates) </PREMISES> <CONCLUSION> The United States won the most medals in the last Olympic games.  FOL: MostMedalsIn(LastOlympicGames, UnitedStates) </CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T08:20:32.702345", "premises": ["SportingEvent(OlympicGames)", "LastOlympicGames(x) & Location(x, Tokyo)", "MostMedalsIn(Location(Tokyo), UnitedStates)"], "conclusion": "MostMedalsIn(Location(x), UnitedStates)  FOL: MostMedalsIn(Location(Tokyo), UnitedStates)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nMostMedalsIn(Location(x), UnitedStates)  FOL: MostMedalsIn(Location(Tokyo), UnitedStates)\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nMostMedalsIn(Location(x), UnitedStates)  FOL: MostMedalsIn(Location(Tokyo), UnitedStates)\n                                         ^\n"}
{"timestamp": "2025-06-10T08:21:49.217878", "premises": ["FliesFrom(Susan, LGA)", "-((FliesFrom(x, y) & FliesTo(x, y)))"], "conclusion": "FliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> Given that the original conclusion was incorrect, we can conclude that the original FOL expression for the conclusion is incorrect. The correct FOL expression should be the negation of the original expression, which is: FOL: -FliesTo(Susan, LGA) This expression asserts that Susan does not fly to LGA airport, which is consistent with the given premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> Given that the original conclusion was incorrect, we can conclude that the original FOL expression for the conclusion is incorrect. The correct FOL expression should be the negation of the original expression, which is: FOL: -FliesTo(Susan, LGA) This expression asserts that Susan does not fly to LGA airport, which is consistent with the given premises.\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> Given that the original conclusion was incorrect, we can conclude that the original FOL expression for the conclusion is incorrect. The correct FOL expression should be the negation of the original expression, which is: FOL: -FliesTo(Susan, LGA) This expression asserts that Susan does not fly to LGA airport, which is consistent with the given premises.\n                     ^\n"}
{"timestamp": "2025-06-10T08:21:49.264543", "premises": ["FliesTo(Susan, LGA)", "all x. all y. (-SameAirport(x, y) | -FliesFrom(x, y) | -FliesTo(x, y))"], "conclusion": "FliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> The premises given in the problem are:  1. Susan flies to LGA airport. 2. The departure and arrival can not be the same airport. 3. John flies from LGA airport.  The conclusion is:  Susan flies from LGA airport.  We need to translate the premises and conclusion into FOL expressions.  1. Susan flies to LGA airport.    FOL: FliesTo(Susan, LGA)  2. The departure and arrival can not be the same airport.    FOL: all x. all y. (-SameAirport(x, y) | -FliesFrom(x, y) | -FliesTo(x, y))  3. John flies from LGA airport.    FOL: FliesFrom(John, LGA)  The conclusion: Susan flies from LGA airport.    FOL: FliesFrom(Susan, LGA)  We can see that the conclusion follows from the premises. The key point is that the second premise rules out the possibility of Susan flying to LGA airport and then flying from LGA airport (which would be a contradiction). Therefore, we can conclude that Susan must fly from LGA airport.  However, we must note that the second premise is a bit tricky. It says that the departure and arrival cannot be the same airport, which is a reasonable assumption in the context of air travel. However, in FOL, this premise is not sufficient to derive the conclusion that Susan flies from LGA airport.   A more accurate translation of the second premise would be:  2. If Susan flies to LGA airport, then she does not fly from LGA airport.    FOL: FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA)  With this revised premise, we can derive the conclusion that Susan flies from LGA airport.  So, the final FOL expressions are:  1. FliesTo(Susan, LGA) 2. FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA) 3. FliesFrom(John, LGA) 4. FliesFrom(Susan, LGA)  And the conclusion follows from these premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> The premises given in the problem are:  1. Susan flies to LGA airport. 2. The departure and arrival can not be the same airport. 3. John flies from LGA airport.  The conclusion is:  Susan flies from LGA airport.  We need to translate the premises and conclusion into FOL expressions.  1. Susan flies to LGA airport.    FOL: FliesTo(Susan, LGA)  2. The departure and arrival can not be the same airport.    FOL: all x. all y. (-SameAirport(x, y) | -FliesFrom(x, y) | -FliesTo(x, y))  3. John flies from LGA airport.    FOL: FliesFrom(John, LGA)  The conclusion: Susan flies from LGA airport.    FOL: FliesFrom(Susan, LGA)  We can see that the conclusion follows from the premises. The key point is that the second premise rules out the possibility of Susan flying to LGA airport and then flying from LGA airport (which would be a contradiction). Therefore, we can conclude that Susan must fly from LGA airport.  However, we must note that the second premise is a bit tricky. It says that the departure and arrival cannot be the same airport, which is a reasonable assumption in the context of air travel. However, in FOL, this premise is not sufficient to derive the conclusion that Susan flies from LGA airport.   A more accurate translation of the second premise would be:  2. If Susan flies to LGA airport, then she does not fly from LGA airport.    FOL: FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA)  With this revised premise, we can derive the conclusion that Susan flies from LGA airport.  So, the final FOL expressions are:  1. FliesTo(Susan, LGA) 2. FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA) 3. FliesFrom(John, LGA) 4. FliesFrom(Susan, LGA)  And the conclusion follows from these premises.\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: FliesFrom(Susan, LGA) </CONCLUSION> <EVALUATE> The premises given in the problem are:  1. Susan flies to LGA airport. 2. The departure and arrival can not be the same airport. 3. John flies from LGA airport.  The conclusion is:  Susan flies from LGA airport.  We need to translate the premises and conclusion into FOL expressions.  1. Susan flies to LGA airport.    FOL: FliesTo(Susan, LGA)  2. The departure and arrival can not be the same airport.    FOL: all x. all y. (-SameAirport(x, y) | -FliesFrom(x, y) | -FliesTo(x, y))  3. John flies from LGA airport.    FOL: FliesFrom(John, LGA)  The conclusion: Susan flies from LGA airport.    FOL: FliesFrom(Susan, LGA)  We can see that the conclusion follows from the premises. The key point is that the second premise rules out the possibility of Susan flying to LGA airport and then flying from LGA airport (which would be a contradiction). Therefore, we can conclude that Susan must fly from LGA airport.  However, we must note that the second premise is a bit tricky. It says that the departure and arrival cannot be the same airport, which is a reasonable assumption in the context of air travel. However, in FOL, this premise is not sufficient to derive the conclusion that Susan flies from LGA airport.   A more accurate translation of the second premise would be:  2. If Susan flies to LGA airport, then she does not fly from LGA airport.    FOL: FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA)  With this revised premise, we can derive the conclusion that Susan flies from LGA airport.  So, the final FOL expressions are:  1. FliesTo(Susan, LGA) 2. FliesTo(Susan, LGA) -> -FliesFrom(Susan, LGA) 3. FliesFrom(John, LGA) 4. FliesFrom(Susan, LGA)  And the conclusion follows from these premises.\n                     ^\n"}
{"timestamp": "2025-06-10T08:21:49.272660", "premises": ["At(LGA, Susan)", "-SameAirport(From(Susan), At(LGA, Susan))", "From(LGA, John)"], "conclusion": "From(LGA, Susan)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: At/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: At/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: At/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: At/2\n"}
{"timestamp": "2025-06-10T08:21:49.288340", "premises": ["Flies(Susan, From, To, LGAairport)", "all x. all y. (Airport(x) & Airport(y) & x = y -> -Flies(x, From, To, y))", "Flies(John, From, LGAairport, To) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Flies(Susan, From, LGAairport, To) </CONCLUSION> <EVALUATE>", "Flies(Susan, From, To, LGAairport)", "all x. all y. (Airport(x) & Airport(y) & x = y -> -Flies(x, From, To, y))", "Flies(John, From, LGAairport, To)"], "conclusion": "Flies(Susan, From, LGAairport, To)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFlies(John, From, LGAairport, To) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Flies(Susan, From, LGAairport, To) </CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFlies(John, From, LGAairport, To) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Flies(Susan, From, LGAairport, To) </CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T08:21:49.288930", "premises": ["Departure(Susan, LGA)", "all x. all y. (Departure(x, y) -> -Arrival(x, y))"], "conclusion": "Departure(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Departure(Susan, LGA) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nDeparture(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Departure(Susan, LGA) </CONCLUSION> <EVALUATE>\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nDeparture(John, LGA) </PREMISES> <CONCLUSION> Susan flies from LGA airport.  FOL: Departure(Susan, LGA) </CONCLUSION> <EVALUATE>\n                     ^\n"}
{"timestamp": "2025-06-10T08:22:29.610686", "premises": ["FliesTo(Susan, Lga)", "(FliesTo(x, y) <-> -FliesFrom(x, y))", "FliesFrom(John, Lga)"], "conclusion": "FliesTo(John, Lga)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\n(> -FliesFrom(x, y)) -> (FliesTo(x, y))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\n(> -FliesFrom(x, y)) -> (FliesTo(x, y))\n   ^\n"}
{"timestamp": "2025-06-10T08:22:29.616428", "premises": ["FliesTo(Susan, LGA)", "all x. (FliesTo(x, y) -> -ArrivesAt(x, y))"], "conclusion": "FliesFrom(John, LGA) </PREMISES> <CONCLUSION> John flies to LGA airport.  FOL: FliesTo(John, LGA) </CONCLUSION> <EVALUATE> We need to apply the rule that the departure and arrival cannot be the same airport. Since John flies from LGA, we can infer that John must fly to a different airport. However, this is not enough to conclude that John flies to LGA, because we do not have any information about the destination of John's flight. The correct conclusion is that we cannot determine whether John flies to LGA or not.  However, since Susan flies to LGA and the departure and arrival cannot be the same airport, we can infer that Susan does not fly from LGA. Since John flies from LGA, we can conclude that John and Susan are not the same person, and therefore John and Susan have different flights. Therefore, John flies to a different airport.  However, we do not have enough information to determine the destination of John's flight. Therefore, we cannot conclude that John flies to LGA airport.  FOL:  ((FliesTo(Susan, LGA) & -FliesFrom(Susan, LGA)) | (FliesFrom(Susan, LGA) & -FliesTo(Susan, LGA)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> John flies to LGA airport.  FOL: FliesTo(John, LGA) </CONCLUSION> <EVALUATE> We need to apply the rule that the departure and arrival cannot be the same airport. Since John flies from LGA, we can infer that John must fly to a different airport. However, this is not enough to conclude that John flies to LGA, because we do not have any information about the destination of John's flight. The correct conclusion is that we cannot determine whether John flies to LGA or not.  However, since Susan flies to LGA and the departure and arrival cannot be the same airport, we can infer that Susan does not fly from LGA. Since John flies from LGA, we can conclude that John and Susan are not the same person, and therefore John and Susan have different flights. Therefore, John flies to a different airport.  However, we do not have enough information to determine the destination of John's flight. Therefore, we cannot conclude that John flies to LGA airport.  FOL:  ((FliesTo(Susan, LGA) & -FliesFrom(Susan, LGA)) | (FliesFrom(Susan, LGA) & -FliesTo(Susan, LGA)))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFliesFrom(John, LGA) </PREMISES> <CONCLUSION> John flies to LGA airport.  FOL: FliesTo(John, LGA) </CONCLUSION> <EVALUATE> We need to apply the rule that the departure and arrival cannot be the same airport. Since John flies from LGA, we can infer that John must fly to a different airport. However, this is not enough to conclude that John flies to LGA, because we do not have any information about the destination of John's flight. The correct conclusion is that we cannot determine whether John flies to LGA or not.  However, since Susan flies to LGA and the departure and arrival cannot be the same airport, we can infer that Susan does not fly from LGA. Since John flies from LGA, we can conclude that John and Susan are not the same person, and therefore John and Susan have different flights. Therefore, John flies to a different airport.  However, we do not have enough information to determine the destination of John's flight. Therefore, we cannot conclude that John flies to LGA airport.  FOL:  ((FliesTo(Susan, LGA) & -FliesFrom(Susan, LGA)) | (FliesFrom(Susan, LGA) & -FliesTo(Susan, LGA)))\n                     ^\n"}
{"timestamp": "2025-06-10T08:23:27.272447", "premises": ["all x. all y. (NiceToAnimals(x, y) & y = x -> -MeanToAnimals(x, y))", "all x. (NiceToAnimals(x) -> -MeanToAnimals(x))", "exists x. exists y. (Grumpy(y) & MeanToAnimals(y, x))", "all x. all y. (Love(x, y) -> NiceToAnimals(y, x))", "all x. (OwnsPet(x) -> Love(x, Animals))", "OwnsPet(Tom)"], "conclusion": "Grumpy(Tom)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MeanToAnimals/1, MeanToAnimals/2, NiceToAnimals/1, NiceToAnimals/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MeanToAnimals/1, MeanToAnimals/2, NiceToAnimals/1, NiceToAnimals/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MeanToAnimals/1, MeanToAnimals/2, NiceToAnimals/1, NiceToAnimals/2.\n\n\nFatal error:  The following symbols are used with multiple arities: MeanToAnimals/1, MeanToAnimals/2, NiceToAnimals/1, NiceToAnimals/2\n"}
{"timestamp": "2025-06-10T08:24:14.922613", "premises": ["all x. (NiceToAnimals(x) & MeanToAnimals(x) -> -x)", "exists x. (Grumpy(x) & MeanToAnimals(x))", "all x. (LovesAnimals(x) -> NiceToAnimals(x))", "all x. (OwnsPet(x) -> LovesAnimals(x))", "OwnsPet(Tom)"], "conclusion": "-Grumpy(Tom) & -MeanToAnimals(Tom)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-06-10T08:25:12.234921", "premises": ["all x. (NiceToAnimals(x) -> -MeanToAnimals(x))", "exists x. (Grumpy(x) & MeanToAnimals(x))", "all x. (AnimalLover(x) -> NiceToAnimals(x))", "all x. (OwesPet(x) -> AnimalLover(x))", "OwnsPet(Tom)"], "conclusion": "(\u00acGrumpy(Tom) & MeanToAnimals(Tom) -> \u00acGrumpy(Tom) & \u00acAnimalLover(Tom))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 829: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 829: invalid continuation byte\n"}
{"timestamp": "2025-06-10T08:26:17.795231", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory) & WrittenInYear(FamilyHistory, 2003)", "CreatedPodcast(DaniShapiro, FamilySecrets) [BG] Boston is an American city.  FOL: AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:26:17.798356", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(y) & WrittenBy(x, y) -> NovelWriter(x))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "CreatedBy(DaniShapiro, FamilySecrets) & Podcast(FamilySecrets) [BG] Boston is an American city.  FOL: AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(y) & WrittenBy(x, y) -> NovelWriter(x))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(y) & WrittenBy(x, y) -> NovelWriter(x))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:26:17.820304", "premises": ["-Novel(Podcast)", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(Podcast, DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0\n"}
{"timestamp": "2025-06-10T08:26:17.821564", "premises": ["-Novel(Podcast)", "all x. (BornInAmericanCity(x) -> American(x))", "all x. all y. (Novel(y) & WrittenBy(y, x) -> NovelWriter(x))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(FamilySecrets, DaniShapiro)", "AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro is a novel writer.  FOL: NovelWriter(DaniShapiro) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNovelWriter(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro is a novel writer.  FOL: NovelWriter(DaniShapiro) </CONCLUSION> <EVALUATE>\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNovelWriter(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro is a novel writer.  FOL: NovelWriter(DaniShapiro) </CONCLUSION> <EVALUATE>\n                         ^\n"}
{"timestamp": "2025-06-10T08:26:17.823292", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (From(x, y) & AmericanCity(y) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Podcast(FamilySecrets) & Created(FamilySecrets, DaniShapiro) [BG] Boston is an American city.  FOL: AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (From(x, y) & AmericanCity(y) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (From(x, y) & AmericanCity(y) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:26:17.820523", "premises": ["-Novel(Podcast)", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(PodcastFamilySecrets, DaniShapiro)", "AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0\n"}
{"timestamp": "2025-06-10T08:26:17.820439", "premises": ["all x. (Podcast(x) -> -Novel(x))", "all x. (BornInAmericanCity(x) -> American(x))", "all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory)", "AssociatedWith(DaniShapiro, Podcast)", "AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0\n"}
{"timestamp": "2025-06-10T08:26:17.814395", "premises": ["all x. (-Novel(x) | -Podcast(x))", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory)", "Created(Podcast, DaniShapiro)", "BornIn(Boston, AmericanCity)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0\n"}
{"timestamp": "2025-06-10T08:26:17.825431", "premises": ["all x. (-Novel(x) | -Podcast(x))", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. all y. (Novel(y) & WrittenBy(y, x) -> NovelWriter(x))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "NovelWriter(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0\n"}
{"timestamp": "2025-06-10T08:27:26.021470", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))  FOL: American(DaniShapiro) & Writer(DaniShapiro)  FOL: WrittenBy(DaniShapiro, FamilyHistory)  FOL: Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)  FOL: Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)  FOL: AmericanCity(Boston)", "all x. (Podcast(x) -> -Novel(x))"], "conclusion": "Podcast(FamilySecrets) -> -Novel(FamilySecrets)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))  FOL: American(DaniShapiro) & Writer(DaniShapiro)  FOL: WrittenBy(DaniShapiro, FamilyHistory)  FOL: Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)  FOL: Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)  FOL: AmericanCity(Boston)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))  FOL: American(DaniShapiro) & Writer(DaniShapiro)  FOL: WrittenBy(DaniShapiro, FamilyHistory)  FOL: Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)  FOL: Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)  FOL: AmericanCity(Boston)\n                                 ^\n"}
{"timestamp": "2025-06-10T08:27:26.026400", "premises": ["-Novel(Podcast)", "TEXT: If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x))", "all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "AmericanWriter(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(Podcast, DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "Novel(FamilySecrets)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'If'.\nTEXT: If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'If'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'If'.\nTEXT: If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x))\n      ^\n"}
{"timestamp": "2025-06-10T08:27:26.044100", "premises": ["-Novel(Podcast)", "all x. all y. (BornIn(x, AmericanCity) -> American(x))", "all x. all y. ((Novel(x) & WrittenBy(x, y)) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(Podcast, DaniShapiro, FamilySecrets)", "AmericanCity(Boston)", "Podcast(FamilySecrets)"], "conclusion": "Novel(FamilySecrets) </PREMISES> <CONCLUSION> Family Secrets is a novel.  FOL: Novel(FamilySecrets) </CONCLUSION> <EVALUATE> Note that this conclusion is not necessarily true based on the premises alone. The premises only establish that Dani Shapiro is an American writer, and that Family History is a novel written by Dani Shapiro. They do not establish that Family Secrets, a podcast created by Dani Shapiro, is a novel.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nNovel(FamilySecrets) </PREMISES> <CONCLUSION> Family Secrets is a novel.  FOL: Novel(FamilySecrets) </CONCLUSION> <EVALUATE> Note that this conclusion is not necessarily true based on the premises alone. The premises only establish that Dani Shapiro is an American writer, and that Family History is a novel written by Dani Shapiro. They do not establish that Family Secrets, a podcast created by Dani Shapiro, is a novel.\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nNovel(FamilySecrets) </PREMISES> <CONCLUSION> Family Secrets is a novel.  FOL: Novel(FamilySecrets) </CONCLUSION> <EVALUATE> Note that this conclusion is not necessarily true based on the premises alone. The premises only establish that Dani Shapiro is an American writer, and that Family History is a novel written by Dani Shapiro. They do not establish that Family Secrets, a podcast created by Dani Shapiro, is a novel.\n                     ^\n"}
{"timestamp": "2025-06-10T08:27:26.049625", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(y, x)) -> NovelWriter(y))", "American(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory)", "CreatedBy(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "Novel(FamilySecrets)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(y, x)) -> NovelWriter(y))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(y, x)) -> NovelWriter(y))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:27:26.047971", "premises": ["-(Podcast(x) -> Novel(x))", "all x. (BornInAmericanCity(x) -> American(x))", "all x. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "CreatedBy(DaniShapiro, FamilySecrets, Podcast)", "AmericanCity(Boston)"], "conclusion": "Novel(FamilySecrets)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0\n"}
{"timestamp": "2025-06-10T08:27:26.043734", "premises": ["all x. (-Podcast(x) | -Novel(x))", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. all y. (Novel(y) & WrittenBy(y, x) -> NovelWriter(x))", "Writer(DaniShapiro) & American(DaniShapiro) -> NovelWriter(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(Podcast(FamilySecrets), DaniShapiro)", "BornIn(Boston, AmericanCity)", "Podcast(FamilySecrets)"], "conclusion": "Novel(FamilySecrets)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Podcast/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Podcast/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Podcast/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Podcast/1\n"}
{"timestamp": "2025-06-10T08:28:32.233552", "premises": ["-Novel(Podcast) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Created(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "BornIn(Boston, DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\n-Novel(Podcast) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\n-Novel(Podcast) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))\n                ^\n"}
{"timestamp": "2025-06-10T08:28:32.259596", "premises": ["all x. -Novel(x) | -Podcast(x)", "all x. (BornIn(x, AmericanCity) -> American(x))", "all x. all y. ((Novel(y) & WrittenBy(y, x)) -> NovelWriter(x))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "BornIn(DaniShapiro, Boston) & American(DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanCity/1, AmericanCity/0\n"}
{"timestamp": "2025-06-10T08:28:32.261014", "premises": ["-all x. (Podcast(x) -> Novel(x))", "all x. (BornInAmericanCity(x) -> American(x))", "all x. all y. ((Novel(x) & WrittenBy(x, y)) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "CreatedPodcast(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "BornInBoston(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro was born in Boston. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nBornInBoston(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro was born in Boston. </CONCLUSION> <EVALUATE>\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nBornInBoston(DaniShapiro) </PREMISES> <CONCLUSION> Dani Shapiro was born in Boston. </CONCLUSION> <EVALUATE>\n                          ^\n"}
{"timestamp": "2025-06-10T08:28:32.262996", "premises": ["all x. -(Podcast(x) & Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (BornIn(x, AmericanCity) & Person(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) & Person(y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "Podcast(FamilySecrets) & CreatedBy(DaniShapiro, FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "BornIn(DaniShapiro, Boston)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. -(Podcast(x) & Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (BornIn(x, AmericanCity) & Person(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) & Person(y) -> NovelWriter(y))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. -(Podcast(x) & Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. all y. (BornIn(x, AmericanCity) & Person(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) & Person(y) -> NovelWriter(y))\n                                ^\n"}
{"timestamp": "2025-06-10T08:28:32.259714", "premises": ["-Novel(Podcast)", "all x. (AmericanCity(x) -> American(x))", "all x. all y. (Novel(x) & WrittenBy(y, x) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(DaniShapiro, FamilyHistory)", "Novel(FamilyHistory) & WrittenBy(DaniShapiro, FamilyHistory) & YearWritten(FamilyHistory, 2003)", "Created(DaniShapiro, FamilySecrets) & Podcast(FamilySecrets)", "AmericanCity(Boston)"], "conclusion": "BornIn(Boston, DaniShapiro)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Podcast/1, Podcast/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Podcast/1, Podcast/0\n"}
{"timestamp": "2025-06-10T08:28:32.267071", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(x, y)) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & YearWritten(FamilyHistory, 2003)", "Created(Podcast, DaniShapiro, FamilySecrets)", "BornInAmericanCity(Boston)"], "conclusion": "BornIn(Boston, DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(x, y)) -> NovelWriter(y))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. ((Novel(x) & WrittenBy(x, y)) -> NovelWriter(y))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:28:32.264766", "premises": ["all x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))", "American(DaniShapiro) & Writer(DaniShapiro)", "WrittenBy(FamilyHistory, DaniShapiro)", "Novel(FamilyHistory) & WrittenIn(FamilyHistory, 2003)", "CreatedBy(FamilySecrets, DaniShapiro)", "Boston -> AmericanCity"], "conclusion": "BornInBoston(DaniShapiro)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[BG]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[BG]'.\nall x. (Podcast(x) -> -Novel(x)) [BG] If a person is born in American City, the person is American.  FOL: all x. (BornInAmericanCity(x) -> American(x)) [BG] If a book is novel and it is written by a person, then the person is a novel writer.  FOL: all x. all y. (Novel(x) & WrittenBy(x, y) -> NovelWriter(y))\n                                 ^\n"}
{"timestamp": "2025-06-10T08:31:49.818036", "premises": ["exists x. (BasketballPlayer(x) & -American(x))", "all x. (BasketballPlayer(x) -> Tall(x))", "all x. (Tall(x) -> LargeShoes(x))", "all x. (LargeShoes(x) -> LargeClothes(x))", "-LargeClothes(Yuri)"], "conclusion": "-LargeShoes(Yuri) -> American(Yuri) & BasketballPlayer(Yuri)", "error_type": "<class 'KeyError'>", "error_message": "20", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 20\n"}
{"timestamp": "2025-06-10T08:33:08.598087", "premises": ["exists x. (Event(x) & (Happy(x) | Sad(x))) At least one event is happy.  FOL: exists x. (Event(x) & Happy(x)) </PREMISES> <CONCLUSION> All events are sad.  FOL: -exists x. (Event(x) & Happy(x)) -> all x. Event(x) -> Sad(x) </CONCLUSION> <EVALUATE>", "all x. (Event(x) -> (Happy(x) | Sad(x)))", "exists x. (Event(x) & Happy(x))"], "conclusion": "all x. (Event(x) -> Sad(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'At'.\nexists x. (Event(x) & (Happy(x) | Sad(x))) At least one event is happy.  FOL: exists x. (Event(x) & Happy(x)) </PREMISES> <CONCLUSION> All events are sad.  FOL: -exists x. (Event(x) & Happy(x)) -> all x. Event(x) -> Sad(x) </CONCLUSION> <EVALUATE>\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'At'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'At'.\nexists x. (Event(x) & (Happy(x) | Sad(x))) At least one event is happy.  FOL: exists x. (Event(x) & Happy(x)) </PREMISES> <CONCLUSION> All events are sad.  FOL: -exists x. (Event(x) & Happy(x)) -> all x. Event(x) -> Sad(x) </CONCLUSION> <EVALUATE>\n                                           ^\n"}
{"timestamp": "2025-06-10T08:34:19.043556", "premises": ["Winner92DuMaurierClassic = Steinhauer", "Participant92DuMaurierClassic(Steinhauer)", "exists x. (PersonInSixWayTie(x) & FromBelgium(x))", "FromBelgium(Descampe) & Leaderboard92DuMaurierClassic(Descampe)", "all x. (Leaderboard92DuMaurierClassic(x) -> Participant92DuMaurierClassic(x))", "-Winner92DuMaurierClassic(Steinhauer) </PREMISES> <CONCLUSION>"], "conclusion": "-Winner92DuMaurierClassic(Steinhauer)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-Winner92DuMaurierClassic(Steinhauer) </PREMISES> <CONCLUSION>\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-Winner92DuMaurierClassic(Steinhauer) </PREMISES> <CONCLUSION>\n                                      ^\n"}
{"timestamp": "2025-06-10T08:34:19.054285", "premises": ["Winner(1992DuMaurierClassic, Steinhauer)", "Participated(Steinhauer, 1992DuMaurierClassic)", "(SixWayTie(Leaderboard1992DuMaurierClassic) & exists x. exists y. (From(x, y) & Belgium(y) & OnLeaderboard(x, Leaderboard1992DuMaurierClassic)))", "(From(Descampe, Belgium) & OnLeaderboard(Descampe, Leaderboard1992DuMaurierClassic))", "all x. (OnLeaderboard(x, Leaderboard1992DuMaurierClassic) -> Participated(x, 1992DuMaurierClassic))"], "conclusion": "-Winner(1992DuMaurierClassic, Steinhauer) </PREMISES> <CONCLUSION>  FOL: Leaderboard1992DuMaurierClassic = Leaderboard1992DuMaurierClassic & exists x. exists y. (From(x, y) & Belgium(y) & OnLeaderboard(x, Leaderboard1992DuMaurierClassic)) -> Winner(1992DuMaurierClassic, Steinhauer) & Participated(Descampe, 1992DuMaurierClassic) & -Participated(Steinhauer, 1992DuMaurierClassic)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-Winner(1992DuMaurierClassic, Steinhauer) </PREMISES> <CONCLUSION>  FOL: Leaderboard1992DuMaurierClassic = Leaderboard1992DuMaurierClassic & exists x. exists y. (From(x, y) & Belgium(y) & OnLeaderboard(x, Leaderboard1992DuMaurierClassic)) -> Winner(1992DuMaurierClassic, Steinhauer) & Participated(Descampe, 1992DuMaurierClassic) & -Participated(Steinhauer, 1992DuMaurierClassic)\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-Winner(1992DuMaurierClassic, Steinhauer) </PREMISES> <CONCLUSION>  FOL: Leaderboard1992DuMaurierClassic = Leaderboard1992DuMaurierClassic & exists x. exists y. (From(x, y) & Belgium(y) & OnLeaderboard(x, Leaderboard1992DuMaurierClassic)) -> Winner(1992DuMaurierClassic, Steinhauer) & Participated(Descampe, 1992DuMaurierClassic) & -Participated(Steinhauer, 1992DuMaurierClassic)\n                                          ^\n"}
{"timestamp": "2025-06-10T08:34:19.083626", "premises": ["Winner(1992duMaurierClassic, Steinhauer)", "ParticipatedIn(Steinhauer, 1992duMaurierClassic)", "exists x. (Leaderboard(1992duMaurierClassic) & SixWayTie(Leaderboard(1992duMaurierClassic)) & From(x, Belgium))", "From(Descampe, Belgium) & Leaderboard(Descampe, 1992duMaurierClassic)", "all x. (Leaderboard(x, 1992duMaurierClassic) -> ParticipatedIn(x, 1992duMaurierClassic))"], "conclusion": "-Winner(1992duMaurierClassic, Steinhauer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Leaderboard/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Leaderboard/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Leaderboard/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Leaderboard/1\n"}
{"timestamp": "2025-06-10T08:35:38.012746", "premises": ["Winner(1992DuMaurierClassic, Steinhauer)", "Participated(Steinhauer, 1992DuMaurierClassic)", "exists x. SixWayTie(x, 1992DuMaurierClassic) & exists y. (MemberOfTie(x, y) & From(y, Belgium))", "From(Descampe, Belgium) & Leaderboard(Descampe, 1992DuMaurierClassic)", "all x. (Leaderboard(x, 1992DuMaurierClassic) -> Participated(x, 1992DuMaurierClassic))"], "conclusion": "Leaderboard(Descampe, 1992DuMaurierClassic) & MemberOfTie(Descampe, SixWayTie(1992DuMaurierClassic))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SixWayTie/2, SixWayTie/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SixWayTie/2, SixWayTie/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SixWayTie/2, SixWayTie/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SixWayTie/2, SixWayTie/1\n"}
{"timestamp": "2025-06-10T08:35:38.033642", "premises": ["Winner(1992duMaurierClassic, Steinhauer)", "Participated(Steinhauer, 1992duMaurierClassic)", "exists x. exists y. (SixWayTie(x) & Participated(y, 1992duMaurierClassic) & From(y, Belgium) & Member(x, y))", "From(Descampe, Belgium) & Leaderboard(1992duMaurierClassic, Descampe)", "all x. (Leaderboard(1992duMaurierClassic, x) -> Participated(x, 1992duMaurierClassic))"], "conclusion": "Leaderboard(1992duMaurierClassic, Descampe) & From(Descampe, Belgium) -> Member(exists x. exists y. (SixWayTie(x) & Participated(y, 1992duMaurierClassic) & From(y, Belgium) & Member(x, y)), Descampe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Closing parenthesis expected:\n\n\n    ((Leaderboard(1992duMaurierClassic,Descampe) & From(Descampe,Belgium)) -> Member%%START ERROR%%(exists x y.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Closing parenthesis expected:\n\n\n    ((Leaderboard(1992duMaurierClassic,Descampe) & From(Descampe,Belgium)) -> Member%%START ERROR%%(exists x y.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T08:36:45.378400", "premises": ["all x. (Barks(x) -> -LikesJane(x))", "all x. (Dog(x) -> (Animal(x) & Barks(x)))", "all x. (Jumps(x) -> LikesJane(x))", "all x. (HasLegs(x) -> Jumps(x))", "all x. (Terricolous(x) -> HasLegs(x))", "-Jumps(Kiki) & -HasLegs(Kiki) -> (Terricolous(Kiki) | HasLegs(Kiki))"], "conclusion": "Terricolous(Kiki)", "error_type": "<class 'KeyError'>", "error_message": "7", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 7\n"}
{"timestamp": "2025-06-10T08:37:52.222329", "premises": ["all x. (Barks(x) -> -LikeJane(x))", "all x. (Dog(x) -> (Animal(x) & Barks(x)))", "all x. (Jumps(x) -> LikeJane(x))", "all x. (HasLegs(x) -> Jumps(x))", "all x. (Terricolous(x) -> HasLegs(x))", "-Jumps(KiKi) & -HasLegs(KiKi) -> (Terricolous(KiKi) | HasLegs(KiKi))"], "conclusion": "Barks(KiKi) & Dog(KiKi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (HasLegs(x) -> Jumps(x))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (HasLegs(x) -> Jumps(x))\n                             ^\n"}
{"timestamp": "2025-06-10T08:37:52.236946", "premises": ["all x. (Animal(x) & Barks(x) -> -LikesJane(x))", "all x. (Dog(x) -> Animal(x) & Barks(x))", "all x. (Animal(x) & Jumps(x) -> LikesJane(x))", "all x. (Animal(x) & HasLegs(x) -> Jumps(x))", "all x. (Animal(x) & Terricolous(x) -> HasLegs(x))", "-Animal(KiKi) | -Jumps(KiKi) & -HasLegs(KiKi) -> Terricolous(KiKi) | HasLegs(KiKi))"], "conclusion": "Barks(KiKi) & Dog(KiKi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n-Animal(KiKi) | -Jumps(KiKi) & -HasLegs(KiKi) -> Terricolous(KiKi) | HasLegs(KiKi))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n-Animal(KiKi) | -Jumps(KiKi) & -HasLegs(KiKi) -> Terricolous(KiKi) | HasLegs(KiKi))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T08:39:54.097302", "premises": ["AiltonSilva(?x, Ailton, Silva, 1995).", "FootballPlayer(?x) & LoanedOutTo(?x, Braga).", "BrazilianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico).", "FootballClub(Nautico) & FootballClub(Braga).", "FootballClub(Fluminense)."], "conclusion": "-Brazilian(?x) | -PlaysFor(?x, Nautico)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nAiltonSilva(?x, Ailton, Silva, 1995).\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nAiltonSilva(?x, Ailton, Silva, 1995).\n                                    ^\n"}
{"timestamp": "2025-06-10T08:39:54.096939", "premises": ["AiltonSilva, born_in_1995, Ailton", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Brazillian(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga) & Nautico = Braga", "FootballClub(Fluminense)"], "conclusion": "-exists x. (PlaysFor(x, Nautico) & Brazilian(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nAiltonSilva, born_in_1995, Ailton\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nAiltonSilva, born_in_1995, Ailton\n           ^\n"}
{"timestamp": "2025-06-10T08:39:54.096506", "premises": ["Ailton \u2261 AiltonSilva", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "BrazilianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-exists x. (PlaysFor(x, Nautico) & Brazilian(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nAilton \u2261 AiltonSilva\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nAilton \u2261 AiltonSilva\n       ^\n"}
{"timestamp": "2025-06-10T08:39:54.110043", "premises": ["Ailton & BornIn(Ailton, 1995)", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "Footballer(Ailton) & Brazilian(Ailton) & PlaysFor(Ailton, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-exists x. (FootballPlayer(x) & PlaysFor(x, Nautico) & Brazilian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Ailton/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Ailton/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Ailton/0\n"}
{"timestamp": "2025-06-10T08:39:54.132385", "premises": ["exists x. (Ailton(x) & BornIn(x, 1995))", "FootballPlayer(Ailton) & LoanedTo(Braga, Ailton)", "exists x. (BrazilianFootballer(x) & PlaysFor(x, Nautico) & AiltonSilva(x))", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-exists x. (PlaysFor(x, Nautico) & Brazilian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0\n"}
{"timestamp": "2025-06-10T08:40:48.423369", "premises": ["AiltonSilva", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "BrazilianFootballer(Ailton) & FootballClub(Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-Not(FootballClub(Nautico) -> PlayFor(Ailton, Nautico))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\n-Not(FootballClub(Nautico) -> PlayFor(Ailton, Nautico))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\n-Not(FootballClub(Nautico) -> PlayFor(Ailton, Nautico))\n                           ^\n"}
{"timestamp": "2025-06-10T08:40:48.435813", "premises": ["AiltonSilva = Ailton", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Brazillian(AiltonSilva) & Footballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga) & SameClub(Nautico, Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:40:48.436147", "premises": ["Individual(Ailton) & CommonName(Ailton, Ailton)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(AiltonSilva) & From(AiltonSilva, Brazil) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga) & Coexists(Nautico, Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:40:48.436449", "premises": ["Ailton = AiltonSilva", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, -FootballClub(-))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n-PlaysFor(AiltonSilva, -FootballClub(-))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n-PlaysFor(AiltonSilva, -FootballClub(-))\n                                      ^\n"}
{"timestamp": "2025-06-10T08:40:48.438216", "premises": ["AiltonSilva = Ailton", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, ?) Note: Since PlaysFor is a binary predicate that requires two arguments, the above FOL expression is incomplete and cannot be directly evaluated by Prover9. To fix this, we can use a universally quantified expression like all x. \u00acPlaysFor(AiltonSilva, x). FOL: all x. -PlaysFor(AiltonSilva, x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Note:'.\n-PlaysFor(AiltonSilva, ?) Note: Since PlaysFor is a binary predicate that requires two arguments, the above FOL expression is incomplete and cannot be directly evaluated by Prover9. To fix this, we can use a universally quantified expression like all x. \u00acPlaysFor(AiltonSilva, x). FOL: all x. -PlaysFor(AiltonSilva, x)\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Note:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 189, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Note:'.\n-PlaysFor(AiltonSilva, ?) Note: Since PlaysFor is a binary predicate that requires two arguments, the above FOL expression is incomplete and cannot be directly evaluated by Prover9. To fix this, we can use a universally quantified expression like all x. \u00acPlaysFor(AiltonSilva, x). FOL: all x. -PlaysFor(AiltonSilva, x)\n                          ^\n"}
{"timestamp": "2025-06-10T08:40:48.442791", "premises": ["Ailton \u2261 AiltonSilva", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "FootballPlayer(AiltonSilva) & Brazilian(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nAilton \u2261 AiltonSilva\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nAilton \u2261 AiltonSilva\n                     ^\n"}
{"timestamp": "2025-06-10T08:40:48.446261", "premises": ["AiltonSilva(Ailton) & BornIn(Ailton, 1995) & Ailton(Ailton)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, X)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0, AiltonSilva/1, AiltonSilva/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0, AiltonSilva/1, AiltonSilva/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0, AiltonSilva/1, AiltonSilva/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0, AiltonSilva/1, AiltonSilva/0\n"}
{"timestamp": "2025-06-10T08:40:48.446859", "premises": ["AiltonSilva(Ailton)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, AiltonSilva/1, AiltonSilva/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, AiltonSilva/1, AiltonSilva/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, AiltonSilva/1, AiltonSilva/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, AiltonSilva/1, AiltonSilva/0\n"}
{"timestamp": "2025-06-10T08:40:48.448855", "premises": ["Ailton(AiltonSilva)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-PlaysFor(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0, FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0, FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0, FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0, FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:41:40.703370", "premises": ["AiltonSilva \u2261 Ailton", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Footballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedOut(Ailton, FootballClub)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nAiltonSilva \u2261 Ailton\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nAiltonSilva \u2261 Ailton\n            ^\n"}
{"timestamp": "2025-06-10T08:41:40.714758", "premises": ["Ailton = AiltonSilva & Person(AiltonSilva) & BornIn(AiltonSilva, 1995)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(AiltonSilva) & From(AiltonSilva, Brazil) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedTo(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:41:40.711741", "premises": ["Ailton(Ailton) & BornIn(1995, Ailton)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(Ailton) & FromBrazil(Ailton) & PlaysFor(Ailton, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedTo(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0\n"}
{"timestamp": "2025-06-10T08:41:40.718042", "premises": ["Ailton(Silva) & BornIn(Silva, 1995) & SamePerson(Silva, Ailton)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(Silva) & From(Silva, Brazil) & PlaysFor(Silva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedTo(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0, Ailton/1, Ailton/0\n"}
{"timestamp": "2025-06-10T08:41:40.720868", "premises": ["Ailton = AiltonSilva", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "Footballer(AiltonSilva) & Brazilian(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedOutTo(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:41:40.728624", "premises": ["BirthYear(AiltonSilva, 1995)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(AiltonSilva) & From(AiltonSilva, Brazil) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedTo(Ailton, FootballClub(_))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FootballClub/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FootballClub/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FootballClub/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FootballClub/1\n"}
{"timestamp": "2025-06-10T08:41:40.729137", "premises": ["BornIn(Ailton, 1995)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazilianFootballer(Ailton) & PlaysFor(Ailton, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedOut(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:41:40.733209", "premises": ["AiltonSilva(Ailton) & BornIn(1995, Ailton)", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "Footballer(AiltonSilva) & From(Brazil, AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedOutTo(Ailton, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AiltonSilva/1, AiltonSilva/0, FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AiltonSilva/1, AiltonSilva/0, FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AiltonSilva/1, AiltonSilva/0, FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AiltonSilva/1, AiltonSilva/0, FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:41:40.733773", "premises": ["Ailton", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "-LoanedOut(Ailton, FootballClub(?x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    -(LoanedOut(Ailton,FootballClub(%%START ERROR%%?x%%END ERROR%%))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    -(LoanedOut(Ailton,FootballClub(%%START ERROR%%?x%%END ERROR%%))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T08:42:36.755659", "premises": ["Ailton(Ailton) & BornIn(Ailton, 1995)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "PlayedFor(AiltonSilva, Fluminense)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nBrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 190, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nBrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)\n                                                          ^\n"}
{"timestamp": "2025-06-10T08:42:36.778378", "premises": ["Person(AiltonSilva) & Born(AiltonSilva, 1995) & Ailton(AiltonSilva)", "FootballPlayer(Ailton) & Loaned(Ailton, Braga)", "Footballer(AiltonSilva) & Brazillian(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "PlaysFor(AiltonSilva, Fluminense)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0\n"}
{"timestamp": "2025-06-10T08:42:36.778877", "premises": ["Ailton(SilvaAilton) & BornIn(SilvaAilton, 1995)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(SilvaAilton) & PlaysFor(SilvaAilton, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "PlayedFor(SilvaAilton, Fluminense)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ailton/1, Ailton/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ailton/1, Ailton/0\n"}
{"timestamp": "2025-06-10T08:43:33.533308", "premises": ["Person(AiltonSilva) & BornIn(AiltonSilva, 1995) & CommonlyKnownAs(AiltonSilva, Ailton)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Footballer(AiltonSilva) & From(AiltonSilva, Brazil) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOut(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:43:33.540018", "premises": ["Person(AiltonSilva) & BornIn(AiltonSilva, 1995) & CommonlyKnownAs(AiltonSilva, Ailton)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Footballer(AiltonSilva) & From(Brazil, AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOut(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:43:33.549366", "premises": ["Ailton = AiltonSilva & BornIn(1995, AiltonSilva)", "LoanedOut(Ailton, Braga)", "Footballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOut(AiltonSilva, ?x) & FootballClub(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (LoanedOut(%%START ERROR%%AiltonSilva,?x%%END ERROR%%) & FootballClub(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (LoanedOut(%%START ERROR%%AiltonSilva,?x%%END ERROR%%) & FootballClub(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T08:43:33.552188", "premises": ["BirthYear(AiltonSilva, 1995)", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga) & -Equals(Nautico, Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOut(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:43:33.557893", "premises": ["BornIn(1995, AiltonSilva) & CommonlyKnownAs(Ailton, AiltonSilva)", "FootballPlayer(Ailton) & LoanedTo(Ailton, Braga)", "Footballer(AiltonSilva) & From(AiltonSilva, Brazil) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedTo(AiltonSilva, ?X) & FootballClub(?X)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (LoanedTo(%%START ERROR%%AiltonSilva,?X%%END ERROR%%) & FootballClub(?X)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (LoanedTo(%%START ERROR%%AiltonSilva,?X%%END ERROR%%) & FootballClub(?X)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T08:43:33.558136", "premises": ["BornIn(Ailton, 1995) & CommonlyKnownAs(Ailton, Ailton)", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "Footballer(AiltonSilva) & Brazilian(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOutTo(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:43:33.561348", "premises": ["Ailton = AiltonSilva", "FootballPlayer(Ailton) & LoanedOut(Ailton, Braga)", "Footballer(AiltonSilva) & From(Brazil, AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOut(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
{"timestamp": "2025-06-10T08:43:33.561853", "premises": ["Ailton = AiltonSilva & BornIn(AiltonSilva, 1995) & CommonlyKnownAs(AiltonSilva, Ailton)", "FootballPlayer(Ailton) & LoanedOutTo(Ailton, Braga)", "BrazillianFootballer(AiltonSilva) & PlaysFor(AiltonSilva, Nautico)", "FootballClub(Nautico) & FootballClub(Braga)", "FootballClub(Fluminense)"], "conclusion": "LoanedOutTo(AiltonSilva, FootballClub)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FootballClub/1, FootballClub/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FootballClub/1, FootballClub/0\n"}
