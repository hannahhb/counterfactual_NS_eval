{"timestamp": "2025-05-11T17:20:42.061028", "premises": ["BirdGenus(Ambiortus) & Prehistoric(Ambiortus)", "exists x. (Species(x) & Name(x, AmbiortusDementjevi) & Subspecies(x, Ambiortus))", "In(Mongolia, Habitat(AmbiortusDementjevi))", "Discoverer(YevgenyKurochkin, BirdGenus(Ambiortus))"], "conclusion": "Discoverer(YevgenyKurochkin, exists x. (BirdGenus(x) & -Species(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Discoverer(%%START ERROR%%YevgenyKurochkin,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Discoverer(%%START ERROR%%YevgenyKurochkin,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:22:40.561839", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))", "exists x. (HighlyDeveloped(x) & In(x, WesternHemisphere))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-ContributeTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "Chef(Luke)", "exists x. exists y. (Develop(ETS, x) & Develop(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(ETS, x) & For(x, kOneTwoandhighereducation)) & exists x. (Develops(ETS, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "exists x. (HighlyDeveloped(x) & In(x, WesternHemisphere))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^\n"}
{"timestamp": "2025-05-11T17:23:28.568216", "premises": ["AmericanTVSeries(Westworld) & SciFithrillerTVSeries(Westworld)", "exists x. (TVSeries(x) & Named(x, Westworld) & DebutedOn(x, HBO) & Year(x, TwoZeroOneSix))", "exists x. (TVSeries(x) & AdaptedFrom(x, OriginalFilm) & Year(OriginalFilm, OneNineSevenThree) & WrittenBy(OriginalFilm, MichaelCrichton) & DirectedBy(OriginalFilm, MichaelCrichton))", "exists x. (Film(x) & Year(x, OneNineSevenThree) & About(x, RobotsThatMalfunctionAndKillHumanVisitors))"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & About(x, MalfunctioningRobots)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:23:28.570420", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "exists x. (TelevisionSeries(x) & Named(x, Westworld) & DebutedOn(x, HBO) & Year(x, TwoZeroOneSix))", "exists x. (TVSeries(x) & AdaptedFrom(x, FilmConst) & Named(FilmConst, WestworldOriginal) & Year(FilmConst, OneNineSevenThree) & (WrittenBy(FilmConst, MichaelCrichton) & DirectedBy(FilmConst, MichaelCrichton)))", "exists x. (Film(x) & Named(x, Westworld) & Year(x, OneNineSevenThree) & (About(x, RobotsMalfunction) & About(x, RobotsKillHumanVisitors)))"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & Named(x, Westworld) & (About(x, RobotsMalfunction) & About(x, RobotsKillHumanVisitors))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:23:28.580630", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "exists x. (Year(x) = 2016 & DebutedOnTVSeries(x, Westworld) & OnHBO(x))", "exists x. (TVSeries(x) & AdaptsFrom(x, FilmInOneNineSevenThreeConst) & WrittenAndDirectedBy(x, MichaelCrichton) & AdaptedFrom(FilmInOneNineSevenThreeConst, TVSeries(x)))", "FilmIn1973(Westworld) & About(RobotsMalfunctioningAndKillingHumanVisitors, FilmIn1973(Westworld))"], "conclusion": "DirectedBy(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1, FilmIn1973/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1, FilmIn1973/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1, FilmIn1973/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1, FilmIn1973/1\n"}
{"timestamp": "2025-05-11T17:23:28.588928", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "exists x. (Year(x, TwoZeroOneSix) & DebutedOn(x, HBO) & SameSeries(x, Westworld))", "exists x. exists y. (TVSeries(x) & SameSeries(x, Westworld) & AdaptedFrom(x, y) & Film(y) & WrittenBy(y, MichaelCrichton) & DirectedBy(y, MichaelCrichton) & Year(y, OneNineSevenThree))", "exists x. (Film(x) & About(x, RobotsThatMalfunctionAndBeginKillingHumanVisitors) & Year(x, OneNineSevenThree) & SameFilm(x, Westworld))"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & About(x, MalfunctioningRobots) & -Exists(x, VisitingHumans)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:23:28.595711", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "exists x. (TelevisionSeries(x) & Named(x, Westworld) & DebutedOn(x, HBO) & YearOf(x, TwoZeroOneSix))", "exists x. (TVSeries(x) & AdaptedFrom(x, OriginalFilm) & YearOf(OriginalFilm, OneNineSevenThree) & WrittenAndDirectedBy(OriginalFilm, MichaelCrichton))", "Film(OriginalFilm) & YearOf(OriginalFilm, OneNineSevenThree) & MalfunctioningRobots(OriginalFilm) & KillingHumanVisitors(OriginalFilm)"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & MalfunctioningRobots(x) & KillingHumanVisitors(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:23:28.606201", "premises": ["AmericanTVSeries(Westworld) & ScienceFictionTVSeries(Westworld) & ThrillerTVSeries(Westworld)", "exists x. (TVSeries(x) & Named(x, Westworld) & DebutedOn(x, HBO) & Year(x, TwoZeroOneSix))", "AdaptedFrom(TVSeries(Westworld), OriginalFilm(OneNineSevenThree)) & WrittenAndDirected(OriginalFilm(OneNineSevenThree), MichaelCrichton)", "About(OriginalFilm(OneNineSevenThree), RobotsThatMalfunctionAndBeginKillingHumanVisitors)"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & About(x, RobotsThatMalfunctionAndBeginKillingHumanVisitors)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:23:28.610576", "premises": ["AmericanTVSeries(Westworld) & ScienceFictionThriller(Westworld)", "exists x. (Year(x, TwoZeroOneSix) & DebutedOn(x, HBO) & Named(x, Westworld))", "exists x. (TVSeries(x) & AdaptedFrom(x, Film(OneNineSevenThree)) & WrittenBy(x, MichaelCrichton) & DirectedBy(x, MichaelCrichton))", "exists x. (Film(x) & Year(x, OneNineSevenThree) & Topic(x, RobotsMalfunctioningAndKillingHumanVisitors))"], "conclusion": "DirectedBy(MichaelCrichton, exists x. (Film(x) & Topic(x, RobotsMalfunctioningAndKillingHumanVisitors)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    DirectedBy(%%START ERROR%%MichaelCrichton,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:24:19.550786", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "-exists x. (Phone(x) & Electronic(x))", "error_type": "<class 'KeyError'>", "error_message": "20", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 20\n"}
{"timestamp": "2025-05-11T17:25:23.216868", "premises": ["Museum(TheMetropolitanMuseumOfArt) & InNYC(TheMetropolitanMuseumOfArt)", "Museum(WhitneyMuseumOfAmericanArt) & InNYC(WhitneyMuseumOfAmericanArt)", "Museum(TheMuseumOfModernArt) & InNYC(TheMuseumOfModernArt)", "Includes(TheMetropolitanMuseumOfArt, ByzantineAndIslamicArt)", "Includes(WhitneyMuseumOfAmericanArt, AmericanArt)"], "conclusion": "exists x. (Museum(x) & InNYC(x) & Includes(x, AmericanArt))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nIncludes(TheMetropolitanMuseumOfArt, ByzantineAndIslamicArt)\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nIncludes(TheMetropolitanMuseumOfArt, ByzantineAndIslamicArt)\n                                                            ^\n"}
{"timestamp": "2025-05-11T17:26:03.919975", "premises": ["all x. (Mammal(x) & EggLayer(x) -> (Platypus(x) | Echidna(x)))", "-(Platypus(x) & Hyrax(x))", "-(Echidna(x) & Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> EggLayer(x))", "all x. (Grebe(x) -> -(Platypus(x) | Echidna(x)))"], "conclusion": "EggLayer(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nHyrax(x) -> Mammal(x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nHyrax(x) -> Mammal(x))\n                     ^\n"}
{"timestamp": "2025-05-11T17:26:38.114121", "premises": ["AmericanScreenwriter(MaggieFriedman) & Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & ProducerOf(MaggieFriedman, WitchesOfEastEnd) & TelevisionSeries(WitchesOfEastEnd) & Lifetime(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman) & Developer(MaggieFriedman) & Series(Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & Developer(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nShowrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & ProducerOf(MaggieFriedman, WitchesOfEastEnd) & TelevisionSeries(WitchesOfEastEnd) & Lifetime(WitchesOfEastEnd)\n                                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nShowrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & ProducerOf(MaggieFriedman, WitchesOfEastEnd) & TelevisionSeries(WitchesOfEastEnd) & Lifetime(WitchesOfEastEnd)\n                                                                                                                                                              ^\n"}
{"timestamp": "2025-05-11T17:26:38.127007", "premises": ["AmericanScreenwriter(MaggieFriedman) & ScreenwriterAndProducer(MaggieFriedman)", "ShowrunnerAndExecutiveProducer(MaggieFriedman) & ShowrunnerOf(MaggieFriedman, WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd) & SameAs(WitchesOfEastEnd, TelevisionSeries)", "FantasyDramaSeries(WitchesOfEastEnd)", "ProducedAndDeveloped(MaggieFriedman, Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & DevelopedBy(ShowrunnerOf(MaggieFriedman, WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2\n"}
{"timestamp": "2025-05-11T17:26:38.130677", "premises": ["AmericanScreenwriter(MaggieFriedman) & Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & LifetimeTVSeries(WitchesOfEastEnd) & ShowrunnerAndExecutiveProducerOf(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman) & Developer(MaggieFriedman) & Eastwick", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & Developer(x, ShowrunnerOf(WitchesOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Eastwick/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Eastwick/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Eastwick/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Eastwick/0\n"}
{"timestamp": "2025-05-11T17:26:38.130262", "premises": ["AmericanScreenwriter(MaggieFriedman) & Screenwriter(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & LifetimeSeries(WitchesOfEastEnd) & Produced(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "ABCSeries(Eastwick)"], "conclusion": "exists x. (ABCseries(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-05-11T17:26:38.148940", "premises": ["AmericanScreenwriter(MaggieFriedman) & ScreenProducer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & LifetimeTelevisionSeries(WitchesOfEastEnd) & CreatedBy(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-05-11T17:27:18.337874", "premises": ["exists x. (Artist(x, BoneyM) & Several(x, GermanNumberOneSingles))", "exists x. (Song(x, Hooray!Hooray!ItsAHoliHoliday) & Hit(x, Europe))", "-(exists x. (Song(x, Hooray!Hooray!ItsAHoliHoliday) & GermanNumberOneSingle(x)))", "all x. (PeaksBelowNumberOne(x, GermanCharts) -> -GermanNumberOneSingle(x))"], "conclusion": "PeakedBelowNumberOne(Hooray!Hooray!ItsAHoliHoliday, GermanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedBelowNumberOne(Hooray!Hooray!ItsAHoliHoliday, GermanCharts)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedBelowNumberOne(Hooray!Hooray!ItsAHoliHoliday, GermanCharts)\n                           ^\n"}
{"timestamp": "2025-05-11T17:27:18.339719", "premises": ["exists x. exists y. (MemberOf(BoneyM, x) & (exists z. (Single(z) & In(x, GermanChart) & At(x, z, #One) & Same(z, y)) | exists z. (Single(z) & In(x, GermanChart) & At(x, z, #One) & Same(z, y))))", "exists x. (Title(x) & \"Hooray! Hooray! It's a Holi-Holiday!\" = x & Hit(x, Europe))", "-(exists x. (Single(x) & \"Hooray! Hooray! It's a Holi-Holiday!\" = x & At(x, #One, GermanChart)))", "all x. (Single(x) & Below(x, #One, GermanChart) -> Not(x, #One, GermanChart))"], "conclusion": "Below(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanChart)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanChart)\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, GermanChart)\n             ^\n"}
{"timestamp": "2025-05-11T17:27:18.338741", "premises": ["exists x. exists y. (Band(x) & BandMember(x, y) & (BoneyM(y) & exists z. (Single(z) & In(x, Germany) & PeakedAt(z, NumberOne) & In(x, Germany)))))", "exists x. (Song(x) & PeakedAt(x, NumberOne) & (PeakedAt(x, NumberOne) & (BigHit(x, Europe)))))", "-(exists x. (Song(x) & In(x, Germany) & PeakedAt(x, NumberOne) & \"Hooray! Hooray! It's a Holi-Holiday!\"(x))))", "all x. ((PeakedAt(x, BelowNumberOne) & In(x, Germany)) -> -(PeakedAt(x, NumberOne) & In(x, Germany)))"], "conclusion": "PeakedAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", BelowNumberOne) & In(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", BelowNumberOne) & In(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", BelowNumberOne) & In(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)\n                ^\n"}
{"timestamp": "2025-05-11T17:27:18.340406", "premises": ["exists x. exists y. (German(x) & #1Single(y, x, Germany) & MemberOf(BoneyM, y))", "BigHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Europe)", "-(exists x. (MemberOf(BoneyM, x) & #1Single(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)))", "all x. (PeaksBelow(x, #One, Germany) -> Not(x, #OneSingle, Germany))"], "conclusion": "PeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, Germany)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", #One, Germany)\n                  ^\n"}
{"timestamp": "2025-05-11T17:27:18.339314", "premises": ["exists x. exists y. (BoneyM(x) & GermanNumberOneSingle(y) & Had(x, y))", "BigHit( \"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Europe)", "-(exists x. ( \"Hooray! Hooray! It's a Holi-Holiday!\" & GermanNumberOneSingle(x)))", "all x. (PeaksBelowNumberOne(x, GermanChart) -> NotNumberOneSingle(x, GermanChart))"], "conclusion": "PeakedBelowNumberOne( \"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedBelowNumberOne( \"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedBelowNumberOne( \"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)\n                             ^\n"}
{"timestamp": "2025-05-11T17:27:18.340765", "premises": ["exists x. (Had(BoneyM, x) & GermanSingle(x) & #1SingleInGermany(x))", "BigHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Europe)", "-GermanSingle(#1Single(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\"))", "all x. (PeaksBelow1OnGermanCharts(x) -> -#1SingleInGermany(x))"], "conclusion": "PeakedBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                  ^\n"}
{"timestamp": "2025-05-11T17:27:18.344323", "premises": ["exists x. (GermanSingle(x) & BoneyM(x) & #1(x, GermanChartConst))", "BigHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Europe)", "-exists x. (GermanSingle(x) & \"Hooray! Hooray! It's a Holi-Holiday!\"(x) & #1(x, GermanChartConst))", "all x. ((PeakedBelow(x, GermanChartConst) & GermanChart(x)) -> -#1(x, GermanChartConst))"], "conclusion": "PeakedBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChartConst)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeakedBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChartConst)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeakedBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChartConst)\n                   ^\n"}
{"timestamp": "2025-05-11T17:27:18.344824", "premises": ["exists x. exists y. (Group(x) & Member(x, BoneyM) & (exists z. (Single(y) & In(x, Germany) & AtNumberOne(y, z)) & exists w. (Single(w) & In(w, Germany) & AtNumberOne(w, w) & (w_!=_y)))", "exists x. exists y. (Song(x) & Title(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & ChartedIn(x, y) & AllOver(y, Europe))", "-exists x. exists y. (Song(x) & Title(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & (exists z. (Single(y) & In(x, Germany) & AtNumberOne(y, z))))", "all x. (BelowOne(x, Germany) -> NotNumberOne(x, Germany))"], "conclusion": "BelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nBelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nBelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Germany)\n                ^\n"}
{"timestamp": "2025-05-11T17:27:18.358948", "premises": ["exists x. (Singer(x) & Band(x, BoneyM) & In(x, GermanSingles) & #1(x))", "exists x. (Song(x) & Title(x, HoorayHoorayItsAHoliday) & Hit(x, allOverEurope))", "-exists x. (Song(x) & Title(x, HoorayHoorayItsAHoliday) & In(x, GermanSingles))", "all x. (PeaksBelowOne(x, GermanCharts) -> Not#1(x, Germany))"], "conclusion": "PeaksBelowOne(HoorayHoorayItsAHoliday, GermanCharts)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%((Singer(x) & Band(x,BoneyM)) & In(x,GermanSingles)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%((Singer(x) & Band(x,BoneyM)) & In(x,GermanSingles)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:29:45.814874", "premises": ["all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "(SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy))", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "(SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James))", "(Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James))", "-ContributeTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "Chef(Luke)", "exists x. exists y. (Develops(ETS, x) & Develops(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develops(ETS, x) & AssociatedWith(x, EntryToUSeductionInstitution))", "exists x. (Develops(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "-exists x. (Develops(ETS, x) & Administer(ETS, x) & InternationalTest(x))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (x=y) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y. (Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "PlaysIn(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "Wins(DaveedDiggs, BestActorAward)", "exists x. exists y. (Develops(ETS, x) & Develops(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develops(ETS, x) & AssociatedWith(x, EntryToUSeductionInstitution))", "exists x. (Develops(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "-exists x. (Administer(ETS, x) & InternationalTest(x))", "error_type": "<class 'KeyError'>", "error_message": "20", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 20\n"}
{"timestamp": "2025-05-11T17:30:10.364183", "premises": ["CrotonRiverWatershed(DrainageBasinOf(CrotonRiver))", "In(CrotonRiver, SouthwesternNewYork)", "exists x. (From(CrotonRiverWatershedConst, x) & To(x, Bronx))", "In(Bronx, NewYork)"], "conclusion": "exists x. (From(CrotonRiverWatershedConst, x) & exists y. (x = To(y, NewYork)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: To/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: To/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: To/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: To/2\n"}
{"timestamp": "2025-05-11T17:30:48.901462", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:30:48.922430", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T17:30:48.923364", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x=y+1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2*4", "4 = 2*2"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-05-11T17:30:48.924040", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:30:48.925059", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T17:31:26.347904", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:31:26.350328", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:31:26.358290", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-05-11T17:31:26.397727", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x=y+1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T17:31:26.415923", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. Larger(x, y) -> -Larger(y, x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. Positive(x) -> Positive(Two_*_x)", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:32:05.825973", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-11T17:32:05.833770", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-05-11T17:32:05.844995", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-05-11T17:32:05.865970", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y, One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six, One)", "Equal(Eight, Seven, One)", "Positive(Two)", "all x. (Positive(x) -> Positive(Twice(x)))", "Equal(Eight, Twice(Four))", "Equal(Four, Twice(Two))", "Larger(Six, Seven)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equal/2, Equal/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equal/2, Equal/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equal/2, Equal/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equal/2, Equal/3\n"}
{"timestamp": "2025-05-11T17:32:51.573954", "premises": ["ParamountLeader(DengXiaoping, PeopleRepublicOfChina)", "Praised(DengXiaoping, ReformProgram) & Praised(DengXiaoping, HongKongReversion) & Praised(DengXiaoping, MacauReturn)", "SecretaryGeneral(DengXiaoping) & VicePremier(DengXiaoping) & AntiRightistCampaign(Mao)", "Instrumental(DengXiaoping, ChinaEconomicReconstruction) & GreatLeapForward", "Died(MaoZedong, OneNineSevenSix)", "SupremePower(DengXiaoping)"], "conclusion": "Instrumental(?x, ChinaEconomicReconstruction) & SupremePower(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,ChinaEconomicReconstruction%%END ERROR%%) & SupremePower(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,ChinaEconomicReconstruction%%END ERROR%%) & SupremePower(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:32:51.578041", "premises": ["ServedAs(DengXiaoping, ParamountLeader, PeopleRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "PresidedOver(DengXiaoping, AntiRightistCampaign, Mao)", "Instrumental(DengXiaoping, EconomicReconstructionOfChina, GreatLeapForward)", "Died(MaoZedong, OneNineSevenSix)", "GraduallyRoseToSupremePower(DengXiaoping)"], "conclusion": "Instrumental(?x, EconomicReconstructionOfChina, ?y) & GraduallyRoseToSupremePower(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,EconomicReconstructionOfChina,?y%%END ERROR%%) & GraduallyRoseToSupremePower(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,EconomicReconstructionOfChina,?y%%END ERROR%%) & GraduallyRoseToSupremePower(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T17:32:51.593038", "premises": ["LeaderOf(DengXiaoping, PeopleRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)", "PresidedOver(DengXiaoping, AntiRightistCampaign_&_SecretaryGeneralUnderMao_&_VicePremierInOneNineFiveZeros)", "InstrumentalIn(DengXiaoping, EconomicReconstructionOfChina_&_GreatLeapForward)", "DiedIn(MaoZedong, OneNineSevenSix)", "GraduallyRoseToSupremePower(DengXiaoping, AfterDeathOfMaoZedong)"], "conclusion": "InstrumentalIn(x, EconomicReconstructionOfChina) & GraduallyRoseToSupremePower(x, AfterDeathOfMaoZedong)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReaffirmationOfReformProgram_&_ReversionOfHongKongToChineseControl_&_ReturnOfMacau)\n                                                   ^\n"}
{"timestamp": "2025-05-11T17:33:59.024538", "premises": ["all x. (Volunteer(x) -> Receives(x, IntangibleBenefits))", "all x. (Volunteer(x) -> (WorksRegularly(x) | WorksAsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (WorksInGroup(x) | WorksIndividually(x)))", "all x. (EnvironmentalVolunteer(x) -> Contributes(x, EnvironmentalManagementOrConservation))", "(WorksInGroup(ExampleOfNaturalDisasterResponse) & WorksAsNeeded(ExampleOfNaturalDisasterResponse))", "all x. (Volunteer(x) & ParticipatesInNaturalDisasterResponse(x) -> Receives(x, IntangibleBenefits))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-ContributeTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "Baker(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "Wins(DaveedDiggs, BestActorAward)", "all x. (Volunteer(x) -> Receives(x, IntangibleBenefits))", "all x. (Volunteer(x) -> (WorksRegularly(x) | WorksAsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (WorksInGroup(x) | WorksIndividually(x)))", "all x. (EnvironmentalVolunteer(x) -> Contributes(x, EnvironmentalManagementOrConservation))", "(WorksInGroup(ExampleOfNaturalDisasterResponse) & WorksAsNeeded(ExampleOfNaturalDisasterResponse))"], "conclusion": "all x. (Volunteer(x) & ParticipatesInNaturalDisasterResponse(x) -> Receives(x, IntangibleBenefits))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^\n"}
{"timestamp": "2025-05-11T17:33:59.025765", "premises": ["all x. (Volunteer(x) -> Receives(x, IntangibleBenefits))", "all x. (Volunteer(x) -> (WorkRegularly(x) | WorkAsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (WorkInGroup(x) | WorkIndividually(x)))", "all x. (EnvironmentalVolunteer(x) -> Contribute(x, EnvironmentalManagement_|_Conservation))", "WorkInGroup(ForNaturalDisasterResponse) & WorkAsNeeded(ForNaturalDisasterResponse)"], "conclusion": "all x. (Volunteer(x) & ParticipateIn(x, ForNaturalDisasterResponse) -> Receives(x, IntangibleBenefits))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nall x. (EnvironmentalVolunteer(x) -> Contribute(x, EnvironmentalManagement_|_Conservation))\n                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nall x. (EnvironmentalVolunteer(x) -> Contribute(x, EnvironmentalManagement_|_Conservation))\n                                                                           ^\n"}
{"timestamp": "2025-05-11T17:33:59.056057", "premises": ["all x. (Volunteer(x) -> IntangibleBenefits(x))", "all x. (Volunteer(x) -> (Regularly(x) | AsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (InGroup(x) | Individually(x)))", "all x. (EnvironmentalVolunteer(x) -> Contribute(x, EnvironmentalManagement_|_Conservation))", "(ParticipatingInNaturalDisasterResponseConst -> (InGroupConst_&_AsNeededConst))"], "conclusion": "(Volunteer(x) & ParticipatingInNaturalDisasterResponse(x)) -> IntangibleBenefits(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n(Volunteer(x) & ParticipatingInNaturalDisasterResponse(x)) -> IntangibleBenefits(x))\n                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n(Volunteer(x) & ParticipatingInNaturalDisasterResponse(x)) -> IntangibleBenefits(x))\n                                                                                   ^\n"}
{"timestamp": "2025-05-11T17:35:24.968743", "premises": ["Heptalogyy(X) :- DistinctWork(X, Seven).", "Heptalogyy(HarryPotterSeries) :- DistinctWork(HarryPotterSeries, Seven).", "Heptalogyy(ChroniclesOfNarnia) :- DistinctWork(ChroniclesOfNarnia, Seven)."], "conclusion": "Heptalogyy(HarryPotterSeries).", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nHeptalogyy(HarryPotterSeries).\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nHeptalogyy(HarryPotterSeries).\n                             ^\n"}
{"timestamp": "2025-05-11T17:35:25.010073", "premises": ["Heptalogyy(X) -> (CompoundLiteraryWork(X) & (exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & DistinctWork(yFive) & DistinctWork(ySix) & DistinctWork(ySeven) & Work(X, yOne) & Work(X, yTwo) & Work(X, yThree) & Work(X, yFour) & Work(X, yFive) & Work(X, ySix) & Work(X, ySeven) & 7 = yOne + yTwo + yThree + yFour + yFive + ySix + ySeven)))", "(exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & DistinctWork(yFive) & DistinctWork(ySix) & DistinctWork(ySeven) & Work(HarryPotterSeries, yOne) & Work(HarryPotterSeries, yTwo) & Work(HarryPotterSeries, yThree) & Work(HarryPotterSeries, yFour) & Work(HarryPotterSeries, yFive) & Work(HarryPotterSeries, ySix) & Work(HarryPotterSeries, ySeven) & 7 = yOne + yTwo + yThree + yFour + yFive + ySix + ySeven)))", "(exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & DistinctWork(yFive) & DistinctWork(ySix) & DistinctWork(ySeven) & Work(ChroniclesOfNarnia, yOne) & Work(ChroniclesOfNarnia, yTwo) & Work(ChroniclesOfNarnia, yThree) & Work(ChroniclesOfNarnia, yFour) & Work(ChroniclesOfNarnia, yFive) & Work(ChroniclesOfNarnia, ySix) & Work(ChroniclesOfNarnia, ySeven) & 7 = yOne + yTwo + yThree + yFour + yFive + ySix + ySeven)))"], "conclusion": "Heptalogyy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nHeptalogyy(X) -> (CompoundLiteraryWork(X) & (exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & DistinctWork(yFive) & DistinctWork(ySix) & DistinctWork(ySeven) & Work(X, yOne) & Work(X, yTwo) & Work(X, yThree) & Work(X, yFour) & Work(X, yFive) & Work(X, ySix) & Work(X, ySeven) & 7 = yOne + yTwo + yThree + yFour + yFive + ySix + ySeven)))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nHeptalogyy(X) -> (CompoundLiteraryWork(X) & (exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & DistinctWork(yFive) & DistinctWork(ySix) & DistinctWork(ySeven) & Work(X, yOne) & Work(X, yTwo) & Work(X, yThree) & Work(X, yFour) & Work(X, yFive) & Work(X, ySix) & Work(X, ySeven) & 7 = yOne + yTwo + yThree + yFour + yFive + ySix + ySeven)))\n                                                    ^\n"}
{"timestamp": "2025-05-11T17:36:07.259752", "premises": ["exists x. (Heptalogyy(x) & (exists y. (PartOf(x, y) & (exists z. (PartOf(y, z) & (exists w. (PartOf(z, w) & (exists v. (PartOf(w, v) & (exists u. (PartOf(v, u) & (exists t. (PartOf(u, t) & (exists s. (PartOf(t, s) & (PartOf(s, y)))))))))))))))", "exists x. (HarryPotter(x) & (exists y. (PartOf(x, y) & (exists z. (PartOf(y, z) & (exists w. (PartOf(z, w) & (exists v. (PartOf(w, v) & (exists u. (PartOf(v, u) & (exists t. (PartOf(u, t) & (exists s. (PartOf(t, s) & (PartOf(s, y))))))))))))))", "exists x. (ChroniclesOfNarnia(x) & (exists y. (PartOf(x, y) & (exists z. (PartOf(y, z) & (exists w. (PartOf(z, w) & (exists v. (PartOf(w, v) & (exists u. (PartOf(v, u) & (exists t. (PartOf(u, t) & (exists s. (PartOf(t, s) & (PartOf(s, y))))))))))))))"], "conclusion": "-Heptalogyy(ChroniclesOfNarniaConst)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (Heptalogyy(x) & (exists y. (PartOf(x, y) & (exists z. (PartOf(y, z) & (exists w. (PartOf(z, w) & (exists v. (PartOf(w, v) & (exists u. (PartOf(v, u) & (exists t. (PartOf(u, t) & (exists s. (PartOf(t, s) & (PartOf(s, y)))))))))))))))\n                                                                                                                                                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (Heptalogyy(x) & (exists y. (PartOf(x, y) & (exists z. (PartOf(y, z) & (exists w. (PartOf(z, w) & (exists v. (PartOf(w, v) & (exists u. (PartOf(v, u) & (exists t. (PartOf(u, t) & (exists s. (PartOf(t, s) & (PartOf(s, y)))))))))))))))\n                                                                                                                                                                                                                                                   ^\n"}
{"timestamp": "2025-05-11T17:36:07.261586", "premises": ["Heptalogy(x) <-> (CompoundLiteraryWork(x) & NarrativeWork(x) & exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (yOne<>yTwo & yOne<>yThree & yOne<>yFour & yOne<>yFive & yOne<>ySix & yOne<>ySeven & NarrativeWork(yOne) & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yTwo<>yThree & yTwo<>yFour & yTwo<>yFive & yTwo<>ySix & yTwo<>ySeven & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yThree<>yFour & yThree<>yFive & yThree<>ySix & yThree<>ySeven & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFour<>yFive & yFour<>ySix & yFour<>ySeven & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFive<>ySix & yFive<>ySeven & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (ySix<>ySeven & NarrativeWork(ySix) & NarrativeWork(ySeven) & And(&, NarrativeWork(yOne), NarrativeWork(yTwo), NarrativeWork(yThree), NarrativeWork(yFour), NarrativeWork(yFive), NarrativeWork(ySix), NarrativeWork(ySeven))))))", "exists x. exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (HarryPotterSeries(x) & NarrativeWork(x) & yOne<>yTwo & yOne<>yThree & yOne<>yFour & yOne<>yFive & yOne<>ySix & yOne<>ySeven & NarrativeWork(yOne) & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yTwo<>yThree & yTwo<>yFour & yTwo<>yFive & yTwo<>ySix & yTwo<>ySeven & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yThree<>yFour & yThree<>yFive & yThree<>ySix & yThree<>ySeven & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFour<>yFive & yFour<>ySix & yFour<>ySeven & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFive<>ySix & yFive<>ySeven & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (ySix<>ySeven & NarrativeWork(ySix) & NarrativeWork(ySeven) & And(&, NarrativeWork(yOne), NarrativeWork(yTwo), NarrativeWork(yThree), NarrativeWork(yFour), NarrativeWork(yFive), NarrativeWork(ySix), NarrativeWork(ySeven))))))", "exists x. exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (ChroniclesOfNarnia(x) & NarrativeWork(x) & yOne<>yTwo & yOne<>yThree & yOne<>yFour & yOne<>yFive & yOne<>ySix & yOne<>ySeven & NarrativeWork(yOne) & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yTwo<>yThree & yTwo<>yFour & yTwo<>yFive & yTwo<>ySix & yTwo<>ySeven & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yThree<>yFour & yThree<>yFive & yThree<>ySix & yThree<>ySeven & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFour<>yFive & yFour<>ySix & yFour<>ySeven & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFive<>ySix & yFive<>ySeven & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (ySix<>ySeven & NarrativeWork(ySix) & NarrativeWork(ySeven) & And(&, NarrativeWork(yOne), NarrativeWork(yTwo), NarrativeWork(yThree), NarrativeWork(yFour), NarrativeWork(yFive), NarrativeWork(ySix), NarrativeWork(ySeven)))))"], "conclusion": "-Heptalogy(ChroniclesOfNarniaSeriesOfBooks)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (CompoundLiteraryWork(x) & NarrativeWork(x) & exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (yOne<>yTwo & yOne<>yThree & yOne<>yFour & yOne<>yFive & yOne<>ySix & yOne<>ySeven & NarrativeWork(yOne) & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yTwo<>yThree & yTwo<>yFour & yTwo<>yFive & yTwo<>ySix & yTwo<>ySeven & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yThree<>yFour & yThree<>yFive & yThree<>ySix & yThree<>ySeven & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFour<>yFive & yFour<>ySix & yFour<>ySeven & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFive<>ySix & yFive<>ySeven & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (ySix<>ySeven & NarrativeWork(ySix) & NarrativeWork(ySeven) & And(&, NarrativeWork(yOne), NarrativeWork(yTwo), NarrativeWork(yThree), NarrativeWork(yFour), NarrativeWork(yFive), NarrativeWork(ySix), NarrativeWork(ySeven)))))) -> Heptalogy(x))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (CompoundLiteraryWork(x) & NarrativeWork(x) & exists yOne. exists yTwo. exists yThree. exists yFour. exists yFive. exists ySix. exists ySeven. (yOne<>yTwo & yOne<>yThree & yOne<>yFour & yOne<>yFive & yOne<>ySix & yOne<>ySeven & NarrativeWork(yOne) & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yTwo<>yThree & yTwo<>yFour & yTwo<>yFive & yTwo<>ySix & yTwo<>ySeven & NarrativeWork(yTwo) & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yThree<>yFour & yThree<>yFive & yThree<>ySix & yThree<>ySeven & NarrativeWork(yThree) & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFour<>yFive & yFour<>ySix & yFour<>ySeven & NarrativeWork(yFour) & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (yFive<>ySix & yFive<>ySeven & NarrativeWork(yFive) & NarrativeWork(ySix) & NarrativeWork(ySeven) & (ySix<>ySeven & NarrativeWork(ySix) & NarrativeWork(ySeven) & And(&, NarrativeWork(yOne), NarrativeWork(yTwo), NarrativeWork(yThree), NarrativeWork(yFour), NarrativeWork(yFive), NarrativeWork(ySix), NarrativeWork(ySeven)))))) -> Heptalogy(x))\n                            ^\n"}
{"timestamp": "2025-05-11T17:36:07.279690", "premises": ["all x. (Heptalogy(x) -> exists y. exists z. (NarrativeWork(x) & (y_!=_z) & (y_in_x_&_z_in_x)))", "exists x. (Series(x) & HarryPotter(x) & exists y. exists z. (y_in_x_&_z_in_x_&_y_!=_z))", "exists x. (Series(x) & ChroniclesOfNarnia(x) & exists y. exists z. (y_in_x_&_z_in_x_&_y_!=_z))"], "conclusion": "-(ChroniclesOfNarniaConst_&_HeptalogyConst)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: y_in_x_.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: y_in_x_", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: y_in_x_.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: y_in_x_\n"}
{"timestamp": "2025-05-11T17:39:51.133664", "premises": ["Village(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & LocatedIn(AinderbyQuernhow, HambletonDistrict)", "LocatedIn(HambletonDistrict, NorthYorkshire)", "LocatedIn(NorthYorkshire, England)", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))", "exists x. (Village(x) & LocatedIn(x, England))", "all x. (Dancer(x) & WonTonyAward(x) -> WonOscar(x))", "all x. (BroadwayShow(x) -> WonTonyAward(x))", "WonTonyAward(Hamilton)", "all x. (BroadwayShow(x) & WonTonyAward(x) -> HasWinner(x))", "HasWinner(Hamilton)", "WinnerOfTonyAwardFor(Hamilton) & Dancer(WinnerOfTonyAwardFor(Hamilton))", "all x. (Dancer(x) & WonTonyAward(x) -> WonOscar(x))", "all x. (User(x) -> (Authenticated(x, ValidSessionConst) -> LoggedIn(x)))", "all x. (User(x) -> (ValidPassword(x) & ValidSession(x) -> Authenticated(x, ValidSessionConst)))", "all x. (LoggedIn(x) -> ValidPassword(x))", "LoggedIn(UserOne)", "all x. (LoggedIn(x) -> ValidPassword(x))", "ValidPassword(UserOne)", "all x. (User(x) -> (Authenticated(x, ValidSessionConst) -> LoggedIn(x)))", "-LoggedIn(UserOne)", "exists x. (Planet(x) & HasRings(x))", "all x. (InSolarSystem(x) -> HasRings(x))", "Planet(Mars) & InSolarSystem(Mars)", "all x. (InSolarSystem(x) -> Planet(x))", "exists x. Planet(x)", "exists x. (Planet(x) & HasRings(x))", "all x. (Number(x) -> (Odd(x) | Even(x)))", "all x. (Odd(x) -> -Even(x))", "Odd(Five)", "all x. (Odd(x) -> -Even(x))", "all x. (Number(x) -> (Odd(x) | Even(x)))", "Number(Five)", "-Even(Five)", "Number(Five)", "all x. (Number(x) -> (Odd(x) | Even(x)))", "all x. (Person(x) -> (HasSkill(x, RequiredSkill) -> QualifiedFor(x, Job)))", "all x. (Manager(x) -> HasSkill(x, RequiredSkill))", "Manager(John)", "all x. (HasSkill(x, RequiredSkill) -> QualifiedFor(x, Job))", "QualifiedFor(John, Job)", "all x. (Person(x) -> (HasSkill(x, RequiredSkill) -> QualifiedFor(x, Job)))", "all x. (University(x) -> HasResearchCenter(x))", "University(UniversityOfLondon)", "HasResearchCenter(UniversityOfLondon)", "University(UniversityOfLondon)", "all x. (University(x) -> HasResearchCenter(x))", "all x. (University(x) -> LocatedIn(x, London))", "LocatedIn(UniversityOfLondon, London)", "University(UniversityOfLondon)", "all x. (University(x) -> LocatedIn(x, London))", "all x. (Author(x) -> Writes(x, BookConst))", "Author(John)", "Writes(John, BookConst)", "all x. (Writes(x, BookConst) -> Author(x))", "all x. (Author(x) -> Writes(x, BookConst))", "all x. (University(x) -> LocatedIn(x, London))", "LocatedIn(UniversityOfLondon, London)", "all x. (University(x) -> LocatedIn(x, London))", "all x. (Attends(x, UniversityOfLondon) -> LocatedIn(x, London))", "Attends(John, UniversityOfLondon)", "LocatedIn(John, London)", "all x. (Attends(x, UniversityOfLondon) -> LocatedIn(x, London))", "all x. (Person(x) -> (WorksFor(x, CompanyConst) -> Employee(x)))", "all x. (Employee(x) -> WorksFor(x, CompanyConst))", "Employee(John)", "WorksFor(John, CompanyConst)", "all x. (Person(x) -> (WorksFor(x, CompanyConst) -> Employee(x)))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Student(x) -> StudiesFor(x, Exam))", "all x. (StudiesFor(x, Exam) -> Motivated(x))", "all x. (Motivated(x) -> StudiesFor(x, Exam))", "all x. (Student(x) -> StudiesFor(x, Exam))", "all x. (Object(x) -> (Big(x) | Small(x)))", "all x. (Big(x) -> -Small(x))", "Big(Table)", "all x. (Big(x) -> -Small(x))", "-Small(Table)", "Object(Table)", "all x. (Object(x) -> (Big(x) | Small(x)))", "all x. (Tourist(x) -> Visits(x, MuseumConst))", "all x. (Museum(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Tourist(x) -> Visits(x, MuseumConst))", "all x. (Teacher(x) -> Educated(x))", "all x. (Student(x) -> (Teacher(x) | -Educated(x)))", "all x. (-Educated(x) -> -Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (Manager(x) -> Employee(x))", "all x. (Employee(x) -> Paid(x))", "all x. (Manager(x) -> Paid(x))", "all x. (Manager(x) -> Employee(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (Singer(x) -> Musician(x))", "all x. (Musician(x) -> Talented(x))", "all x. (Singer(x) -> Talented(x))", "all x. (Singer(x) -> Musician(x))", "all x. (Computer(x) -> ElectronicDevice(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Computer(x) -> MadeOfPlastic(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Student(x) -> (Teacher(x) | -Educated(x)))", "all x. (-Educated(x) -> -Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Student(x) -> (Teacher(x) | -Educated(x)))", "all x. (-Educated(x) -> -Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (Singer(x) -> Musician(x))", "all x. (Musician(x) -> Talented(x))", "all x. (Singer(x) -> Talented(x))", "all x. (Singer(x) -> Musician(x))", "all x. (Computer(x) -> ElectronicDevice(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Computer(x) -> MadeOfPlastic(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "Village(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & LocatedIn(AinderbyQuernhow, HambletonDistrict)", "LocatedIn(HambletonDistrict, NorthYorkshire)", "LocatedIn(NorthYorkshire, England)", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))", "exists x. (Village(x) & LocatedIn(x, England))", "all x. (University(x) -> HasResearchCenter(x))", "University(UniversityOfLondon)", "HasResearchCenter(UniversityOfLondon)", "University(UniversityOfLondon)", "all x. (University(x) -> HasResearchCenter(x))", "all x. (University(x) -> LocatedIn(x, London))", "LocatedIn(UniversityOfLondon, London)", "University(UniversityOfLondon)", "all x. (University(x) -> LocatedIn(x, London))", "all x. (Object(x) -> (Big(x) | Small(x)))", "all x. (Big(x) -> -Small(x))", "Big(Table)", "all x. (Big(x) -> -Small(x))", "-Small(Table)", "Object(Table)", "all x. (Object(x) -> (Big(x) | Small(x)))", "all x. (Tourist(x) -> Visits(x, MuseumConst))", "all x. (Museum(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Tourist(x) -> Visits(x, MuseumConst))", "all x. (Teacher(x) -> Educated(x))", "all x. (Student(x) -> (Teacher(x) | -Educated(x)))", "all x. (-Educated(x) -> -Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (Manager(x) -> Employee(x))", "all x. (Employee(x) -> Paid(x))", "all x. (Manager(x) -> Paid(x))", "all x. (Manager(x) -> Employee(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (Singer(x) -> Musician(x))", "all x. (Musician(x) -> Talented(x))", "all x. (Singer(x) -> Talented(x))", "all x. (Singer(x) -> Musician(x))", "all x. (Computer(x) -> ElectronicDevice(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Computer(x) -> MadeOfPlastic(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (Singer(x) -> Musician(x))", "all x. (Musician(x) -> Talented(x))", "all x. (Singer(x) -> Talented(x))", "all x. (Singer(x) -> Musician(x))", "all x. (Computer(x) -> ElectronicDevice(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Computer(x) -> MadeOfPlastic(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (Singer(x) -> Musician(x))", "all x. (Musician(x) -> Talented(x))", "all x. (Singer(x) -> Talented(x))", "all x. (Singer(x) -> Musician(x))", "all x. (Computer(x) -> ElectronicDevice(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Computer(x) -> MadeOfPlastic(x))", "all x. (ElectronicDevice(x) -> MadeOfPlastic(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Plant(x) -> Green(x))", "all x. (Flower(x) -> Green(x))", "all x. (Flower(x) -> Plant(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Animal(x) -> LivingThing(x))", "all x. (Dog(x) -> LivingThing(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (Professor(x) -> Educated(x))", "all x. (Professor(x) -> Teacher(x))", "all x. (Book(x) -> WrittenBy(x, AuthorConst))", "all x. (Author(x) -> Writer(x))", "all x. (Book(x) -> WrittenBy(x, WriterConst))", "all x. (WrittenBy(x, AuthorConst) -> Author(x) & Writer(x))", "all x. (Car(x) -> Vehicle(x))", "all x. (Vehicle(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> DrivenBy(x, PersonConst))", "all x. (Car(x) -> Vehicle(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Cat(x) -> WarmBlooded(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Company(x) -> Organization(x))", "all x. (Organization(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> RunBy(x, PersonConst))", "all x. (Company(x) -> Organization(x))", "all x. (University(x) -> Institution(x))", "all x. (Institution(x) -> LocatedIn(x, City))", "all x. (University(x) -> LocatedIn(x, City))", "all x. (University(x) -> Institution(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (InCollege(x) -> -InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, Country))", "all x. (Hospital(x) -> LocatedIn(x, City))", "all x. (User(x) -> (Authenticated(x, ValidSessionConst) -> LoggedIn(x)))", "all x. (User(x) -> (ValidPassword(x) & ValidSession(x) -> Authenticated(x, ValidSessionConst)))", "all x. (LoggedIn(x) -> ValidPassword(x))", "LoggedIn(UserOne)", "all x. (LoggedIn(x) -> ValidPassword(x))", "ValidPassword(UserOne)", "all x. (User(x) -> (Authenticated(x, ValidSessionConst) -> LoggedIn(x)))", "all x. (Student(x) -> (InCollege(x) | InHighSchool(x)))", "all x. (InCollege(x) -> InHighSchool(x))", "all x. (InHighSchool(x) -> InCollege(x))", "all x. (Student(x) -> (InCollege(x) | InHighSchool(x)))", "all x. (Teacher(x) -> Educated(x))", "all x. (Student(x) -> (Teacher(x) | -Educated(x)))", "all x. (-Educated(x) -> -Teacher(x))", "all x. (Teacher(x) -> Educated(x))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (LocatedIn(x, City) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, Country))", "all x. (School(x) -> LocatedIn(x, City))", "all x. (Manager(x) -> Employee(x))", "all x. (Employee(x) -> Paid(x))", "all x. (Manager(x) -> Paid(x))", "all x. (Manager(x) -> Employee(x))", "all x. (Student(x) -> (InCollege(x) | -InHighSchool(x)))"], "conclusion": "all x. (", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. (\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. (\n        ^\n"}
{"timestamp": "2025-05-11T17:40:56.855702", "premises": ["Village(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & In(HambletonDistrict, AinderbyQuernhow)", "In(NorthYorkshire, HambletonDistrict)", "In(England, NorthYorkshire)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-exists x. (CivilParish(x) & In(x, England))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 228, in evaluate\n    negation_true = prover.prove(neg_c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-11T17:41:51.175962", "premises": ["Author(DouglasAdams) & Created(DouglasAdams, TheSalmonOfDoubt)", "About(TheSalmonOfDoubt, LifeExperiences) & About(TheSalmonOfDoubt, Technology)", "all x. (Author(x) -> Writer(x))", "all x. (Writer(x) -> CreateInnovativeIdeas(x))", "exists x. (Book(x) & Contains(x, InnovativeIdeas) & About(x, Technology))"], "conclusion": "CreateInnovativeIdeas(DouglasAdams)", "error_type": "<class 'KeyError'>", "error_message": "23", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 23\n"}
{"timestamp": "2025-05-11T17:43:08.271480", "premises": ["Song(\"Your_Woman\") & Band(WhiteTown) & British(WhiteTown) & OnePerson(WhiteTown)", "PeakedAtNo1(\"Your_Woman\", UK)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your_Woman\", Iceland) & PeakedAtNo1(\"Your_Woman\", Israel) & PeakedAtNo1(\"Your_Woman\", Spain)"], "conclusion": "-exists x. (Song(x) & ProducedBy(WhiteTown, x) & ExtremelyPopular(x))", "error_type": "<class 'KeyError'>", "error_message": "22", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 22\n"}
{"timestamp": "2025-05-11T17:43:49.977921", "premises": ["all x. all y. (ScoreSameGoals(x, y, UCLFinal, RegularTime) -> NeedPlayExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y, UCLFinal, BothRegularAndExtraTime) -> NeedPlayPenaltyShootout(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, RegularTime)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, ExtraTime)"], "conclusion": "NeedPlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.979313", "premises": ["all x. all y. (Score(x, xGoals, UCLFinal) & Score(y, xGoals, UCLFinal) & SameGoals(x, y) & RegularTime(x) -> ExtraTime(x, y))", "all x. all y. (Score(x, xGoals, UCLFinal) & Score(y, xGoals, UCLFinal) & SameGoals(x, y) & RegularTime(x) & RegularTime(y) & ExtraTime(x, y) -> PenaltyShootout(x, y))", "Score(RealMadrid, One, UCLFinal20One6) & Score(AtleticoMadrid, One, UCLFinal20One6) & RegularTime(UCLFinal20One6)", "Score(RealMadrid, Zero, UCLFinalTwoZeroOneSixExtra) & Score(AtleticoMadrid, Zero, UCLFinalTwoZeroOneSixExtra) & ExtraTime(UCLFinalTwoZeroOneSix)"], "conclusion": "PenaltyShootout(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/2\n"}
{"timestamp": "2025-05-11T17:43:49.977845", "premises": ["all x. all y. (Score(x, SameNumberGoals, RegularTime) & Score(y, SameNumberGoals, RegularTime) & UCLFinal(x) & UCLFinal(y) -> ExtraTime(x, y))", "all x. all y. (Score(x, SameNumberGoals, RegularTime) & Score(y, SameNumberGoals, RegularTime) & Score(x, SameNumberGoals, ExtraTimeConst) & Score(y, SameNumberGoals, ExtraTimeConst) & UCLFinal(x) & UCLFinal(y) -> PenaltyShootout(x, y))", "Score(RealMadrid, OneGoal, TwoZeroOneSixUCLFinalRegularTime) & Score(Atl\u00e9ticoMadrid, OneGoal, TwoZeroOneSixUCLFinalRegularTime)", "Score(RealMadrid, ZeroGoals, TwoZeroOneSixUCLFinalExtraTime) & Score(Atl\u00e9ticoMadrid, ZeroGoals, TwoZeroOneSixUCLFinalExtraTime)"], "conclusion": "PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 668: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 668: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.989987", "premises": ["all x. all y. (UCLFinal(x) & UCLFinal(y) & ScoreSameGoals(x, y, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (UCLFinal(x) & UCLFinal(y) & ScoreSameGoals(x, y, RegularTime) & ScoreSameGoals(x, y, ExtraTime) -> NeedToPlayPenaltyShootout(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, RegularTime)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, ExtraTime)"], "conclusion": "NeedToPlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.977721", "premises": ["all x. all y. (ScoreSame(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> NeedPenaltyShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "NeedPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.997305", "premises": ["all x. all y. (ScoreSameGoals(x, y, UCLFinal, RegularTime) -> PlayExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y, UCLFinal, BothRegularAndExtraTime) -> PlayPenaltyShootOut(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, UCLFinalTwoZeroOneSix, RegularTime)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, UCLFinalTwoZeroOneSix, ExtraTime)"], "conclusion": "PlayPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.998624", "premises": ["all x. all y. (ScoreSameGoals(x, y, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y, BothRegularAndExtraTime) -> NeedToPlayPenaltyShootout(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, RegularTimeTwoZeroOneSixUCLFinal)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, ExtraTimeTwoZeroOneSixUCLFinal)"], "conclusion": "NeedToPlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.998209", "premises": ["all x. all y. (ScoreSameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameGoalsInBothTimes(x, y) -> NeedPenaltyShootout(x, y))", "ScoreSameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameGoalsInBothTimes(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:43:49.997875", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInUCLFinal(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInUCLFinal(x, y, RegularTime) & SameGoalsInUCLFinal(x, y, ExtraTime) -> NeedPenaltyShootOut(x, y))", "SoccerTeam(RealMadrid) & SoccerTeam(AtleticoMadrid) & InUCLFinal(RegularTime, TwoZeroOneSix) & SameGoalsInUCLFinal(RealMadrid, AtleticoMadrid, RegularTime)", "SoccerTeam(RealMadrid) & SoccerTeam(AtleticoMadrid) & InUCLFinal(ExtraTime, TwoZeroOneSix) & SameGoalsInUCLFinal(RealMadrid, AtleticoMadrid, ExtraTime)"], "conclusion": "SoccerTeam(RealMadrid) & SoccerTeam(AtleticoMadrid) & InUCLFinal(TwoZeroOneSix) & NeedPenaltyShootOut(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: InUCLFinal/2, InUCLFinal/1.\n\n\nFatal error:  The following symbols are used with multiple arities: InUCLFinal/2, InUCLFinal/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: InUCLFinal/2, InUCLFinal/1.\n\n\nFatal error:  The following symbols are used with multiple arities: InUCLFinal/2, InUCLFinal/1\n"}
{"timestamp": "2025-05-11T17:43:50.000907", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSameGoalsInRegularAndExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "ScoreSameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameGoalsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.279003", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInRegularAndExtraTime(x, y) -> NeedPenaltyShootOut(x, y))", "SameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SameGoalsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 634: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 634: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.307972", "premises": ["all x. all y. (ScoredInUCLFinal(x, y, SameNumber) & SameTime(x, y, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (ScoredInUCLFinal(x, y, SameNumber) & SameTime(x, y, BothRegularAndExtraTime) -> NeedToPlayPenaltyShootout(x, y))", "ScoredInUCLFinal(RealMadrid, Atl\u00e9ticoMadrid, OneGoal) & SameTime(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoredInUCLFinal(RealMadrid, Atl\u00e9ticoMadrid, ZeroGoals) & SameTime(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-NeedToPlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.316541", "premises": ["all x. all y. ((ScoreIn(x, UCLFinal, Number, Time) & ScoreIn(y, UCLFinal, Number, Time) & SameNumber(Number)) -> NeedToPlayExtraTime(x, y))", "all x. all y. ((ScoreIn(x, UCLFinal, Number, Time) & ScoreIn(y, UCLFinal, Number, Time) & SameNumber(Number)) -> NeedToPlayPenaltyShootOut(x, y))", "ScoreIn(RealMadrid, UCLFinal20One6, One, RegularTime) & ScoreIn(Atl\u00e9ticoMadrid, UCLFinal20One6, One, RegularTime)", "ScoreIn(RealMadrid, UCLFinalTwoZeroOneSix, Zero, ExtraTime) & ScoreIn(Atl\u00e9ticoMadrid, UCLFinalTwoZeroOneSix, Zero, ExtraTime)"], "conclusion": "-NeedToPlayPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 662: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 662: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.320282", "premises": ["all x. all y. (Score(x, SameNumber, RegularTime) & Score(y, SameNumber, RegularTime) -> ExtraTime(x, y))", "all x. all y. (Score(x, SameNumber, RegularTime) & Score(y, SameNumber, RegularTime) & Score(x, SameNumber, ExtraTimeConst) & Score(y, SameNumber, ExtraTimeConst) -> PenaltyShootout(x, y))", "Score(RealMadrid, OneGoal, RegularTime) & Score(Atl\u00e9ticoMadrid, OneGoal, RegularTime)", "Score(RealMadrid, ZeroGoals, ExtraTimeConst) & Score(Atl\u00e9ticoMadrid, ZeroGoals, ExtraTimeConst)"], "conclusion": "-(PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 647: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 647: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.320714", "premises": ["all x. all y. (ScoreGoals(x, y, Same, RegularTime(x, y)) -> ExtraTime(x, y))", "all x. all y. (ScoreGoals(x, y, Same, RegularTime(x, y)) & ScoreGoals(x, y, Same, ExtraTime(x, y)) -> PenaltyShootout(x, y))", "ScoreGoals(RealMadrid, Atl\u00e9ticoMadrid, One, RegularTime(RealMadrid, Atl\u00e9ticoMadrid))", "ScoreGoals(RealMadrid, Atl\u00e9ticoMadrid, Zero, ExtraTime(RealMadrid, Atl\u00e9ticoMadrid))"], "conclusion": "-PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.321099", "premises": ["all x. all y. (ScoreSameGoals(x, y) & In(x, UCLFinal) & In(y, UCLFinal) & SameTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y) & In(x, UCLFinal) & In(y, UCLFinal) & BothTime(x, y) -> NeedPenaltyShootout(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid) & In(RealMadrid, TwoZeroOneSixUCLFinal) & In(Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal) & RegularTime(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid) & In(RealMadrid, TwoZeroOneSixUCLFinal) & In(Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal) & ExtraTime(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal)"], "conclusion": "-(NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:44:37.323191", "premises": ["all x. all y. (Score(x, y, SameNumberOfGoals, RegularTime, UCLFinal) -> NeedToPlayExtraTime(x, y))", "all x. all y. (Score(x, y, SameNumberOfGoals, BothRegularAndExtraTime, UCLFinal) -> NeedToPlayPenaltyShootOut(x, y))", "Score(RealMadrid, Atl\u00e9ticoMadrid, OneGoal, RegularTime, UCLFinalTwoZeroOneSix)", "Score(RealMadrid, Atl\u00e9ticoMadrid, ZeroGoals, ExtraTime, UCLFinalTwoZeroOneSix)"], "conclusion": "-(NeedToPlayPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 617: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 617: invalid continuation byte\n"}
{"timestamp": "2025-05-11T17:46:00.728570", "premises": ["all x. (OfficeIn(x, Germany) <-> OfficeIn(x, USA))", "OfficeIn(Ableton, Germany)", "OfficeIn(Ableton, USA)", "-SameCountry(USA, Germany)", "all x. (OfficeIn(x, Germany) & OfficeIn(x, USA) -> Multinational(x))", "Makes(Ableton, MusicSoftware)"], "conclusion": "Multinational(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'OfficeIn'.  Expected token ')'.\n(> OfficeIn(x, USA)) -> all x. (OfficeIn(x, Germany))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'OfficeIn'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'OfficeIn'.  Expected token ')'.\n(> OfficeIn(x, USA)) -> all x. (OfficeIn(x, Germany))\n   ^\n"}
{"timestamp": "2025-05-11T17:46:00.752109", "premises": ["(OfficeIn(Germany, x) <-> (OfficeIn(USA, x) <-> DifferentCountries(x, Germany, USA)))", "DifferentCountries(USA, Germany)", "OfficeIn(Germany, Ableton)", "OfficeIn(USA, Ableton)", "all x. (OfficeIn(x, Germany) & OfficeIn(x, USA) -> MultinationalCompany(x))", "MultinationalCompany(Ableton)", "makesSoftware(Ableton)", "(OfficeIn(Germany, x) <-> (OfficeIn(USA, x) <-> DifferentCountries(x, Germany, USA)))", "DifferentCountries(USA, Germany)", "OfficeIn(Germany, Ableton)", "OfficeIn(USA, Ableton)", "all x. (OfficeIn(x, Germany) & OfficeIn(x, USA) -> MultinationalCompany(x))", "MultinationalCompany(Ableton)", "makesSoftware(Ableton)", "all x. (LivesIn(x, NewYorkCity) -> Has(x, HighSchoolDiploma))", "exists x. (LivesIn(x, NewYorkCity) & Has(x, MasterDegree))", "all x. (Has(x, MasterDegree) -> Has(x, HighSchoolDiploma))", "all x. ((Has(x, MasterDegree) | Has(x, HighSchoolDiploma)) -> LivesIn(x, NewYorkCity))", "exists x. (Has(x, MasterDegree) | Has(x, HighSchoolDiploma))", "-LivesIn(x, NewYorkCity)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-(ContributeTo(James, Country))", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-(ContributeTo(James, Country))", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "Baker(Luke)", "exists x. exists y. (Develops(ETS, x) & Develops(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedStates) & In(y, UnitedStates) & For(x, KOneTwoAndHigherEducation) & For(y, KOneTwoAndHigherEducation))", "exists x. (Administers(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develops(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develops(ETS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))", "-exists x. (Administers(ETS, x) & InternationalTest(x))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y. (Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAwardConst))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAwardConst))", "PlaysIn(DaveedDiggs, ThomasJefferson, Hamilton)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "-(BestActorAward(DaveedDiggs))", "OfficeIn(Germany, Ableton)", "OfficeIn(USA, Ableton)", "DifferentCountries(USA, Germany)", "all x. (OfficeIn(x, Germany) & OfficeIn(x, USA) -> MultinationalCompany(x))", "MakesMusicSoftware(Ableton)"], "conclusion": "MultinationalCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<->'.  Expected token ')'.\n(> (OfficeIn(USA, x) <-> DifferentCountries(x, Germany, USA))) -> (OfficeIn(Germany, x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<->'.  Expected token ')'.\n(> (OfficeIn(USA, x) <-> DifferentCountries(x, Germany, USA))) -> (OfficeIn(Germany, x))\n                     ^\n"}
{"timestamp": "2025-05-11T17:46:00.753638", "premises": ["Office(InGermany, Ableton)", "Office(InUSA, Ableton)", "Country(USA) & Country(Germany) & -Equal(Country(USA, Country(Germany)))", "all x. (Office(x, InGermany) & Office(x, InUSA) -> Multinational(x))", "MakesMusicSoftware(Ableton)"], "conclusion": "Multinational(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Country/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Country/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Country/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Country/1\n"}
{"timestamp": "2025-05-11T17:47:44.484359", "premises": ["Member(China, BRICS) & EmergingEconomy(China)", "all x. (From(x, China) -> Member(From(x), BRICS))", "Member(India, BRICS) & EmergingEconomy(India)", "all x. (From(x, India) -> In(From(x), BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nexists x. From(x, India)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nexists x. From(x, India)\n                       ^\n"}
{"timestamp": "2025-05-11T17:47:44.517882", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> BRICS(From(x, China)))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> In(x, BRICSConst))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. (From(x, India))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: From/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: From/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: From/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: From/2\n"}
{"timestamp": "2025-05-11T17:49:10.924524", "premises": ["all x. (SoccerPlayer(x) -> (HasRightFoot(x) & HasLeftFoot(x)))", "all x. (TopSoccerPlayer(x) -> (SoccerPlayer(x) & CanUseLeftFoot(x) & CanUseRightFoot(x)))", "all x. (SoccerPlayer(x) & CanScoreManyGoalsLeftFoot(x) -> CanUseLeftFoot(x))", "all x. (SoccerPlayer(x) & CanScoreManyGoalsRightFoot(x) -> CanUseRightFoot(x))", "SoccerPlayer(CristianoRonaldo)", "CanUseRightFoot(CristianoRonaldo)", "CanScoreManyGoalsLeftFoot(CristianoRonaldo)"], "conclusion": "-TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (TopSoccerPlayer(x) -> (SoccerPlayer(x) & CanUseLeftFoot(x) & CanUseRightFoot(x)))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (TopSoccerPlayer(x) -> (SoccerPlayer(x) & CanUseLeftFoot(x) & CanUseRightFoot(x)))\n                           ^\n"}
{"timestamp": "2025-05-11T17:51:49.886006", "premises": ["(TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy))", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligence)", "Research(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligence)", "exists x. exists y. (Contribution(x, ArtificialIntelligence) & Contribution(y, ArtificialIntelligence) & TuringAward(x) & TuringAward(y) & - (x_=_y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "(SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James))", "(Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James))", "-ContributeTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "Chef(Luke)", "exists x. exists y. (Develops(ETS, x) & Develops(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, KOneTwoAndHigherEducation) & For(y, KOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develops(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develops(ETS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(ETS, x) & For(x, KOneTwoAndHigherEducation)) & exists x. (Develops(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y. (Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "Wins(DaveedDiggs, BestActorAward)", "(TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy))", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligence)", "Research(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists x. exists y. (Contribution(x, ArtificialIntelligence) & Contribution(y, ArtificialIntelligence) & TuringAward(x) & TuringAward(y) & - (x_=_y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-11T17:51:49.896879", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligenceConst)", "Contribution(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligenceConst)", "exists x. exists y. (TuringAward(x) & TuringAward(y) & ArtificialIntelligence(x) & ArtificialIntelligence(y) & (x_!=_y))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Biodegradable(Worksheet)", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-ContributeTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "Chef(Luke)", "exists x. exists y. (Develop(ETS, x) & Develop(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, KOneTwoAndHigherEducation) & For(y, KOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(ETS, x) & AssociatedWith(x, EntryToUSeduInstitution))", "exists x. (Develop(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "-exists x. (Administer(ETS, x) & InternationalTest(x))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "Wins(DaveedDiggs, BestActorAward)", "TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligenceConst)", "Contribution(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligenceConst)", "exists x. exists y. (TuringAward(x) & TuringAward(y) & ArtificialIntelligence(x) & ArtificialIntelligence(y) & (x_!=_y))"], "conclusion": "exists x. exists y. (TuringAward(x) & TuringAward(y) & ArtificialIntelligence(x) & ArtificialIntelligence(y) & (x_!=_y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (ScifiMovie(x) -> Movie(x))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (ScifiMovie(x) -> Movie(x))\n                   ^\n"}
{"timestamp": "2025-05-11T17:53:55.419782", "premises": ["HeavyCruiser(USSSalemConst) & BuiltFor(USSSalemConst, UnitedStatesNavy) & In(USSSalemConst, UnitedState)", "last x. (HeavyCruiser(x) & EnteredService(x) -> USSSalem(x))", "MuseumShip(USSSalemConst)", "all x. (MuseumShip(x) -> OpenToPublic(x))", "ServedIn(USSSalemConst, Atlantic) & ServedIn(USSSalemConst, Mediterranean)"], "conclusion": "ServedIn(USSSalemConst, Atlantic) & ServedIn(USSSalemConst, Mediterranean)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nlast x. (HeavyCruiser(x) & EnteredService(x) -> USSSalem(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nlast x. (HeavyCruiser(x) & EnteredService(x) -> USSSalem(x))\n     ^\n"}
{"timestamp": "2025-05-11T17:54:25.236919", "premises": ["Cruiser(USSSalem) & BuiltFor(USSSalem, UnitedStatesNavy)", "Last(Cruiser(USSSalem), EnteredService)", "MuseumShip(USSSalem)", "all x. (MuseumShip(x) -> OpenToPublic(x))", "Served(USSSalem, Atlantic) & Served(USSSalem, Mediterranean)"], "conclusion": "exists x. (MuseumShip(x) & OpenToPublic(x) & Served(x, Mediterranean))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Cruiser/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Cruiser/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Cruiser/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Cruiser/1\n"}
{"timestamp": "2025-05-11T17:54:43.280302", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-05-11T17:54:43.314834", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-05-11T17:55:01.016080", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-05-11T17:55:01.032069", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-05-11T17:55:01.053688", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-05-11T17:55:34.107805", "premises": ["exists x. (OccursIn(Being, MonkeypoxVirus(x)) -> Gets(x, Monkeypox))", "exists x. (MonkeypoxVirus(x) & OccursIn(CertainAnimal, x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "exists x. (SymptomOf(Monkeypox, x) & (Fever(x) | Headache(x) | MusclePains(x) | Tiredness(x)))", "exists x. (Gets(x, Flu) -> Tired(x))"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1\n"}
{"timestamp": "2025-05-11T17:55:34.127404", "premises": ["exists x. (OccursIn(x, MonkeypoxVirusConst, Being) -> MayGet(x, Monkeypox))", "exists x. (MonkeypoxVirus(x) & OccursIn(x, CertainAnimals))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "exists x. exists y. exists z. exists w. (SymptomOf(x, Monkeypox, y) & SymptomOf(x, Monkeypox, z) & SymptomOf(x, Monkeypox, w) & (y=Fever_|_y=Headache_|_y=MusclePain_|_y=Tiredness_|_z=Fever_|_z=Headache_|_z=MusclePain_|_z=Tiredness_|_w=Fever_|_w=Headache_|_w=MusclePain_|_w=Tiredness))", "exists x. (Person(x) & Gets(x, Flu) -> Tired(x))"], "conclusion": "exists x. (Animal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OccursIn/2, OccursIn/3.\n\n\nFatal error:  The following symbols are used with multiple arities: OccursIn/2, OccursIn/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OccursIn/2, OccursIn/3.\n\n\nFatal error:  The following symbols are used with multiple arities: OccursIn/2, OccursIn/3\n"}
{"timestamp": "2025-05-11T17:56:13.889935", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (LanguageGenerationTask(x) | LanguageUnderstandingTask(x)))", "all x. (NaturalLanguageProcessingTask(x) & TextSequence(x) -> LanguageGenerationTask(x))", "NaturalLanguageProcessingTask(MachineTranslation)", "TextSequence(MachineTranslation)", "LanguageGenerationTask(MachineTranslation)", "exists x. exists y. (Person(x) & Person(y) & HigherSalary(x, y))", "all x. all y. (Person(x) & Person(y) & HigherSalary(x, y) -> MoreMoney(x, y))", "all x. (Person(x) -> (Money(x) = Salary(x) + Savings(x)))", "all x. all y. all z. (Person(x) & Person(y) & Person(z) & MoreMoney(x, y) & MoreMoney(y, z) -> MoreMoney(x, z))", "all x. (Person(x) -> (Salary(x) & Savings(x)))"], "conclusion": "all x. all y. (Person(x) & Person(y) -> Money(x) = Money(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. (Person(x) -> (Money(x) = Salary(x) + Savings(x)))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. (Person(x) -> (Money(x) = Salary(x) + Savings(x)))\n                                           ^\n"}
{"timestamp": "2025-05-11T17:58:01.085557", "premises": ["all x. (Mammal(x) & EggLayer(x) -> (Platypus(x) | Echidna(x)))", "-(Platypus(x) & Hyrax(x))", "-(Echidna(x) & Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "EggLayer(Grebe)", "-Grebe & (Platypus(Grebe) | Echidna(Grebe))"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Grebe/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Grebe/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Grebe/0\n"}
{"timestamp": "2025-05-11T17:59:36.932579", "premises": ["exists x. (Medication(x) & DiscoveredIn(x, OneNineFourSeven) & x = Diethylcarbamazine)", "CanBeUsed(Diethylcarbamazine, RiverBlindness)", "all x. (PreferredTreatment(x, RiverBlindness) -> x = Ivermectin)", "x = Diethylcarbamazine -> -x = Ivermectin)"], "conclusion": "-PreferredTreatment(Diethylcarbamazine, RiverBlindness))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\n-PreferredTreatment(Diethylcarbamazine, RiverBlindness))\n                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\n-PreferredTreatment(Diethylcarbamazine, RiverBlindness))\n                                                       ^\n"}
{"timestamp": "2025-05-11T18:00:06.761966", "premises": ["WorldBestKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "(History_|_PortraitConst_|_Animal_|_Landscape_|_StillLife) PaintingGenre"], "conclusion": "-exists x. (WorldBestKnownArtwork(x) & Portrait(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'PaintingGenre'.\n(History_|_PortraitConst_|_Animal_|_Landscape_|_StillLife) PaintingGenre\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'PaintingGenre'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'PaintingGenre'.\n(History_|_PortraitConst_|_Animal_|_Landscape_|_StillLife) PaintingGenre\n                                                           ^\n"}
{"timestamp": "2025-05-11T18:02:14.990772", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contributions(DonaldKnuth, AnalysisOfAlgorithms)", "Contributions(MarvinMinsky, ArtificialIntelligence)", "Research(RichardHamming, NumericalMethods)", "Contributions(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms)) & all y. z. ((TuringAward(y) & Contributions(y, AnalysisOfAlgorithms) & TuringAward(z) & Contributions(z, AnalysisOfAlgorithms)) -> y=z)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nexists x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms)) & all y. z. ((TuringAward(y) & Contributions(y, AnalysisOfAlgorithms) & TuringAward(z) & Contributions(z, AnalysisOfAlgorithms)) -> y=z)\n                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 217, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nexists x. (TuringAward(x) & Contributions(x, AnalysisOfAlgorithms)) & all y. z. ((TuringAward(y) & Contributions(y, AnalysisOfAlgorithms) & TuringAward(z) & Contributions(z, AnalysisOfAlgorithms)) -> y=z)\n                                                                              ^\n"}
{"timestamp": "2025-05-11T18:02:14.989117", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(AlgorithmAnalysis, DonaldKnuth)", "Contribution(ArtificialIntelligence, MarvinMinsky)", "Research(NumericalMethods, RichardHamming)", "Contribution(ArtificialIntelligence, JohnMcCarthy)", "exists x. exists y. (TuringAward(x) & (exists z. (TuringAward(z) & Contribution(AlgorithmAnalysis, z))) -> (x_=_y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "RankHigherThan(RealMadrid, Barcelona)", "HigherRank(RealMadrid, Barcelona)", "RankHigherThan(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned(x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "-(ContributeTo(James, Country))", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "Chef(Luke)", "exists x. exists y. (Develop(ETS, x) & Develop(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "-(exists x. (Administer(ETS, x) & InternationalTest(x)))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "-(exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward)))", "TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(AlgorithmAnalysis, DonaldKnuth)", "Contribution(ArtificialIntelligence, MarvinMinsky)", "Research(NumericalMethods, RichardHamming)", "Contribution(ArtificialIntelligence, JohnMcCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & (exists z. (TuringAward(z) & Contribution(AlgorithmAnalysis, z))) -> (x_=_y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^\n"}
{"timestamp": "2025-05-11T18:02:15.007999", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contributions(AnalysisOfAlgorithms, DonaldKnuth)", "Contributions(ArtificialIntelligence, MarvinMinsky)", "Research(NumericalMethods, RichardHamming)", "Contributions(ArtificialIntelligence, JohnMcCarthy)"], "conclusion": "(exists x. exists y. (TuringAward(x) & TuringAward(y) & (x<>y) & Contributions(AnalysisOfAlgorithms, x)) -> (exists x. (TuringAward(x) & Contributions(AnalysisOfAlgorithms, x)))) -> (exists x. (TuringAward(x) & Contributions(AnalysisOfAlgorithms, x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((exists x exists y ((%%START ERROR%%(TuringAward(x) & TuringAward(y)) & x<>y%%END ERROR%%) & Contributions(AnalysisOfAlgorithms,x)) -> exists x (TuringAward(x) & Contributions(AnalysisOfAlgorithms,x))) -> exists x (TuringAward(x) & Contributions(AnalysisOfAlgorithms,x))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((exists x exists y ((%%START ERROR%%(TuringAward(x) & TuringAward(y)) & x<>y%%END ERROR%%) & Contributions(AnalysisOfAlgorithms,x)) -> exists x (TuringAward(x) & Contributions(AnalysisOfAlgorithms,x))) -> exists x (TuringAward(x) & Contributions(AnalysisOfAlgorithms,x))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-11T18:03:06.342396", "premises": ["all x. (SAT(x) -> (Owns(CollegeBoard, x) & Develops(CollegeBoard, x)))", "all x. (SAT(x) -> IntendedFor(x, CollegeReadiness))", "-(exists x. (SAT(x) & Aligned(x, HighSchoolCurriculum))", "exists x. exists y. (SAT(x) & SAT(y) & IntroducedIn(x, TwoZeroOneSix) & IntroducedIn(y, TwoZeroOneSix) & Aligned(y, HighSchoolCurriculum))"], "conclusion": "exists x. exists y. (SAT(x) & Owns(CollegeBoard, x) & (ThirdParty(y) & Owns(y, x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-(exists x. (SAT(x) & Aligned(x, HighSchoolCurriculum))\n                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 218, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-(exists x. (SAT(x) & Aligned(x, HighSchoolCurriculum))\n                                                       ^\n"}
{"timestamp": "2025-05-11T18:03:06.368871", "premises": ["all x. (SAT(x) -> (Owns(Whole, CollegeBoard, x) & Develops(CollegeBoard, x)))", "all x. (SAT(x) -> IntendedFor(x, AssessReadinessForCollege))", "all x. (SAT(x) -> -AlignedWith(x, HighSchoolCurricula))", "exists x. (Adjustment(x) & Made(x, SAT(TwoZeroOneSix)) & AlignWith(x, HighSchoolCurricula))"], "conclusion": "exists x. exists y. (SAT(x) & (Owns(Partial, CollegeBoard, x) | Owns(Partial, OtherThirdParties, x)) & (Owns(Partial, CollegeBoard, y) | Owns(Partial, OtherThirdParties, y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SAT/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SAT/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SAT/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SAT/1\n"}
{"timestamp": "2025-05-11T18:03:30.371780", "premises": ["ItalianSurname(Roversi)", "Uses(Roversi, Alba)", "Uses(Roversi, Paolo)", "Uses(Roversi, Roberto)", "Photographer(PaoloRoversi)", "(Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Amateur(Photographer(Paolo))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1\n"}
{"timestamp": "2025-05-11T18:03:30.375330", "premises": ["ItalianSurname(Roversi)", "UsesSurname(AlbaRoversi, Roversi)", "UsesSurname(PaoloRoversi, Roversi)", "UsesSurname(RobertoRoversi, Roversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Amateur(Photographer(Paolo))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Photographer/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Photographer/1\n"}
{"timestamp": "2025-05-11T18:03:48.711425", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleasesRapAlbum(x))", "ReleasesRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1\n"}
{"timestamp": "2025-05-11T18:03:48.753165", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleasesRapAlbum(x))", "ReleasesRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 221, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1\n"}
