{"timestamp": "2025-06-09T23:26:58.678002", "premises": ["ChoralConductor(MiroslavVenhoda) & Specialized(MiroslavVenhoda, Renaissance) & Specialized(MiroslavVenhoda, Baroque) & Czech(MiroslavVenhoda)", "all x. (ChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) & Love(x, Music))", "Published(MiroslavVenhoda, 1946, \"Method of Studying Gregorian Chant\")"], "conclusion": "all x. (ChoralConductor(x) -> -Specialized(x, Renaissance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nPublished(MiroslavVenhoda, 1946, \"Method of Studying Gregorian Chant\")\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nPublished(MiroslavVenhoda, 1946, \"Method of Studying Gregorian Chant\")\n                                         ^\n"}
{"timestamp": "2025-06-09T23:26:58.737439", "premises": ["ChoralConductor(MiroslavVenhoda) & Czech(MiroslavVenhoda) & (Renaissance(MiroslavVenhoda) | Baroque(MiroslavVenhoda))", "all x. (ChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) & LovesMusic(x))", "Published(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)"], "conclusion": "-exists x. (ChoralConductor(x) & SpecializedIn(x, Renaissance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nPublished(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nPublished(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                   ^\n"}
{"timestamp": "2025-06-09T23:26:58.721560", "premises": ["all x. (MiroslavVenhoda(x) -> (CzechChoralConductor(x) & (Renaissance(x) | Baroque(x))))", "all x. (CzechChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) & Love(x, Music))", "Published(MiroslavVenhoda, BookOf(MiroslavVenhoda, 1946, MethodOfStudyingGregorianChant))"], "conclusion": "-all x. (CzechChoralConductor(x) -> Renaissance(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MiroslavVenhoda/1, MiroslavVenhoda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MiroslavVenhoda/1, MiroslavVenhoda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MiroslavVenhoda/1, MiroslavVenhoda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MiroslavVenhoda/1, MiroslavVenhoda/0\n"}
{"timestamp": "2025-06-09T23:27:56.667462", "premises": ["exists x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "Stings(Stonefish, People, SteppedOn)", "(Stings(x, People, Condition) & Not(Treated(people, Condition))) -> CausesDeath(x, People)", "Treats(Heat, StonefishSting) | Treats(Antivenom, StonefishSting) </PREMISES> <CONCLUSION> Stings of some fish can cause death if not treated.  FOL: exists x. (Fish(x) & (Stings(x, People) & CausesDeath(x, People) & -Treated(People, Condition)))"], "conclusion": "exists x. (Fish(x) & Stings(x, People) & CausesDeath(x, People) & -Treated(People, Condition))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTreats(Heat, StonefishSting) | Treats(Antivenom, StonefishSting) </PREMISES> <CONCLUSION> Stings of some fish can cause death if not treated.  FOL: exists x. (Fish(x) & (Stings(x, People) & CausesDeath(x, People) & -Treated(People, Condition)))\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTreats(Heat, StonefishSting) | Treats(Antivenom, StonefishSting) </PREMISES> <CONCLUSION> Stings of some fish can cause death if not treated.  FOL: exists x. (Fish(x) & (Stings(x, People) & CausesDeath(x, People) & -Treated(People, Condition)))\n                                                                 ^\n"}
{"timestamp": "2025-06-09T23:27:56.673752", "premises": ["exists x. exists y. (Fish(y) & Stings(y, x))", "Fish(Stonefish)", "Stings(Stonefish, x) when SteppedOn(x)", "Stings(Stonefish, x) & Not(Treated(x)) -> CausesDeath(x)", "Treated(x) when (Heat(x) | Antivenom(x))"], "conclusion": "exists y. (Fish(y) & Stings(y, x) & CausesDeath(x) when Not(Treated(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'when'.  Expected token ')'.\nexists y. (Fish(y) & Stings(y, x) & CausesDeath(x) when Not(Treated(x)))\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'when'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'when'.  Expected token ')'.\nexists y. (Fish(y) & Stings(y, x) & CausesDeath(x) when Not(Treated(x)))\n                                                   ^\n"}
{"timestamp": "2025-06-09T23:27:56.680331", "premises": ["exists x. (Fish(x) & Stings(x))", "Fish(Stonefish)", "Stings(Stonefish)", "all x. (Stings(x) & -Treated(x) -> Death(x))"], "conclusion": "TEXT: Stings of some fish can cause death if not treated.  FOL: exists x. (Stings(x) & -Treated(x) -> Death(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Stings'.\nTEXT: Stings of some fish can cause death if not treated.  FOL: exists x. (Stings(x) & -Treated(x) -> Death(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Stings'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Stings'.\nTEXT: Stings of some fish can cause death if not treated.  FOL: exists x. (Stings(x) & -Treated(x) -> Death(x))\n      ^\n"}
{"timestamp": "2025-06-09T23:27:56.695953", "premises": ["exists x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "Stings(Stonefish, People)", "all x. (Stings(Stonefish, x) & -Treated(x) -> Death(x))", "Treated(Stonefish, (ApplyHeat(x) | UseAntivenom(x)))"], "conclusion": "exists x. (Stings(x, People) & -Treated(People) -> Death(People))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Treated/2, Treated/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Treated/2, Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Treated/2, Treated/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Treated/2, Treated/1\n"}
{"timestamp": "2025-06-09T23:27:56.696479", "premises": ["exists x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "Stings(Stonefish, People)", "(Stings(x, People) & Not(Treated(x)) -> Death(x))", "Treated(x) | (ApplyHeat(x) | UseAntivenom(x))"], "conclusion": "exists x. (Fish(x) & Stings(x, People) & (Not(Treated(x)) -> Death(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1\n"}
{"timestamp": "2025-06-09T23:28:55.210453", "premises": ["all x. (\u00acReptile(x) -> \u00acFur(x))", "all x. (Snake(x) -> Reptile(x))"], "conclusion": "exists x. (Snake(x) & Fur(x))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 605: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 605: invalid continuation byte\n"}
{"timestamp": "2025-06-09T23:29:44.340258", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "only x. (AmbiortusDementjevi(x))", "LivedIn(AmbiortusDementjevi, Mongolia)", "discovered(YevgenyKurochkin, Ambiortus)"], "conclusion": "discovered(YevgenyKurochkin, NewBirdGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (AmbiortusDementjevi(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (AmbiortusDementjevi(x))\n     ^\n"}
{"timestamp": "2025-06-09T23:29:44.362973", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "all x. (SpeciesOf(Ambiortus, x) -> x = Dementjevi)", "LivedIn(Dementjevi, Mongolia)", "Discovered(Ambiortus, Kurochkin)"], "conclusion": "Discovered(NewBirdGenus, Kurochkin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-09T23:29:44.363322", "premises": ["BirdGenus(Ambiortus) & Prehistoric(Ambiortus)", "Species(Ambiortus Dementjevi, Ambiortus)", "Location(Ambiortus Dementjevi, Mongolia)", "Discoverer(Yevgeny Kurochkin, Ambiortus)"], "conclusion": "Discoverer(Yevgeny Kurochkin, NewBirdGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Kurochkin'.  Expected token ')'.\nDiscoverer(Yevgeny Kurochkin, NewBirdGenus)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Kurochkin'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Kurochkin'.  Expected token ')'.\nDiscoverer(Yevgeny Kurochkin, NewBirdGenus)\n                   ^\n"}
{"timestamp": "2025-06-09T23:29:44.365911", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "exists x. (Species(x) & Name(x, AmbiortusDementjevi) & Of(AmbiortusDementjevi, Ambiortus))", "LivesIn(Mongolia, AmbiortusDementjevi)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Discovered(YevgenyKurochkin, NewBirdGenus) & NewBirdGenus(Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, NewBirdGenus/1, NewBirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, NewBirdGenus/1, NewBirdGenus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, NewBirdGenus/1, NewBirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, NewBirdGenus/1, NewBirdGenus/0\n"}
{"timestamp": "2025-06-09T23:29:44.376872", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "all x. (AmbiortusDementjevi(x) -> Ambiortus(x))", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Discoverer(YevgenyKurochkin, NewBirdGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-06-09T23:29:44.380315", "premises": ["BirdGenus(Ambiortus) & Prehistoric(Ambiortus)", "Species(AmbiortusDementjevi) & OnlySpecies(AmbiortusDementjevi, Ambiortus)", "Resided(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Discoverer(YevgenyKurochkin, BirdGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BirdGenus/1, BirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BirdGenus/1, BirdGenus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BirdGenus/1, BirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BirdGenus/1, BirdGenus/0\n"}
{"timestamp": "2025-06-09T23:30:35.744454", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "Species(AmbiortusDementjevi, Ambiortus)", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "LivedIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-09T23:30:35.761660", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "exists x. (SpeciesOf(AmbiortusDementjevi, Ambiortus) & -exists y. (SpeciesOf(y, Ambiortus)))", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "LivedIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-09T23:30:35.769919", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "Ambiortus(Dementjevi)", "LivedIn(Mongolia, Dementjevi)", "Discovered(Kurochkin, Ambiortus)"], "conclusion": "LivedIn(Mongolia, Kurochkin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-09T23:30:35.772761", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "Ambiortus(AmbiortusDementjevi)", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discovered(YevgenyKurochkin, Ambiortus)"], "conclusion": "LivedIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-09T23:30:35.773312", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "all x. (Ambiortus(x) -> AmbiortusDementjevi(x))", "LivesIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "LivesIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-06-09T23:31:33.328894", "premises": ["FortCarillon \u2261 FortTiconderoga", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(NewFrance, FortCarillon)", "-In(NewFrance, Europe)"], "conclusion": "Built(PierreDeRigaudDeVaudreuil, Ticonderoga)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nFortCarillon \u2261 FortTiconderoga\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nFortCarillon \u2261 FortTiconderoga\n             ^\n"}
{"timestamp": "2025-06-09T23:31:33.329719", "premises": ["CurrentName(FortTiconderoga, FortCarillon)", "Built(FortCarillon, PierreDeRigaudDeVaudreuil)", "LocatedIn(FortCarillon, NewFrance)", "-LocatedIn(NewFrance, Europe)"], "conclusion": "Built(P, NewFrance) & P = PierreDeRigaudDeVaudreuil FOL: exists x. (Built(x, NewFrance) & x = PierreDeRigaudDeVaudreuil) FOL: exists P. (Built(P, NewFrance) & P = PierreDeRigaudDeVaudreuil)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nBuilt(P, NewFrance) & P = PierreDeRigaudDeVaudreuil FOL: exists x. (Built(x, NewFrance) & x = PierreDeRigaudDeVaudreuil) FOL: exists P. (Built(P, NewFrance) & P = PierreDeRigaudDeVaudreuil)\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nBuilt(P, NewFrance) & P = PierreDeRigaudDeVaudreuil FOL: exists x. (Built(x, NewFrance) & x = PierreDeRigaudDeVaudreuil) FOL: exists P. (Built(P, NewFrance) & P = PierreDeRigaudDeVaudreuil)\n                                                    ^\n"}
{"timestamp": "2025-06-09T23:31:33.350529", "premises": ["all x. (FortTiconderoga(x) -> FortCarillon(x))", "all x. (PierreDeRigaudDeVaudreuil(x) -> BuiltFortCarillon(x))", "all x. (FortCarillon(x) -> In(x, NewFrance))", "all x. (NewFrance(x) -> -In(x, Europe))"], "conclusion": "exists x. (BuiltFortCarillon(x) & In(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-06-09T23:31:33.355201", "premises": ["FortTiconderoga(FortTiconderoga) & FortCarillon(FortCarillon) & -FortCarillon(FortTiconderoga) | FortCarillon(FortTiconderoga) & -FortTiconderoga(FortCarillon)", "FortTiconderoga = FortCarillon", "Built(FortCarillon, PierreDeRigaudDeVaudreuil)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Built(NewFrance, PierreDeRigaudDeVaudreuil)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0\n"}
{"timestamp": "2025-06-09T23:31:33.358012", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "Builder(FortCarillon, PierreDeRigaudDeVaudreuil)", "Location(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Builder(x, PierreDeRigaudDeVaudreuil) & Location(x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-09T23:31:33.358536", "premises": ["FortCarillon(FortTiconderoga)", "Built(FPierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "Not(In(NewFrance, Europe))"], "conclusion": "Built(FPierreDeRigaudDeVaudreuil, X) & LocatedIn(X, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-09T23:31:33.359004", "premises": ["FortCarillon(x) -> FortTiconderoga(x)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-09T23:31:33.362034", "premises": ["all x. (FortTiconderoga(x) -> FortCarillon(x))", "Built(FortCarillon, PierreDeRigaudDeVaudreuil)", "all x. (FortCarillon(x) -> In(x, NewFrance))", "-In(NewFrance, Europe)"], "conclusion": "exists x. (Built(x, PierreDeRigaudDeVaudreuil) & In(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-09T23:32:58.501121", "premises": ["Located(NewYorkCity, UnitedStatesofAmerica)", "PartOf(UnitedStatesofAmerica, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-09T23:32:58.501794", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "HighlyDeveloped(x) -> Located(x, WesternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-09T23:33:50.703436", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "TVSeries(Westworld) & DebutedOn(Westworld, HBO) & Year(DebutedOn(Westworld, HBO), 2016)", "TVSeries(Westworld) & AdaptedFrom(Westworld, Film) & Year(AdaptedFrom(Westworld, Film), 1973) & WrittenBy(AdaptedFrom(Westworld, Film), MichaelCrichton) & DirectedBy(AdaptedFrom(Westworld, Film), MichaelCrichton)"], "conclusion": "Film(Westworld) & Year(Westworld, 1973) & About(Westworld, MalfunctioningRobots) CONCLUSION: Michael Crichton has directed a film about malfunctioning robots.  FOL: DirectedBy(Film, MichaelCrichton) & About(Film, MalfunctioningRobots)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'CONCLUSION:'.\nFilm(Westworld) & Year(Westworld, 1973) & About(Westworld, MalfunctioningRobots) CONCLUSION: Michael Crichton has directed a film about malfunctioning robots.  FOL: DirectedBy(Film, MichaelCrichton) & About(Film, MalfunctioningRobots)\n                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'CONCLUSION:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'CONCLUSION:'.\nFilm(Westworld) & Year(Westworld, 1973) & About(Westworld, MalfunctioningRobots) CONCLUSION: Michael Crichton has directed a film about malfunctioning robots.  FOL: DirectedBy(Film, MichaelCrichton) & About(Film, MalfunctioningRobots)\n                                                                                 ^\n"}
{"timestamp": "2025-06-09T23:33:50.725946", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFictionThriller(Westworld)", "exists x. (TVSeries(x) & SameAs(x, Westworld) & DebutOn(x, 2016, Hbo))", "Adaptation(TVSeries(Westworld), Film(1973)) & WrittenBy(Film(1973), MichaelCrichton) & DirectedBy(Film(1973), MichaelCrichton)", "Film(1973) & SameAs(Film(1973), Westworld) & MalfunctioningRobots(Film(1973)) & KillingHumanVisitors(Film(1973))"], "conclusion": "DirectedBy(Film(1973), MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1, TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1, TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1, TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1, TVSeries/1\n"}
{"timestamp": "2025-06-09T23:33:50.728767", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "Year(2016) & DebutedOn(HBO, Westworld)", "AdaptedFrom(Westworld, Film) & Year(1973) & WrittenBy(MichaelCrichton, Film) & DirectedBy(MichaelCrichton, Film)", "Film(Westworld) & Year(1973) & About(Westworld, Robots) & Malfunction(robots) & Killing(humans)"], "conclusion": "DirectedBy(MichaelCrichton, Film) & About(Film, MalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0\n"}
{"timestamp": "2025-06-09T23:33:50.739190", "premises": ["ScienceFictionThrillerTVSeries(Westworld) & American(Westworld)", "DebutOnHBO(Westworld, 2016)", "AdaptedFromFilm(Westworld, WrittenAndDirectedBy(MichaelCrichton, 1973))", "MalfunctioningRobotsKillingHumans(1973Film)"], "conclusion": "DirectedBy(MichaelCrichton, MalfunctioningRobotsKillingHumans)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MalfunctioningRobotsKillingHumans/1, MalfunctioningRobotsKillingHumans/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MalfunctioningRobotsKillingHumans/1, MalfunctioningRobotsKillingHumans/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MalfunctioningRobotsKillingHumans/1, MalfunctioningRobotsKillingHumans/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MalfunctioningRobotsKillingHumans/1, MalfunctioningRobotsKillingHumans/0\n"}
{"timestamp": "2025-06-09T23:33:50.739790", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFictionThriller(Westworld)", "DebutYear(Westworld, 2016) & Network(Westworld, HBO)", "AdaptedFrom(Westworld, Film(1973)) & Director(Film(1973), MichaelCrichton)", "Film(1973) & Robots(Malfunctioning(Robots))"], "conclusion": "Directed(Malfunctioning(Robots), MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1\n"}
{"timestamp": "2025-06-09T23:33:50.742996", "premises": ["Westworld(TvSeries) & American(Westworld) & ScienceFictionThriller(Westworld)", "exists x. (Westworld(x) & TvSeries(x) & DebutedOn(x, Hbo) & Year(x, 2016))", "WrittenBy(MichaelCrichton, Westworld) & DirectedBy(MichaelCrichton, Westworld) & Year(WrittenBy, 1973) & Year(DirectedBy, 1973)", "exists x. (Westworld(x) & Film(x) & Year(x, 1973) & MalfunctioningRobots(x) & KillingHumanVisitors(x))"], "conclusion": "DirectedBy(MichaelCrichton, x) & Film(x) & Year(x, 1973) & MalfunctioningRobots(x) & KillingHumanVisitors(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DirectedBy/2, DirectedBy/0, WrittenBy/2, WrittenBy/0, Westworld/1, Westworld/0, TvSeries/1, TvSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DirectedBy/2, DirectedBy/0, WrittenBy/2, WrittenBy/0, Westworld/1, Westworld/0, TvSeries/1, TvSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DirectedBy/2, DirectedBy/0, WrittenBy/2, WrittenBy/0, Westworld/1, Westworld/0, TvSeries/1, TvSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DirectedBy/2, DirectedBy/0, WrittenBy/2, WrittenBy/0, Westworld/1, Westworld/0, TvSeries/1, TvSeries/0\n"}
{"timestamp": "2025-06-09T23:34:41.054750", "premises": ["DistrictIn(Xiufeng, Guilin) & DistrictIn(Xiangshan, Guilin) & DistrictIn(Diecai, Guilin) & DistrictIn(Qixing, Guilin)", "-DistrictIn(Yangshuo, Guilin)", "DistrictIn(Xiangshan, Guilin) & DistrictIn(Diecai, Guilin) & SameCity(Xiangshan, Diecai, Guilin)"], "conclusion": "Xiangshan & Diecai", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0\n"}
{"timestamp": "2025-06-09T23:34:41.069384", "premises": ["District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing) & InCity(Xiufeng, Guilin) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & InCity(Qixing, Guilin)", "-InCity(Yangshuo, Guilin) </PREMISES> <CONCLUSION> Xiangshan and Diecai are districts in the same city.  FOL: District(Xiangshan) & District(Diecai) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & (InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) -> InCity(Xiangshan, Guilin))"], "conclusion": "(District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing) & InCity(Xiufeng, Guilin) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & InCity(Qixing, Guilin) & -InCity(Yangshuo, Guilin)) -> (District(Xiangshan) & District(Diecai) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & (InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) -> InCity(Xiangshan, Guilin))) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\n(District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing) & InCity(Xiufeng, Guilin) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & InCity(Qixing, Guilin) & -InCity(Yangshuo, Guilin)) -> (District(Xiangshan) & District(Diecai) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & (InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) -> InCity(Xiangshan, Guilin))) </CONCLUSION>\n                                                                                                                                                                                                                                                                                                                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\n(District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing) & InCity(Xiufeng, Guilin) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & InCity(Qixing, Guilin) & -InCity(Yangshuo, Guilin)) -> (District(Xiangshan) & District(Diecai) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & (InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) -> InCity(Xiangshan, Guilin))) </CONCLUSION>\n                                                                                                                                                                                                                                                                                                                                                                                                         ^\n"}
{"timestamp": "2025-06-09T23:34:41.070013", "premises": ["all x. (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x) -> DistrictIn(Guilin, x))", "-DistrictIn(Guilin, Yangshuo)"], "conclusion": "DistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai)  FOL: (DistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nDistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai)  FOL: (DistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nDistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai)  FOL: (DistrictIn(Guilin, Xiangshan) & DistrictIn(Guilin, Diecai))\n                                                            ^\n"}
{"timestamp": "2025-06-09T23:34:41.075192", "premises": ["District(Xiufeng, Guilin) & District(Xiangshan, Guilin) & District(Diecai, Guilin) & District(Qixing, Guilin)", "-District(Yangshuo, Guilin)"], "conclusion": "(District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) | (District(Xiangshan, Guilin) & District(Diecai, Yangshuo)) | (District(Xiangshan, Yangshuo) & District(Diecai, Guilin)) FOL: Simplified: (District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) FOL: Given that Guilin has all 4 districts and Yangshuo doesn't have any of the 4, we can simplify this expression further to:  FOL: (District(Xiangshan, Guilin) & District(Diecai, Guilin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n(District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) | (District(Xiangshan, Guilin) & District(Diecai, Yangshuo)) | (District(Xiangshan, Yangshuo) & District(Diecai, Guilin)) FOL: Simplified: (District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) FOL: Given that Guilin has all 4 districts and Yangshuo doesn't have any of the 4, we can simplify this expression further to:  FOL: (District(Xiangshan, Guilin) & District(Diecai, Guilin))\n                                                                                                                                                                                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n(District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) | (District(Xiangshan, Guilin) & District(Diecai, Yangshuo)) | (District(Xiangshan, Yangshuo) & District(Diecai, Guilin)) FOL: Simplified: (District(Xiangshan, Guilin) & District(Diecai, Guilin)) | (District(Xiangshan, Yangshuo) & District(Diecai, Yangshuo)) FOL: Given that Guilin has all 4 districts and Yangshuo doesn't have any of the 4, we can simplify this expression further to:  FOL: (District(Xiangshan, Guilin) & District(Diecai, Guilin))\n                                                                                                                                                                                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:35:20.859893", "premises": ["District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing)", "-District(Yangshuo) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin.  FOL: District(Xiufeng) </CONCLUSION> <EVALUATE>"], "conclusion": "District(Xiufeng)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-District(Yangshuo) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin.  FOL: District(Xiufeng) </CONCLUSION> <EVALUATE>\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-District(Yangshuo) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin.  FOL: District(Xiufeng) </CONCLUSION> <EVALUATE>\n                    ^\n"}
{"timestamp": "2025-06-09T23:35:20.870325", "premises": ["all x. (DistrictInGuilin(x) -> (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))", "-DistrictInGuilin(Yangshuo)"], "conclusion": "DistrictInGuilin(Xiufeng)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0\n"}
{"timestamp": "2025-06-09T23:35:20.870925", "premises": ["all x. (District(x) & In(x, Guilin) -> (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))  FOL: (Xiufeng(District) & In(District, Guilin)) & (Xiangshan(District) & In(District, Guilin)) & (Diecai(District) & In(District, Guilin)) & (Qixing(District) & In(District, Guilin))", "\u00ac(District(Yangshuo) & In(Yangshuo, Guilin))"], "conclusion": "(District(Xiufeng) & In(Xiufeng, Guilin)) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(District(Xiufeng) & In(Xiufeng, Guilin)) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin. </CONCLUSION> <EVALUATE>\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(District(Xiufeng) & In(Xiufeng, Guilin)) </PREMISES> <CONCLUSION> Xiufeng is a district in Guilin. </CONCLUSION> <EVALUATE>\n                                          ^\n"}
{"timestamp": "2025-06-09T23:35:20.873664", "premises": ["all x. (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x) -> DistrictIn(x, Guilin))", "-DistrictIn(Yangshuo, Guilin)"], "conclusion": "DistrictIn(Xiufeng, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0\n"}
{"timestamp": "2025-06-09T23:35:20.874087", "premises": ["DistrictsInGuilin = {Xiufeng, Xiangshan, Diecai, Qixing}", "-DistrictInGuilin(Yangshuo)"], "conclusion": "DistrictInGuilin(Xiufeng)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nDistrictsInGuilin = {Xiufeng, Xiangshan, Diecai, Qixing}\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nDistrictsInGuilin = {Xiufeng, Xiangshan, Diecai, Qixing}\n                            ^\n"}
{"timestamp": "2025-06-09T23:35:20.879570", "premises": ["all x. (District(x) & Guilin(x) -> (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))", "-District(Yangshuo) | -Guilin(Yangshuo)"], "conclusion": "District(Xiufeng) & Guilin(Xiufeng)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0\n"}
{"timestamp": "2025-06-09T23:35:51.514992", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. iPhone(x)"], "conclusion": "-Electronic(Phone)  FOL: Electronic(Phone) -> (iPhone(Phone) -> Electronic(Phone)) FOL: -Electronic(Phone) | -iPhone(Phone) FOL: -(iPhone(Phone) -> Electronic(Phone)) FOL: iPhone(Phone) & -Electronic(Phone) FOL: iPhone(Phone) FOL: exists x. iPhone(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-Electronic(Phone)  FOL: Electronic(Phone) -> (iPhone(Phone) -> Electronic(Phone)) FOL: -Electronic(Phone) | -iPhone(Phone) FOL: -(iPhone(Phone) -> Electronic(Phone)) FOL: iPhone(Phone) & -Electronic(Phone) FOL: iPhone(Phone) FOL: exists x. iPhone(x)\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-Electronic(Phone)  FOL: Electronic(Phone) -> (iPhone(Phone) -> Electronic(Phone)) FOL: -Electronic(Phone) | -iPhone(Phone) FOL: -(iPhone(Phone) -> Electronic(Phone)) FOL: iPhone(Phone) & -Electronic(Phone) FOL: iPhone(Phone) FOL: exists x. iPhone(x)\n                    ^\n"}
{"timestamp": "2025-06-09T23:36:49.441813", "premises": ["MuseumInNyc(MetropolitanMuseumOfArt)", "IncludesByzantineAndIslamicArt(MetropolitanMuseumOfArt)", "MuseumInNyc(WhitneyMuseumOfAmericanArt)", "IncludesAmericanArt(WhitneyMuseumOfAmericanArt)"], "conclusion": "MuseumInNyc(TheMuseumOfModernArt) </PREMISES> <CONCLUSION> A museum in NYC includes Byzantine and Islamic Art.  FOL: exists x. (MuseumInNyc(x) & IncludesByzantineAndIslamicArt(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nMuseumInNyc(TheMuseumOfModernArt) </PREMISES> <CONCLUSION> A museum in NYC includes Byzantine and Islamic Art.  FOL: exists x. (MuseumInNyc(x) & IncludesByzantineAndIslamicArt(x))\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nMuseumInNyc(TheMuseumOfModernArt) </PREMISES> <CONCLUSION> A museum in NYC includes Byzantine and Islamic Art.  FOL: exists x. (MuseumInNyc(x) & IncludesByzantineAndIslamicArt(x))\n                                  ^\n"}
{"timestamp": "2025-06-09T23:37:41.107078", "premises": ["all x. (MetropolitanMuseumOfArt(x) -> MuseumInNyc(x))", "all x. (WhitneyMuseumOfAmericanArt(x) -> MuseumInNyc(x))", "all x. (Moma(x) -> MuseumInNyc(x))", "Includes(ByzantineAndIslamicArt, MetropolitanMuseumOfArt)", "Includes(AmericanArt, WhitneyMuseumOfAmericanArt)"], "conclusion": "Includes(AmericanArt, x) & MuseumInNyc(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0\n"}
{"timestamp": "2025-06-09T23:38:59.051181", "premises": ["(Platypus(x) & Echidna(x)) | (x = Platypus | x = Echidna)", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> EggLaying(x))", "-((x = Platypus) | (x = Echidna)) & Grebe(x)"], "conclusion": "EggLaying(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.054400", "premises": ["all x. (Mammal(x) & EggLaying(x) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "EggLaying(Grebe)", "-(Platypus(Grebe) | Echidna(Grebe))"], "conclusion": "EggLaying(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.049456", "premises": ["all x. (Mammal(x) & EggLayer(x) -> Platypus(x) | Echidna(x))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> EggLayer(x))", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "(Mammal(Hyrax) & EggLayer(Hyrax)) -> (Platypus(Hyrax) | Echidna(Hyrax))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.056255", "premises": ["all x. (Mammal(x) & LayEggs(x) -> Platypus(x) | Echidna(x))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.069851", "premises": ["all x. (Mammal(x) & EggLaying(x) -> (Platypus(x) | Echidna(x)))", "all x. (-Platypus(x) -> -Hyrax(x))", "all x. (-Echidna(x) -> -Hyrax(x))", "all x. (-Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(x) -> Mammal(x)", "EggLaying(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "EggLaying(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.069307", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "-Platypus(x) | -Hyrax(x)", "-Echidna(x) | -Hyrax(x)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.052798", "premises": ["all x. (Mammal(x) & EggLays(x) -> Platypus(x) | Echidna(x))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "EggLays(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "EggLays(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.076495", "premises": ["exists x. (Mammal(x) & (EggLayer(x) -> (Platypus(x) | Echidna(x))))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> EggLayer(x))", "all x. (Grebe(x) -> - (Platypus(x) | Echidna(x)))"], "conclusion": "EggLayer(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.077074", "premises": ["all x. (EggLayer(x) & Mammal(x) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "EggLayer(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "EggLayer(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:38:59.079187", "premises": ["all x. (Mammal(x) -> (EggLayer(x) & (Platypus(x) | Echidna(x))))", "-Platypus(x) | -Hyrax(x)", "-Echidna(x) | -Hyrax(x)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "EggLayer(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "EggLayer(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-09T23:39:59.395299", "premises": ["all x. (MaggieFriedman(x) -> AmericanScreenwriter(x) & Producer(x))", "Showrunner(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists y. (SeriesBy(ABC, y) & DevelopedBy(Showrunner(WitchesOfEastEnd), y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-06-09T23:39:59.398566", "premises": ["Showrunner(MaggieFriedman) & Producer(MaggieFriedman)", "(Showrunner(MaggieFriedman) & Producer(MaggieFriedman)) -> exists y. (WorkedOn(MaggieFriedman, y) & WitchesOfEastEnd(y))", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman) & Developer(MaggieFriedman) & Eastwick(x)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & Developer(x, Showrunner(WitchesOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-06-09T23:39:59.398694", "premises": ["all x. (MaggieFriedman(x) -> AmericanScreenwriter(x) & Producer(x))", "ShowrunnerOf( MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducerOf( MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "ProducerOf( MaggieFriedman, Eastwick) & DeveloperOf( MaggieFriedman, Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & DeveloperOf(ShowrunnerOf(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, ShowrunnerOf/2, ShowrunnerOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, ShowrunnerOf/2, ShowrunnerOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, ShowrunnerOf/2, ShowrunnerOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, ShowrunnerOf/2, ShowrunnerOf/1\n"}
{"timestamp": "2025-06-09T23:39:59.402135", "premises": ["American(ScreenwriterAndProducer(MaggieFriedman))", "ShowrunnerAndExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "DeveloperAndProducer(MaggieFriedman, Eastwick)", "ABC(Eastwick)"], "conclusion": "exists x. (ABC(x) & ShowrunnerOf(ShowrunnerOf(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ShowrunnerOf/2, ShowrunnerOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ShowrunnerOf/2, ShowrunnerOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ShowrunnerOf/2, ShowrunnerOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ShowrunnerOf/2, ShowrunnerOf/1\n"}
{"timestamp": "2025-06-09T23:39:59.400264", "premises": ["AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Developer(MaggieFriedman, Eastwick) & Producer(MaggieFriedman, Eastwick)", "SeriesBy(ABC, Eastwick)"], "conclusion": "SeriesBy(ABC, Eastwick) & exists x. (Developer(x, WitchesOfEastEnd) & Showrunner(x, WitchesOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1\n"}
{"timestamp": "2025-06-09T23:39:59.418223", "premises": ["AmericanScreenwriter(MaggieFriedman) & AmericanProducer(MaggieFriedman)", "Showrunner(WitchesOfEastEnd, MaggieFriedman) & ExecutiveProducer(WitchesOfEastEnd, MaggieFriedman)", "FantasyDrama(WitchesOfEastEnd)", "Producer(Eastwick, MaggieFriedman) & Developer(Eastwick, MaggieFriedman)", "SeriesBy(Eastwick, ABC)"], "conclusion": "exists x. (SeriesBy(x, ABC) & Developer(x, Showrunner(WitchesOfEastEnd, MaggieFriedman)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2\n"}
{"timestamp": "2025-06-09T23:39:59.426234", "premises": ["Screenwriter(USAmerican(MaggieFriedman)) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & ShowrunnerOf(WitchesOfEastEnd, MaggieFriedman)", "FantasyDrama(WitchesOfEastEnd)", "Developer(MaggieFriedman) & Producer(MaggieFriedman) & DeveloperOf(Eastwick, MaggieFriedman)", "SeriesBy(ABC, Eastwick)"], "conclusion": "exists x. (SeriesBy(ABC, x) & DeveloperOf(x, ShowrunnerOf(WitchesOfEastEnd, MaggieFriedman)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowrunnerOf/2\n"}
{"timestamp": "2025-06-09T23:41:15.935091", "premises": ["exists x. (BoneyM(x) & GermanOneSingle(x))", "HoorayHoorayItsAHoliHoliday()", "-GermanOneSingle(HoorayHoorayItsAHoliHoliday())", "all x. (-GermanOneSingle(x) -> PeakedBelowOne(x))"], "conclusion": "-GermanOneSingle(HoorayHoorayItsAHoliHoliday()) -> PeakedBelowOne(HoorayHoorayItsAHoliHoliday())", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n-GermanOneSingle(HoorayHoorayItsAHoliHoliday()) -> PeakedBelowOne(HoorayHoorayItsAHoliHoliday())\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n-GermanOneSingle(HoorayHoorayItsAHoliHoliday()) -> PeakedBelowOne(HoorayHoorayItsAHoliHoliday())\n                                             ^\n"}
{"timestamp": "2025-06-09T23:41:15.936678", "premises": ["exists x. (BoneyM(x) & GermanOneSingle(x))", "BigHitInEurope(\"Hooray! Hooray! It's a Holi-Holiday!\")", "-GermanOneSingle(\"Hooray! Hooray! It's a Holi-Holiday!\")", "all x. (BelowOneOnGermanCharts(x) -> -GermanOneSingle(x))"], "conclusion": "BelowOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nBelowOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nBelowOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                              ^\n"}
{"timestamp": "2025-06-09T23:41:15.943066", "premises": ["exists x. (German1Singles(x) & Artist(BoneyM, x))", "HitAllOverEurope(\"Hooray! Hooray! It's a Holi-Holiday!\")", "-German1Single(\"Hooray! Hooray! It's a Holi-Holiday!\")", "all x. (PeaksBelow1(x) -> -German1Single(x))"], "conclusion": "PeaksBelow1(\"Hooray! Hooray! It's a Holi-Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelow1(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelow1(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                   ^\n"}
{"timestamp": "2025-06-09T23:41:15.938068", "premises": ["exists x. (GermanNumberOneSingle(x) & By(x, BoneyM))", "HitInEurope(\"Hooray! Hooray! It's a Holi-Holiday!\")", "NotGermanNumberOneSingle(\"Hooray! Hooray! It's a Holi-Holiday!\")", "all x. (PeaksBelowNumberOneOnGermanCharts(x) -> NotGermanNumberOneSingle(x))"], "conclusion": "PeaksBelowNumberOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelowNumberOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelowNumberOneOnGermanCharts(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                                         ^\n"}
{"timestamp": "2025-06-09T23:41:15.958820", "premises": ["all x. (GermanNumberOne(x) -> Had(BoneyM, x))", "TEXT: \"Hooray! Hooray! It's a Holi-Holiday!\" was not in German #1 singles.  FOL: -GermanNumberOne(HoliHoliday)", "all x. (PeaksBelowNumberOne(x) -> -GermanNumberOne(x))"], "conclusion": "PeaksBelowNumberOne(HoliHoliday)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\"Hooray'.\nTEXT: \"Hooray! Hooray! It's a Holi-Holiday!\" was not in German #1 singles.  FOL: -GermanNumberOne(HoliHoliday)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\"Hooray'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\"Hooray'.\nTEXT: \"Hooray! Hooray! It's a Holi-Holiday!\" was not in German #1 singles.  FOL: -GermanNumberOne(HoliHoliday)\n      ^\n"}
{"timestamp": "2025-06-09T23:41:15.959158", "premises": ["all x. (BoneyM(x) -> GermanOneSingles(x))", "BigHit(\"Hooray! Hooray! It's a Holi-Holiday!\", Europe)", "-GermanOneSingle(\"Hooray! Hooray! It's a Holi-Holiday!\")", "all x. (-GermanOneSingle(x) -> BelowOne(x))"], "conclusion": "BelowOne(\"Hooray! Hooray! It's a Holi-Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nBelowOne(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nBelowOne(\"Hooray! Hooray! It's a Holi-Holiday!\")\n                ^\n"}
{"timestamp": "2025-06-09T23:41:15.963413", "premises": ["all x. (Artist(BoneyM, x) & GermanSingle(x) & #1Single(x, German))", "all x. (BigHit(HoliHoliday, x) & Europe(x))", "all x. (HoliHoliday(x) -> -(GermanSingle(x) & #1Single(x, German)))", "all x. all y. (PeakedBelowOne(x, y) & German(y) -> -#1Single(x, German))"], "conclusion": "PeakedBelowOne(HoliHoliday, GermanCharts)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Artist(BoneyM,x) & GermanSingle(x)) & #1Single(x,German)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(Artist(BoneyM,x) & GermanSingle(x)) & #1Single(x,German)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-09T23:42:39.041450", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))", "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))  The conclusion is already given in the FOL form as \"exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\".  To check whether the conclusion follows from the premises, we need to check if the FOL expression for the conclusion is entailed by the FOL expressions for the premises. However, the premises only contain two existentials that do not directly support the conclusion.   The FOL expression for the conclusion is a conjunction of two existentials, but the premises do not contain any conjunctions of existentials.   Therefore, the conclusion does not follow from the premises using the given FOL expressions.   However, if we add the following FOL expression to the premises:"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))  Then the conclusion follows from the premises.  The corrected code for Prover9 should be:  ``` #p Develops(ets,x) & StandardizedTest(x) & In(x,unitedstates) & For(x, k-onetwoandhighereducation) |  Administers(ets,x) & InternationalTest(x) & (toefl(x) | toeic(x) | gre(x) | subjecttests(x)) |  Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions) |  Develops(ets,x) & statewideassesment(x) & usedFor(x,accountabilitytesting) |  exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)).  #q exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)). ```  This code should return 'sat' indicating that the conclusion follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))  Then the conclusion follows from the premises.  The corrected code for Prover9 should be:  ``` #p Develops(ets,x) & StandardizedTest(x) & In(x,unitedstates) & For(x, k-onetwoandhighereducation) |  Administers(ets,x) & InternationalTest(x) & (toefl(x) | toeic(x) | gre(x) | subjecttests(x)) |  Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions) |  Develops(ets,x) & statewideassesment(x) & usedFor(x,accountabilitytesting) |  exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)).  #q exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)). ```  This code should return 'sat' indicating that the conclusion follows from the premises.\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))  Then the conclusion follows from the premises.  The corrected code for Prover9 should be:  ``` #p Develops(ets,x) & StandardizedTest(x) & In(x,unitedstates) & For(x, k-onetwoandhighereducation) |  Administers(ets,x) & InternationalTest(x) & (toefl(x) | toeic(x) | gre(x) | subjecttests(x)) |  Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions) |  Develops(ets,x) & statewideassesment(x) & usedFor(x,accountabilitytesting) |  exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)).  #q exists x. (Develops(ets,x) & For(x, k-onetwoandhighereducation)) & exists x. (Develops(ets,x) & AssociatedWith(x,entrytouseducationinstitutions)). ```  This code should return 'sat' indicating that the conclusion follows from the premises.\n                                      ^\n"}
{"timestamp": "2025-06-09T23:42:39.042036", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-09T23:42:39.042662", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-09T23:42:39.044753", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-09T23:42:39.078032", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-09T23:43:58.919633", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.926055", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.926776", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.927480", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.921236", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.929990", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.930699", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.920347", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.921913", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:43:58.922715", "premises": ["exists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTests(x)))", "exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Develops(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalTest(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Develops(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-09T23:44:42.507188", "premises": ["DrainageBasin(CrotonRiverWatershed, CrotonRiver)", "Location(CrotonRiver, SouthwesternNewYork)", "FlowsTo(CrotonRiverWatershed, Bronx)"], "conclusion": "Location(Bronx, NewYork) </PREMISES> <CONCLUSION> Water from the Croton River watershed flows to somewhere in New York.  FOL: FlowsTo(CrotonRiverWatershed, Location(_, NewYork)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLocation(Bronx, NewYork) </PREMISES> <CONCLUSION> Water from the Croton River watershed flows to somewhere in New York.  FOL: FlowsTo(CrotonRiverWatershed, Location(_, NewYork)) </CONCLUSION> <EVALUATE>\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLocation(Bronx, NewYork) </PREMISES> <CONCLUSION> Water from the Croton River watershed flows to somewhere in New York.  FOL: FlowsTo(CrotonRiverWatershed, Location(_, NewYork)) </CONCLUSION> <EVALUATE>\n                         ^\n"}
{"timestamp": "2025-06-09T23:44:42.508686", "premises": ["CrotonRiverWatershed(DrainageBasinOf(CrotonRiver))", "In(SouthwesternNewYork, CrotonRiver)", "FlowsTo(Bronx, CrotonRiverWatershed)", "In(NewYork, Bronx)"], "conclusion": "\u2203x. In(NewYork, x) & FlowsTo(x, CrotonRiverWatershed)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n\u2203x. In(NewYork, x) & FlowsTo(x, CrotonRiverWatershed)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n\u2203x. In(NewYork, x) & FlowsTo(x, CrotonRiverWatershed)\n  ^\n"}
{"timestamp": "2025-06-09T23:44:42.528520", "premises": ["all x. (CrotonRiverWatershed(x) -> DrainageBasinOf(x, CrotonRiver))", "In(CrotonRiver, SouthwesternNewYork)", "FlowsTo(CrotonRiverWatershed, Bronx)", "In(Bronx, NewYork)"], "conclusion": "FlowsTo(CrotonRiverWatershed, NewYork)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0\n"}
{"timestamp": "2025-06-09T23:44:42.529633", "premises": ["DrainageBasin(CrotonRiverWatershed, CrotonRiver)", "Location(CrotonRiver, SouthwesternNewYork)", "FlowsTo(CrotonRiverWatershed, Bronx)", "Location(Bronx, NewYork)"], "conclusion": "FlowsTo(CrotonRiverWatershed, ?x) & Location(?x, NewYork)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (FlowsTo(%%START ERROR%%CrotonRiverWatershed,?x%%END ERROR%%) & Location(?x,NewYork)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (FlowsTo(%%START ERROR%%CrotonRiverWatershed,?x%%END ERROR%%) & Location(?x,NewYork)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-09T23:44:42.534913", "premises": ["CrotonRiverWatershed(DrainageBasinOf(CrotonRiver))", "In(CrotonRiver, SouthwesternNewYork)", "FlowsTo(CrotonRiverWatershed, Bronx)", "In(Bronx, NewYork)"], "conclusion": "FlowsTo(CrotonRiverWatershed, In(_, NewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-06-09T23:44:42.535831", "premises": ["all x. (CrotonRiverWatershed(x) -> CrotonRiverDrainageBasin(x))", "In(CrotonRiver, SouthwesternNewYork)", "FlowsTo(Bronx, CrotonRiverWatershed)", "In(Bronx, NewYork)"], "conclusion": "exists x. (FlowsTo(x, CrotonRiverWatershed) & In(x, NewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0\n"}
{"timestamp": "2025-06-09T23:44:42.537988", "premises": ["CrotonRiverWatershed(DrainageBasin(CrotonRiver))", "In(CrotonRiver, SouthwesternNewYork)", "FlowsTo(CrotonRiverWatershed, Bronx)", "In(Bronx, NewYork)"], "conclusion": "exists x. (FlowsTo(CrotonRiverWatershed, x) & In(x, NewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CrotonRiverWatershed/1, CrotonRiverWatershed/0\n"}
{"timestamp": "2025-06-09T23:46:05.136285", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^\n"}
{"timestamp": "2025-06-09T23:46:05.135680", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (RealNumber(x) & RealNumber(y) & Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:46:05.138450", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six + 1)", "Equal(Eight, Seven + 1)", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Equal(Eight, 2 * Four)", "Equal(Four, 2 * Two)"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                          ^\n"}
{"timestamp": "2025-06-09T23:46:05.146839", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, Add(y, 1)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(7, Add(6, 1))", "Equal(8, Add(7, 1))", "RealNumber(2) & Positive(2)", "all x. (Positive(x) -> Positive(Add(x, x)))", "Equal(8, Add(2, 4))", "Equal(4, Add(2, 2))"], "conclusion": "Larger(8, 7) </PREMISES> <CONCLUSION> Eight is larger than seven. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLarger(8, 7) </PREMISES> <CONCLUSION> Eight is larger than seven. </CONCLUSION> <EVALUATE>\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLarger(8, 7) </PREMISES> <CONCLUSION> Eight is larger than seven. </CONCLUSION> <EVALUATE>\n             ^\n"}
{"timestamp": "2025-06-09T23:46:05.147469", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^\n"}
{"timestamp": "2025-06-09T23:46:05.148085", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x + 1 = y) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = (6 + 1)", "8 = (7 + 1)", "Positive(2)", "all x. (Positive(x) -> Positive(2*x))", "8 = 2*4", "4 = 2*2"], "conclusion": "Larger(8, 7)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x + 1 = y) -> Larger(x, y))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x + 1 = y) -> Larger(x, y))\n                                                  ^\n"}
{"timestamp": "2025-06-09T23:46:05.139421", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(2)", "all x. (Positive(x) -> Positive(2 * x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Larger(8, 7)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:46:05.154464", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> RealNumber(x))", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y+1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = six+1", "Eight = seven+1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Seven/1, Seven/0, Eight/1, Eight/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Seven/1, Seven/0, Eight/1, Eight/0\n"}
{"timestamp": "2025-06-09T23:47:18.240291", "premises": ["Real(6) & Real(7) & Real(8)", "all x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(2)", "all x. (Positive(x) -> Positive(2 * x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Positive(8)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                                          ^\n"}
{"timestamp": "2025-06-09T23:47:18.246783", "premises": ["Real(Six) & Real(Seven) & Real(Eight)", "all x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                                          ^\n"}
{"timestamp": "2025-06-09T23:47:18.239816", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (RealNumber(x) & RealNumber(y) & Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(2)", "all x. (Positive(x) -> Positive(2*x))", "8 = 2*4", "4 = 2*2"], "conclusion": "Positive(8)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:47:18.239183", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(2)", "all x. (Positive(x) -> Positive(2*x))", "8 = 2*4", "4 = 2*2"], "conclusion": "Positive(8)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:47:18.252664", "premises": ["RealNumber(6) & RealNumber(7) & RealNumber(8)", "(RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))", "(Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(2)", "(Positive(x) -> Positive(2 * x))", "8 = 2 * 4", "4 = 2 * 2"], "conclusion": "Positive(8)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\n(RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\n(RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                        ^\n"}
{"timestamp": "2025-06-09T23:47:18.253457", "premises": ["all x. (Real(x) & SameAs(x, Six)) | (Real(x) & SameAs(x, Seven)) | (Real(x) & SameAs(x, Eight))  FOL: Real(Six) & Real(Seven) & Real(Eight)", "all x. all y. all z. ((Real(x) & Real(y) & Real(z)) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nall x. (Real(x) & SameAs(x, Six)) | (Real(x) & SameAs(x, Seven)) | (Real(x) & SameAs(x, Eight))  FOL: Real(Six) & Real(Seven) & Real(Eight)\n                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nall x. (Real(x) & SameAs(x, Six)) | (Real(x) & SameAs(x, Seven)) | (Real(x) & SameAs(x, Eight))  FOL: Real(Six) & Real(Seven) & Real(Eight)\n                                                                                                 ^\n"}
{"timestamp": "2025-06-09T23:47:18.259437", "premises": ["all x. (Six(x) | Seven(x) | Eight(x))", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y+1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six+1)", "Equal(Eight, Seven+1)", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Equal(Eight, 2*Four)", "Equal(Four, 2*Two)"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0\n"}
{"timestamp": "2025-06-09T23:48:34.191091", "premises": ["RealNumber(six) & RealNumber(seven) & RealNumber(eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "seven = six + 1", "eight = seven + 1", "Positive(two)", "all x. (Positive(x) -> Positive(2 * x))", "eight = 2 * four", "four = 2 * two"], "conclusion": "Larger(six, seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:48:34.188054", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)", "all x. (Positive(x) -> Positive(Double(x)))"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^\n"}
{"timestamp": "2025-06-09T23:48:34.200435", "premises": ["RealNumber(six) & RealNumber(seven) & RealNumber(eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "seven = six + 1", "eight = seven + 1", "Positive(two)", "all x. (Positive(x) -> Positive(2 * x))", "eight = 2 * four", "four = 2 * two"], "conclusion": "Larger(six, seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                      ^\n"}
{"timestamp": "2025-06-09T23:48:34.190157", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six + 1)", "Equal(Eight, Seven + 1)", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Equal(Eight, 2 * Four)", "Equal(Four, 2 * Two)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                          ^\n"}
{"timestamp": "2025-06-09T23:48:34.204173", "premises": ["all x. (Real(x) & (x = Six | x = Seven | x = Eight))", "all x. all y. (Real(x) & Real(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Larger(Six, Seven) </PREMISES> <CONCLUSION> Six is larger than seven. </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLarger(Six, Seven) </PREMISES> <CONCLUSION> Six is larger than seven. </CONCLUSION> <EVALUATE>\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLarger(Six, Seven) </PREMISES> <CONCLUSION> Six is larger than seven. </CONCLUSION> <EVALUATE>\n                   ^\n"}
{"timestamp": "2025-06-09T23:48:34.204740", "premises": ["Real(Six) & Real(Seven) & Real(Eight)", "(Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))", "(Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "(Positive(x) -> Positive(2*x))", "Eight = 2*Four", "Four = 2*Two"], "conclusion": "-Larger(Six, Seven) -> Six = Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\n(Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\n(Real(x) & Real(y) & (x = y + 1) -> Larger(x, y))\n                            ^\n"}
{"timestamp": "2025-06-09T23:49:45.203344", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "Praised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)", "SecretaryGeneralUnderMao(DengXiaoping) & VicePremier(DengXiaoping, 1950s) & PresidedOver(DengXiaoping, AntiRightistCampaign)", "Instrumental(DengXiaoping, EconomicReconstruction & GreatLeapForward)", "Died(MaoZedong, 1976)", "RoseToSupremePower(DengXiaoping)"], "conclusion": "Instrumental(x, EconomicReconstruction) -> RoseToSupremePower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-06-09T23:49:45.207871", "premises": ["all x. (DengXiaoping(x) -> ParamountLeader(x, PeoplesRepublicOfChina))", "all x. (DengXiaoping(x) -> InstrumentalIn(x, ChinasEconomicReconstruction))", "all x. (MaoZedong(x) -> DiedIn1976(x))"], "conclusion": "all x. (DengXiaoping(x) -> RoseToSupremePower(x, AfterMaoZedongDeath)) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: exists x. (InstrumentalIn(x, ChinasEconomicReconstruction) & RoseToSupremePower(x, AfterMaoZedongDeath))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (DengXiaoping(x) -> RoseToSupremePower(x, AfterMaoZedongDeath)) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: exists x. (InstrumentalIn(x, ChinasEconomicReconstruction) & RoseToSupremePower(x, AfterMaoZedongDeath))\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (DengXiaoping(x) -> RoseToSupremePower(x, AfterMaoZedongDeath)) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: exists x. (InstrumentalIn(x, ChinasEconomicReconstruction) & RoseToSupremePower(x, AfterMaoZedongDeath))\n                                                                       ^\n"}
{"timestamp": "2025-06-09T23:49:45.229552", "premises": ["all x. (DengXiaoping(x) -> ServedAsParamountLeader(x, PeopleRepublicOfChina))", "exists y. (ActionPerformed(DengXiaoping, y) & (ReaffirmationOfReformProgram(y) | ReversionOfHongKongToChineseControl(y) | ReturnOfMacau(y)))", "exists z. (ActionPerformed(DengXiaoping, z) & AntiRightistCampaign(z) & UnderMao(z) & VicePremier(z))", "exists r. (PlayedRole(DengXiaoping, r) & InstrumentalInEconomicReconstruction(r) & China(r) & GreatLeapForward(r))", "exists e. (Event(e) & Year(e, 1976) & Death(e, MaoZedong))", "GradualRiseToSupremePower(DengXiaoping, After(MaoZedongDeath))"], "conclusion": "exists x. (InstrumentalInEconomicReconstruction(x, China) & GradualRiseToSupremePower(x, After(MaoZedongDeath)) & x = DengXiaoping)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: InstrumentalInEconomicReconstruction/1, InstrumentalInEconomicReconstruction/2, DengXiaoping/1, DengXiaoping/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InstrumentalInEconomicReconstruction/1, InstrumentalInEconomicReconstruction/2, DengXiaoping/1, DengXiaoping/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: InstrumentalInEconomicReconstruction/1, InstrumentalInEconomicReconstruction/2, DengXiaoping/1, DengXiaoping/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InstrumentalInEconomicReconstruction/1, InstrumentalInEconomicReconstruction/2, DengXiaoping/1, DengXiaoping/0, China/1, China/0\n"}
{"timestamp": "2025-06-09T23:49:45.231789", "premises": ["ParamountLeader(DengXiaoping)", "InstrumentalIn(DengXiaoping, China'sEconomicReconstruction)", "GraduallyRoseToSupremePower(DengXiaoping) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalIn(x, China'sEconomicReconstruction) & x = DengXiaoping & GraduallyRoseToSupremePower(DengXiaoping) -> GraduallyRoseToSupremePower(x) </CONCLUSION> <EVALUATE>"], "conclusion": "InstrumentalIn(x, China'sEconomicReconstruction) & x = DengXiaoping & GraduallyRoseToSupremePower(DengXiaoping)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nGraduallyRoseToSupremePower(DengXiaoping) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalIn(x, China'sEconomicReconstruction) & x = DengXiaoping & GraduallyRoseToSupremePower(DengXiaoping) -> GraduallyRoseToSupremePower(x) </CONCLUSION> <EVALUATE>\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nGraduallyRoseToSupremePower(DengXiaoping) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalIn(x, China'sEconomicReconstruction) & x = DengXiaoping & GraduallyRoseToSupremePower(DengXiaoping) -> GraduallyRoseToSupremePower(x) </CONCLUSION> <EVALUATE>\n                                          ^\n"}
{"timestamp": "2025-06-09T23:49:45.222040", "premises": ["ParamountLeader(China, DengXiaoping)", "InstrumentalIn(\u201creconstruction\u201d, \u201cChina\u201d, DengXiaoping)", "RoseToSupremePower(DengXiaoping)"], "conclusion": "InstrumentalIn(\u201creconstruction\u201d, \u201cChina\u201d, X) -> RoseToSupremePower(X)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xe2 in position 613: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 613: invalid continuation byte\n"}
{"timestamp": "2025-06-09T23:49:45.234697", "premises": ["ParamountLeader(China, DengXiaoping)", "Praised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)", "PresidedOver(DengXiaoping, AntiRightistCampaign)", "InstrumentalIn(DengXiaoping, ChinaEconomicReconstruction)", "Died(MaoZedong, 1976)", "GraduallyRoseToSupremePower(DengXiaoping)"], "conclusion": "InstrumentalIn(x, ChinaEconomicReconstruction) -> GraduallyRoseToSupremePower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)\n                                    ^\n"}
{"timestamp": "2025-06-09T23:49:45.227422", "premises": ["Leader(PeoplesRepublicOfChina, DengXiaoping)", "Praised(DengXiaoping, ReformProgram)", "Presided(DengXiaoping, AntiRightistCampaign)", "Instrumental(DengXiaoping, EconomicReconstructionOfChina)", "Died(MaoZedong, 1976)", "RoseToPower(DengXiaoping)"], "conclusion": "Instrumental(?x, EconomicReconstructionOfChina) & RoseToPower(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,EconomicReconstructionOfChina%%END ERROR%%) & RoseToPower(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (Instrumental(%%START ERROR%%?x,EconomicReconstructionOfChina%%END ERROR%%) & RoseToPower(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-09T23:49:45.233911", "premises": ["exists x. (DengXiaoping(x) & ParamountLeader(x))", "exists x. (DengXiaoping(x) & InstrumentalInEconomicReconstruction(x))"], "conclusion": "DengXiaoping(x) & RoseToSupremePower(x) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalInEconomicReconstruction(x) & DengXiaoping(x) & RoseToSupremePower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nDengXiaoping(x) & RoseToSupremePower(x) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalInEconomicReconstruction(x) & DengXiaoping(x) & RoseToSupremePower(x)\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nDengXiaoping(x) & RoseToSupremePower(x) </PREMISES> <CONCLUSION> The person instrumental in china's economic reconstruction gradually rose to supreme power.  FOL: InstrumentalInEconomicReconstruction(x) & DengXiaoping(x) & RoseToSupremePower(x)\n                                        ^\n"}
{"timestamp": "2025-06-09T23:50:54.071785", "premises": ["all x. (Volunteer(x) -> IntangibleBenefits(x))", "all x. (Volunteer(x) -> (Regularly(x) | AsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (Groups(x) | Individually(x)))", "all x. (Volunteer(x) & Environmental(x) -> (EnvironmentalManagement(x) | Conservation(x)))", "(Groups & AsNeeded) (NaturalDisasterResponse)"], "conclusion": "all x. (Volunteer(x) & NaturalDisasterResponse(x) -> IntangibleBenefits(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "The function '(Groups & AsNeeded)' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n(Groups & AsNeeded) (NaturalDisasterResponse)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 521, in attempt_ApplicationExpression\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: The function '(Groups & AsNeeded)' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: The function '(Groups & AsNeeded)' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n(Groups & AsNeeded) (NaturalDisasterResponse)\n                  ^\n"}
{"timestamp": "2025-06-09T23:50:54.098147", "premises": ["all x. (Volunteer(x) -> IntangibleBenefits(x))", "all x. (Volunteer(x) -> (Regularly(x) | AsNeeded(x)))", "exists x. (Volunteer(x) & Trained(x))", "all x. (Volunteer(x) -> (Group(x) | Individual(x)))", "all x. (EnvironmentalVolunteer(x) -> (EnvironmentalManagement(x) | Conservation(x)))", "(NaturalDisasterResponse() & Group() & AsNeeded())"], "conclusion": "(Volunteer() & Group() & AsNeeded() -> IntangibleBenefits())", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n(Volunteer() & Group() & AsNeeded() -> IntangibleBenefits())\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n(Volunteer() & Group() & AsNeeded() -> IntangibleBenefits())\n           ^\n"}
{"timestamp": "2025-06-09T23:50:54.103791", "premises": ["all x. (Volunteer(x) -> IntangibleBenefits(x))", "Volunteer(x) -> (Regularly(x) | AsNeeded(x))", "exists x. (Volunteer(x) & Trained(x))", "Volunteer(x) -> (InGroup(x) | Individually(x))", "all x. (EnvironmentalVolunteer(x) -> Volunteer(x) & (EnvironmentalManagement(x) | Conservation(x)))", "AsNeeded(DisasterResponse) & InGroup(DisasterResponse)"], "conclusion": "(Volunteer(x) & DisasterResponse(x) & InGroup(x) & AsNeeded(x)) -> IntangibleBenefits(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DisasterResponse/1, DisasterResponse/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DisasterResponse/1, DisasterResponse/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DisasterResponse/1, DisasterResponse/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DisasterResponse/1, DisasterResponse/0\n"}
{"timestamp": "2025-06-09T23:52:50.729356", "premises": ["BernardaBrysonShahn(x) & (Painter(x) & Lithographer(x))", "exists y. exists t. (BornIn(y, t) & BernardaBrysonShahn(x) & LocationOfBirth(x, t, y))", "exists t. (MarriedTo(x, t) & BernardaBrysonShahn(x) & BenShahn(x))", "all x. all t. (BornIn(Athens, Ohio, t) -> American(x))"], "conclusion": "American(BernardaBrysonShahn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BernardaBrysonShahn/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BernardaBrysonShahn/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BernardaBrysonShahn/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BernardaBrysonShahn/1\n"}
{"timestamp": "2025-06-09T23:52:50.720506", "premises": ["BernardaBrysonShahn(x) -> (Painter(x) & Lithographer(x))", "all x. (BernardaBrysonShahn(x) -> BornInAthensOhio(x))", "exists x. (MarriedTo(x, BernardaBrysonShahn) & BenShahn(x))", "all x. (BornInAthensOhio(x) -> American(x))"], "conclusion": "BornInAthensOhio(BernardaBrysonShahn) -> American(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-06-09T23:53:39.263902", "premises": ["all x. (Heptalogy(x) <-> (CompoundWork(x) & 7 = NumComponents(x)))", "NumComponents(HarryPotterSeries) = 7", "NumComponents(ChroniclesOfNarnia) = 7"], "conclusion": "Heptalogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (CompoundWork(x) & 7 = NumComponents(x))) -> all x. (Heptalogy(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (CompoundWork(x) & 7 = NumComponents(x))) -> all x. (Heptalogy(x))\n                    ^\n"}
{"timestamp": "2025-06-09T23:53:39.269836", "premises": ["all x. (Heptalogy(x) -> exists y. (Works(x, y) & Distinct(y) & y \u2260 x & exists z. (Works(x, z) & Distinct(z) & z \u2260 x & z \u2260 y & exists w. (Works(x, w) & Distinct(w) & w \u2260 x & w \u2260 y & w \u2260 z & exists v. (Works(x, v) & Distinct(v) & v \u2260 x & v \u2260 y & v \u2260 z & v \u2260 w & exists u. (Works(x, u) & Distinct(u) & u \u2260 x & u \u2260 y & u \u2260 z & u \u2260 w & u \u2260 v & exists t. (Works(x, t) & Distinct(t) & t \u2260 x & t \u2260 y & t \u2260 z & t \u2260 w & t \u2260 v & t \u2260 u & t \u2260 s & 7 = Count(Works(x, s)))))))", "Heptalogy(HarryPotterSeries)", "Heptalogy(ChroniclesOfNarnia)"], "conclusion": "Heptalogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Heptalogy(x) -> exists y. (Works(x, y) & Distinct(y) & y \u2260 x & exists z. (Works(x, z) & Distinct(z) & z \u2260 x & z \u2260 y & exists w. (Works(x, w) & Distinct(w) & w \u2260 x & w \u2260 y & w \u2260 z & exists v. (Works(x, v) & Distinct(v) & v \u2260 x & v \u2260 y & v \u2260 z & v \u2260 w & exists u. (Works(x, u) & Distinct(u) & u \u2260 x & u \u2260 y & u \u2260 z & u \u2260 w & u \u2260 v & exists t. (Works(x, t) & Distinct(t) & t \u2260 x & t \u2260 y & t \u2260 z & t \u2260 w & t \u2260 v & t \u2260 u & t \u2260 s & 7 = Count(Works(x, s)))))))\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Heptalogy(x) -> exists y. (Works(x, y) & Distinct(y) & y \u2260 x & exists z. (Works(x, z) & Distinct(z) & z \u2260 x & z \u2260 y & exists w. (Works(x, w) & Distinct(w) & w \u2260 x & w \u2260 y & w \u2260 z & exists v. (Works(x, v) & Distinct(v) & v \u2260 x & v \u2260 y & v \u2260 z & v \u2260 w & exists u. (Works(x, u) & Distinct(u) & u \u2260 x & u \u2260 y & u \u2260 z & u \u2260 w & u \u2260 v & exists t. (Works(x, t) & Distinct(t) & t \u2260 x & t \u2260 y & t \u2260 z & t \u2260 w & t \u2260 v & t \u2260 u & t \u2260 s & 7 = Count(Works(x, s)))))))\n                                                                 ^\n"}
{"timestamp": "2025-06-09T23:53:39.270389", "premises": ["Heptalogy(x) <- 7 =| number of components of x", "7 =| number of components of HP", "7 =| number of components of CN"], "conclusion": "Heptalogy(HP)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expression expected.\n(7 =| number of components of x -> Heptalogy(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 321, in attempt_adjuncts\n    expression = self.attempt_EqualityExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 464, in attempt_EqualityExpression\n    expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expression expected.\n(7 =| number of components of x -> Heptalogy(x))\n    ^\n"}
{"timestamp": "2025-06-09T23:53:39.264515", "premises": ["all x. (Heptalogy(x) <-> ConsistsOfSeven(x))", "ConsistsOfSeven(HarryPotterSeries)", "ConsistsOfSeven(ChroniclesOfNarnia)"], "conclusion": "Heptalogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ConsistsOfSeven'.  Expected token ')'.\n(> ConsistsOfSeven(x)) -> all x. (Heptalogy(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ConsistsOfSeven'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ConsistsOfSeven'.  Expected token ')'.\n(> ConsistsOfSeven(x)) -> all x. (Heptalogy(x))\n   ^\n"}
{"timestamp": "2025-06-09T23:53:39.266164", "premises": ["all x. (Heptalogyy(x) -> CompoundWork(x) & NarrativeWork(x) & MadeUpOf(x, seven) & DistinctWorks(x))", "seven = 7, DistinctWorks(HarryPotter) & MadeUpOf(HarryPotter, seven)", "seven = 7, DistinctWorks(ChroniclesOfNarnia) & MadeUpOf(ChroniclesOfNarnia, seven)"], "conclusion": "Heptalogyy(HarryPotter)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nseven = 7, DistinctWorks(HarryPotter) & MadeUpOf(HarryPotter, seven)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nseven = 7, DistinctWorks(HarryPotter) & MadeUpOf(HarryPotter, seven)\n         ^\n"}
{"timestamp": "2025-06-09T23:54:31.360618", "premises": ["DefinitionOfHeptalogy(Heptalogy) = all x. (Heptalogy(x) -> Exists y. (Parts(x, y) & Count(x, 7))) The Harry Potter series consists of 7 distinct works.  FOL: HarryPotter(Heptalogy) & Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) The Chronicles of Narnia consists of 7 distinct works.  FOL: ChroniclesOfNarnia(Heptalogy) & Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) The Chronicles of Narnia series of books is not Heptalogy.  FOL: -Heptalogy(ChroniclesOfNarnia) </PREMISES> <CONCLUSION>  We will check if the definition of a heptalogy applies to both Harry Potter and the Chronicles of Narnia. If the definition applies to both, then we can conclude that the Chronicles of Narnia is indeed a heptalogy, contradicting our conclusion. FOL:  DefinitionOfHeptalogy(Heptalogy) = all x. (Heptalogy(x) -> Exists y. (Parts(x, y) & Count(x, 7))) HarryPotter(Heptalogy) & Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) ChroniclesOfNarnia(Heptalogy) & Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7))  If the definition of a heptalogy applies to both Harry Potter and the Chronicles of Narnia, then we can conclude that the Chronicles of Narnia is indeed a heptalogy."], "conclusion": "-DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) -DefinitionOfHeptalogy(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) | -Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) & Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) </CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\n-DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) -DefinitionOfHeptalogy(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) | -Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) & Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) </CONCLUSION>\n                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\n-DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) -DefinitionOfHeptalogy(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) | -Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  Exists y. (Parts(HarryPotter, y) & Count(HarryPotter, 7)) & Exists y. (Parts(ChroniclesOfNarnia, y) & Count(ChroniclesOfNarnia, 7)) FOL:  DefinitionOfHeptalogy(Heptalogy) | -HarryPotter(Heptalogy) | -ChroniclesOfNarnia(Heptalogy) </CONCLUSION>\n                                                                      ^\n"}
{"timestamp": "2025-06-09T23:54:31.367946", "premises": ["all x. (Heptalogyy(x) -> exists y. exists z. exists w. exists v. exists u. exists t. exists s. (DistinctWorks(y, z, w, v, u, t, s) & WorkOf(x, y) & WorkOf(x, z) & WorkOf(x, w) & WorkOf(x, v) & WorkOf(x, u) & WorkOf(x, t) & WorkOf(x, s)))", "HarryPotter(7, y, z, w, v, u, t, s)", "ChroniclesOfNarnia(7, y, z, w, v, u, t, s)"], "conclusion": "-Heptalogyy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/8, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/8, ChroniclesOfNarnia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChroniclesOfNarnia/8, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChroniclesOfNarnia/8, ChroniclesOfNarnia/0\n"}
{"timestamp": "2025-06-09T23:57:17.003267", "premises": ["Village(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, AinderbyQuernhow)", "In(NorthYorkshire, HambletonDistrict)", "In(England, NorthYorkshire)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-exists x. (CivilParish(x) & In(x, England))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Quernhow'.  Expected token ')'.\nVillage(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, AinderbyQuernhow)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Quernhow'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Quernhow'.  Expected token ')'.\nVillage(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, AinderbyQuernhow)\n                 ^\n"}
{"timestamp": "2025-06-09T23:57:17.038632", "premises": ["Village(AinderbyQuernhow) & CivilParish(AinderbyQuernhow)", "LocatedIn(HambletonDistrict, NorthYorkshire)", "LocatedIn(NorthYorkshire, England)", "LocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish in England.  FOL: -exists x. CivilParish(x) & LocatedIn(x, England) </CONCLUSION> <EVALUATE>", "Village(AinderbyQuernhow) & CivilParish(AinderbyQuernhow)", "LocatedIn(HambletonDistrict, NorthYorkshire)", "LocatedIn(NorthYorkshire, England)", "LocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C)"], "conclusion": "-exists x. CivilParish(x) & LocatedIn(x, England)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish in England.  FOL: -exists x. CivilParish(x) & LocatedIn(x, England) </CONCLUSION> <EVALUATE>\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish in England.  FOL: -exists x. CivilParish(x) & LocatedIn(x, England) </CONCLUSION> <EVALUATE>\n                                                     ^\n"}
{"timestamp": "2025-06-09T23:57:17.039136", "premises": ["Village(Ainderby Quernhow) & CivilParish(Ainderby Quernhow)", "In(North Yorkshire, Hambleton District)", "In(England, North Yorkshire)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-exists x. CivilParish(x) & In(x, England)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Quernhow'.  Expected token ')'.\nVillage(Ainderby Quernhow) & CivilParish(Ainderby Quernhow)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Quernhow'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Quernhow'.  Expected token ')'.\nVillage(Ainderby Quernhow) & CivilParish(Ainderby Quernhow)\n                 ^\n"}
{"timestamp": "2025-06-09T23:58:15.678164", "premises": ["Author(DouglasAdams, TheSalmonOfDoubt)", "About(TheSalmonOfDoubt, LifeExperiences) & About(TheSalmonOfDoubt, Technology)", "all x. (Author(x) -> Writer(x))", "all x. (Writer(x) -> CreateInnovativeIdeas(x))", "exists x. (Book(x) & ContainInnovativeIdeas(x) & About(x, Technology))"], "conclusion": "Writer(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2\n"}
{"timestamp": "2025-06-09T23:59:12.956723", "premises": ["Author(DouglasAdams) & Created(DouglasAdams, TheSalmonOfDoubt)", "About(TheSalmonOfDoubt, LifeExperiences & Technology)", "all x. (Author(x) -> Writer(x))", "all x. (Writer(x) -> CreatesInnovativeIdeas(x))", "exists y. (ContainsInnovativeIdeas(y) & About(y, Technology))"], "conclusion": "CreatesInnovativeIdeas(DouglasAdams)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nAbout(TheSalmonOfDoubt, LifeExperiences & Technology)\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nAbout(TheSalmonOfDoubt, LifeExperiences & Technology)\n                                        ^\n"}
{"timestamp": "2025-06-09T23:59:12.977692", "premises": ["Author(DouglasAdams, Created(x, TheSalmonOfDoubt))", "About(TheSalmonOfDoubt, LifeExperiences) & About(TheSalmonOfDoubt, Technology)", "all x. (Author(x) -> Writer(x))", "all x. (Writer(x) -> CreatesInnovativeIdeas(x))", "exists x. (ContainsInnovativeIdeas(x) & About(x, Technology))"], "conclusion": "CreatesInnovativeIdeas(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2\n"}
{"timestamp": "2025-06-10T00:00:11.492986", "premises": ["(American(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity))", "FatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "(American(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity))", "FatherOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                    ^\n"}
{"timestamp": "2025-06-10T00:00:11.497077", "premises": ["Scientist(DonaldErvinKnuth) & American(DonaldErvinKnuth) & ProfessorAtStanford(DonaldErvinKnuth) Knuth has been called the \"father of the analysis of algorithms.\"  FOL: FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & American(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "Scientist(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorAtStanford(DonaldErvinKnuth) & American(DonaldErvinKnuth)", "FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth)"], "conclusion": "exists x. (Scientist(x) & American(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Knuth'.\nScientist(DonaldErvinKnuth) & American(DonaldErvinKnuth) & ProfessorAtStanford(DonaldErvinKnuth) Knuth has been called the \"father of the analysis of algorithms.\"  FOL: FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & American(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Knuth'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Knuth'.\nScientist(DonaldErvinKnuth) & American(DonaldErvinKnuth) & ProfessorAtStanford(DonaldErvinKnuth) Knuth has been called the \"father of the analysis of algorithms.\"  FOL: FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & American(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                                                                                 ^\n"}
{"timestamp": "2025-06-10T00:00:11.498563", "premises": ["Scientist(Knuth) & American(Knuth) & ComputerScientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritusAtStanford(Knuth)", "FatherOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\". </CONCLUSION> <EVALUATE>  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\". </CONCLUSION> <EVALUATE>  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\". </CONCLUSION> <EVALUATE>  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))\n                                                                         ^\n"}
{"timestamp": "2025-06-10T00:00:11.499861", "premises": ["ComputerScientist(MKnuth) & Mathematician(MKnuth) & ProfessorEmeritus(MKnuth, StanfordUniversity) & American(MKnuth)"], "conclusion": "FatherOfAnalysisOfAlgorithms(MKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(MKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(MKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                     ^\n"}
{"timestamp": "2025-06-10T00:00:11.512706", "premises": ["DonaldErvinKnuth(x) -> (American(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritusAtStanfordUniversity(x))", "FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: all x. (AmericanScientist(x) -> FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "all x. (AmericanScientist(x) -> FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: all x. (AmericanScientist(x) -> FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: all x. (AmericanScientist(x) -> FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                               ^\n"}
{"timestamp": "2025-06-10T00:00:11.514911", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth)  FOL: American(DonaldErvinKnuth)  FOL: ProfessorEmeritus(DonaldErvinKnuth) & At(StanfordUniversity, DonaldErvinKnuth)", "FatherOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> An American scientist has been called the \"father of the analysis of algorithms\".  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "all x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x) -> exists y. (ComputerScientist(y) & Mathematician(y) & American(y) & ProfessorEmeritus(y) & At(StanfordUniversity, y) & y = x))  FOL: exists x. (American(x) & Scientist(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & FatherOfAnalysisOfAlgorithms(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & y = x)  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nall x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x) -> exists y. (ComputerScientist(y) & Mathematician(y) & American(y) & ProfessorEmeritus(y) & At(StanfordUniversity, y) & y = x))  FOL: exists x. (American(x) & Scientist(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & FatherOfAnalysisOfAlgorithms(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & y = x)  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))\n                                                                                                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nall x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x) -> exists y. (ComputerScientist(y) & Mathematician(y) & American(y) & ProfessorEmeritus(y) & At(StanfordUniversity, y) & y = x))  FOL: exists x. (American(x) & Scientist(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & FatherOfAnalysisOfAlgorithms(x))  FOL: exists x. (American(x) & Scientist(x) & ComputerScientist(x) & Mathematician(x) & ProfessorEmeritus(x) & At(StanfordUniversity, x) & y = x)  FOL: exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))\n                                                                                                                                                                                                       ^\n"}
{"timestamp": "2025-06-10T00:00:11.512820", "premises": ["Scientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritus(Knuth) & American(Knuth)", "Knuth -> FatherOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "exists x. (American(x) & Scientist(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Knuth/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Knuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Knuth/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Knuth/0\n"}
{"timestamp": "2025-06-10T00:01:02.994163", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAt(StanfordUniversity, DonaldErvinKnuth) & American(DonaldErvinKnuth)", "Called(Knuth, \"father of the analysis of algorithms\")"], "conclusion": "Mathematician(x) & Called(x, \"father of the analysis of algorithms\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nMathematician(x) & Called(x, \"father of the analysis of algorithms\")\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nMathematician(x) & Called(x, \"father of the analysis of algorithms\")\n                                     ^\n"}
{"timestamp": "2025-06-10T00:01:02.990472", "premises": ["all x. (DonaldErvinKnuth(x) -> AmericanComputerScientist(x) & Mathematician(x) & ProfessorEmeritusAtStanfordUniversity(x)) Donald Ervin Knuth has been called the \"father of the analysis of algorithms.\"  FOL: FatherOfTheAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"father of the analysis of algorithms\".  FOL: all x. (Mathematician(x) -> FatherOfTheAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "FatherOfTheAnalysisOfAlgorithms(x) :- Mathematician(x).", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.\nFatherOfTheAnalysisOfAlgorithms(x) :- Mathematician(x).\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.\nFatherOfTheAnalysisOfAlgorithms(x) :- Mathematician(x).\n                                   ^\n"}
{"timestamp": "2025-06-10T00:01:03.009227", "premises": ["(AmericanComputerScientist(DonaldKnuth) | Mathematician(DonaldKnuth) | ProfessorEmeritusAtStanfordUniversity(DonaldKnuth))  2. Knuth has been called the \"father of the analysis of algorithms\".  FOL: CalledFatherOfAnalysisOfAlgorithms(DonaldKnuth)  3. A mathematician has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x))  4. We can translate the premises and conclusion into FOL expressions as follows:", "(AmericanComputerScientist(DonaldKnuth) | Mathematician(DonaldKnuth) | ProfessorEmeritusAtStanfordUniversity(DonaldKnuth))", "CalledFatherOfAnalysisOfAlgorithms(DonaldKnuth)"], "conclusion": "exists x. (Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x))  FOL:  (\u2200x. (AmericanComputerScientist(x) | Mathematician(x) | ProfessorEmeritusAtStanfordUniversity(x)) \u2192 Mathematician(x)) (\u2200x. Mathematician(x) \u2192 CalledFatherOfAnalysisOfAlgorithms(x)) \u2234 exists x. Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x)  Note that we have used the premises to prove the conclusion using logical deduction.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nexists x. (Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x))  FOL:  (\u2200x. (AmericanComputerScientist(x) | Mathematician(x) | ProfessorEmeritusAtStanfordUniversity(x)) \u2192 Mathematician(x)) (\u2200x. Mathematician(x) \u2192 CalledFatherOfAnalysisOfAlgorithms(x)) \u2234 exists x. Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x)  Note that we have used the premises to prove the conclusion using logical deduction.\n                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nexists x. (Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x))  FOL:  (\u2200x. (AmericanComputerScientist(x) | Mathematician(x) | ProfessorEmeritusAtStanfordUniversity(x)) \u2192 Mathematician(x)) (\u2200x. Mathematician(x) \u2192 CalledFatherOfAnalysisOfAlgorithms(x)) \u2234 exists x. Mathematician(x) & CalledFatherOfAnalysisOfAlgorithms(x)  Note that we have used the premises to prove the conclusion using logical deduction.\n                                                                      ^\n"}
{"timestamp": "2025-06-10T00:01:03.016896", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(StanfordUniversity, DonaldErvinKnuth)", "FatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Mathematician(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "FatherOfAnalysisOfAlgorithms(Knuth) & Mathematician(Knuth) -> exists x. (Mathematician(x) & FatherOfAnalysisOfAlgorithms(x))"], "conclusion": "(ComputerScientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritus(StanfordUniversity, Knuth) & FatherOfAnalysisOfAlgorithms(Knuth)) -> exists x. (Mathematician(x) & FatherOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Mathematician(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nFatherOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"father of the analysis of algorithms\".  FOL: exists x. (Mathematician(x) & FatherOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                    ^\n"}
{"timestamp": "2025-06-10T00:01:53.429671", "premises": ["Song(\"Your Woman\") & ProducedBy(WhiteTown, \"Your Woman\")", "PeakedAtNo1(\"Your Woman\", UK)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your Woman\", Iceland) & PeakedAtNo1(\"Your Woman\", Israel) & PeakedAtNo1(\"Your Woman\", Spain)"], "conclusion": "-exists x. (ProducedBy(WhiteTown, x) & ExtremelyPopular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & ProducedBy(WhiteTown, \"Your Woman\")\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & ProducedBy(WhiteTown, \"Your Woman\")\n           ^\n"}
{"timestamp": "2025-06-10T00:01:53.430308", "premises": ["Song(\"Your Woman\") & Artist(WhiteTown, \"Your Woman\")", "PeakedAtNo1(\"Your Woman\", UKSingleChart)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your Woman\", Iceland) & PeakedAtNo1(\"Your Woman\", Israel) & PeakedAtNo1(\"Your Woman\", Spain)"], "conclusion": "-ExtremelyPopular(AnySong(WhiteTown))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & Artist(WhiteTown, \"Your Woman\")\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & Artist(WhiteTown, \"Your Woman\")\n           ^\n"}
{"timestamp": "2025-06-10T00:01:53.430890", "premises": ["Song(\"Your Woman\") & Creator(\"Your Woman\", WhiteTown)", "PeakedAtOne(\"Your Woman\", UK_Singles_Chart)", "all x. all y. (PeakedAtOne(x, y) -> ExtremelyPopular(x))", "PeakedAtOne(\"Your Woman\", Iceland_Singles_Chart) & PeakedAtOne(\"Your Woman\", Israel_Singles_Chart) & PeakedAtOne(\"Your Woman\", Spain_Singles_Chart)"], "conclusion": "-exists x. (Creator(x, WhiteTown) & ExtremelyPopular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & Creator(\"Your Woman\", WhiteTown)\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nSong(\"Your Woman\") & Creator(\"Your Woman\", WhiteTown)\n           ^\n"}
{"timestamp": "2025-06-10T00:01:53.432370", "premises": ["Song(\"Your Woman\") & Artist(\"White Town\") & FromCountry(\"White Town\", UnitedKingdom)", "PeakedAtNo1(\"Your Woman\", UK)", "all x. all y. (PeakedAtNo1(x, y) -> Popular(x, y))", "PeakedAtNo1(\"Your Woman\", Iceland) & PeakedAtNo1(\"Your Woman\", Israel) & PeakedAtNo1(\"Your Woman\", Spain)"], "conclusion": "-exists x. (Song(x) & Artist(x, White Town) & Popular(x, FromCountry(White Town, UnitedKingdom)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Town'.  Expected token ')'.\n-exists x. (Song(x) & Artist(x, White Town) & Popular(x, FromCountry(White Town, UnitedKingdom)))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Town'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Town'.  Expected token ')'.\n-exists x. (Song(x) & Artist(x, White Town) & Popular(x, FromCountry(White Town, UnitedKingdom)))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:01:53.433042", "premises": ["exists x. (Creator(WhiteTown, x) & Song(x) & Name(x, \"Your Woman\"))", "Peak(\"Your Woman\", No1, UK Singles Chart)", "all x. all y. (Peak(x, No1, y) -> Popular(x))", "Peak(\"Your Woman\", No1, Iceland) & Peak(\"Your Woman\", No1, Israel) & Peak(\"Your Woman\", No1, Spain)"], "conclusion": "-exists x. (Creator(WhiteTown, x) & Popular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nexists x. (Creator(WhiteTown, x) & Song(x) & Name(x, \"Your Woman\"))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nexists x. (Creator(WhiteTown, x) & Song(x) & Name(x, \"Your Woman\"))\n                                                           ^\n"}
{"timestamp": "2025-06-10T00:01:53.435354", "premises": ["Song(\"Your Woman\") & Artist(\"White Town\", \"Your Woman\")", "PeakedAtNo1(\"Your Woman\", UK)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your Woman\", Iceland) & PeakedAtNo1(\"Your Woman\", Israel) & PeakedAtNo1(\"Your Woman\", Spain)"], "conclusion": "-exists x. (Song(x) & Artist(\"White Town\", x) & ExtremelyPopular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Town\"'.  Expected token ')'.\n-exists x. (Song(x) & Artist(\"White Town\", x) & ExtremelyPopular(x))\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Town\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Town\"'.  Expected token ')'.\n-exists x. (Song(x) & Artist(\"White Town\", x) & ExtremelyPopular(x))\n                                    ^\n"}
{"timestamp": "2025-06-10T00:01:53.435846", "premises": ["exists x. (Song(x) & \"Your Woman\"(x) & By(x, WhiteTown))", "PeakedAtNo1(\"Your Woman\", UK)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your Woman\", Iceland) & PeakedAtNo1(\"Your Woman\", Israel) & PeakedAtNo1(\"Your Woman\", Spain)"], "conclusion": "-ExtremelyPopular(WhiteTown)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nexists x. (Song(x) & \"Your Woman\"(x) & By(x, WhiteTown))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nexists x. (Song(x) & \"Your Woman\"(x) & By(x, WhiteTown))\n                           ^\n"}
{"timestamp": "2025-06-10T00:02:59.818170", "premises": ["all x. all y. (ScoreSameGoals(x, y, RegTime) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y, Both) -> NeedPenaltyShootout(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, RegTime)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.818334", "premises": ["all x. all y. (ScoreEqual(x, y, UCLFinal, RegularTime) -> ExtraTimeNeeded(x, y))", "all x. all y. (ScoreEqual(x, y, UCLFinal, RegularTime) & ScoreEqual(x, y, UCLFinal, ExtraTime) -> PenaltyShootoutNeeded(x, y))", "ScoreEqual(RealMadrid, Atl\u00e9ticoMadrid, 2016UCLFinal, RegularTime)", "ScoreEqual(RealMadrid, Atl\u00e9ticoMadrid, 2016UCLFinal, ExtraTime)"], "conclusion": "PenaltyShootoutNeeded(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 623: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 623: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.812794", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoals(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoals(x, y, RegularTime) & SameGoals(x, y, ExtraTime) -> PenaltyShootOut(x, y))", "SameGoals(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "SameGoals(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "PenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.818265", "premises": ["all x. all y. (UCLFinal(x) & UCLFinal(y) & SameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (UCLFinal(x) & UCLFinal(y) & SameGoalsInRegularTime(x, y) & SameGoalsInExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "SameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SameGoalsInExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.826874", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsInRegularAndExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "SameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SameGoalsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.833189", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsScoredInRegularTime(x, y, UCLFinal) -> NeedPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameGoalsScoredInRegularTime(x, y, UCLFinal) & SameGoalsScoredInExtraTime(x, y, UCLFinal) -> NeedPlayPenaltyShootout(x, y))", "SameGoalsScoredInRegularTime(RealMadrid, Atl\u00e9ticoMadrid, UCLFinal)", "SameGoalsScoredInExtraTime(RealMadrid, Atl\u00e9ticoMadrid, UCLFinal)"], "conclusion": "NeedPlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 641: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 641: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.839105", "premises": ["all x. all y. (ScoreSame(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> PenaltyShootout(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, 2016RegularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, 2016ExtraTime)"], "conclusion": "PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:02:59.842286", "premises": ["all x. all y. ((SameNumberOfGoals(x, y, RegularTime) & -MoreGoals(x, y, RegularTime) & -MoreGoals(y, x, RegularTime)) -> ExtraTime(x, y))", "all x. all y. ((SameNumberOfGoals(x, y, RegularTime) & SameNumberOfGoals(x, y, ExtraTime) & -MoreGoals(x, y, RegularTime) & -MoreGoals(y, x, RegularTime) & -MoreGoals(x, y, ExtraTime) & -MoreGoals(y, x, ExtraTime)) -> PenaltyShootout(x, y))", "SameNumberOfGoals(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "SameNumberOfGoals(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 630: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 630: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.309940", "premises": ["all x. all y. (ScoreSame(x, y, 0, Regular) -> ExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, 0, Both) -> PenaltyShootout(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, 1, Regular)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, 0, Extra)"], "conclusion": "-PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.312044", "premises": ["all x. all y. (Score(x, SameNumberGoals, y) & RegularTime -> ExtraTime)", "all x. all y. (Score(x, SameNumberGoals, y) & RegularTime & ExtraTime -> PenaltyShootOut)", "Score(RealMadrid, SameNumberGoals, AtleticoMadrid) & RegularTime", "Score(RealMadrid, SameNumberGoals, AtleticoMadrid) & ExtraTime"], "conclusion": "-PenaltyShootOut(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PenaltyShootOut/0, PenaltyShootOut/2.\n\n\nFatal error:  The following symbols are used with multiple arities: PenaltyShootOut/0, PenaltyShootOut/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PenaltyShootOut/0, PenaltyShootOut/2.\n\n\nFatal error:  The following symbols are used with multiple arities: PenaltyShootOut/0, PenaltyShootOut/2\n"}
{"timestamp": "2025-06-10T00:04:04.309824", "premises": ["all x. all y. (UclFinal(x) & UclFinal(y) & SameScore(x, y) & RegularTime(x) & RegularTime(y) -> ExtraTime(x, y))", "all x. all y. (UclFinal(x) & UclFinal(y) & SameScore(x, y) & RegularTime(x) & RegularTime(y) & ExtraTime(x, y) -> PenaltyShootout(x, y))", "SameScore(RealMadrid, Atl\u00e9ticoMadrid) & RegularTime(2016UclFinal) & RegularTime(2016UclFinal)", "SameScore(RealMadrid, Atl\u00e9ticoMadrid) & ExtraTime(2016UclFinal) & ExtraTime(2016UclFinal)"], "conclusion": "-PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.329798", "premises": ["all x. all y. (ScoreSameGoalsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameGoalsInRegularAndExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "ScoreSameGoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameGoalsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.332327", "premises": ["all x. all y. (ScoreSameGoals(x, y, RegularTime) -> PlayExtraTime(x, y))", "all x. all y. (ScoreSameGoals(x, y, BothRegularAndExtraTime) -> PlayPenaltyShootOut(x, y))", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoreSameGoals(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-PlayPenaltyShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.332742", "premises": ["(SameNumberGoals(x, y) & RegularTime(x, y) -> ExtraTime(x, y))", "(SameNumberGoals(x, y) & RegularTime(x, y) & ExtraTime(x, y) -> PenaltyShootout(x, y))", "SameNumberGoals(RealMadrid, Atl\u00e9ticoMadrid) & RegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SameNumberGoals(RealMadrid, Atl\u00e9ticoMadrid) & ExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:04.333069", "premises": ["all x. all y. (UCLFinal(x) & UCLFinal(y) & SameGoalCount(x, y, RegularTime) -> ExtraTimeRequired(x, y))", "all x. all y. (UCLFinal(x) & UCLFinal(y) & SameGoalCount(x, y, RegularTime) & SameGoalCount(x, y, ExtraTime) -> PenaltyShootoutRequired(x, y))", "SameGoalCount(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "SameGoalCount(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-PenaltyShootoutRequired(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:04:47.925531", "premises": ["Office(Ableton, Germany)", "Office(Ableton, Usa)", "-Different(Country, Usa, Germany)", "all x. all y. all z. (Office(x, y) & Office(x, z) & -Different(y, z) -> Multinational(x))", "Multinational(Ableton)"], "conclusion": "Software(Ableton, Music)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Different/2, Different/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Different/2, Different/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Different/2, Different/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Different/2, Different/3\n"}
{"timestamp": "2025-06-10T00:05:32.813821", "premises": ["Office(Germany, Ableton)", "Office(USA, Ableton)", "all x. all y. (x \u2260 y & Country(x) & Country(y) -> (x = USA & y = Germany) | (x = Germany & y = USA))", "all x. (Office(x, y) & Office(x, z) & x \u2260 y & x \u2260 z & Country(y) & Country(z) -> MultinationalCompany(x))", "MakesMusicSoftware(Ableton)"], "conclusion": "-Office(Germany, Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (x \u2260 y & Country(x) & Country(y) -> (x = USA & y = Germany) | (x = Germany & y = USA))\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. all y. (x \u2260 y & Country(x) & Country(y) -> (x = USA & y = Germany) | (x = Germany & y = USA))\n                 ^\n"}
{"timestamp": "2025-06-10T00:06:10.896167", "premises": ["all x. (Depressing(x) -> Sad(x))", "Depressing(endofarelationship)", "-Sad(endofarelationship) & Invigorating(endofarelationship)  FOL: Depressing(endofarelationship) -> Sad(endofarelationship)", "Invigorating(endofarelationship) -> Sad(endofarelationship)"], "conclusion": "-Invigorating(endofarelationship)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-Sad(endofarelationship) & Invigorating(endofarelationship)  FOL: Depressing(endofarelationship) -> Sad(endofarelationship)\n                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-Sad(endofarelationship) & Invigorating(endofarelationship)  FOL: Depressing(endofarelationship) -> Sad(endofarelationship)\n                                                             ^\n"}
{"timestamp": "2025-06-10T00:06:10.907497", "premises": ["all x. (Depressing(x) -> Sad(x))", "Depressing(EndOfARelationship)", "-Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: -Sad(EndOfARelationship) -> -Depressing(EndOfARelationship)  FOL: -Depressing(EndOfARelationship)  FOL: Depressing(EndOfARelationship)"], "conclusion": "Sad(EndOfARelationship)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: -Sad(EndOfARelationship) -> -Depressing(EndOfARelationship)  FOL: -Depressing(EndOfARelationship)  FOL: Depressing(EndOfARelationship)\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: Depressing(EndOfARelationship) -> Sad(EndOfARelationship)  FOL: -Sad(EndOfARelationship) -> -Depressing(EndOfARelationship)  FOL: -Depressing(EndOfARelationship)  FOL: Depressing(EndOfARelationship)\n                          ^\n"}
{"timestamp": "2025-06-10T00:06:10.913124", "premises": ["Depressing(x) -> Sad(x)", "Depressing(EndOfRelationship)"], "conclusion": "Invigorating(EndOfRelationship)  The conclusion \"The end of a relationship is invigorating\" does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nInvigorating(EndOfRelationship)  The conclusion \"The end of a relationship is invigorating\" does not follow from the premises.\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nInvigorating(EndOfRelationship)  The conclusion \"The end of a relationship is invigorating\" does not follow from the premises.\n                                 ^\n"}
{"timestamp": "2025-06-10T00:07:21.830168", "premises": ["all x. (China(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, China) -> From(x, BRICS))", "all x. (India(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, India) -> From(x, BRICS))", "all x. all y. (From(x, y) & China(y) -> ChinesePerson(x))", "all x. all y. (From(x, y) & India(y) -> IndianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-exists x. exists y. (From(x, y) & BRICS(y) & IndianPerson(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0\n"}
{"timestamp": "2025-06-10T00:07:21.830292", "premises": ["China(x) -> BRICS(x) & EmergingEconomy(x)", "all x. (From(x, China) -> From(x, BRICS))", "India(x) -> BRICS(x) & EmergingEconomy(x)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0\n"}
{"timestamp": "2025-06-10T00:07:21.832089", "premises": ["China(x) -> (BRICS(x) & EmergingEconomy(x))", "From(x, China) -> From(x, BRICS)", "India(y) -> (BRICS(y) & EmergingEconomy(y))", "From(x, India) -> From(x, BRICS)", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0\n"}
{"timestamp": "2025-06-10T00:07:21.826863", "premises": ["China(x) -> (BRICS(x) & EmergingEconomy(x))", "From(x, China) -> From(x, BRICS)", "India(x) -> (BRICS(x) & EmergingEconomy(x))", "From(x, India) -> From(x, BRICS)", "all x. all y. (From(x, y) & China(y) -> ChinesePerson(x))", "all x. all y. (From(x, y) & India(y) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "- (exists x. (IndianPerson(x) | From(x, BRICS)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0\n"}
{"timestamp": "2025-06-10T00:07:21.833943", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. all y. (From(x, y) & China(y) -> ChinesePerson(x))", "all x. all y. (From(x, y) & India(y) -> IndianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-exists x. exists y. (From(x, y) & BRICS(y) & IndianPerson(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, BRICS/1, BRICS/0, China/1, China/0\n"}
{"timestamp": "2025-06-10T00:07:21.852215", "premises": ["all x. (China(x) -> BRICS(x) & EmergingEconomy(x))", "all x. (From(x, China) -> From(x, BRICS))", "all x. (India(x) -> BRICS(x) & EmergingEconomy(x))", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0\n"}
{"timestamp": "2025-06-10T00:07:21.855712", "premises": ["all x. (China(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, China) -> From(x, BRICS))", "all x. (India(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, BRICS/1, BRICS/0\n"}
{"timestamp": "2025-06-10T00:07:21.855962", "premises": ["China & EmergingEconomy", "all x. (From(x, China) -> From(x, BRICS))", "India & EmergingEconomy", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0\n"}
{"timestamp": "2025-06-10T00:07:21.856516", "premises": ["China & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "India & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (From(x, BRICS) & Indian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.449925", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. all y. (From(x, y) & China(y) -> Chinese(x))", "all x. all y. (From(x, y) & India(y) -> Indian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.451647", "premises": ["all x. (China(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, China) -> From(x, BRICS(x)))", "all x. (India(x) -> (BRICS(x) & -EmergingEconomy(x)))", "all x. (From(x, India) -> From(x, BRICS(x)))", "all x. all y. (From(x, y) & China(y) -> Chinese(x))", "all x. all y. (From(x, y) & India(y) -> Indian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BRICS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BRICS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BRICS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BRICS/1\n"}
{"timestamp": "2025-06-10T00:08:32.454923", "premises": ["China(x) -> BRICS(x) & EmergingEconomy(x)", "From(x, China) -> From(x, BRICS)", "India(x) -> BRICS(x) & EmergingEconomy(x)", "From(x, India) -> From(x, BRICS)", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.453208", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> BRICS(From(x, _)))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> BRICS(From(x, _)))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: From/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: From/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: From/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: From/2\n"}
{"timestamp": "2025-06-10T00:08:32.456717", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. all y. (From(x, y) & China(y) -> Chinese(x))", "all x. all y. (From(x, y) & India(y) -> Indian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.467349", "premises": ["China \u2208 BRICS & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "India \u2208 BRICS & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nChina \u2208 BRICS & EmergingEconomy(China)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nChina \u2208 BRICS & EmergingEconomy(China)\n      ^\n"}
{"timestamp": "2025-06-10T00:08:32.474981", "premises": ["all x. (China(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, China) -> From(x, BRICS))", "all x. (India(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. From(x, India)", "EmergingEconomy(India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0, China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.475626", "premises": ["all x. (China(x) -> BRICS(x) & EmergingEconomy(x))", "all x. (FromChina(x) -> FromBRICS(x))", "all x. (India(x) -> BRICS(x) & EmergingEconomy(x))", "all x. (FromIndia(x) -> FromBRICS(x))", "all x. all y. (From(x, y) & China(y) -> ChinesePerson(x))", "all x. all y. (From(x, y) & India(y) -> IndianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.476172", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (China(x) -> exists y. (From(x, y) & BRICS(y)))", "BRICS(India) & EmergingEconomy(India)", "all x. (India(x) -> exists y. (From(x, y) & BRICS(y)))", "all x. all y. (From(x, y) & China(y) -> ChinesePerson(x))", "all x. all y. (From(x, y) & India(y) -> IndianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T00:08:32.478353", "premises": ["all x. (China(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, China) -> From(x, BRICS(x)))", "all x. (India(x) -> (BRICS(x) & EmergingEconomy(x)))", "all x. (From(x, India) -> From(x, BRICS(x)))", "all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. (From(x, India))"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BRICS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BRICS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: BRICS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: BRICS/1\n"}
{"timestamp": "2025-06-10T00:09:51.049558", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) <-> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x))))", "all x. (SoccerPlayer(x) & ManyGoalsLeftFoot(x) -> VeryEfficient(LeftFoot(x)))", "all x. (SoccerPlayer(x) & ManyGoalsRightFoot(x) -> VeryEfficient(RightFoot(x)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(RightFoot(CristianoRonaldo))", "ManyGoalsLeftFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x)))) -> all x. (TopSoccerPlayer(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x)))) -> all x. (TopSoccerPlayer(x))\n                    ^\n"}
{"timestamp": "2025-06-10T00:09:51.054471", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) <-> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x))))", "all x. (SoccerPlayer(x) & ManyGoalsLeftFoot(x) -> VeryEfficient(LeftFoot(x)))", "all x. (SoccerPlayer(x) & ManyGoalsRightFoot(x) -> VeryEfficient(RightFoot(x)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(RightFoot(CristianoRonaldo))", "ManyGoalsLeftFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x)))) -> all x. (TopSoccerPlayer(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x)))) -> all x. (TopSoccerPlayer(x))\n                    ^\n"}
{"timestamp": "2025-06-10T00:09:51.059355", "premises": ["all x. (SoccerPlayer(x) -> HasRightFoot(x) & HasLeftFoot(x))", "all x. (TopSoccerPlayer(x) -> SoccerPlayer(x) & VeryEfficientLeftFoot(x) & VeryEfficientRightFoot(x))", "all x. (SoccerPlayer(x) & ScoresManyGoalsLeftFoot(x) -> VeryEfficientLeftFoot(x))", "all x. (SoccerPlayer(x) & ScoresManyGoalsRightFoot(x) -> VeryEfficientRightFoot(x))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficientRightFoot(CristianoRonaldo)", "ScoresManyGoalsLeftFoot(CristianoRonaldo)", "TopSoccerPlayer(CristianoRonaldo) </PREMISES> <CONCLUSION> FOL: TopSoccerPlayer(CristianoRonaldo) </CONCLUSION> <EVALUATE>", "FOL: SoccerPlayer(CristianoRonaldo) & VeryEfficientLeftFoot(CristianoRonaldo) & VeryEfficientRightFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nTopSoccerPlayer(CristianoRonaldo) </PREMISES> <CONCLUSION> FOL: TopSoccerPlayer(CristianoRonaldo) </CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nTopSoccerPlayer(CristianoRonaldo) </PREMISES> <CONCLUSION> FOL: TopSoccerPlayer(CristianoRonaldo) </CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T00:09:51.085489", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) -> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x))))", "all x. (ManyGoalsWithLeftFoot(x) -> VeryEfficient(LeftFoot(x)))", "all x. (ManyGoalsWithRightFoot(x) -> VeryEfficient(RightFoot(x)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(RightFoot(CristianoRonaldo))", "ManyGoalsWithLeftFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1\n"}
{"timestamp": "2025-06-10T00:09:51.085927", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) -> (LeftFoot(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x))))", "all x. (SoccerPlayer(x) & CanScoreManyGoalsUsingLeftFoot(x) -> VeryEfficient(LeftFoot(x)))", "all x. (SoccerPlayer(x) & CanScoreManyGoalsUsingRightFoot(x) -> VeryEfficient(RightFoot(x)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(RightFoot(CristianoRonaldo))", "CanScoreManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1\n"}
{"timestamp": "2025-06-10T00:11:19.189447", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "TEXT: Top soccer players are soccer players who can use both the left foot and right foot very efficiently.  FOL: all x. (TopSoccerPlayer(x) -> SoccerPlayer(x) & VeryEfficientLeftFoot(x) & VeryEfficientRightFoot(x))", "TEXT: If a soccer player can score many goals using the left foot, they can use that foot very efficiently.  FOL: all x. (SoccerPlayer(x) & ManyGoalsLeftFoot(x) -> VeryEfficientLeftFoot(x))", "TEXT: If a soccer player can score many goals using the right foot, they can use that foot very efficiently.  FOL: all x. (SoccerPlayer(x) & ManyGoalsRightFoot(x) -> VeryEfficientRightFoot(x))", "TEXT: Cristiano Ronaldo is a soccer player.  FOL: SoccerPlayer(CristianoRonaldo)", "TEXT: Cristiano Ronaldo can use his right foot very efficiently.  FOL: VeryEfficientRightFoot(CristianoRonaldo)", "TEXT: Cristiano Ronaldo has scored many goals using his left foot.  FOL: ManyGoalsLeftFoot(CristianoRonaldo)"], "conclusion": "TEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Cristiano'.\nTEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Cristiano'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Cristiano'.\nTEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)\n      ^\n"}
{"timestamp": "2025-06-10T00:11:19.194402", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "TEXT: Top soccer players are soccer players who can use both the left foot and right foot very efficiently.  FOL: all x. (TopSoccerPlayer(x) <-> (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x))))", "TEXT: If a soccer player can score many goals using the left foot, they can use that foot very efficiently.  FOL: all x. (ManyGoalsUsingLeftFoot(x) -> VeryEfficient(LeftFoot(x)))", "TEXT: If a soccer player can score many goals using the right foot, they can use that foot very efficiently.  FOL: all x. (ManyGoalsUsingRightFoot(x) -> VeryEfficient(RightFoot(x)))", "TEXT: Cristiano Ronaldo is a soccer player.  FOL: SoccerPlayer(CristianoRonaldo)", "TEXT: Cristiano Ronaldo can use his right foot very efficiently.  FOL: VeryEfficient(RightFoot(CristianoRonaldo))", "TEXT: Cristiano Ronaldo has scored many goals using his left foot.  FOL: ManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "TEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Cristiano'.\nTEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Cristiano'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Cristiano'.\nTEXT: Cristiano Ronaldo is not a top soccer player.  FOL: -TopSoccerPlayer(CristianoRonaldo)\n      ^\n"}
{"timestamp": "2025-06-10T00:11:19.235782", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (SoccerPlayer(x) & VeryEfficient(RightFoot(x)) & VeryEfficient(LeftFoot(x)) -> TopSoccerPlayer(x))", "ScoreManyGoalsLeftFoot(x) -> VeryEfficient(LeftFoot(x))", "ScoreManyGoalsRightFoot(x) -> VeryEfficient(RightFoot(x))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(RightFoot(CristianoRonaldo))", "ScoreManyGoalsLeftFoot(CristianoRonaldo)"], "conclusion": "-TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightFoot/1, LeftFoot/1\n"}
{"timestamp": "2025-06-10T00:11:19.236263", "premises": ["all x. (SoccerPlayer(x) -> (RightFoot(x) & LeftFoot(x)))", "all x. (TopSoccerPlayer(x) -> (RightFoot(x) & VeryEfficientlyUse(x, LeftFoot)) & (LeftFoot(x) & VeryEfficientlyUse(x, RightFoot)))", "all x. (SoccerPlayer(x) & ManyGoals(x, LeftFoot) -> VeryEfficientlyUse(x, LeftFoot))", "all x. (SoccerPlayer(x) & ManyGoals(x, RightFoot) -> VeryEfficientlyUse(x, RightFoot))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficientlyUse(CristianoRonaldo, RightFoot)", "ManyGoals(CristianoRonaldo, LeftFoot)"], "conclusion": "-TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0\n"}
{"timestamp": "2025-06-10T00:12:24.137639", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)  The National Lobster Hatchery is open to visitors.  FOL: OpenToVisitors(NationalLobsterHatchery)  A hatchery is either for profit or for conservation.  FOL: (ForProfit(Hatchery) | ForConservation(Hatchery))  If a hatchery is for conservation, it might release animals into the wild.  FOL: (ForConservation(Hatchery) -> PossiblyReleasesAnimalsIntoWild(Hatchery))  The National Lobster Hatchery is not for profit.  FOL: -ForProfit(NationalLobsterHatchery)  The National Lobster Hatchery is for conservation.  FOL: ForConservation(NationalLobsterHatchery) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>", "Hatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Hatchery) | ForConservation(Hatchery))", "(ForConservation(Hatchery) -> PossiblyReleasesAnimalsIntoWild(Hatchery))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForConservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nHatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)  The National Lobster Hatchery is open to visitors.  FOL: OpenToVisitors(NationalLobsterHatchery)  A hatchery is either for profit or for conservation.  FOL: (ForProfit(Hatchery) | ForConservation(Hatchery))  If a hatchery is for conservation, it might release animals into the wild.  FOL: (ForConservation(Hatchery) -> PossiblyReleasesAnimalsIntoWild(Hatchery))  The National Lobster Hatchery is not for profit.  FOL: -ForProfit(NationalLobsterHatchery)  The National Lobster Hatchery is for conservation.  FOL: ForConservation(NationalLobsterHatchery) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nHatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)  The National Lobster Hatchery is open to visitors.  FOL: OpenToVisitors(NationalLobsterHatchery)  A hatchery is either for profit or for conservation.  FOL: (ForProfit(Hatchery) | ForConservation(Hatchery))  If a hatchery is for conservation, it might release animals into the wild.  FOL: (ForConservation(Hatchery) -> PossiblyReleasesAnimalsIntoWild(Hatchery))  The National Lobster Hatchery is not for profit.  FOL: -ForProfit(NationalLobsterHatchery)  The National Lobster Hatchery is for conservation.  FOL: ForConservation(NationalLobsterHatchery) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE>\n                                                                                                               ^\n"}
{"timestamp": "2025-06-10T00:12:24.150078", "premises": ["all x. ((Hatchery(x) & In(x, Padstow, England)) -> TheNationalLobsterHatchery(x))", "OpenToVisitors(TheNationalLobsterHatchery)", "all x. (Hatchery(x) -> (ForProfit(x) | ForConservation(x)))", "all x. (ForConservation(x) -> -ReleaseIntoWild(x) | ReleaseIntoWild(x))", "-ForProfit(TheNationalLobsterHatchery)"], "conclusion": "(OpenToVisitors(TheNationalLobsterHatchery) & -ForProfit(TheNationalLobsterHatchery)) -> ForConservation(TheNationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0\n"}
{"timestamp": "2025-06-10T00:12:24.153167", "premises": ["Hatchery(NationalLobsterHatchery) & In(NationalLobsterHatchery, Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "ForProfit(Hatchery(x)) | ForConservation(Hatchery(x))", "ForConservation(Hatchery(x)) -> MayReleaseIntoWild(Hatchery(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForConservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1\n"}
{"timestamp": "2025-06-10T00:12:24.162313", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "((ForProfit(Hatchery) & -ForConservation(Hatchery)) | (-ForProfit(Hatchery) & ForConservation(Hatchery)))", "ForConservation(Hatchery) -> MightReleaseIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForConservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0\n"}
{"timestamp": "2025-06-10T00:12:24.163540", "premises": ["all x. (NationalLobsterHatchery(x) -> (Hatchery(x) & LocatedIn(x, Padstow, England)))", "OpenToVisitors(NationalLobsterHatchery)", "all x. ((ForProfit(x) & -ForConservation(x)) | (-ForProfit(x) & ForConservation(x)))", "all x. (ForConservation(x) -> MightReleaseAnimals(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForConservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0\n"}
{"timestamp": "2025-06-10T00:13:22.952591", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributionsToAlgorithmAnalysis(DonaldKnuth)", "ContributionsToArtificialIntelligence(MarvinMinsky)", "ResearchedNumericalMethods(RichardHamming)", "ContributionsToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & TuringAward(y) & (x != y) & (x, y) \u2208 {(DonaldKnuth, MarvinMinsky), (DonaldKnuth, JohnMcCarthy), (MarvinMinsky, JohnMcCarthy)})", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & TuringAward(y) & (x != y) & (x, y) \u2208 {(DonaldKnuth, MarvinMinsky), (DonaldKnuth, JohnMcCarthy), (MarvinMinsky, JohnMcCarthy)})\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & TuringAward(y) & (x != y) & (x, y) \u2208 {(DonaldKnuth, MarvinMinsky), (DonaldKnuth, JohnMcCarthy), (MarvinMinsky, JohnMcCarthy)})\n                                                                    ^\n"}
{"timestamp": "2025-06-10T00:13:22.957142", "premises": ["WonTuringAward(DonaldKnuth) & WonTuringAward(MarvinMinsky) & WonTuringAward(RichardHamming) & WonTuringAward(JohnMcCarthy)", "WonTuringAward(DonaldKnuth) & ContributedToAnalysisOfAlgorithms(DonaldKnuth)", "WonTuringAward(MarvinMinsky) & ContributedToArtificialIntelligence(MarvinMinsky)", "WonTuringAward(RichardHamming) & ResearchedNumericalMethods(RichardHamming)", "WonTuringAward(JohnMcCarthy) & ContributedToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. exists y. (WonTuringAward(x) & WonTuringAward(y) & x \u2260 y & (ContributedToArtificialIntelligence(x) | ContributedToArtificialIntelligence(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (WonTuringAward(x) & WonTuringAward(y) & x \u2260 y & (ContributedToArtificialIntelligence(x) | ContributedToArtificialIntelligence(y)))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (WonTuringAward(x) & WonTuringAward(y) & x \u2260 y & (ContributedToArtificialIntelligence(x) | ContributedToArtificialIntelligence(y)))\n                                                               ^\n"}
{"timestamp": "2025-06-10T00:13:22.973907", "premises": ["all x. (TuringAward(x) | DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x))", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & ArtificialIntelligence(x) & TuringAward(y) & ArtificialIntelligence(y) & x != y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-06-10T00:14:22.766642", "premises": ["exists x. exists y. exists z. exists w. (TuringAward(x) & TuringAward(y) & TuringAward(z) & TuringAward(w) & (x = DonaldKnuth | x = MarvinMinsky | x = RichardHamming | x = JohnMcCarthy) & (y = DonaldKnuth | y = MarvinMinsky | y = RichardHamming | y = JohnMcCarthy) & (z = DonaldKnuth | z = MarvinMinsky | z = RichardHamming | z = JohnMcCarthy) & (w = DonaldKnuth | w = MarvinMinsky | w = RichardHamming | w = JohnMcCarthy))", "Contribution(AlgorithmAnalysis, DonaldKnuth)", "Contribution(ArtificialIntelligence, MarvinMinsky)", "Contribution(NumericalMethods, RichardHamming)", "Contribution(ArtificialIntelligence, JohnMcCarthy)"], "conclusion": "exists x. exists y. (ArtificialIntelligence(x) & TuringAward(x) & y \u2260 x & (ArtificialIntelligence(y) & TuringAward(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (ArtificialIntelligence(x) & TuringAward(x) & y \u2260 x & (ArtificialIntelligence(y) & TuringAward(y)))\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (ArtificialIntelligence(x) & TuringAward(x) & y \u2260 x & (ArtificialIntelligence(y) & TuringAward(y)))\n                                                                    ^\n"}
{"timestamp": "2025-06-10T00:14:22.766078", "premises": ["TuringAward(Knuth) & TuringAward(Minsky) & TuringAward(Hamming) & TuringAward(McCarthy)", "AlgorithmAnalysis(Knuth)", "ArtificialIntelligence(Minsky)", "NumericalMethods(Hamming)", "ArtificialIntelligence(McCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & ArtificialIntelligence(x) & TuringAward(y) & ArtificialIntelligence(y) & x \u2260 y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & ArtificialIntelligence(x) & TuringAward(y) & ArtificialIntelligence(y) & x \u2260 y)\n                                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & ArtificialIntelligence(x) & TuringAward(y) & ArtificialIntelligence(y) & x \u2260 y)\n                                                                                                                 ^\n"}
{"timestamp": "2025-06-10T00:14:22.773727", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(AnalysisOfAlgorithms, DonaldKnuth)", "Contribution(ArtificialIntelligence, MarvinMinsky)", "Contribution(NumericalMethods, RichardHamming)", "Contribution(ArtificialIntelligence, JohnMcCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & TuringAward(y) & Contribution(ArtificialIntelligence, x) & Contribution(ArtificialIntelligence, y) & (x \u2260 y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & TuringAward(y) & Contribution(ArtificialIntelligence, x) & Contribution(ArtificialIntelligence, y) & (x \u2260 y))\n                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (TuringAward(x) & TuringAward(y) & Contribution(ArtificialIntelligence, x) & Contribution(ArtificialIntelligence, y) & (x \u2260 y))\n                                                                                                                                              ^\n"}
{"timestamp": "2025-06-10T00:14:22.799057", "premises": ["all x. (TuringAwardWinner(x) -> AwardedTuringAward(x))", "ContributedToAnalysisOfAlgorithms(DonaldKnuth)", "ContributedToArtificialIntelligence(MarvinMinsky)", "ResearchedNumericalMethods(RichardHamming)", "ContributedToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. exists y. ((ContributedToArtificialIntelligence(x) & AwardedTuringAward(x) & x \u2260 y) & (ContributedToArtificialIntelligence(y) & AwardedTuringAward(y) & x \u2260 y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. ((ContributedToArtificialIntelligence(x) & AwardedTuringAward(x) & x \u2260 y) & (ContributedToArtificialIntelligence(y) & AwardedTuringAward(y) & x \u2260 y))\n                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. ((ContributedToArtificialIntelligence(x) & AwardedTuringAward(x) & x \u2260 y) & (ContributedToArtificialIntelligence(y) & AwardedTuringAward(y) & x \u2260 y))\n                                                                                         ^\n"}
{"timestamp": "2025-06-10T00:14:22.786216", "premises": ["TuringAward(Knuth) & TuringAward(Minsky) & TuringAward(Hamming) & TuringAward(McCarthy)", "Contribution(AlgorithmAnalysis, Knuth)", "Contribution(ArtificialIntelligence, Minsky)", "WorkedOn(NumericalMethods, Hamming)", "Contribution(ArtificialIntelligence, McCarthy)"], "conclusion": "exists x. exists y. (TuringAward(x) & TuringAward(y) & ArtificialIntelligence(x) & ArtificialIntelligence(y) & x != y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ArtificialIntelligence/1, ArtificialIntelligence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ArtificialIntelligence/1, ArtificialIntelligence/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ArtificialIntelligence/1, ArtificialIntelligence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ArtificialIntelligence/1, ArtificialIntelligence/0\n"}
{"timestamp": "2025-06-10T00:15:12.984676", "premises": ["exists x. (TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)"], "conclusion": "-exists x. (TuringAward(x) & NumericalMethods(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-06-10T00:15:12.990992", "premises": ["TuringAward(DonaldKnuth) | TuringAward(MarvinMinsky) | TuringAward(RichardHamming) | TuringAward(JohnMcCarthy)", "Contribution(AnalysisOfAlgorithms, DonaldKnuth)", "Contribution(ArtificialIntelligence, MarvinMinsky)", "Research(NumericalMethods, RichardHamming)", "Contribution(ArtificialIntelligence, JohnMcCarthy)"], "conclusion": "- (TuringAward(DonaldKnuth) | TuringAward(MarvinMinsky) | TuringAward(RichardHamming) | TuringAward(JohnMcCarthy)) \u2192 Research(NumericalMethods, ?x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\n- (TuringAward(DonaldKnuth) | TuringAward(MarvinMinsky) | TuringAward(RichardHamming) | TuringAward(JohnMcCarthy)) \u2192 Research(NumericalMethods, ?x)\n                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\n- (TuringAward(DonaldKnuth) | TuringAward(MarvinMinsky) | TuringAward(RichardHamming) | TuringAward(JohnMcCarthy)) \u2192 Research(NumericalMethods, ?x)\n                                                                                                                   ^\n"}
{"timestamp": "2025-06-10T00:15:13.003405", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligence)", "Research(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "-TuringAward(x) | -NumericalMethods(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0\n"}
{"timestamp": "2025-06-10T00:15:54.784370", "premises": ["all x. (JuvenileDelinquent(x) -> CommittedCrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x))"], "conclusion": "exists x. ((CommittedCrime(x) & -ProductOfBrokenHome(x)) | (CommittedCrime(x) & ProductOfBrokenHome(x))) FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nexists x. ((CommittedCrime(x) & -ProductOfBrokenHome(x)) | (CommittedCrime(x) & ProductOfBrokenHome(x))) FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x))\n                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nexists x. ((CommittedCrime(x) & -ProductOfBrokenHome(x)) | (CommittedCrime(x) & ProductOfBrokenHome(x))) FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x))\n                                                                                                         ^\n"}
{"timestamp": "2025-06-10T00:15:54.792817", "premises": ["all x. (JuvenileDelinquent(x) -> CommittedCrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>", "(JuvenileDelinquent(x) -> CommittedCrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x))", "(JuvenileDelinquent(x) & CommittedCrime(x))"], "conclusion": "exists x. (CommittedCrime(x) & ProductOfBrokenHome(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^\n"}
{"timestamp": "2025-06-10T00:15:54.794226", "premises": ["all x. (JuvenileDelinquent(x) -> CommittedACrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedACrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "exists x. (CommittedACrime(x) & ProductOfBrokenHome(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedACrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedACrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^\n"}
{"timestamp": "2025-06-10T00:15:54.809220", "premises": ["all x. (JuvenileDelinquent(x) -> CommittedCrime(x))"], "conclusion": "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x)) </PREMISES> <CONCLUSION> Some people who have committed a crime are products of broken homes.  FOL: exists x. (CommittedCrime(x) & ProductOfBrokenHome(x)) </CONCLUSION> <EVALUATE>\n                                                           ^\n"}
{"timestamp": "2025-06-10T00:17:03.449206", "premises": ["BulbophyllumAttenuatum \u2208 Bulbophyllum FOL: Member(BulbophyllumAttenuatum, Bulbophyllum)", "all x. (Member(x, Bulbophyllum) -> Orchid(x))"], "conclusion": "\u00acOrchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum FOL: Member(BulbophyllumAttenuatum, Bulbophyllum)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum FOL: Member(BulbophyllumAttenuatum, Bulbophyllum)\n                       ^\n"}
{"timestamp": "2025-06-10T00:17:03.461430", "premises": ["Member(BulbophyllumAttenuatum, Bulbophyllum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-06-10T00:17:03.463638", "premises": ["BulbophyllumAttenuatum(BulbophyllumAttenuatum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0\n"}
{"timestamp": "2025-06-10T00:17:03.461535", "premises": ["BulbophyllumAttenuatum = Bulbophyllum", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-06-10T00:17:03.466675", "premises": ["BulbophyllumAttenuatum \u2208 Bulbophyllum", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum\n                       ^\n"}
{"timestamp": "2025-06-10T00:17:03.461615", "premises": ["Genus(BulbophyllumAttenuatum, Bulbophyllum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-06-10T00:17:03.465531", "premises": ["BulbophyllumAttenuatum \u2208 Bulbophyllum", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "\u00acOrchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2208'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2208'.\nBulbophyllumAttenuatum \u2208 Bulbophyllum\n                       ^\n"}
{"timestamp": "2025-06-10T00:17:03.467634", "premises": ["Member(BulbophyllumAttenuatum, Bulbophyllum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-06-10T00:17:03.469684", "premises": ["Member(Bulbophyllum_attenuatum, Bulbophyllum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-06-10T00:17:03.472650", "premises": ["BulbophyllumAttenuatum(BulbophyllumAttenuatum)", "Orchid(BulbophyllumAttenuatum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0\n"}
{"timestamp": "2025-06-10T00:17:57.413657", "premises": ["all x. (Surname(x) & Roversi(x) -> Italian(x))", "Surname(AlbaRoversi, Roversi)", "Surname(PaoloRoversi, Roversi)", "Surname(RobertoRoversi, Roversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> Professional(x) | Amateur(x))"], "conclusion": "Italian(Surname(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/1\n"}
{"timestamp": "2025-06-10T00:20:14.228923", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:20:14.228785", "premises": ["Tyga -> Rapper", "Rapper(Tyga)", "all x. (Rapper(x) -> RapAlbum(x))", "RapAlbum(WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Tyga/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Tyga/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Tyga/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Tyga/0\n"}
{"timestamp": "2025-06-10T00:20:53.682404", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:20:53.682742", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:21:53.972795", "premises": ["all x. (MonkeypoxVirus(x) & InBeing(x) -> MayGetMonkeypox(x))", "exists x. (MonkeypoxVirus(x) & InAnimals(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "TEXT: People feel tired when they get the flu.  FOL:"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'People'.\nTEXT: People feel tired when they get the flu.  FOL:\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'People'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'People'.\nTEXT: People feel tired when they get the flu.  FOL:\n      ^\n"}
{"timestamp": "2025-06-10T00:21:53.983887", "premises": ["all x. (MonkeypoxVirus(x) -> MayGetMonkeypox(x))", "all x. (Animals(x) -> Possible(MonkeypoxVirus(x)))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animals(x))"], "conclusion": "exists x. Animals(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxVirus/1\n"}
{"timestamp": "2025-06-10T00:21:53.983995", "premises": ["all x. (OccursIn(x, MonkeypoxVirus) -> -MayGetMonkeypox(x))", "all x. (OccursIn(x, MonkeypoxVirus) -> MayGetMonkeypox(x))", "exists x. (MonkeypoxVirus(x) & -Animal(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (MayGetMonkeypox(x) -> Fever(x) | Headache(x) | MusclePains(x) | Tiredness(x))", "all x. (GetFlu(x) -> Tiredness(x))"], "conclusion": "exists x. (Animal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0\n"}
{"timestamp": "2025-06-10T00:21:53.978225", "premises": ["all x. (Monkeypox(x) -> Possibly(MonkeypoxDisease(x)))", "exists x. (Animal(x) & Monkeypox(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "MonkeypoxDisease(x) -> (Fever(x) | Headache(x) | MusclePains(x) | Tiredness(x))", "Flu(x) -> Tiredness(x)"], "conclusion": "exists x. Animal(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxDisease/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxDisease/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MonkeypoxDisease/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MonkeypoxDisease/1\n"}
{"timestamp": "2025-06-10T00:22:23.176283", "premises": ["all x. (Square(x) -> FourSided(x))", "all x. (FourSided(x) -> Shape(x))"], "conclusion": "all x. (Square(x) -> Shape(x)) Note that we have successfully translated the conclusion into a first-order logic expression that follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Note'.\nall x. (Square(x) -> Shape(x)) Note that we have successfully translated the conclusion into a first-order logic expression that follows from the premises.\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Note'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Note'.\nall x. (Square(x) -> Shape(x)) Note that we have successfully translated the conclusion into a first-order logic expression that follows from the premises.\n                               ^\n"}
{"timestamp": "2025-06-10T00:23:12.196547", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (LanguageGenerationTask(x) | LanguageUnderstandingTask(x)))", "all x. (NaturalLanguageProcessingTask(x) & TextSequenceOutput(x) -> LanguageGenerationTask(x))", "exists x. (MachineTranslation(x) & NaturalLanguageProcessingTask(x))", "exists x. (MachineTranslation(x) & TextSequenceOutput(x))"], "conclusion": "LanguageGenerationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-06-10T00:23:49.652714", "premises": ["exists x. (Mammal(x) & HasTeeth(x))", "all x. (Platypus(x) -> -HasTeeth(x))", "Mammal(Platypus)", "all x. (Human(x) -> HasTeeth(x))"], "conclusion": "Mammal(Platypus) & -HasTeeth(Platypus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T00:23:49.667400", "premises": ["exists x. (Mammal(x) & HasTeeth(x))", "all x. (Platypus(x) -> -HasTeeth(x))", "all x. (Platypus(x) -> Mammal(x))", "all x. (Human(x) -> HasTeeth(x))"], "conclusion": "Mammal(Platypus) & -HasTeeth(Platypus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T00:23:49.664479", "premises": ["exists x. (Mammal(x) & HasTeeth(x))", "-HasTeeth(Platypus)", "Mammal(Platypus)"], "conclusion": "HasTeeth(Human) </PREMISES> <CONCLUSION> Platypuses are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Platypuses are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nHasTeeth(Human) </PREMISES> <CONCLUSION> Platypuses are mammals with no teeth.  FOL: Mammal(Platypus) & -HasTeeth(Platypus) </CONCLUSION> <EVALUATE>\n                ^\n"}
{"timestamp": "2025-06-10T00:24:21.760188", "premises": ["all x. (Horse(x) -> Hooves(x))", "all x. (Human(x) -> -Hooves(x))", "exists x. (Human(x) & Horse(x))  FOL: exists x. (Human(x) & Hooves(x))  FOL: exists x. (Human(x) & Hooves(x)) & all y. (Human(y) -> -Hooves(y))  FOL: Contradiction"], "conclusion": "\u2205", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nexists x. (Human(x) & Horse(x))  FOL: exists x. (Human(x) & Hooves(x))  FOL: exists x. (Human(x) & Hooves(x)) & all y. (Human(y) -> -Hooves(y))  FOL: Contradiction\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nexists x. (Human(x) & Horse(x))  FOL: exists x. (Human(x) & Hooves(x))  FOL: exists x. (Human(x) & Hooves(x)) & all y. (Human(y) -> -Hooves(y))  FOL: Contradiction\n                                 ^\n"}
{"timestamp": "2025-06-10T00:25:22.807749", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "all x. (Location(x) & UnitedStatesOfAmerica(x) -> NorthAmerica(x))", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "-Located(UnitedStatesOfAmerica, WesternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NorthAmerica/1, NorthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NorthAmerica/1, NorthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NorthAmerica/1, NorthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NorthAmerica/1, NorthAmerica/0, UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0\n"}
{"timestamp": "2025-06-10T00:26:45.731071", "premises": ["exists x. (Mammal(x) & EggLayer(x) & (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> EggLayer(x))", "all x. (Grebe(x) -> -Platypus(x) & -Echidna(x))"], "conclusion": "all x. (Grebe(x) -> -Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T00:26:45.729416", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Grebe(x) -> LayEggs(x))", "all x. (Grebe(x) -> -(Platypus(x) | Echidna(x)))"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0\n"}
{"timestamp": "2025-06-10T00:26:45.736709", "premises": ["all x. (LayEggs(x) & Mammal(x) -> Platypus(x) | Echidna(x))", "-Platypus(x) | -Hyrax(x)", "-Echidna(x) | -Hyrax(x)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "Mammal(Hyrax)", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-10T00:26:45.752700", "premises": ["all x. (LayEggs(x) & Mammal(x) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T00:26:45.752952", "premises": ["all x. (Mammal(x) & EggLaying(x) -> Platypus(x) | Echidna(x))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> Vertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Mammal(Hyrax)", "EggLaying(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T00:26:45.753538", "premises": ["all x. (EggLayingMammal(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(x)", "EggLaying(Grebe)", "all x. (Grebe(x) -> -Platypus(x) & -Echidna(x))"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0\n"}
{"timestamp": "2025-06-10T00:26:45.757159", "premises": ["all x. (Mammal(x) & EggLaying(x) -> (Platypus(x) | Echidna(x)))", "-Platypus(Hyrax)", "-Echidna(Hyrax)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(Mammal)", "EggLaying(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Mammal(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-06-10T00:27:20.808700", "premises": ["~all x. (ArtPiece(x) -> RequireTalent(x))", "all x. (RequireTalent(x) -> RequirePractice(x))"], "conclusion": "exists x. (-ArtPiece(x) | -RequirePractice(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n~all x. (ArtPiece(x) -> RequireTalent(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n~all x. (ArtPiece(x) -> RequireTalent(x))\n     ^\n"}
{"timestamp": "2025-06-10T00:27:20.811542", "premises": ["exists x. -RequiresTalent(x)", "all x. (RequiresTalent(x) -> RequiresPractice(x))"], "conclusion": "exists x. -RequiresPractice(x)  FOL: exists x. exists y. (RequiresPractice(x) & RequiresTalent(x) & -RequiresTalent(y) & -RequiresPractice(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nexists x. -RequiresPractice(x)  FOL: exists x. exists y. (RequiresPractice(x) & RequiresTalent(x) & -RequiresTalent(y) & -RequiresPractice(y))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nexists x. -RequiresPractice(x)  FOL: exists x. exists y. (RequiresPractice(x) & RequiresTalent(x) & -RequiresTalent(y) & -RequiresPractice(y))\n                                ^\n"}
{"timestamp": "2025-06-10T00:27:20.816843", "premises": ["~all x. (ArtPiece(x) -> RequiresTalent(x))", "all x. (RequiresTalent(x) -> RequiresPractice(x))"], "conclusion": "exists x. (ArtPiece(x) & -RequiresPractice(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n~all x. (ArtPiece(x) -> RequiresTalent(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n~all x. (ArtPiece(x) -> RequiresTalent(x))\n     ^\n"}
{"timestamp": "2025-06-10T00:28:08.578291", "premises": ["Painter(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "MarriedTo(BernardaBrysonShahn, BenShahn)"], "conclusion": "all x. (BornIn(x, Athens, Ohio) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: -Divorced(BernardaBrysonShahn) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (BornIn(x, Athens, Ohio) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: -Divorced(BernardaBrysonShahn) </CONCLUSION> <EVALUATE>\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (BornIn(x, Athens, Ohio) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: -Divorced(BernardaBrysonShahn) </CONCLUSION> <EVALUATE>\n                                                ^\n"}
{"timestamp": "2025-06-10T00:28:08.582691", "premises": ["PainterAndLithographer(BernardaBrysonShahn)", "BornInAthensOhio(BernardaBrysonShahn)", "MarriedToBenShahn(BernardaBrysonShahn)"], "conclusion": "all x. (BornInAthensOhio(x) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: DivorcedOnce(BernardaBrysonShahn) </CONCLUSION> <EVALUATE> The conclusion \"Bernarda Bryson Shahn had been divorced once\" does not follow from the premises. The premises do not provide any information about Bernarda Bryson Shahn's marital history beyond her marriage to Ben Shahn, and there is no indication that she has been divorced.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (BornInAthensOhio(x) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: DivorcedOnce(BernardaBrysonShahn) </CONCLUSION> <EVALUATE> The conclusion \"Bernarda Bryson Shahn had been divorced once\" does not follow from the premises. The premises do not provide any information about Bernarda Bryson Shahn's marital history beyond her marriage to Ben Shahn, and there is no indication that she has been divorced.\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (BornInAthensOhio(x) -> American(x)) </PREMISES> <CONCLUSION> Bernarda Bryson Shahn had been divorced once.  FOL: DivorcedOnce(BernardaBrysonShahn) </CONCLUSION> <EVALUATE> The conclusion \"Bernarda Bryson Shahn had been divorced once\" does not follow from the premises. The premises do not provide any information about Bernarda Bryson Shahn's marital history beyond her marriage to Ben Shahn, and there is no indication that she has been divorced.\n                                            ^\n"}
{"timestamp": "2025-06-10T00:28:08.587391", "premises": ["Artist(bernarda Bryson Shahn)", "BornIn(bernarda Bryson Shahn, athens)", "MarriedTo(bernarda Bryson Shahn, ben Shahn)", "all x. (BornIn(x, athens) -> American(x))"], "conclusion": "Divorced(bernarda Bryson Shahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Bryson'.  Expected token ')'.\nDivorced(bernarda Bryson Shahn)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Bryson'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Bryson'.  Expected token ')'.\nDivorced(bernarda Bryson Shahn)\n                  ^\n"}
{"timestamp": "2025-06-10T00:28:08.590620", "premises": ["Painter(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(AthensOhio, BernardaBrysonShahn)", "Married(BenShahn, BernardaBrysonShahn)", "all x. (BornIn(AthensOhio, x) -> American(x))"], "conclusion": "Divorced(BernardaBrysonShahn)  FOL:  Since Bernarda Bryson Shahn was married to Ben Shahn and people born in Athens, Ohio, are Americans, then Bernarda Bryson Shahn is also an American. However, this does not lead us to conclude that she had been divorced once.  In order to derive the conclusion that Bernarda Bryson Shahn had been divorced once, we would need an additional premise about divorce, such as \"All married people are either divorced or still married.\"", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nDivorced(BernardaBrysonShahn)  FOL:  Since Bernarda Bryson Shahn was married to Ben Shahn and people born in Athens, Ohio, are Americans, then Bernarda Bryson Shahn is also an American. However, this does not lead us to conclude that she had been divorced once.  In order to derive the conclusion that Bernarda Bryson Shahn had been divorced once, we would need an additional premise about divorce, such as \"All married people are either divorced or still married.\"\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nDivorced(BernardaBrysonShahn)  FOL:  Since Bernarda Bryson Shahn was married to Ben Shahn and people born in Athens, Ohio, are Americans, then Bernarda Bryson Shahn is also an American. However, this does not lead us to conclude that she had been divorced once.  In order to derive the conclusion that Bernarda Bryson Shahn had been divorced once, we would need an additional premise about divorce, such as \"All married people are either divorced or still married.\"\n                               ^\n"}
{"timestamp": "2025-06-10T00:29:01.098133", "premises": ["exists x. (Author(DouglasAdams, x) & Created(DouglasAdams, x) & x = TheSalmonOfDoubt)", "About(TheSalmonOfDoubt, LifeExperiencesAndTechnology)", "all x. (Author(x) -> Writer(x))", "all x. (Writer(x) -> CreateInnovativeIdeas(x))", "exists x. (ContainInnovativeIdeas(x) & About(x, Technology))"], "conclusion": "-ContainInnovativeIdeas(TheSalmonOfDoubt)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Author/1, Author/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Author/1, Author/2\n"}
{"timestamp": "2025-06-10T00:29:51.879290", "premises": ["exists x. (Medication(x) & Diethylcarbamazine(x) & DiscoveredIn(x, 1947))", "all x. (Medication(x) & Diethylcarbamazine(x) -> Treats(x, RiverBlindness))", "exists x. (PreferredTreatment(x) & Ivermectin(x))", "-Ivermectin(Diethylcarbamazine)"], "conclusion": "-PreferredTreatment(Diethylcarbamazine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0\n"}
{"timestamp": "2025-06-10T00:29:51.879223", "premises": ["all x. (Diethylcarbamazine(x) -> Medication(x) & DiscoveredInYear(x, 1947))", "all x. (Diethylcarbamazine(x) -> Treats(x, RiverBlindness))", "all x. (PreferredTreatmentFor(x, RiverBlindness) -> Ivermectin(x))", "-Ivermectin(Diethylcarbamazine)"], "conclusion": "-PreferredTreatmentFor(Diethylcarbamazine, RiverBlindness)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0\n"}
{"timestamp": "2025-06-10T00:29:51.879110", "premises": ["Diethylcarbamazine(x) -> Medication(x) & YearOfDiscovery(x, 1947)", "Diethylcarbamazine(x) -> CanBeUsedToTreat(x, RiverBlindness)", "all x. (PreferredTreatmentFor(x, RiverBlindness) -> Ivermectin(x))", "-Ivermectin(Diethylcarbamazine)"], "conclusion": "Diethylcarbamazine(x) -> -PreferredTreatmentFor(x, RiverBlindness)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0\n"}
{"timestamp": "2025-06-10T00:29:51.879353", "premises": ["Medication(Diethylcarbamazine) & DiscoveredIn(1947, Diethylcarbamazine)", "Treats(RiverBlindness, Diethylcarbamazine)", "PreferredTreatment(RiverBlindness, Ivermectin)", "-Ivermectin(Diethylcarbamazine)"], "conclusion": "-PreferredTreatment(RiverBlindness, Diethylcarbamazine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ivermectin/1, Ivermectin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ivermectin/1, Ivermectin/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ivermectin/1, Ivermectin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ivermectin/1, Ivermectin/0\n"}
{"timestamp": "2025-06-10T00:29:51.884643", "premises": ["Exists x. (Medication(x) & DiscoveredIn(x, 1947) & Diethylcarbamazine(x))", "Treats(RiverBlindness, Diethylcarbamazine)", "PreferredTreatmentFor(RiverBlindness, Ivermectin)", "-Diethylcarbamazine(Ivermectin)"], "conclusion": "-PreferredTreatmentFor(RiverBlindness, Diethylcarbamazine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Medication(x) & DiscoveredIn(x, 1947) & Diethylcarbamazine(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Medication(x) & DiscoveredIn(x, 1947) & Diethylcarbamazine(x))\n       ^\n"}
{"timestamp": "2025-06-10T00:30:38.292755", "premises": ["BestKnownArtwork(MonaLisa, Painting)", "Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "PaintingGenre(History) & PaintingGenre(Portrait) & PaintingGenre(Animal) & PaintingGenre(Landscape) & PaintingGenre(StillLife)"], "conclusion": "-exists x. (BestKnownArtwork(x, Painting) & Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-06-10T00:30:38.297048", "premises": ["WorldBestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & Painter(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "PaintingGenre(History) & PaintingGenre(Portrait) & PaintingGenre(Animal) & PaintingGenre(Landscape) & PaintingGenre(StillLife)"], "conclusion": "-Portrait(x) | -WorldBestKnownPainting(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0\n"}
{"timestamp": "2025-06-10T00:30:38.303683", "premises": ["WorldBestKnown(MonaLisa) & Painting(MonaLisa)", "Portrait(MonaLisa) & Painter(MonaLisa, LeonardoDaVinci)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "PaintingGenre(History) & PaintingGenre(Portrait) & PaintingGenre(Animal) & PaintingGenre(Landscape) & PaintingGenre(StillLife)"], "conclusion": "-forall x. (WorldBestKnown(x) & Painting(x) -> Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/1, Portrait/0\n"}
{"timestamp": "2025-06-10T00:30:38.304252", "premises": ["WorldBestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & PaintedBy(LeonardoDaVinci, MonaLisa)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "History | Portrait | Animal | Landscape | StillLife"], "conclusion": "-exists x. (WorldBestKnownArtwork(x) & Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/0, Portrait/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/0, Portrait/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/0, Portrait/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/0, Portrait/1\n"}
{"timestamp": "2025-06-10T00:30:38.315605", "premises": ["WorldKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Portrait(MonaLisa) & Painter(LeonardoDaVinci, MonaLisa)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "(History | Portrait | Animal | Landscape | StillLife)"], "conclusion": "-exists x. (WorldKnownArtwork(x) & Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/0, Portrait/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/0, Portrait/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/0, Portrait/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, Portrait/0, Portrait/1\n"}
{"timestamp": "2025-06-10T00:30:38.319397", "premises": ["all x. (MonaLisa(x) -> WorldKnown(x))", "Portrait(MonaLisa)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "PaintingGenre(History) & PaintingGenre(Portrait) & PaintingGenre(Animal) & PaintingGenre(Landscape) & PaintingGenre(StillLife)"], "conclusion": "-all x. (WorldKnown(x) & Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0, MonaLisa/1, MonaLisa/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0, MonaLisa/1, MonaLisa/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0, MonaLisa/1, MonaLisa/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0, MonaLisa/1, MonaLisa/0\n"}
{"timestamp": "2025-06-10T00:30:38.321757", "premises": ["BestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & PaintedBy(LeonardoDaVinci, MonaLisa)", "Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "PaintingGenre(History) & PaintingGenre(Portrait) & PaintingGenre(Animal) & PaintingGenre(Landscape) & PaintingGenre(StillLife)"], "conclusion": "-exists x. (BestKnownArtwork(x) & Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-06-10T00:30:38.324959", "premises": ["BestKnownArtwork(MonaLisa, World)", "Portrait(MonaLisa) & Painter(MonaLisa, LeonardoDaVinci)", "all x. (LeonardoDaVinci(x) -> Scientist(x) & Painter(x))", "all x. (Painting(x) -> (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "all x. (BestKnownArtwork(x, World) -> -Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, LeonardoDaVinci/1, LeonardoDaVinci/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, LeonardoDaVinci/1, LeonardoDaVinci/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painter/1, Painter/2, LeonardoDaVinci/1, LeonardoDaVinci/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painter/1, Painter/2, LeonardoDaVinci/1, LeonardoDaVinci/0\n"}
{"timestamp": "2025-06-10T00:31:34.710705", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Hatchery(x)) & -ForConservation(Hatchery(x))) | (-ForProfit(Hatchery(x)) & ForConservation(Hatchery(x)))", "ForConservation(Hatchery(x)) -> MightReleaseIntoWild(Hatchery(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hatchery/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hatchery/1\n"}
{"timestamp": "2025-06-10T00:31:34.704083", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(England, Padstow)  FOL: OpenToVisitors(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (ForProfit(x) | ForConservation(x)))  FOL: all x. (ForConservation(x) -> MightReleaseIntoWild(x))  FOL: -ForProfit(NationalLobsterHatchery)  FOL: ForConservation(NationalLobsterHatchery)  FOL: MightReleaseIntoWild(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (OpenToVisitors(x) | -OpenToVisitors(x)))"], "conclusion": "OpenToVisitors(NationalLobsterHatchery) -> all x. (Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nHatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(England, Padstow)  FOL: OpenToVisitors(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (ForProfit(x) | ForConservation(x)))  FOL: all x. (ForConservation(x) -> MightReleaseIntoWild(x))  FOL: -ForProfit(NationalLobsterHatchery)  FOL: ForConservation(NationalLobsterHatchery)  FOL: MightReleaseIntoWild(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (OpenToVisitors(x) | -OpenToVisitors(x)))\n                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nHatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(England, Padstow)  FOL: OpenToVisitors(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (ForProfit(x) | ForConservation(x)))  FOL: all x. (ForConservation(x) -> MightReleaseIntoWild(x))  FOL: -ForProfit(NationalLobsterHatchery)  FOL: ForConservation(NationalLobsterHatchery)  FOL: MightReleaseIntoWild(NationalLobsterHatchery)  FOL: all x. (Hatchery(x) -> (OpenToVisitors(x) | -OpenToVisitors(x)))\n                                                                                                        ^\n"}
{"timestamp": "2025-06-10T00:31:34.724577", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(England, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Hatchery(x)) | ForConservation(Hatchery(x)))", "ForConservation(Hatchery(x)) \u2192 MightReleaseIntoWild(Hatchery(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. Hatchery(x) \u2192 OpenToVisitors(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nall x. Hatchery(x) \u2192 OpenToVisitors(x)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nall x. Hatchery(x) \u2192 OpenToVisitors(x)\n                   ^\n"}
{"timestamp": "2025-06-10T00:31:34.733616", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "-ForProfit(x) | ForConservation(x)", "ForConservation(x) \u2192 MightReleaseAnimalsIntoWild(x)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. OpenToVisitors(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nForConservation(x) \u2192 MightReleaseAnimalsIntoWild(x)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nForConservation(x) \u2192 MightReleaseAnimalsIntoWild(x)\n                   ^\n"}
{"timestamp": "2025-06-10T00:31:34.734152", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Hatchery) | Conservation(Hatchery))", "(Conservation(Hatchery) -> MightReleaseIntoWild(Hatchery))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0\n"}
{"timestamp": "2025-06-10T00:32:44.174026", "premises": ["exists x. (Fear(x) & Leadsto(x, Anxiety))", "exists x. (Anxiety(x) & Leadsto(x, Terror))", "all x. (Fear(x) -> -Leadsto(x, Terror))  FOL: let x = Fear(y)  FOL: (Leadsto(x, Terror) -> exists z. (Anxiety(z) & Leadsto(z, Terror)))  FOL: exists z. (Anxiety(z) & Leadsto(z, Terror))  FOL: (exists z. (Anxiety(z) & Leadsto(z, Terror)) -> exists x. (Fear(x) & Leadsto(x, Anxiety)))  FOL: -Leadsto(x, Terror)  FOL: \u2200x. (Fear(x) -> -Leadsto(x, Terror))"], "conclusion": "-exists x. (Fear(x) & Leadsto(x, Terror))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nall x. (Fear(x) -> -Leadsto(x, Terror))  FOL: let x = Fear(y)  FOL: (Leadsto(x, Terror) -> exists z. (Anxiety(z) & Leadsto(z, Terror)))  FOL: exists z. (Anxiety(z) & Leadsto(z, Terror))  FOL: (exists z. (Anxiety(z) & Leadsto(z, Terror)) -> exists x. (Fear(x) & Leadsto(x, Anxiety)))  FOL: -Leadsto(x, Terror)  FOL: \u2200x. (Fear(x) -> -Leadsto(x, Terror))\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nall x. (Fear(x) -> -Leadsto(x, Terror))  FOL: let x = Fear(y)  FOL: (Leadsto(x, Terror) -> exists z. (Anxiety(z) & Leadsto(z, Terror)))  FOL: exists z. (Anxiety(z) & Leadsto(z, Terror))  FOL: (exists z. (Anxiety(z) & Leadsto(z, Terror)) -> exists x. (Fear(x) & Leadsto(x, Anxiety)))  FOL: -Leadsto(x, Terror)  FOL: \u2200x. (Fear(x) -> -Leadsto(x, Terror))\n                                         ^\n"}
{"timestamp": "2025-06-10T00:32:44.184578", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:32:44.188082", "premises": ["exists x. exists y. (Fear(x) & LeadsTo(x, y) & Anxiety(y))", "exists x. exists y. (Anxiety(x) & LeadsTo(x, y) & Terror(y))"], "conclusion": "for all x, for all y. (-Fear(x) | -LeadsTo(x, y) | -Terror(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.\nfor all x, for all y. (-Fear(x) | -LeadsTo(x, y) | -Terror(y))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.\nfor all x, for all y. (-Fear(x) | -LeadsTo(x, y) | -Terror(y))\n    ^\n"}
{"timestamp": "2025-06-10T00:32:44.184647", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:32:44.184479", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:32:44.196868", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "all x. (Fear(x) -> -LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:32:44.197339", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:32:44.197887", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists x. (Anxiety(x) & LeadsTo(x, Terror))"], "conclusion": "-exists x. (Fear(x) & LeadsTo(x, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-06-10T00:33:46.391298", "premises": ["WonTuringAward(DonaldKnuth) & WonTuringAward(MarvinMinsky) & WonTuringAward(RichardHamming) & WonTuringAward(JohnMcCarthy)", "ContributionToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionToArtificialIntelligence(MarvinMinsky)", "ResearchNumericalMethods(RichardHamming)", "ContributionToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exactly one x. (WonTuringAward(x) & ContributionToAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'one'.\nexactly one x. (WonTuringAward(x) & ContributionToAnalysisOfAlgorithms(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'one'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'one'.\nexactly one x. (WonTuringAward(x) & ContributionToAnalysisOfAlgorithms(x))\n        ^\n"}
{"timestamp": "2025-06-10T00:33:46.402517", "premises": ["all x. (WonTuringAward(x) -> (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "ContributionToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionToArtificialIntelligence(MarvinMinsky)", "ResearchNumericalMethods(RichardHamming)", "ContributionToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "-ContributionToAnalysisOfAlgorithms(DonaldKnuth) -> -ContributionToAnalysisOfAlgorithms(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-06-10T00:33:46.415809", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributionToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionToArtificialIntelligence(MarvinMinsky)", "ResearchedNumericalMethods(RichardHamming)", "ContributionToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "one x. (TuringAward(x) & ContributionToAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\none x. (TuringAward(x) & ContributionToAnalysisOfAlgorithms(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\none x. (TuringAward(x) & ContributionToAnalysisOfAlgorithms(x))\n    ^\n"}
{"timestamp": "2025-06-10T00:33:46.416746", "premises": ["exists x. exists y. (WonTuringAward(x) & WinnerTuringAward(x, y))", "ContributionAnalysisOfAlgorithms(DonaldKnuth)", "ContributionArtificialIntelligence(MarvinMinsky)", "ContributionNumericalMethods(RichardHamming)", "ContributionArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists y. exists x. (WonTuringAward(x) & WinnerTuringAward(x, y) & ContributionAnalysisOfAlgorithms(y) & for all z. ((WonTuringAward(z) & WinnerTuringAward(z, y)) -> ContributionAnalysisOfAlgorithms(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.  Expected token ')'.\nexists y. exists x. (WonTuringAward(x) & WinnerTuringAward(x, y) & ContributionAnalysisOfAlgorithms(y) & for all z. ((WonTuringAward(z) & WinnerTuringAward(z, y)) -> ContributionAnalysisOfAlgorithms(y)))\n                                                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.  Expected token ')'.\nexists y. exists x. (WonTuringAward(x) & WinnerTuringAward(x, y) & ContributionAnalysisOfAlgorithms(y) & for all z. ((WonTuringAward(z) & WinnerTuringAward(z, y)) -> ContributionAnalysisOfAlgorithms(y)))\n                                                                                                             ^\n"}
{"timestamp": "2025-06-10T00:33:46.392033", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributionsToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionsToArtificialIntelligence(MarvinMinsky)", "ResearchedNumericalMethods(RichardHamming)", "ContributionsToArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exactly one x. (TuringAward(x) & ContributionsToAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'one'.\nexactly one x. (TuringAward(x) & ContributionsToAnalysisOfAlgorithms(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'one'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'one'.\nexactly one x. (TuringAward(x) & ContributionsToAnalysisOfAlgorithms(x))\n        ^\n"}
{"timestamp": "2025-06-10T00:34:20.835027", "premises": ["all x. (Surprise(x) -> (Fun(x) | Dreadful(x)))", "all x. (Scare(x) -> Surprise(x))", "all x. (Scare(x) -> Fun(x))", "all x. (Scare(x) -> Surprise(x)) & all x. (Surprise(x) -> (Fun(x) | Dreadful(x))) \u22a2 all x. (Scare(x) -> (Fun(x) | Dreadful(x)))  FOL: all x. (Scare(x) -> (Fun(x) | Dreadful(x))) \u22a2 all x. (Scare(x) -> -Dreadful(x))"], "conclusion": "all x. (Scare(x) -> -Dreadful(x)) & all x. (Scare(x) -> (Fun(x) | Dreadful(x))) \u22a2 all x. (Scare(x) -> Fun(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u22a2'.\nall x. (Scare(x) -> -Dreadful(x)) & all x. (Scare(x) -> (Fun(x) | Dreadful(x))) \u22a2 all x. (Scare(x) -> Fun(x))\n                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u22a2'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u22a2'.\nall x. (Scare(x) -> -Dreadful(x)) & all x. (Scare(x) -> (Fun(x) | Dreadful(x))) \u22a2 all x. (Scare(x) -> Fun(x))\n                                                                                ^\n"}
{"timestamp": "2025-06-10T00:34:20.836070", "premises": ["all x. (Surprise(x) -> (Fun(x) | Dreadful(x)))", "all x. (Scare(x) -> Surprise(x)) </PREMISES> <CONCLUSION> All scares are fun.  FOL: all x. (Scare(x) -> Fun(x)) </CONCLUSION> <EVALUATE>  FOL: all x. (Scare(x) -> Fun(x))"], "conclusion": "all x. ((Scare(x) -> Surprise(x)) & (Surprise(x) -> (Fun(x) | Dreadful(x))) -> Scare(x) -> Fun(x)) The final conclusion is logically sound and follows from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nall x. ((Scare(x) -> Surprise(x)) & (Surprise(x) -> (Fun(x) | Dreadful(x))) -> Scare(x) -> Fun(x)) The final conclusion is logically sound and follows from the premises.\n                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nall x. ((Scare(x) -> Surprise(x)) & (Surprise(x) -> (Fun(x) | Dreadful(x))) -> Scare(x) -> Fun(x)) The final conclusion is logically sound and follows from the premises.\n                                                                                                   ^\n"}
{"timestamp": "2025-06-10T00:35:11.369661", "premises": ["all x. (SAT(x) -> Owned(x, CollegeBoard) & Developed(x, CollegeBoard))", "all x. (SAT(x) -> IntendedFor(x, CollegeReadiness))", "all x. (SAT(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (SAT(x) & IntroducedIn(x, 2016) & AlignedWith(x, HighSchoolCurriculum))"], "conclusion": "Owned(SAT, CollegeBoard) | Owned(SAT, ThirdParty)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0\n"}
{"timestamp": "2025-06-10T00:35:11.386246", "premises": ["SATTest(Owner, CollegeBoard) & SATTest(Developer, CollegeBoard)", "SATTest(Intention, StudentsReadinessForCollege)", "SATTest(OriginalDesign, -AlignedWithHighSchoolCurricula)", "SATTest(Adjustment, AlignedWithHighSchoolCurriculum)"], "conclusion": "SATTest(Owner, CollegeBoard) & exists x. (SATTest(Owner, x) & -CollegeBoard(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CollegeBoard/1, CollegeBoard/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CollegeBoard/1, CollegeBoard/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CollegeBoard/1, CollegeBoard/0.\n\n\nFatal error:  The following symbols are used with multiple arities: CollegeBoard/1, CollegeBoard/0\n"}
{"timestamp": "2025-06-10T00:35:11.399175", "premises": ["all x. (SAT(x) -> CollegeBoard(x))", "ForCollegeReadiness(SAT)", "-AlignedWithHighSchool(SAT)", "AlignedWithHighSchool(2016SAT)"], "conclusion": "CollegeBoard(SAT) & ThirdParty(SAT)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0\n"}
{"timestamp": "2025-06-10T00:35:11.399701", "premises": ["all x. (SAT(x) -> OwnedBy(CollegeBoard(x)) & DevelopedBy(CollegeBoard(x)))", "all x. (SAT(x) -> ReadinessForCollege(x))", "all x. (SAT(x) -> -AlignedWithHighSchoolCurriculum(x))", "all x. (SAT2016(x) -> AlignedWithHighSchoolCurriculum(x))"], "conclusion": "OwnedBy(CollegeBoard(SAT)) & exists x. (OwnedBy(SAT, x) & ThirdParty(x) & x != CollegeBoard)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OwnedBy/2, OwnedBy/1, SAT/1, SAT/0, CollegeBoard/0, CollegeBoard/1.\n\n\nFatal error:  The following symbols are used with multiple arities: OwnedBy/2, OwnedBy/1, SAT/1, SAT/0, CollegeBoard/0, CollegeBoard/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OwnedBy/2, OwnedBy/1, SAT/1, SAT/0, CollegeBoard/0, CollegeBoard/1.\n\n\nFatal error:  The following symbols are used with multiple arities: OwnedBy/2, OwnedBy/1, SAT/1, SAT/0, CollegeBoard/0, CollegeBoard/1\n"}
{"timestamp": "2025-06-10T00:35:59.567499", "premises": ["all x. (Surname(x) & Roversi(x) -> Italian(x))", "Surname(Alba, Roversi)", "Surname(Paolo, Roversi)", "Surname(Roberto, Roversi)", "Photographer(Paolo)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Amateur(Paolo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1, Roversi/1, Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1, Roversi/1, Roversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1, Roversi/1, Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1, Roversi/1, Roversi/0\n"}
{"timestamp": "2025-06-10T00:35:59.575856", "premises": ["Italian(Surname_Roversi)", "Surname_Roversi(Alba_Roversi)", "Surname_Roversi(Paolo_Roversi)", "Surname_Roversi(Roberto_Roversi)", "Photographer(Paolo_Roversi)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Amateur(Paolo_Roversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname_Roversi/1, Surname_Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname_Roversi/1, Surname_Roversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname_Roversi/1, Surname_Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname_Roversi/1, Surname_Roversi/0\n"}
{"timestamp": "2025-06-10T00:35:59.589826", "premises": ["all x. (ItalianSurname(x) -> Roversi(x))", "Alba(Roversi) & Roversi(Roversi)", "Paolo(Roversi) & Roversi(Roversi)", "Roberto(Roversi) & Roversi(Roversi)", "Photographer(Paolo(Roversi))", "Photographer(x) -> (Professional(x) | Amateur(x))"], "conclusion": "Amateur(Paolo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Paolo/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Paolo/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Paolo/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Paolo/1\n"}
{"timestamp": "2025-06-10T00:36:37.045567", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:36:37.047692", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:36:37.064838", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:36:37.068304", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:36:37.070896", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleaseRapAlbum(x))", "ReleaseRapAlbum(Tyga, WellDone3) & RapAlbum(WellDone3)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "WorthListeningTo(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleaseRapAlbum/2, ReleaseRapAlbum/1\n"}
{"timestamp": "2025-06-10T00:37:05.600666", "premises": ["all x. (Hawk(x) -> -Swim(x))", "exists x. (Bird(x) & Hawk(x)) </PREMISES> <CONCLUSION> All birds swim.  FOL: all x. Swim(x) </CONCLUSION> <EVALUATE>  FOL: (exists x. (Bird(x) & Hawk(x)) & all x. (Hawk(x) -> -Swim(x))) -> (all x. (Bird(x) -> Hawk(x)) -> all x. -Swim(x))", "(exists x. (Bird(x) & Hawk(x)) -> all x. -Swim(x))"], "conclusion": "all x. Swim(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (Bird(x) & Hawk(x)) </PREMISES> <CONCLUSION> All birds swim.  FOL: all x. Swim(x) </CONCLUSION> <EVALUATE>  FOL: (exists x. (Bird(x) & Hawk(x)) & all x. (Hawk(x) -> -Swim(x))) -> (all x. (Bird(x) -> Hawk(x)) -> all x. -Swim(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (Bird(x) & Hawk(x)) </PREMISES> <CONCLUSION> All birds swim.  FOL: all x. Swim(x) </CONCLUSION> <EVALUATE>  FOL: (exists x. (Bird(x) & Hawk(x)) & all x. (Hawk(x) -> -Swim(x))) -> (all x. (Bird(x) -> Hawk(x)) -> all x. -Swim(x))\n                              ^\n"}
{"timestamp": "2025-06-10T00:38:07.857968", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -OneSeater(x))", "CanTransportMultiplePassengers(TeslaModel3)", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))", "-TeslaModel3(JohnsCar) -> (-TeslaModel3(JohnsCar) | -SingleSeatElectricCar(JohnsCar))"], "conclusion": "TeslaModel3(JohnsCar)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TeslaModel3/1, TeslaModel3/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TeslaModel3/1, TeslaModel3/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TeslaModel3/1, TeslaModel3/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TeslaModel3/1, TeslaModel3/0\n"}
