{"timestamp": "2025-05-01T15:45:31.161223", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T15:46:12.348077", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Biodegradable(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T15:46:29.369110", "premises": ["MiroslavVenhoda(ChoralConductor) & SpecializesIn(RenaissanceAndBaroqueMusic, MiroslavVenhoda)", "choralConductor(Musician)", "exists x. (Musician(x) & Loves(x, Music))", "publishes(MiroslavVenhoda, MethodOfStudyingGregorianChant, OneNineFourSix)", "notSpecializesIn(RenaissanceAndBaroqueMusic, MiroslavVenhoda)", "(bigger(A, B) <-> hasMoreElements(A, B))", "(set(A) <-> noElements(A))", "(empty(A) <-> noElements(A) & not(set(A)))", "(bigger(A, B) <-> hasMoreElements(A, B))", "(set(A) <-> noElements(A))", "(empty(A) <-> noElements(A) & not(set(A)))", "(bigger(A, B) <-> hasMoreElements(A, B))", "(set(A) <-> noElements(A))", "(empty(A) <-> noElements(A) & not(set(A)))", "(bigger(A, B) <-> hasMoreElements(A, B))", "(set(A) <-> noElements(A))", "(empty(A) <-> noElements(A) & not(set(A)))", "(bigger(A, B) <-> hasMoreElements(A, B))", "(set(A) <-> noElements(A))"], "conclusion": "(empty(A) <-> noElements(A) & not(set(A)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Musician/1, Musician/0, MiroslavVenhoda/1, MiroslavVenhoda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Musician/1, Musician/0, MiroslavVenhoda/1, MiroslavVenhoda/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Musician/1, Musician/0, MiroslavVenhoda/1, MiroslavVenhoda/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Musician/1, Musician/0, MiroslavVenhoda/1, MiroslavVenhoda/0\n"}
{"timestamp": "2025-05-01T15:46:47.272811", "premises": ["Actor(MiroslavVenhoda) & Director(MiroslavVenhoda) & Musician(MiroslavVenhoda) & ChoralConductor(MiroslavVenhoda) & RenaissanceMusic(MiroslavVenhoda) & BaroqueMusic(MiroslavVenhoda)", "for x.all x. (ChoralConductor(x) -> Musician(x))", "for x.all x. (Musician(x) -> Loves(x, Music))", "Actor(MiroslavVenhoda) & Director(MiroslavVenhoda) & Musician(MiroslavVenhoda) & ChoralConductor(MiroslavVenhoda) & RenaissanceMusic(MiroslavVenhoda) & BaroqueMusic(MiroslavVenhoda) & BookPublisher(MiroslavVenhoda) & BookTitle(MethodOfStudyingGregorianChant) & PublishedIn(OneNineFourSix)"], "conclusion": "not for x.all x. (ChoralConductor(x) -> RenaissanceMusic(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nnot for x.all x. (ChoralConductor(x) -> RenaissanceMusic(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nnot for x.all x. (ChoralConductor(x) -> RenaissanceMusic(x))\n        ^\n"}
{"timestamp": "2025-05-01T15:47:18.121034", "premises": ["all x. ((Fish(x) & Stings(x, People)) | ((Exists y. Fish(y)) & Stings(y, People)))", "Fish(Stonefish)", "stings(Stonefish, WhenSteppedOn)", "all x. (Stings(x, Stonefish) -> ( Death(x) | NotTreated(x)))", "((Treat(Stonefish) & (Heat(Stonefish) | Antivenom(Stonefish))) & (~Death(Stonefish) | ~NotTreated(Stonefish)))"], "conclusion": "(all x. ((Fish(x) & Stings(x, People) & Death(x)) | ((Exists y. Fish(y)) & Stings(y, People) & Death(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\n(all x. ((Fish(x) & Stings(x, People) & Death(x)) | ((Exists y. Fish(y)) & Stings(y, People) & Death(x))))\n                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\n(all x. ((Fish(x) & Stings(x, People) & Death(x)) | ((Exists y. Fish(y)) & Stings(y, People) & Death(x))))\n                                                             ^\n"}
{"timestamp": "2025-05-01T15:47:32.411995", "premises": ["all x. (Fish(x) -> (StingsPeople(x) | -StingsPeople(x)))", "Fish(Stonefish)", "Stones(Stonefish) -> Stings(Stonefish)", "all x. (Sting(Stonefish, x) & ~Treat(x) -> Death(x))", "Treat(Stonefish, x) -> (Heat(x) | Antivenom(x))", "all x. (Sting(x, y) & ~Treat(x, y) -> Death(x, y))", "all x. (PrimeNumber(x) -> PositiveInteger(x))", "all x. (EvenNumber(x) -> PositiveInteger(x))", "all x. ((PerfectSquare(x) & Prime(x)) -> True)", "all x. (PositiveInteger(x) -> PositiveRealNumber(x))", "all x. (OddNumber(x) -> PositiveInteger(x))"], "conclusion": "all x. (EvenNumber(x) -> PositiveInteger(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%Sting(Stonefish,x) & ~Treat(x)%%END ERROR%%) -> Death(x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%Sting(Stonefish,x) & ~Treat(x)%%END ERROR%%) -> Death(x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T15:47:57.576037", "premises": ["all x. (Fish(x) -> StingsPeople(x))", "Fish(Stonefish)", "all x. (Stonefish(x) -> Stings(x) & StingsPeople(x) & StungOn(x, Stonefish))", "all x. (Stonefish(x) -> Stings(x) & StingsPeople(x) & StungOn(x, Stonefish) & ~Treated(x) -> Death(x))", "all x. (Stings(x) & StingsPeople(x) & StungOn(x, Stonefish) & ~Treated(x) -> Death(x) & (Heat(x) | Antivenom(x) -> NotDeath(x)), Heat(x) | Antivenom(x) -> NotDeath(x))", "all x. (StunnedOn(x, Stonefish) & ~Treated(x) -> Death(x)) & (Heat(x) | Antivenom(x) -> NotDeath(x))", "all x. (WoodFurniture(x) -> Biodegradable(x))", "some x. (PaperFurniture(x) -> Biodegradable(x))", "some x. (WoodFurniture(x) & PaperFurniture(x))", "all x. ((WoodFurniture(x) & PaperFurniture(x)) | (PaperFurniture(x) & WoodFurniture(x))) & Biodegradable(x)", "all x. (Dog(x) -> RunsFasterThan(x, Cat))", "all x. (Dog(x) -> Barks(x))", "exists x. (RunsFasterThan(x, Dog) & Not(RunsFasterThan(x, Cat)))", "all x. (Bird(x) -> Flies(x))", "all x. (Mammal(x) -> HasFur(x))", "exists x. (Bird(x) & ~HasFur(x))", "all x. (Mammal(x) -> HasHair(x))", "all x. (Bird(x) -> HasFeathers(x))", "exists x. (Bird(x) & ~HasHair(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (Bird(x) -> WarmBlooded(x))"], "conclusion": "all x. (Mammal(x) | Bird(x) -> WarmBlooded(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (Stings(x) & StingsPeople(x) & StungOn(x, Stonefish) & ~Treated(x) -> Death(x) & (Heat(x) | Antivenom(x) -> NotDeath(x)), Heat(x) | Antivenom(x) -> NotDeath(x))\n                                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (Stings(x) & StingsPeople(x) & StungOn(x, Stonefish) & ~Treated(x) -> Death(x) & (Heat(x) | Antivenom(x) -> NotDeath(x)), Heat(x) | Antivenom(x) -> NotDeath(x))\n                                                                                                                               ^\n"}
{"timestamp": "2025-05-01T15:48:31.599993", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Biodegradable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T15:50:24.438561", "premises": ["all x. (Reptile(x) -> ~HasFur(x))", "all x. (Snake(x) -> Reptile(x))"], "conclusion": "exists x. (Snake(x) & HasFur(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%Reptile(x) -> ~HasFur(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%Reptile(x) -> ~HasFur(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T15:50:31.538438", "premises": ["disjunction(SNAKE(x) & -HASFUR(x), SNAKE(x) & HASFUR(x))", "(SNAKE(x) & -HASFUR(x)) v (SNAKE(x) & HASFUR(x))", "yes"], "conclusion": "all x. (REPTILE(x) -> -HAVEFUR(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\ndisjunction(SNAKE(x) & -HASFUR(x), SNAKE(x) & HASFUR(x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\ndisjunction(SNAKE(x) & -HASFUR(x), SNAKE(x) & HASFUR(x))\n                     ^\n"}
{"timestamp": "2025-05-01T15:50:36.762043", "premises": ["*all x. (Reptile(x) -> -Fur(x))", "*all x. (Snake(x) -> Reptile(x))"], "conclusion": "*all x. (Snake(x) -> -Fur(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n*all x. (Snake(x) -> -Fur(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n*all x. (Snake(x) -> -Fur(x))\n     ^\n"}
{"timestamp": "2025-05-01T15:50:46.589319", "premises": ["forall x. if biodegradable(x) then environment-friendly(x)", "forall x. if woodware(x) then biodegradable(x)", "forall x. if paper(x) then woodware(x)", "forall x. if environment-friendly(x) then good(x)", "forall x. (worksheet(x) | paper(x) | environment-friendly(x))", "not worksheet(worksheet)", "forall x, y. (LaLigaSoccerTeam_x_and_LaLigaSoccerTeam_y) -> more-points(x, y) -> rank-higher(x, y)", "forall x, y. (LaLigaSoccerTeam_x_and_LaLigaSoccerTeam_y) -> no-more-points(x, y) and no-more-points(y, x) -> more-points-in-game-between(x, y) -> rank-higher(x, y)", "more-points(RealMadrid, Barcelona)", "not more-points(RealMadrid, Barcelona) and not more-points(Barcelona, RealMadrid)"], "conclusion": "rank-higher(RealMadrid, Barcelona)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.\nrank-higher(RealMadrid, Barcelona)\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.\nrank-higher(RealMadrid, Barcelona)\n    ^\n"}
{"timestamp": "2025-05-01T15:50:59.090097", "premises": ["all x. (BirdGenus(x) -> Prehistoric(x))", "all x. (BirdSpecies(x) -> Ambiortus(x) & all y. (Ambiortus(y) -> -BirdSpecies(y)))", "all x. (LivedIn(Mongolia, x) -> Ambiortus(x))", "all x. (DiscovererOf(Ambiortus, x) -> YevgenyKurochkin(x))"], "conclusion": "exists x. (DiscovererOf(Ambiortus, x) -> NewBirdGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-01T15:51:11.372702", "premises": ["[all x] (Biodegradable(x) -> EnvironmentFriendly(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "[all x] [all y] (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "[all x] [all y] (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "-OlympicGoldMedalWinner(Amy) -> -OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "[all x] (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "[all x] (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)"], "conclusion": "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x]'.\n[all x] (Biodegradable(x) -> EnvironmentFriendly(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x]'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x]'.\n[all x] (Biodegradable(x) -> EnvironmentFriendly(x))\n     ^\n"}
{"timestamp": "2025-05-01T15:51:28.488234", "premises": ["all x. (BirdGenus(x) -> Ambiortus(x))", "all x. (Ambiortus(x) -> AmbiortusDementjevi(x))", "all x. (LivedIn(x, Mongolia) -> AmbiortusDementjevi(x))", "all x. (DiscovererOf(x, Ambiortus) -> YevgenyKurochkin(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> NewBirdGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-01T15:51:31.703425", "premises": ["all x. (Ambiortus(x) -> prehistoricBirdGenus(x))", "AmbiortusDementjevi(x) -> species(x)", "all x. (Mongolia(x) -> habitat(x, AmbiortusDementjevi))", "AmbiortusDementjevi(x) -> discoverer(x, YevgenyKurochkin)"], "conclusion": "all x. (discoverer(x, AmbiortusDementjevi) -> newBirdGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-01T15:51:36.529043", "premises": ["all x. (PrehistoricBirdGenus(x) -> Ambiortus(x))", "all x. (SpeciesOf(x, Ambiortus) -> AmbiortusDementjevi(x))", "all x. (LivedIn(x, Mongolia) -> AmbiortusDementjevi(x))", "all x. (DiscovererOf(x, Ambiortus) -> YevgenyKurochkin(x))"], "conclusion": "exists x. (NewBirdGenus(x) & DiscovererOf(x, Ambiortus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-01T15:51:46.681506", "premises": ["all x. (BirdGenus(x) -> Ambiortus(x))", "all x. (Species(x) -> AmbiortusDementjevi(x))", "all x. (LivedIn(x, Mongolia) -> AmbiortusDementjevi(x))", "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))", "newBirdGenus(YevgenyKurochkin)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)"], "conclusion": "HigherRank(RealMadrid, Barcelona)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-01T15:51:50.510453", "premises": ["all x. (Ambiortus(x) -> BirdGenus(x))", "all x. (Ambiortus(x) & A. Dementjevi(x) -> Species(x))", "all x. (Ambiortus(x) & A. Dementjevi(x) & LivesIn(x, Mongolia) -> Species(x))", "all x. (Ambiortus(x) & A. Dementjevi(x) & LivesIn(x, Mongolia) & Discoverer(x, YevgenyKurochkin) -> Species(x))"], "conclusion": "all x. (Discoverer(x, YevgenyKurochkin) & Genus(x) -> BirdGenus(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (Ambiortus(x) & A. Dementjevi(x) -> Species(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (Ambiortus(x) & A. Dementjevi(x) -> Species(x))\n                        ^\n"}
{"timestamp": "2025-05-01T15:52:05.893507", "premises": ["all x. (PrehistoricBirdGenus(x) -> Genus(x))", "all x. (Genus(x) & Species(x) & SpeciesName(x, AmbiortusDementjevi))", "all x. (Species(x) & Habitat(x, Mongolia))", "all x. (Species(x) & Discoverer(x, YevgenyKurochkin))", "all x. (Discoverer(x, YevgenyKurochkin) & Habitat(x, Mongolia))", "all x. (Cat(x) -> CanPurr(x))", "all x. (Cat(x) -> CanCrawl(x))", "all x. ((CanPurr(x) & CanCrawl(x)) -> CanPlay(x))", "all x. ((CanPlay(x) & CanPurr(x)) -> CanCrawl(x))", "all x. ((CanCrawl(x) & CanPlay(x)) -> CanPurr(x))", "all x. ((CanPurr(x) & CanCrawl(x)) -> CanPlay(x))", "all x. ((CanCrawl(x) & CanPlay(x)) -> CanPurr(x))", "all x. (Dog(x) -> Fur(x))", "all x. (Dog(x) -> FourLegs(x))", "all x. ((Fur(x) & FourLegs(x)) -> Mammal(x))", "all x. ((Mammal(x) & CanBark(x)) -> Bark(x))", "all x. ((CanBark(x) & HasVocalTract(x)) -> VocalTract(x))", "all x. ((HasVocalTract(x) & HasVocalCords(x)) -> VocalCords(x))", "all x. ((HasVocalCords(x) & CanMakeSounds(x)) -> MakeSounds(x))", "all x. ((CanMakeSounds(x) & CanCommunicate(x)) -> Communicate(x))", "all x. ((CanCommunicate(x) & CanUnderstand(x)) -> Understand(x))"], "conclusion": "all x.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x.\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 417, in handle_quant\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x.\n      ^\n"}
{"timestamp": "2025-05-01T15:52:21.546002", "premises": ["all x. (Disjoint(x) & Disjoint(y) -> (Size(x) < Size(y) or Size(x) > Size(y)))", "all x. (ProperSubset(x, y) -> Subset(x, y))", "all x. (Union(x, y) -> (x_\u222a_y))", "all x. (Intersection(x, y) -> (x_\u2229_y))", "all x. (SymmetricDifference(x, y) -> (x_\u25b3_y))", "empty = Union(x, y) & (x_=_y)", "empty = Intersection(x, y) & (x_=_y)", "all x. (Union(x, y) = Union(y, x))", "all x. (Union(Union(x, y), z) = Union(x, Union(y, z)))", "all x. (Intersection(x, y) = Intersection(y, x))", "all x. (Intersection(Intersection(x, y), z) = Intersection(x, Intersection(y, z)))", "all x. (Union(Intersection(x, y), z) = Union(x, Intersection(y, z)))"], "conclusion": "all x. (Intersection(Union(x, y), z) = Intersection(x, Union(y, z)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. (Disjoint(x) & Disjoint(y) -> (Size(x) < Size(y) or Size(x) > Size(y)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. (Disjoint(x) & Disjoint(y) -> (Size(x) < Size(y) or Size(x) > Size(y)))\n                                              ^\n"}
{"timestamp": "2025-05-01T15:52:47.379326", "premises": ["all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)"], "conclusion": "FolkSong(Inception)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T15:53:24.366413", "premises": ["all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "-Dispensable(Worksheet)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Aworksheet is either paper or environment-friendly. And (all x. (Biodegradable(x) -> EnvironmentFriendly(x)) & -Biodegradable(x)) & -Woodware(x) -> Paper(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "-Dispensable(Worksheet)", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Aworksheet is either paper or environment-friendly. And (all x. (Biodegradable(x) -> EnvironmentFriendly(x)) & -Biodegradable(x)) & -Woodware(x) -> Paper(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))"], "conclusion": "Paper(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nall x. (Aworksheet is either paper or environment-friendly. And (all x. (Biodegradable(x) -> EnvironmentFriendly(x)) & -Biodegradable(x)) & -Woodware(x) -> Paper(x))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nall x. (Aworksheet is either paper or environment-friendly. And (all x. (Biodegradable(x) -> EnvironmentFriendly(x)) & -Biodegradable(x)) & -Woodware(x) -> Paper(x))\n                   ^\n"}
{"timestamp": "2025-05-01T15:53:27.733076", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "all x. (AmbiortusDementjevi(x) -> Species(x))", "all x. (LivedInMongolia(x) -> Species(x, AmbiortusDementjevi))", "all x. (DiscovererOf(x) -> Species(x, AmbiortusDementjevi))"], "conclusion": "all x. ((DiscovererOf(x) & LivedInMongolia(x)) -> Species(x, AmbiortusDementjevi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Species/1, Species/2, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Species/1, Species/2, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Species/1, Species/2, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Species/1, Species/2, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-01T15:53:29.989767", "premises": ["FortTiconderoga = FortCarillon", "Pierre de Rigaud de Vaudreuil = FortCarillonBuilder", "FortCarillon = NewFrance", "NewFrance \u2209 Europe"], "conclusion": "FortCarillon = Pierre de Rigaud de Vaudreuil * NewFrance", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'de'.\nFortCarillon = Pierre de Rigaud de Vaudreuil * NewFrance\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'de'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'de'.\nFortCarillon = Pierre de Rigaud de Vaudreuil * NewFrance\n                      ^\n"}
{"timestamp": "2025-05-01T15:53:35.120108", "premises": ["FortTiconderoga(x) & FortCarillon(x)", "BuiltBy(Pierre_de_Rigaud_de_Vaudreuil, FortCarillon)", "FortCarillon(x) & Location(x, NewFrance)", "NewFrance(x) & Not(In(x, Europe))"], "conclusion": "BuiltIn(NewFrance, Pierre_de_Rigaud_de_Vaudreuil, FortCarillon)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-01T15:53:45.169671", "premises": ["FortTiconderoga = FortCarillon", "Built(PierredeRigauddeVaudreuil, FortCarillon)", "FortCarillon = LocationOf(NewFrance)", "NotIn(NewFrance, Europe)", "Built(PierredeRigauddeVaudreuil, FortCarillon) & FortCarillon = LocationOf(NewFrance) & NewFrance = NotIn(Europe)", "Maria = AIAssistant & HelpsPeopleFindInformation", "UsesSearchEngine(Maria)", "AlwaysAvailable(Maria)", "NotExpertInAllFields(Maria)", "Maria = AIAssistant & HelpsPeopleFindInformation", "EiffelTower = WellKnownMonument & LocatedIn(Paris, France)", "HeightOf(EiffelTower) = 324", "StructureOf(EiffelTower) = IronLattice", "BuiltIn(OneEightEightNine, EiffelTower)", "PopularTouristAttraction(EiffelTower)"], "conclusion": "AmongMostVisitedTouristAttractions(EiffelTower)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NotIn/2, NotIn/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NotIn/2, NotIn/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NotIn/2, NotIn/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NotIn/2, NotIn/1\n"}
{"timestamp": "2025-05-01T15:53:54.904140", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "FortCarillon(x) -> PierredeRigauddeVaudreuil(x)", "FortCarillon(x) -> NewFrance(x)", "In(NewFrance, Europe) -> False"], "conclusion": "PierredeRigauddeVaudreuil(x) -> FortCarillon(x) & In(NewFrance, Europe) -> False", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-01T16:13:21.353571", "premises": ["FortTiconderoga(x) <-> FortCarillon(x)", "PierreRigaudDeVaudreuil(x) <-> Built(x, FortCarillon)", "FortCarillon(x) <-> LocatedIn(x, NewFrance)", "-In(NewFrance, Europe)", "Built(x, FortCarillon) & LocatedIn(x, NewFrance)", "all x. (Animal(x) -> Can(x, Fly))", "all x. (Mammal(x) -> Animal(x))", "all x. (Bird(x) -> Mammal(x))", "all x. (Penguin(x) -> Bird(x))", "all x. (Mammal(x) -> Have(x, Hair))", "all x. (Bird(x) -> Have(x, Feathers))", "all x. ((Have(x, Hair) & Have(x, Feathers)) -> Animal(x))", "all x. ((Have(x, Feathers) & Can(x, Fly)) -> Animal(x))", "all x. ((Have(x, Hair) & Have(x, Feathers)) -> Mammal(x))", "all x. ((Have(x, Feathers) & Have(x, Feathers)) -> Bird(x))", "all x. ((Have(x, Feathers) & Can(x, Fly)) -> Bird(x))"], "conclusion": "all x. ((Have(x, Hair) & Have(x, Feathers) & Can(x, Fly)) -> Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-01T16:15:55.015459", "premises": ["all x. (City(x) & LocatedIn(x, UnitedStatesOfAmerica))", "all x. (Country(x) & PartOf(x, NorthAmerica))", "all x. (Continent(x) & WesternHemisphere(x))", "all x. (City(x) & HighlyDeveloped(x))", "all x. ((Place(x) & LocatedIn(x, Place(y))) & (Place(y) & LocatedIn(y, Place(z))) -> Place(x) & LocatedIn(x, Place(z))"], "conclusion": "all x. ((City(x) & HighlyDeveloped(x)) & WesternHemisphere(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((City(x) & HighlyDeveloped(x)) & WesternHemisphere(x)\n                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((City(x) & HighlyDeveloped(x)) & WesternHemisphere(x)\n                                                             ^\n"}
{"timestamp": "2025-05-01T16:16:47.889776", "premises": ["all x. (Biodegradable(x) -> Packaging(x, A))", "all x. (Paper(x) -> Packaging(x, B))", "all x. (Woodware(x) -> Packaging(x, C))", "all x. (GreenCard(x) -> Immigrant(x))", "all x. (GreenCard(x) -> HasRightToWorkInUS(x))", "all x. (CitizenOfUnitedStates(x) -> -GreenCard(x))", "SoftwareDevelopment(x) -> ComplexAndIterative(x)", "SoftwareDevelopment(x) -> EssentialSteps(x, RequirementsGathering, Design, Implementation, Testing)", "SoftwareDevelopment(x) -> CrucialPhase(x, Testing)", "SoftwareDevelopment(x) -> CommonTypesOfTesting(x, FunctionalTesting, PerformanceTesting, UsabilityTesting, SecurityTesting)", "SoftwareDevelopment(x) -> CommonTypesOfTesting(x, ExploratoryTesting)", "all x. (Person(x) -> Name(x))", "all x. (Name(x) -> Identifies(x))", "all x. (Name(x) = \"John\") -> Male(x)", "Name(John) = \"GreenCard\"", "Immigrant(John)"], "conclusion": "HasRightToWorkInUS(John)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Name/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Name/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Name/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Name/1\n"}
{"timestamp": "2025-05-01T16:16:51.454704", "premises": ["all x. (TVSeries(x) & ScienceFiction(x) & Thriller(x) & Westworld(x))", "all x. (Debuted(x, TwoZeroOneSix) & TVSeries(x) & Westworld(x))", "all x. (Adaptation(x, Westworld) & Film(x) & WasWrittenBy(x, MichaelCrichton) & WasDirectedBy(x, MichaelCrichton) & 1973(x))"], "conclusion": "all x. (Film(x) & About(x, RobotsMalfunctioning) & BeginKilling(x, HumanVisitors))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-01T16:16:56.774010", "premises": ["all x. (TVSeries(x) & ScienceFictionThriller(x) & Westworld(x))", "In(TwoZeroOneSix, Westworld)", "all x. (Westworld(x) & AdaptedFrom(x, OneNineSevenThree, MichaelCrichton) & Writer(x, MichaelCrichton) & Director(x, MichaelCrichton) & Film(x))", "all x. (OneNineSevenThree, Westworld, Robots, Malfunction, Killing, HumanVisitors)"], "conclusion": "all x. (MichaelCrichton, Director, Film, MalfunctioningRobots)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (MichaelCrichton, Director, Film, MalfunctioningRobots)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (MichaelCrichton, Director, Film, MalfunctioningRobots)\n                       ^\n"}
{"timestamp": "2025-05-01T16:17:05.405732", "premises": ["exists x. (DistrictInCity(x, Guilin) & (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))", "-DistrictInCity(Yangshuo, Guilin)"], "conclusion": "exists y. ((DistrictInCity(Xiangshan, y) & DistrictInCity(Diecai, y)) & Guilin = y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0\n"}
{"timestamp": "2025-05-01T16:18:56.292345", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y.(Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:19:16.800516", "premises": ["all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Wood(x) -> Biodegradable(x))", "Paper(x) -> Wood(x)", "exists x. (-BreaksDownIn(OneZeroZeroZero, x, Paper))"], "conclusion": "exists x. (Biodegradable(x) & Paper(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Paper/1, Paper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Paper/1, Paper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Paper/1, Paper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Paper/1, Paper/0\n"}
{"timestamp": "2025-05-01T16:19:21.500647", "premises": ["all x. (City(x) -> (District(x) & Not(City(x)))) & all x. (District(x) & Not(City(x)))-> (City(x) & Not(City(x)))"], "conclusion": "exists x. (District(x) & City(x) & Equals(x, Yangshuo))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: City/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: City/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: City/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: City/1\n"}
{"timestamp": "2025-05-01T16:19:31.056130", "premises": ["all x. {District(x) & In(x, Guilin)}", "not District(Yangshuo) & not In(Yangshuo, Guilin)"], "conclusion": "District(Xiufeng) & In(Xiufeng, Guilin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '}'.\nall x. {District(x) & In(x, Guilin)}\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '}'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '}'.\nall x. {District(x) & In(x, Guilin)}\n                                   ^\n"}
{"timestamp": "2025-05-01T16:19:33.035536", "premises": ["all x. (District(x) & In(x, Guilin) & (x___Xiufeng) & (x___Xiangshan) & (x___Diecai) & (x___Qixing))"], "conclusion": "-District(Yangshuo) & In(Yangshuo, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x___Xiufeng, x___Xiangshan, x___Diecai, x___Qixing.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x___Xiufeng, x___Xiangshan, x___Diecai, x___Qixing", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x___Xiufeng, x___Xiangshan, x___Diecai, x___Qixing.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x___Xiufeng, x___Xiangshan, x___Diecai, x___Qixing\n"}
{"timestamp": "2025-05-01T16:19:47.210514", "premises": ["all x. (Premise1(x) -> Premise2(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "exists x. (BRICS(x) & Speaks(x, Hindi))"], "conclusion": "all x. (District(x) & (Dise", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (District(x) & (Dise\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (District(x) & (Dise\n                           ^\n"}
{"timestamp": "2025-05-01T16:20:59.119624", "premises": ["(DistrictInGuilin(Xiufeng) & NOT(DistrictInGuilin(Yangshuo))) & (DistrictInGuilin(Xiangshan) & NOT(DistrictInGuilin(Yangshuo))) & (DistrictInGuilin(Diecai) & NOT(DistrictInGuilin(Yangshuo))) & (DistrictInGuilin(Qixing) & NOT(DistrictInGuilin(Yangshuo)))", "all x. (CanRun(x))", "all x. (CanFly(x))", "all x. (CanJump(x))"], "conclusion": "all x. (CanRun(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictInGuilin/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictInGuilin/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictInGuilin/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictInGuilin/1\n"}
{"timestamp": "2025-05-01T16:21:36.902945", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "all x. ((Phone(x) & Not(Electronic(x))) -> -Exists(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Electronic/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Electronic/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Electronic/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Electronic/1\n"}
{"timestamp": "2025-05-01T16:22:04.038787", "premises": ["all x. (Museum(x) & (In(x,NYC) & MuseumOfModernArt(x)))", "all x. (Museum(x) & (In(x,NYC) & WhitneyMuseumOfAmericanArt(x) & Includes(x,AmericanArt)))", "all x. (Museum(x) & (In(x,NYC) & MetropolitanMuseumOfArt(x) & Includes(x,ByzantineAndIslamicArt)))", "all x. (Museum(x) & (In(x,NYC) & Includes(x,AmericanArt)))", "all x. ( ownedBy(x, MetropolitanMuseumOfArt) & createdAfter(x, OneEightSevenNine) & createdBefore(x, OneNineFourOne) & majorityOf(x, WorksOfArt) )", "all x. (WorksOfArt(x) & Pigments(x) & Binder(x) & Canvas(x))", "all x. ( ownedBy(x, WhitneyMuseumOfAmericanArt) & createdAfter(x, OneNineFourZero) & WorksOfArt(x) )", "all x. ( byzantineAndIslamicArt(x) & includes(x, MetropolitanMuseumOfArt) & extensiveCollection(x) & worldWide(x) )", "all x. ( ownedBy(x, MetropolitanMuseumOfArt) & createdBefore(x, OneEightEightZero) & -WorksOfArt(x) )", "all x. ( WorksOfArt(x) & Pigments(x) & Binder(x) & Canvas(x) )", "all x. ( ownedBy(x, WhitneyMuseumOfAmericanArt) & createdAfter(x, OneNineFourZero) & WorksOfArt(x) )", "all x. ( byzantineAndIslamicArt(x) & includes(x, MetropolitanMuseumOfArt) & extensiveCollection(x) & worldWide(x) )"], "conclusion": "all x. ( ownedBy(x, MetropolitanMuseumOfArt) & createdBefore(x", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ( ownedBy(x, MetropolitanMuseumOfArt) & createdBefore(x\n                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ( ownedBy(x, MetropolitanMuseumOfArt) & createdBefore(x\n                                                              ^\n"}
{"timestamp": "2025-05-01T16:23:11.184686", "premises": ["exists x. (Museum(x) & In(x, NYC)) & MetropolitanMuseumOfArt(x)", "exists y. (Museum(y) & In(y, NYC)) & WhitneyMuseumOfAmericanArt(y)", "exists z. (Museum(z) & In(z, NYC)) & ModernArtMuseum(z)", "exists x. (Museum(x) & In(x, NYC)) & ByzantineAndIslamicArt(x) & MetropolitanMuseumOfArt(x)", "exists y. (Museum(y) & In(y, NYC)) & AmericanArt(y) & WhitneyMuseumOfAmericanArt(y)", "exists z. (Museum(z) & In(z, NYC)) & AmericanArt(z) & exist x. (Museum(x) & In(x, NYC)) & ByzantineAndIslamicArt(x) or exist y. (Museum(y) & In(y, NYC)) & AmericanArt(y)", "exists x. (Museum(x) & In(x, NYC)) & AmericanArt(x)", "-1 <= A <= 10 & -1 <= B <= 10 & In|A| \u2229 In|B| = 2 & A \u2229 B \u2260 10 & A \u2229 B \u2260 1 & A \u2229 B \u2260 2", "Sum(A, B) \u2208 {3, 4, 5, 6}", "Less(A, B) => A = 1 & B = 2", "Greater(A, B) => A = 10 & B = 1", "Equal(A, B) => A = 2 & B = 1", "12 <= C <= 12 + 2*A + B", "-1 <= A <= 10 & -1 <= B <= 10 & In|A| \u2229 In|B| = 2 & A \u2229 B \u2260 10 & A \u2229 B \u2260 1 & A \u2229 B \u2260 2 & (A_=_One_&_B_=_Two) \u2228 (A_=_Two_&_B_=_One) \u2228 (A_=_OneZero_&_B_=_One)", "-1 <= A <= 10 & -1 <= B <= 10 & In|A| \u2229 In|B| = 2 & A \u2229 B \u2260 10 & A \u2229 B \u2260 1 & A \u2229 B \u2260 2", "-1 <= A <= 10 & -1 <= B <= 10 & -1 <= C <= 10 & -1 <= D <= 10 & -1 <= E <= 10", "Sum(A, B, C, D, E) = 25", "Less(A, B) => A = 1 & B = 2", "Greater(A, B) => A = 10 & B = 1", "Equal(A, B) => A = 2 & B = 1", "12 <= C <= 12 + 2*A + B", "13 <= D <= 13 + 2*C", "14 <= E <= 14 + 2*D"], "conclusion": "-1 <= A <= 10 & -1 <= B <= 10 & -1 <= C <= 10 & -1 <= D <= 10 & -1 <= E <= 10 & Sum(A, B, C, D, E) = 25 & Less(A, B) => A = 1 & B = 2 & Greater(A, B) => A = 10 & B = 1 & Equal(A, B) => A = 2 & B = 1 & 12 <= C <= 12 + 2*A + B & 13 <= D <= 13 + 2*C & 14 <= E <= 14 + 2*D", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n-1 <= A <= 10 & -1 <= B <= 10 & -1 <= C <= 10 & -1 <= D <= 10 & -1 <= E <= 10 & Sum(A, B, C, D, E) = 25 & Less(A, B) => A = 1 & B = 2 & Greater(A, B) => A = 10 & B = 1 & Equal(A, B) => A = 2 & B = 1 & 12 <= C <= 12 + 2*A + B & 13 <= D <= 13 + 2*C & 14 <= E <= 14 + 2*D\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n-1 <= A <= 10 & -1 <= B <= 10 & -1 <= C <= 10 & -1 <= D <= 10 & -1 <= E <= 10 & Sum(A, B, C, D, E) = 25 & Less(A, B) => A = 1 & B = 2 & Greater(A, B) => A = 10 & B = 1 & Equal(A, B) => A = 2 & B = 1 & 12 <= C <= 12 + 2*A + B & 13 <= D <= 13 + 2*C & 14 <= E <= 14 + 2*D\n   ^\n"}
{"timestamp": "2025-05-01T16:24:32.935213", "premises": ["MetropolitanMuseumOfArt is a Museum & In(MetropolitanMuseumOfArt, NYC)", "WhitneyMuseumOfAmericanArt is a Museum & In(WhitneyMuseumOfAmericanArt, NYC)", "MuseumOfModernArt & In(MuseumOfModernArt, NYC)", "MetropolitanMuseumOfArt includes ByzantineAndIslamicArt", "WhitneyMuseumOfAmericanArt includes AmericanArt", "Biodegradable is a Noun", "Woodware is a Noun", "Paper is a Noun", "Good is an Adjective", "EnvironmentFriendly is an Adjective", "Dispensable is an Adjective", "Nobel is a Noun", "LaLiga is a Noun", "Real is an Adjective", "Barcelona is a Noun", "RealMadrid is a LaLigaTeam & Barcelona is a LaLigaTeam", "MorePoints(RealMadrid, Barcelona)", "-MorePoints(RealMadrid, Barcelona) & -MorePoints(Barcelona, RealMadrid)", "Biodegradable(RealMadrid) & EnvironmentFriendly(RealMadrid)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "Actor(FreddyKrueger)", "PlaysIn(FreddyKrueger, Nightmare_on_Elm_Street)", "Film(Nightmare_on_Elm_Street)", "Not(Animator(FreddyKrueger))", "Actor(FreddyKrueger) & FilmMaker(FreddyKrueger)", "all x. (CarEngine(x) & In(x, UnitedState) & GasolineEngine(x)", "Tax(Gasoline, UnitedState)", "Subsidize(WindTurbines, UnitedState)", "Tax(Coal, UnitedState)", "Tax(FossilFuels, UnitedState)", "Environment is a Noun", "Friendly is an Adjective", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "Environment is a Noun", "Friendly is an Adjective", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))"], "conclusion": "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nMetropolitanMuseumOfArt is a Museum & In(MetropolitanMuseumOfArt, NYC)\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nMetropolitanMuseumOfArt is a Museum & In(MetropolitanMuseumOfArt, NYC)\n                        ^\n"}
{"timestamp": "2025-05-01T16:24:39.230986", "premises": ["\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x (Woodware(x) \u2192 Biodegradable(x))", "\u2200x (Paper(x) \u2192 Woodware(x))", "-(\u2203x (Good(x) & Bad(x)))", "\u2200x (EnvironmentFriendly(x) \u2192 Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)"], "conclusion": "-Dispensable(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\n\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\n\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n                     ^\n"}
{"timestamp": "2025-05-01T16:24:45.596430", "premises": ["all x. ((laysEggs(x) & Mammal(x)) -> (platypus(x) or echidna(x)))", "~platypus(x) & ~hyrax(x)", "~echidna(x) & ~hyrax(x)", "-laysEggs(x) & ~invertebrate(x) & Mammal(x)", "all x. (Animal(x) -> vertebrate(x) or invertebrate(x))", "Mammal(x) -> Animal(x)", "Mammal(x) & Hyrax(x)", "laysEggs(grebe)"], "conclusion": "~platypus(grebe) & ~echidna(grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~platypus(x) & ~hyrax(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~platypus(x) & ~hyrax(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T16:25:03.594236", "premises": ["all x. ((Mammal(x) & LaysEggs(x)) -> (Platypus(x) | Echidna(x)))", "-Platypus(Platypus) & -Hyrax(Platypus)", "-Echidna(Echidna) & -Hyrax(Echidna)", "all x. ((Mammal(x) & NotInvertebrate(x)) -> true)", "all x. ((Animal(x) & Vertebrate(x)) | (Animal(x) & Invertebrate(x)))", "all x. ((Mammal(x) & Animal(x)) -> true)", "LaysEggs(Hyrax)", "LaysEggs(Grebe)"], "conclusion": "((NotPlatypus(Grebe) & NotEchidna(Grebe)) & (LaysEggs(Grebe)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-01T16:25:24.599685", "premises": ["all x. ((Biodegradable(x) -> EnvironmentFriendly(x)) & all x. ((EnvironmentFriendly(x) -> Good(x)) & (-Good(x) -> Bad(x))))", "all x. ((Woodware(x) -> Biodegradable(x)) & all x. ((Biodegradable(x) -> EnvironmentFriendly(x)) & all x. ((EnvironmentFriendly(x) -> Good(x)) & (-Good(x) -> Bad(x))))))", "all x. ((Paper(x) -> Woodware(x)) & all x. ((Woodware(x) -> Biodegradable(x)) & all x. ((Biodegradable(x) -> EnvironmentFriendly(x)) & all x. ((EnvironmentFriendly(x) -> Good(x)) & (-Good(x) -> Bad(x))))))", "-Good(x) & -Bad(x)", "all x. ((EnvironmentFriendly(x) -> Good(x)) & all x. ((Good(x) -> True)))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet))) & ((Good(Worksheet) -> True) | (-Good(Worksheet) -> True))", "-Biodegradable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & Neither(x, MorePoints(x, y)) & Neither(y, MorePoints(y, x)) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePoints(RealMadrid, Barcelona) & -MorePoints(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)"], "conclusion": "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. ((Woodware(x) -> Biodegradable(x)) & all x. ((Biodegradable(x) -> EnvironmentFriendly(x)) & all x. ((EnvironmentFriendly(x) -> Good(x)) & (-Good(x) -> Bad(x))))))\n                                                                                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. ((Woodware(x) -> Biodegradable(x)) & all x. ((Biodegradable(x) -> EnvironmentFriendly(x)) & all x. ((EnvironmentFriendly(x) -> Good(x)) & (-Good(x) -> Bad(x))))))\n                                                                                                                                                                        ^\n"}
{"timestamp": "2025-05-01T16:25:33.829524", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) or Echidna(x)))", "not Platypus(x) -> x != Hyrax(x)", "not Echidna(x) -> x != Hyrax(x)", "all x. (Mammal(x) -> x is Vertebrate)", "all x. (Animal(x) -> x is Vertebrate or x is Invertebrate)", "all x. (Mammal(x) -> Animal(x))", "LayEggs(Hyrax)", "LayEggs(Grebe)", "not Grebe(x) -> x != Platypus(x)"], "conclusion": "not Grebe(x) -> x != Echidna(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nall x. (Mammal(x) -> x is Vertebrate)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nall x. (Mammal(x) -> x is Vertebrate)\n                       ^\n"}
{"timestamp": "2025-05-01T16:25:43.111414", "premises": ["Actor(MaggieFriedman) & FilmProducer(MaggieFriedman)", "exists x. (Showrunner(x) & ExecutiveProducer(x) & TelevisionSeries(x) & WitchesOfEastEnd(x))", "Fiction(WitchesOfEastEnd) & Drama(WitchesOfEastEnd) & Fantasy(WitchesOfEastEnd)", "exists x. (Producer(x) & Developer(x) & ABC(x))", "exists x. (Series(x) & ABC(x))"], "conclusion": "exists x. (Developer(MaggieFriedman) & ABC(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0\n"}
{"timestamp": "2025-05-01T16:25:55.199435", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))"], "conclusion": "all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))\n                                                                                                     ^\n"}
{"timestamp": "2025-05-01T16:26:24.221901", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))"], "conclusion": "all x. (NobelPhysicsLaureate(x", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (NobelPhysicsLaureate(x\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (NobelPhysicsLaureate(x\n                              ^\n"}
{"timestamp": "2025-05-01T16:28:33.640271", "premises": ["exists x. (Singer(x) & GermanSingleChart(x, #One) & (GermanSingleChart(x, #One) -> GermanSingleChart(x, Below, #One)))", "exists x. (Song(x) & EpicHit(x) & For(x, Europe))", "exists x. (Song(x) & EpicHit(x) & NotIn(x, GermanSingleChart, #One))"], "conclusion": "(GermanSingleChart(x, Below, #One) -> NotIn(x, GermanSingleChart, #One))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Singer(x) & GermanSingleChart(%%START ERROR%%x,#One%%END ERROR%%)) & (GermanSingleChart(x,#One) -> GermanSingleChart(x,Below,#One))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Singer(x) & GermanSingleChart(%%START ERROR%%x,#One%%END ERROR%%)) & (GermanSingleChart(x,#One) -> GermanSingleChart(x,Below,#One))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T16:28:37.502763", "premises": ["all x. (GermanNumberOne(x) & BoneyM(x))", "all x. (EuropeanHit(x) & \"Hooray! Hooray! It's a Holi-Holiday!\"(x))", "-GermanNumberOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "all x. (PeaksBelowNumberOne(x) & (-GermanNumberOne(x)) & (-GermanNumberOne(x)))"], "conclusion": "PeaksBelowNumberOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelowNumberOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelowNumberOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                           ^\n"}
{"timestamp": "2025-05-01T16:28:48.361911", "premises": ["exists x. GermanChartTopping(x) & all x. (PeaksBelow(x, One) -> Not(x, GermanChartTopping))", "all x. (PeaksBelow(x, One) -> Not(x, GermanChartTopping))", "all x. GermanChartTopping(x) & all x. (PeaksBelow(x, One) -> Not(x, GermanChartTopping))"], "conclusion": "all x. (PeaksBelow(x, One) -> Not(x, GermanChartTopping)) & all x. GermanChartTopping(x) & all x. (PeaksBelow(x, One) -> Not(x, GermanChartTopping)) & all x. GermanChartTopping(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: GermanChartTopping/1, GermanChartTopping/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GermanChartTopping/1, GermanChartTopping/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: GermanChartTopping/1, GermanChartTopping/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GermanChartTopping/1, GermanChartTopping/0\n"}
{"timestamp": "2025-05-01T16:28:53.124982", "premises": ["exists x. (BoneyM(x) & GermanNumberOne(x))", "exists x. (Song(x) & BigHit(x) & Contains(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & In(x, Europe))", "exists x. (Song(x) & BigHit(x) & Contains(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & In(x, Germany) & Not(GermanNumberOne(x)))", "exists x. ((PeaksBelow(x, One) & Song(x)) -> Not(x, GermanNumberOne))"], "conclusion": "exists x. (BigHit(x) & Contains(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & In(x, Germany) & Not(GermanNumberOne(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nexists x. (BigHit(x) & Contains(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & In(x, Germany) & Not(GermanNumberOne(x)))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nexists x. (BigHit(x) & Contains(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & In(x, Germany) & Not(GermanNumberOne(x)))\n                                          ^\n"}
{"timestamp": "2025-05-01T16:28:56.467692", "premises": ["German1Singles(BoneyM)", "ForAll(x, (Hooray!_Hooray!_It\\s_a_Holi_Holiday!).hit(x)) & ForAll(x, (European(x) -> hit(x)))", "German1Singles(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") = -1"], "conclusion": "German1Charts(x) < 1 -> ~1German1Singles(x) & ~1German1Singles(x) < 1 -> ~German1Singles(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nGerman1Charts(x) < 1 -> ~1German1Singles(x) & ~1German1Singles(x) < 1 -> ~German1Singles(x)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nGerman1Charts(x) < 1 -> ~1German1Singles(x) & ~1German1Singles(x) < 1 -> ~German1Singles(x)\n                 ^\n"}
{"timestamp": "2025-05-01T16:29:00.646621", "premises": ["all x. (GermanCharts(x) & LeapsTo(x, #One)) -> #One(x)", "all x. (EuropeanHits(x) & BigHit(x))", "all x. (GermanCharts(x) & NotLeapsTo(x, #One))", "all x. (GermanCharts(x) & LeapsTo(x, y) & (y_<_#One)) -> -#1(x)"], "conclusion": "GermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & (GermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") < #1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & (GermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") < #1)\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & (GermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") < #1)\n                    ^\n"}
{"timestamp": "2025-05-01T16:29:25.143601", "premises": ["exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develop(eTS, x) & StandardizedTest(x) & In(x, UnitedState) & For(x, kOneTwoAndHigherEducation) & (AssociatedWith(x, EntryToUSEducationInstitution) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (Develop(eTS, x) & StandardizedTest(x) & In(x, UnitedState) & For(x, kOneTwoAndHigherEducation) & (AssociatedWith(x, EntryToUSEducationInstitution) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))\n                                                                                                                                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (Develop(eTS, x) & StandardizedTest(x) & In(x, UnitedState) & For(x, kOneTwoAndHigherEducation) & (AssociatedWith(x, EntryToUSEducationInstitution) | StateWideAssesment(x) | UsedFor(x, AccountabilityTesting))\n                                                                                                                                                                                                                          ^\n"}
{"timestamp": "2025-05-01T16:36:01.136556", "premises": ["all x. (Biodegradable(x) -> EnvironmentallyFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentallyFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentallyFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentallyFriendly(Worksheet)))", "-Biodegradable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:37:08.162611", "premises": ["\u2200x. Biodegradable(x) \u2192 EnvironmentFriendly(x)", "\u2200x. Woodware(x) \u2192 Biodegradable(x)", "\u2200x. Paper(x) \u2192 Woodware(x)", "\u00ac(exists x. (Good(x) & Bad(x)))", "\u2200x. (EnvironmentFriendly(x) \u2192 Good(x))", "((Paper(Worksheet) & \u00acEnvironmentFriendly(Worksheet)) | (\u00acPaper(Worksheet) & EnvironmentFriendly(Worksheet)))", "\u00acDispensable(Worksheet)", "\u2200x,y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) \u2192 RankHigherThan(x, y))", "\u2200x,y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) \u2192 RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "\u2200x. ProfessionalAthlete(x) \u2192 SpendOn(x, MostOfTime, Sports)", "\u2200x. OlympicGoldMedalWinner(x) \u2192 ProfessionalAthlete(x)", "\u2200x. FullTimeScientist(x) \u2192 -SpendOn(x, MostOfTime, Sports)"], "conclusion": "\u2200x. NobelPhysicsLaureate(x) \u2192 FullTimeScientist(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n\u2200x. NobelPhysicsLaureate(x) \u2192 FullTimeScientist(x)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n\u2200x. NobelPhysicsLaureate(x) \u2192 FullTimeScientist(x)\n  ^\n"}
{"timestamp": "2025-05-01T16:37:33.022616", "premises": ["all x. (DrainageBasinOf(x, CrotonRiver) -> CrotonRiverWatershed(x))", "all x. (In(x, SouthwesternNewYork) -> CrotonRiver(x))", "exists x. (DrainageBasinOf(x, CrotonRiver) & FlowsTo(x, Bronx))", "all x. (In(x, NewYork) -> Bronx(x))"], "conclusion": "all x. (DrainageBasinOf(x, CrotonRiver) & FlowsTo(x, somewhereInNewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-01T16:37:58.863070", "premises": ["exists x. (RealNumber(x) & (x=Six) | (x=Seven) | (x=Eight))", "all x. all y. ((RealNumber(x) & RealNumber(y)) -> ((RealNumber(x) + RealNumber(y)) -> (RealNumber(x) > RealNumber(y))))", "all x. (RealNumber(x) & RealNumber(y) -> (RealNumber(x) > RealNumber(y)) -> (RealNumber(y) < RealNumber(x)))", "all x. (RealNumber(x) -> (RealNumber(x) = RealNumber(Six) + RealNumber(One)))", "all x. (RealNumber(x) -> (RealNumber(x) = RealNumber(Seven) + RealNumber(One)))", "all x. (RealNumber(x) -> (RealNumber(x) > RealNumber(Zero)))", "all x. (RealNumber(x) -> ((RealNumber(x) > RealNumber(Zero)) -> (RealNumber(x) + RealNumber(x)) > RealNumber(Zero)))", "all x. (RealNumber(x) -> ((RealNumber(x) > RealNumber(Zero)) -> ((RealNumber(x) + RealNumber(x)) = RealNumber(Four))))", "all x. (RealNumber(x) -> ((RealNumber(x) > RealNumber(Zero)) -> ((RealNumber(x) + RealNumber(x)) = RealNumber(Two))))"], "conclusion": "all x. (RealNumber(x) -> (RealNumber(x) > RealNumber(Seven)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> (RealNumber(x) > RealNumber(Seven)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> (RealNumber(x) > RealNumber(Seven)))\n                                        ^\n"}
{"timestamp": "2025-05-01T16:38:03.204236", "premises": ["six is a real number.", "seven is a real number.", "eight is a real number.", "if x = y + 1, then x > y.", "if x > y, then not y > x.", "seven = six + 1.", "eight = seven + 1.", "two is a positive number.", "if x is positive, then 2 \\* x is also positive.", "eight = 2 \\* four.", "four = 2 \\* two."], "conclusion": "eight > seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\neight > seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\neight > seven\n      ^\n"}
{"timestamp": "2025-05-01T16:38:15.192998", "premises": ["realNumber(six) & realNumber(seven) & realNumber(eight)", "all x. all y. ((x_=_y_+_One) -> (x_>_y))", "all x. all y. ((x_>_y) -> (_y_>_x))", "seven = six + 1", "eight = seven + 1", "positive(two)", "all x. (positive(x) -> positive(Two\\*x))", "eight = 2*four", "four = 2*two", "all x. all y. ((x_=_y_+_One) -> (x_>_y))", "all x. all y. ((x_>_y) -> (_y_>_x))", "threeSidesOfACube + fourSidesOfASquare = fourSidesOfASquare", "threeSidesOfACube + fourSidesOfASquare = fourSidesOfASquare"], "conclusion": "threeSidesOfACube + areaOfASquare = fourSidesOfACube", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nthreeSidesOfACube + areaOfASquare = fourSidesOfACube\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nthreeSidesOfACube + areaOfASquare = fourSidesOfACube\n                  ^\n"}
{"timestamp": "2025-05-01T16:38:20.267633", "premises": ["all x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))", "all x. all y. (RealNumber(x) & RealNumber(y) & (= (x, (y, One)) -> (> (x, y))))", "all x. all y. (RealNumber(x) & RealNumber(y) & (> (x, y) -> (- > (y, x))))", "all x. (= (x, +1(Six)) -> RealNumber(x))", "all x. (= (x, +1(Seven)) -> RealNumber(x))", "all x. (RealNumber(x) & Positive(x))", "all x. (RealNumber(x) & Positive(x) -> Positive(2*(x)))", "all x. ((RealNumber(x) & Positive(x)) -> Positive(Two*x))"], "conclusion": "all x. (Positive(x) -> Positive(Two*x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expression expected.\nall x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expression expected.\nall x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))\n                          ^\n"}
{"timestamp": "2025-05-01T16:38:24.198768", "premises": ["all x. (RealNumber(x) -> Six(x) | Seven(x) | Eight(x))", "exists x. exists y. (x_+_One_=_y) -> x > y", "(x_>_y_&_y_<=_x) -> y <= x", "Seven = Six + 1", "Eight = Seven + 1", "all x. (Positive(x) -> 2 = x)", "all x. ((Positive(x) & Double(x) -> Positive(Double(x)))", "Double(Four) = Eight", "Double(Two) = Four"], "conclusion": "Eight > Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nEight > Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nEight > Seven\n      ^\n"}
{"timestamp": "2025-05-01T16:38:49.203495", "premises": ["all x. (RealNumber(x) -> (Six(x) | Seven(x) | Eight(x)))", "all x. (RealNumber(x) -> (RealNumber(x_+_One) -> Greater(x, x_+_One)))", "all x. all y. (Greater(x, y) -> (NotGreater(y, x)))", "Seven = Six + One", "Eight = Seven + One", "Two = Positive", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Greater(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + One\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + One\n            ^\n"}
{"timestamp": "2025-05-01T16:39:15.451224", "premises": ["realNumber(Six) & realNumber(Seven) & realNumber(Eight)", "all x. all y. (realNumber(x) & realNumber(y) & x + 1 = y -> x > y)", "all x. all y. (x_>_y__>__y_>_x)", "seven = six + 1", "eight = seven + 1", "positive(two)", "positive(x) -> positive(Two*x)", "eight = 2 \\* four", "four = 2 \\* two", "all x. (Taxpayer(x) -> ContributesTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributesTo(James, Country)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (SciFiMovie(x) -> Movie(x))", "SciFiMovie(Inception)", "-FolkSong(Mac) & -SciFiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (realNumber(x) & realNumber(y) & x + 1 = y -> x > y)\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (realNumber(x) & realNumber(y) & x + 1 = y -> x > y)\n                                                 ^\n"}
{"timestamp": "2025-05-01T16:39:21.090873", "premises": ["all x. (RealNumber(x) -> Exist x. (NumberSize(x) = 6 | NumberSize(x) = 7 | NumberSize(x) = 8))", "all x. (RealNumber(x) -> (RealNumber(y) & RealNumber(z) & x = y + z) -> RealNumber(x) -> RealNumber(y) -> RealNumber(z) -> (NumberSize(y) = NumberSize(x) - 1) -> LargerThan(x, y))", "all x. (RealNumber(x) -> RealNumber(y) -> LargerThan(x, y) -> NotLargerThan(y, x))", "Not(LargerThan(Six,Seven))", "Not(LargerThan(Seven,Eight))", "all x. (NumberSize(x) = 2 -> Positive(x))", "all x. (Positive(x) -> (NumberSize(x) * 2) -> Positive(x))", "all x. (NumberSize(x) = 8 -> NumberSize(x) * 2 = 4)"], "conclusion": "all x. (NumberSize(x) = 4 -> NumberSize(x) * 2 = 2)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '*'.  Expected token ')'.\nall x. (NumberSize(x) = 4 -> NumberSize(x) * 2 = 2)\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '*'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '*'.  Expected token ')'.\nall x. (NumberSize(x) = 4 -> NumberSize(x) * 2 = 2)\n                                           ^\n"}
{"timestamp": "2025-05-01T16:39:24.934769", "premises": ["all x. (RealNumber(x) & (x=Six_|_x=Seven_|_x=Eight))", "all x. (RealNumber(x) & RealNumber(x+One) & (x<x+One))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x>y) -> (x<y))", "seven=six+one", "eight=seven+one", "all x. (RealNumber(x) & Positive(x))", "all x. (Positive(x) -> Positive(Two\\*x))", "eight=2\\*four"], "conclusion": "four=2\\*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nfour=2\\*two\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nfour=2\\*two\n      ^\n"}
{"timestamp": "2025-05-01T16:39:30.593678", "premises": ["all x. (RealNumber(x) & (x=Six_|_x=Seven_|_x=Eight))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x=y+One) -> GreaterThan(x, y))", "all x. all y. ((GreaterThan(x, y) & RealNumber(x)) -> NotGreaterThan(y, x))", "all x. (RealNumber(x) & (x=Six+One) -> RealNumber(Seven))", "all x. (RealNumber(x) & (x=Seven+One) -> RealNumber(Eight))", "RealNumber(Two) & Positive(Two)", "all x. (Positive(x) -> GreaterThan(Zero, x) & Positive(Twox))", "RealNumber(Eight) & (RealNumber(Eight) = 2 \\* RealNumber(Four))", "RealNumber(Four) & (RealNumber(Four) = 2 \\* RealNumber(Two))"], "conclusion": "all x. ((RealNumber(x) & GreaterThan(Zero, x)) -> Positive(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.  Expected token ')'.\nRealNumber(Eight) & (RealNumber(Eight) = 2 \\* RealNumber(Four))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.  Expected token ')'.\nRealNumber(Eight) & (RealNumber(Eight) = 2 \\* RealNumber(Four))\n                                           ^\n"}
{"timestamp": "2025-05-01T16:39:38.545186", "premises": ["all x. (RealNumber(x) -> (x = RealNumber(Zero) + 1))", "all x. all y. ((x_>_y) -> (_y_>_x))", "all x. ((x = RealNumber(Zero) + 1) -> (-(x = RealNumber(Zero) + 1 + RealNumber(x))))", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2*4", "4 = 2*2", "7 = 6 + 1", "8 = 7 + 1"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. (RealNumber(x) -> (x = RealNumber(Zero) + 1))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. (RealNumber(x) -> (x = RealNumber(Zero) + 1))\n                                               ^\n"}
{"timestamp": "2025-05-01T16:39:42.493481", "premises": ["all x. (RealNumber(x))", "all x, all y. (RealNumber(x) & RealNumber(y) & (x=y+One) -> (x>y))", "all x, all y. (RealNumber(x) & RealNumber(y) & (x>y) -> (_x>y))", "(Seven=Six+One)", "(Eight=Seven+One)", "all x. (RealNumber(x) & (x>Zero))", "all x. (RealNumber(x) & (x>Zero) -> (Twox>Zero))", "eight=2\\*four"], "conclusion": "four=2\\*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nfour=2\\*two\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nfour=2\\*two\n      ^\n"}
{"timestamp": "2025-05-01T16:39:51.656642", "premises": ["all x. (RealNumber(x) -> Six(x) | Seven(x) | Eight(x))", "all x. (RealNumber(x) -> RealNumber(x_+_One) -> x > x_+_One)", "all x. all y. (RealNumber(x) & RealNumber(y) -> lt(x, y) -> -gt(y, x))", "Seven(x) -> Six(x) + 1", "Eight(x) -> Seven(x) + 1", "Two(x) -> Positive(x)", "all x. (Positive(x) -> 2(x) -> Positive(Twox))", "Eight(x) -> 2(Four(x))"], "conclusion": "Four(x) -> 2(Two(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> RealNumber(x_+_One) -> x > x_+_One)\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> RealNumber(x_+_One) -> x > x_+_One)\n                                                  ^\n"}
{"timestamp": "2025-05-01T16:41:02.182535", "premises": ["all x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))", "all x. all y. (RealNumber(x) & RealNumber(y) & (= (x, (y+One)) -> Larger(x, y)))", "all x. all y. (RealNumber(x) & RealNumber(y) & (Larger(x, y) -> NotLarger(y, x)))", "(= (Seven, (Six+One)))", "(= (Eight, (Seven+One)))", "all x. (Positive(x) -> (> (x, Zero)))", "all x. (Positive(x) -> (-(= (DoubleOf(x), Zero))))", "(= (Eight, DoubleOf(Four)))", "(= (Four, DoubleOf(Two)))", "all x. (DriverLicense(x) -> CanDrive(x, Car))", "all x. (WorksIn(x, PharmaceuticalIndustry) -> Scientist(x))", "exists x. all y. (Scientist(x) & WorksIn(x, PharmaceuticalIndustry) & HasDoctorate(x, y) & (= (y, Pharmacology)))", "all x. (Scientist(x) & HasDoctorate(x, y) & (= (y, Pharmacology)) -> Expert(x, Pharmacology))", "all x. (Scientist(x) & Expert(x, y) -> WorksIn(x, PharmaceuticalIndustry))", "all x. (DriverLicense(x) -> CanOperateVehicle(x))", "all x. (CanOperateVehicle(x) -> CanDrive(x, Car))", "all x. (CreatedForOwnSake(x) -> Art(x))", "all x. (CreatedForExpression(x) -> Art(x))", "all x. (OriginalCreation(x) -> Art(x))", "all x. (HasDegreeOfCreativity(x) -> Art(x))", "all x. (CreatedByArtists(x) -> Art(x))", "all x. (CreatedForOwnSake(x) -> Art(x))", "all x. (CreatedForExpression(x) -> Art(x))", "all x. (CreatedByArtists(x) -> Art(x))", "all x. (License(x) -> OperateEquipment(x))", "all x. (OperateEquipment(x) -> UseEquipment(x))", "all x. (UseEquipment(x) -> RequiredForJob(x))", "all x. (RequiredForJob(x) -> NecessaryForJob(x))", "all x. (RequiredForJob(x) -> UseEquipment(x))", "all x. (UseEquipment(x) -> OperateEquipment(x))", "all x. (OperateEquipment(x) -> OperateEquipment(x))", "all x. (UseEquipment(x) -> RequiredForJob(x))", "all x. (RequiredForJob(x) -> NecessaryForJob(x))", "all x. (Car(x) -> Not(Bicycle(x)))", "all x. (Bicycle(x) -> Not(Motorcycle(x)))", "all x. (Bicycle(x) -> Not(Scooter(x)))", "all x. (Scooter(x) -> Not(Moped(x)))", "all x. (Scooter(x) -> Not(Motorcycle(x)))", "all x. (Scooter(x) -> Not(Bicycle(x)))", "all x. (Motorcycle(x) -> Not(Bicycle(x)))", "all x. (Motorcycle(x) -> Not(Scooter(x)))", "all x. (Moped(x) -> Not(Bicycle(x)))", "all x. (BankingIndustry(x) -> FinancialIndustry(x))", "all x. (FinancialIndustry(x) -> GlobalIndustry(x))", "all x. (GlobalIndustry(x) -> LargeIndustry(x))", "all x. (LargeIndustry(x) -> SignificantIndustry(x))", "all x. (SignificantIndustry(x) -> ImportantIndustry(x))", "all x. (BankingIndustry(x) -> FinancialIndustry(x))", "all x. (FinancialIndustry(x) -> GlobalIndustry(x))", "all x. (GlobalIndustry(x) -> LargeIndustry(x))", "all x. (LargeIndustry(x) -> SignificantIndustry(x))", "all x. (SignificantIndustry(x) -> ImportantIndustry(x))", "all x. (ImportantIndustry(x) -> AssociatedWithBanking(x))", "all x. (AssociatedWithBanking(x) -> BankingIndustry(x))", "all x. (NotAvailable(x) -> NotInStock(x))", "all x. (Available(x) -> InStock(x))", "all x. (InStock(x) -> Available(x))", "all x. (NotAvailable(x) -> NotInStock(x))", "all x. (Available(x) -> InStock(x))", "all x. (NotAvailable(x) -> NotInStock(x))", "all x. (InStock(x) -> Available(x))"], "conclusion": "all x. (NotAvailable(x) -> NotInStock(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expression expected.\nall x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expression expected.\nall x. (RealNumber(x) -> (= (x, Six) | = (x, Seven) | = (x, Eight)))\n                          ^\n"}
{"timestamp": "2025-05-01T16:41:33.684887", "premises": ["all x. (Positive(x) -> Positive(Twox))", "8 = 2 \\* 4", "4 = 2 \\* 2", "Positive(Two)", "7 = 6 + 1", "8 = 7 + 1", "all x. all y. (LargerThan(x, y) -> NotLargerThan(y, x))", "all x. all y. (Equal(x, y_+_One) -> LargerThan(x, y))", "RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. (Positive(x) -> Positive(Twox))", "all x. all y. (LargerThan(x, y) -> NotLargerThan(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "4 = 2 \\* 2", "8 = 2 \\* 4", "all x. (Positive(x) -> Positive(Twox))", "all x. all y. (LargerThan(x, y) -> NotLargerThan(y, x))", "RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. (Positive(x) -> Positive(Twox))", "all x. all y. (LargerThan(x, y) -> NotLargerThan(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "4 = 2 \\* 2", "8 = 2 \\* 4", "RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. (Positive(x) -> Positive(Twox))", "all x. all y. (LargerThan(x, y) -> NotLargerThan(y, x))"], "conclusion": "True", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\n8 = 2 \\* 4\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\n8 = 2 \\* 4\n      ^\n"}
{"timestamp": "2025-05-01T16:41:43.736789", "premises": ["all x. (RealNumber(x) -> x is real)", "all x. (RealNumber(x) & RealNumber(y) -> RealNumber(x+y) & (RealNumber(x) > RealNumber(x+y)) & (RealNumber(y) > RealNumber(x+y)))", "all x. (RealNumber(x) & RealNumber(y) -> (RealNumber(x) > RealNumber(y)) & (RealNumber(y) < RealNumber(x)))", "Seven = Six + One", "Eight = Seven + One", "all x. (Positive(x) -> x is positive)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*4", "Four = 2*2"], "conclusion": "all x. (RealNumber(x) & RealNumber(y) -> RealNumber(x+y) & (RealNumber(x) > RealNumber(x+y)) & (RealNumber(y) > RealNumber(x+y))) & (RealNumber(x) > RealNumber(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) & RealNumber(y) -> RealNumber(x+y) & (RealNumber(x) > RealNumber(x+y)) & (RealNumber(y) > RealNumber(x+y))) & (RealNumber(x) > RealNumber(y))\n                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) & RealNumber(y) -> RealNumber(x+y) & (RealNumber(x) > RealNumber(x+y)) & (RealNumber(y) > RealNumber(x+y))) & (RealNumber(x) > RealNumber(y))\n                                                                          ^\n"}
{"timestamp": "2025-05-01T16:42:07.526564", "premises": ["realNumber(Six) & realNumber(Seven) & realNumber(Eight)", "if(x=y+One, then_x>y)", "if(x>y, then_not_y>x)", "Seven=Six+1", "Eight=Seven+1", "positive(Two)", "if(x>Zero, then_Twox>Zero)", "Eight=2*Four", "Four=2*Two"], "conclusion": "if(Six>Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nif(x=y+One, then_x>y)\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nif(x=y+One, then_x>y)\n    ^\n"}
{"timestamp": "2025-05-01T16:42:18.960775", "premises": ["all x. (Leader(x, Peoples_Republic_of_China) -> DengXiaoping(x))", "all x. (Praise(x, ReaffirmationOfReformProgram) & Praise(x, ReversionofHongKong) & Praise(x, ReturnofMacau))", "all x. (SecretaryGeneral(x, Mao) & VicePremier(x, OneNineFiveZeros) & AntiRightistCampaign(x, OneNineFiveZeros))", "all x. (Instrumental(x, ChinasEconomicReconstruction) & Disastrous(x, GreatLeapForward))", "all x. (Died(x, MaoZedong) & Year(x, OneNineSevenSix))", "all x. (Died(x, MaoZedong) & Year(x, OneNineSevenSix) & GraduallyRoseToSupremePower(x, DengXiaoping))"], "conclusion": "all x. ((Instrumental(x, ChinasEconomicReconstruction) & GraduallyRoseToSupremePower(x, DengXiaoping)) & Died(x, MaoZedong) & Year(x, OneNineSevenSix))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DengXiaoping/1, DengXiaoping/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DengXiaoping/1, DengXiaoping/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DengXiaoping/1, DengXiaoping/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DengXiaoping/1, DengXiaoping/0\n"}
{"timestamp": "2025-05-01T16:42:24.705246", "premises": ["all x. (DengXiaoping(x) -> Leader(x, PeoplesRepublicOfChina))", "all x. (DengXiaoping(x) -> Praise(x, ReaffirmationOfReformProgram) & Praised(x, ReversionOfHongKongToChineseControl) & Praised(x, ReturnOfMacau))", "all x. (DengXiaoping(x) -> SecretaryGeneralOfPartyUnderMao(x) & VicePremier(x, OneNineFiveZeros)) & PresidedOver(x, AntiRightistCampaign)", "all x. (DengXiaoping(x) -> InstrumentalIn(x, EconomicReconstructionFollowingGreatLeapForward)", "Died(MaoZedong, OneNineSevenSix)", "RiseToSupremePower(DengXiaoping, AfterMaoZedongsDeath)"], "conclusion": "RiseToSupremePower(DengXiaoping)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (DengXiaoping(x) -> InstrumentalIn(x, EconomicReconstructionFollowingGreatLeapForward)\n                                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (DengXiaoping(x) -> InstrumentalIn(x, EconomicReconstructionFollowingGreatLeapForward)\n                                                                                             ^\n"}
{"timestamp": "2025-05-01T16:42:34.719384", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))"], "conclusion": "all x. ((DengXiaoping(x) & SecretaryGeneral(x, Mao)) & VicePremier(x) & (1950s(x) & AntiRightistCampaign(x))) & (1976(x) & Died(x, Mao)) & (AfterMao(x) & GraduallyRose(x, DengXiaoping))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-01T16:42:43.598051", "premises": ["servesAsParamountLeader(Deng_Xiaoping, Peoples_RepublicOfChina)", "praise(Deng_Xiaoping, reformProgram) & praise(Deng_Xiaoping, HongKong) & praise(Deng_Xiaoping, Macau)", "servedAsSecretaryGeneral(Deng_Xiaoping, Mao) & servedAsVicePremier(Deng_Xiaoping, OneNineFiveZeros) & presidedOver(Deng_Xiaoping, AntiRightistCampaign)", "instrumentalIn(Deng_Xiaoping, Chinas_economic_reconstruction) & disaster(Great_Leap_Forward)", "died(Mao_Zedong, OneNineSevenSix)"], "conclusion": "roseToSupremePower(Deng Xiaoping, after(Mao_Zedongs_death))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Xiaoping'.  Expected token ')'.\nroseToSupremePower(Deng Xiaoping, after(Mao_Zedongs_death))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Xiaoping'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Xiaoping'.  Expected token ')'.\nroseToSupremePower(Deng Xiaoping, after(Mao_Zedongs_death))\n                        ^\n"}
{"timestamp": "2025-05-01T16:42:58.126653", "premises": ["all x. (DengXiaoping(x) -> ParamountLeader(x, PeoplesRepublicOfChina))", "all x. (Praised(x, DengXiaoping) & Reaffirmation(x, ReformProgram) & HongKongControl(x) & MacauReturn(x))", "all x. (SecretaryGeneral(x, Mao) & VicePremier(x, OneNineFiveZeros) & AntiRightistCampaign(x, LaunchedBy(x, Mao)) & AntiRightistCampaign(x, PresidedOver(x, DengXiaoping))", "all x. (Instrumental(x, ChinasEconomicReconstruction) & GreatLeapForward(x, Disastrous) & DengXiaoping(x) -> EconomicReconstruction(x))", "all x. (MaoZedong(x) -> Died(x, OneNineSevenSix))"], "conclusion": "all x. (RiseToSupremePower(x, DengXiaoping) & Death(x, MaoZedong) & After(x, Death(x, MaoZedong)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (SecretaryGeneral(x, Mao) & VicePremier(x, OneNineFiveZeros) & AntiRightistCampaign(x, LaunchedBy(x, Mao)) & AntiRightistCampaign(x, PresidedOver(x, DengXiaoping))\n                                                                                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (SecretaryGeneral(x, Mao) & VicePremier(x, OneNineFiveZeros) & AntiRightistCampaign(x, LaunchedBy(x, Mao)) & AntiRightistCampaign(x, PresidedOver(x, DengXiaoping))\n                                                                                                                                                                          ^\n"}
{"timestamp": "2025-05-01T16:43:15.197619", "premises": ["Volunteer(x) -> IntangibleBenefitsFor(x)", "Volunteer(x) -> (Regularly(x) | AsNeeded(x))", "Volunteer(x) -> WhetherOrNotTrained(x)", "Volunteer(x) -> (Group(x) | Individual(x))", "Volunteer(x) -> WhetherOrNotEnvironmental(x)", "VolunteerInNaturalDisasterResponse() -> (Groups(x) | AsNeeded(x))", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))"], "conclusion": "ScifiMovie(Inception)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nVolunteerInNaturalDisasterResponse() -> (Groups(x) | AsNeeded(x))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nVolunteerInNaturalDisasterResponse() -> (Groups(x) | AsNeeded(x))\n                                   ^\n"}
{"timestamp": "2025-05-01T16:43:27.799167", "premises": ["all x. (Volunteer(x) -> ReceiveBenefit(x, Intangible))", "all x. (Volunteer(x) -> Work(x, RegularOrAsNeeded))", "all x. (Volunteer(x) -> Work(x, Trained))", "all x. (Volunteer(x) -> Work(x, GroupOrIndividual))", "all x. (Volunteer(x, Environmental) -> Work(x, ManagementOrConservation))", "exists x. (Volunteer(x) & Work(x, NaturalDisasterResponse) & WorkInGroup(x) & WorkOnAsNeededBasis(x))"], "conclusion": "exists x. (Volunteer(x) & Work(x, NaturalDisasterResponse) & WorkInGroup(x) & WorkOnAsNeededBasis(x) & ReceiveBenefit(x, Intangible))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Volunteer/2, Volunteer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Volunteer/2, Volunteer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Volunteer/2, Volunteer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Volunteer/2, Volunteer/1\n"}
{"timestamp": "2025-05-01T16:43:45.842318", "premises": ["all volunteers. (IntangibleBenefits(volunteers))", "all volunteers. (RegularOrOnNeededBasis(volunteers))", "some volunteers. (Trained(volunteers))", "all volunteers. (GroupsOrIndividually(volunteers))", "all environmental volunteers. (Contribute(environmentalVolunteers, EnvironmentalManagementOrConservation))", "volunteers(NaturalDisasterResponse). (Groups(volunteers(NaturalDisasterResponse)) & AsNeededBasis(volunteers(NaturalDisasterResponse)))"], "conclusion": "volunteers(NaturalDisasterResponse). (IntangibleBenefits(volunteers(NaturalDisasterResponse)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nvolunteers(NaturalDisasterResponse). (IntangibleBenefits(volunteers(NaturalDisasterResponse)))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nvolunteers(NaturalDisasterResponse). (IntangibleBenefits(volunteers(NaturalDisasterResponse)))\n                                   ^\n"}
{"timestamp": "2025-05-01T16:44:09.628944", "premises": ["all x. (ArtificialSatellite(x) -> ImportantScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & NotU.SInvention(x))", "all x. (ImportantScientificAchievement(x) -> U.SInvention(x))", "all x. (HasDriverLicense(x) -> OwnsCar(x))", "all x. (OwnsCar(x) -> HasDriverLicense(x))", "all x. (Student(x) -> OwnsBicycle(x))", "all x. (OwnsBicycle(x) -> -OwnsCar(x))", "all x. (HasDriverLicense(x) -> OwnsCar(x))", "all x. (OwnsCar(x) -> HasDriverLicense(x))", "all x. (Student(x) -> OwnsBicycle(x))"], "conclusion": "all x. (OwnsBicycle(x) -> -OwnsCar(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. (ArtificialSatellite(x) & NotU.SInvention(x))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. (ArtificialSatellite(x) & NotU.SInvention(x))\n                                        ^\n"}
{"timestamp": "2025-05-01T16:44:11.162594", "premises": ["all x. (ArtificialSatellite(x) -> ImportantScientificAchievement(x))"], "conclusion": "exists x. (ArtificialSatellite(x) & NotU.SInvention(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. (ArtificialSatellite(x) & NotU.SInvention(x))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. (ArtificialSatellite(x) & NotU.SInvention(x))\n                                        ^\n"}
{"timestamp": "2025-05-01T16:44:13.115307", "premises": ["all x. (ArtificialSatellite(x) -> ImportantScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & NotU.SInvention(x))"], "conclusion": "all x. (ImportantScientificAchievement(x) -> U.SInvention(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (ImportantScientificAchievement(x) -> U.SInvention(x))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (ImportantScientificAchievement(x) -> U.SInvention(x))\n                                              ^\n"}
{"timestamp": "2025-05-01T16:44:20.206929", "premises": ["all x. (ArtificialSatellite(x) -> ImportantScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & -U.S.Invention(x))", "all x. (ImportantScientificAchievement(x) -> U.S.Invention(x))", "exists x. A = x", "all x. (Cat(x) -> Fur(x))", "all x. (Dog(x) -> Fur(x))", "all x. (Cat(x) -> Tail(x))", "all x. (Dog(x) -> Tail(x))", "exists x. ((Cat(x) | Dog(x)) & OpposableThumbs(x))", "all x. (Human(x) -> OpposableThumbs(x))"], "conclusion": "exists x. ((Cat(x) & OpposableThumbs(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((Cat(x) & OpposableThumbs(x))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((Cat(x) & OpposableThumbs(x))\n                                        ^\n"}
{"timestamp": "2025-05-01T16:44:33.652409", "premises": ["all x. (ArtificialSatellite(x) -> ImportantScientificAchievement(x))", "all x. (ScientificAchievement(x) -> (Studied(x) & Research(x)))", "all x. (Studied(x) & Research(x) -> ScientificPurpose(x))", "all x. (ScientificPurpose(x) -> ScientificImportance(x))", "all x. (ScientificImportance(x) -> ImportantScientificAchievement(x))", "all x. (ImportantScientificAchievement(x) -> (ScientificImportance(x) & ConsideredScientificAchievement(x)))", "all x. (If(Nothing(x), -True(x) & -False(x)) | (True(x) & -False(x)))", "all x. (True(x) -> False(not_x))", "all x. (True(x) -> True(x))", "all x. (False(x) -> True(not_x))", "all x. (AlwaysTrue(x) -> True(x))", "all x. (NeverTrue(x) -> False(x))", "all x. (True(x) | (True(x) + -True(x)))", "all x. (False(x) | (False(x) + -False(x)))"], "conclusion": "all x. (True(x) | (False(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. (If(Nothing(x), -True(x) & -False(x)) | (True(x) & -False(x)))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. (If(Nothing(x), -True(x) & -False(x)) | (True(x) & -False(x)))\n                                ^\n"}
{"timestamp": "2025-05-01T16:45:18.577636", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGold MedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGold Medal Winner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGold Medal Winner(Amy)", "-OlympicGold Medal Winner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (SciFiMovie(x) -> Movie(x))", "SciFiMovie(Inception)", "-FolkSong(Mac) & -SciFiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (Chef(x) & !Can(x, Cook)) & Can(x, Cook)", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'MedalWinner'.  Expected token ')'.\nall x. (OlympicGold MedalWinner(x) -> ProfessionalAthlete(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'MedalWinner'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'MedalWinner'.  Expected token ')'.\nall x. (OlympicGold MedalWinner(x) -> ProfessionalAthlete(x))\n                    ^\n"}
{"timestamp": "2025-05-01T16:45:43.328163", "premises": ["all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:46:14.527293", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)"], "conclusion": "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:46:25.531635", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)", "-Dispensable(Worksheet)"], "conclusion": "-Dispensable(Worksheet", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-Dispensable(Worksheet\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-Dispensable(Worksheet\n                      ^\n"}
{"timestamp": "2025-05-01T16:47:18.656166", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)"], "conclusion": "FolkSong(Inception)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:48:27.954282", "premises": ["all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)"], "conclusion": "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-01T16:48:33.949519", "premises": ["all x. (Heptalogy(x) -> (DistinctWork(x, One) & DistinctWork(x, Two) & DistinctWork(x, Three) & DistinctWork(x, Four) & DistinctWork(x, Five) & DistinctWork(x, Six) & DistinctWork(x, Seven)))", "all x. (HarryPotterSeries(x) -> (DistinctWork(x, One) & DistinctWork(x, Two) & DistinctWork(x, Three) & DistinctWork(x, Four) & DistinctWork(x, Five) & DistinctWork(x, Six) & DistinctWork(x, Seven)))", "all x. (ChroniclesOfNarnia(x) -> (DistinctWork(x, One) & DistinctWork(x, Two) & DistinctWork(x, Three) & DistinctWork(x, Four) & DistinctWork(x, Five) & DistinctWork(x, Six) & DistinctWork(x, Seven)))"], "conclusion": "Heptalogy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0\n"}
{"timestamp": "2025-05-01T16:48:36.145213", "premises": ["Heptalogyy(x) -> SevenDistinctWorks(x)", "HarryPotterSeries(x) -> SevenDistinctWorks(x)", "ChroniclesOfNarnia(x) -> SevenDistinctWorks(x)"], "conclusion": "Heptalogyy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HarryPotterSeries/1, HarryPotterSeries/0\n"}
{"timestamp": "2025-05-01T16:48:53.344498", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "ContributeToCountry(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-01T16:49:19.238621", "premises": ["all x. (HarryPotterSeries(x) -> SevenDistinctWorks(x))", "all x. (ChroniclesOfNarnia(x) -> SevenDistinctWorks(x))"], "conclusion": "HarryPotterSeries(x) = SevenDistinctWorks(x) & ChroniclesOfNarnia(x) = SevenDistinctWorks(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HarryPotterSeries/1, SevenDistinctWorks/1, ChroniclesOfNarnia/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HarryPotterSeries/1, SevenDistinctWorks/1, ChroniclesOfNarnia/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HarryPotterSeries/1, SevenDistinctWorks/1, ChroniclesOfNarnia/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HarryPotterSeries/1, SevenDistinctWorks/1, ChroniclesOfNarnia/1\n"}
{"timestamp": "2025-05-01T16:49:47.700298", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:49:59.392068", "premises": ["exists x. (Series(x) & MadeUpOf(x, Seven_distinct_works)) & Series(x) = HarryPotter", "exists x. (Series(x) & MadeUpOf(x, Seven_distinct_works)) & Series(x) = ChroniclesOfNarnia"], "conclusion": "exists x. (Series(x) & MadeUpOf(x, Seven_distinct_works)) & exists y. (Series(y) & MadeUpOf(y, Seven_distinct_works)) & (x_!=_HarryPotter) & (x_!=_ChroniclesOfNarnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-05-01T16:50:23.662104", "premises": ["all x. (Heptalogyy(x) -> Distinct(x, Seven))", "all x. (HarryPotterSeries(x) -> Distinct(x, Seven))", "all x. (ChroniclesOfNarnia(x) -> Distinct(x, Seven))", "all x. (HarryPotterSeries(x) -> -Heptalogyy(x))", "sqrt(OneSix) = 4", "sqrt(TwoFive) = 5", "sqrt(ThreeSix) = 6", "sqrt(SixFour) = 8", "sqrt(EightOne) = 9", "sqrt(OneZeroZero) = 10", "sqrt(OneTwoOne) = 11", "sqrt(FourNine) = 7", "|real numbers| = \u221e", "|natural numbers| = \u2115", "|integers| = \u2124", "|rational numbers| = \u211a", "|real numbers| \u2260 |natural numbers|", "|natural numbers| = \u2115", "|integers| = \u2124", "|rational numbers| = \u211a", "|real numbers| = \u221e", "|real numbers| \u2260 |natural numbers|", "|real numbers| = \u221e", "|natural numbers| = \u2115", "|natural numbers| \u2260 |countable|", "exists x. (Square(x) -> x^2 = s) & exists s. (Square(x) -> s = x^2)", "exists x. (Square(x) -> 2s = x^2) & exists s. (Square(x) -> s = x^2) & (x_=_Twos)", "(Four^Two) = (Two^Two*Two^Two) = 16", "exists x. (Square(x) -> x_=_Four) & exists s. (Square(x) -> s = x^2) & (x_=_Four) & (x^Two_=_s)", "exists x. (Square(x) -> x^2 = s) & exists s. (Square(x) -> s = x^2)", "exists x. (Square(x) -> 2s = x^2) & exists s. (Square(x) -> s = x^2) & (x_=_Twos)", "(Eight^Two) = (Two^Three*Two^Three) = 64"], "conclusion": "exists x. (Square(x) -> x_=_Eight) & exists s. (Square(x) -> s = x^2) & (x_=_Eight) & (x^Two_=_s)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expression expected.\n|real numbers| = \u221e\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expression expected.\n|real numbers| = \u221e\n^\n"}
{"timestamp": "2025-05-01T16:50:33.730281", "premises": ["exists x. all y. (HarryPotterSeries(x) & For(y, Seven) & Distinct(x, y))", "exists x. all y. (ChroniclesOfNarnia(x) & For(y, Seven) & Distinct(x, y))", "exists x. exists y. ((ETSadministers(x)) & InternationalTest(y) & (TOEFL(y) | TOEIC(y) | GRE(y) | SubjectTest(y))) & exists z. (For(z, Seven) & -ETSadministers(z))", "Daveed Diggs played two roles in the musical Hamilton on Broadway.", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))"], "conclusion": "Plays(DaveedDiggs, ThomasJefferson)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Diggs'.\nDaveed Diggs played two roles in the musical Hamilton on Broadway.\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Diggs'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Diggs'.\nDaveed Diggs played two roles in the musical Hamilton on Broadway.\n       ^\n"}
{"timestamp": "2025-05-01T16:50:42.509149", "premises": ["all x. (HarryPotterSeries(x) -> SevenWorks(x))", "The Chronicles of Narnia consists of 7 distinct works.", "all x. (ChroniclesOfNarnia(x) -> SevenWorks(x))", "The Harry Potter series and The Chronicles of Narnia series consist of seven distinct works.", "(HarryPotterSeries(x) & ChroniclesOfNarnia(x)) -> SevenWorks(x)", "The Chronicles of Narnia series of books is not Heptalogy."], "conclusion": "-(TheChroniclesOfNarniaSeriesOfBooks(x) -> Heptalogy(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Chronicles'.\nThe Chronicles of Narnia consists of 7 distinct works.\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Chronicles'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Chronicles'.\nThe Chronicles of Narnia consists of 7 distinct works.\n    ^\n"}
{"timestamp": "2025-05-01T16:51:10.687120", "premises": ["\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x (Woodware(x) \u2192 Biodegradable(x))", "\u2200x (Paper(x) \u2192 Woodware(x))", "\u2203x \u2203y (Good(x) \u2227 Bad(x))", "\u2200x (EnvironmentFriendly(x) \u2192 Good(x))", "\u2203x (Paper(x) \u2228 EnvironmentFriendly(x))", "\u00acDispensable(Worksheet)", "\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x (Woodware(x) \u2192 Biodegradable(x))", "\u2200x (Paper(x) \u2192 Woodware(x))", "\u2203x \u2203y (Good(x) \u2227 Bad(x))", "\u2200x (EnvironmentFriendly(x) \u2192 Good(x))", "\u2203x (Paper(x) \u2228 EnvironmentFriendly(x))"], "conclusion": "\u00acDispensable(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\n\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\n\u2200x (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n                     ^\n"}
{"timestamp": "2025-05-01T16:51:18.114549", "premises": ["GUI(TOra)", "Software(GUIs)", "exists x. Software(x) -> exists y. FreeOrPaid(x, y)", "exists x. Software(x) -> exists y. (-UnderGPL(x, y))", "TOra # UnderGPL"], "conclusion": "exists x. freeOrPaid(x, y) -> UnderGPL(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '#'.\nTOra # UnderGPL\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '#'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '#'.\nTOra # UnderGPL\n     ^\n"}
{"timestamp": "2025-05-01T16:51:28.746471", "premises": ["all x. (GUI(x) -> Software(x))", "all x. (GUI(x) -> Software(x))", "exists x. (FreeSoftware(x) | PaidSoftware(x))", "exists x. (PaidSoftware(x) -> Not( GNUGeneralPublicLicense(x) ))", "GNUGeneralPublicLicense(TOra)", "exists x. (TOra -> FreeSoftware(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))"], "conclusion": "-Biodegradable(Worksheet)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GNUGeneralPublicLicense/1, TOra/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GNUGeneralPublicLicense/1, TOra/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GNUGeneralPublicLicense/1, TOra/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GNUGeneralPublicLicense/1, TOra/0\n"}
{"timestamp": "2025-05-01T16:51:51.056561", "premises": ["all x. (GUI(x) -> Software(x))", "all x. (Software(x) -> GUI(x))", "all x. (Software(x) -> (Free(x) | Paid(x)))", "all x. (Paid(x) -> (-Under GNUGeneralPublicLicense(x)))", "Under GNUGeneralPublicLicense(TOra)"], "conclusion": "Free(TOra)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'GNUGeneralPublicLicense'.  Expected token ')'.\nall x. (Paid(x) -> (-Under GNUGeneralPublicLicense(x)))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'GNUGeneralPublicLicense'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'GNUGeneralPublicLicense'.  Expected token ')'.\nall x. (Paid(x) -> (-Under GNUGeneralPublicLicense(x)))\n                           ^\n"}
{"timestamp": "2025-05-01T16:52:18.561144", "premises": ["(AinderbyQuernhow, Village) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict_is_in_North_Yorkshire) & (NorthYorkshire_is_in_England)", "all x. all y. all z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))", "(AinderbyQuernhow, Village) & (AinderbyQuernhow, CivilParish) & (HambletonDistrict_is_in_North_Yorkshire) & (NorthYorkshire_is_in_England)"], "conclusion": "(AinderbyQuernhow_is_in_the_city) & (In_the_city, AinderbyQuernhow_is)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n(AinderbyQuernhow_is_in_the_city) & (In_the_city, AinderbyQuernhow_is)\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n(AinderbyQuernhow_is_in_the_city) & (In_the_city, AinderbyQuernhow_is)\n                                                ^\n"}
{"timestamp": "2025-05-01T16:52:21.531964", "premises": ["all x. (Village(x) -> CivilParish(x)) & all x. (CivilParish(x) -> HambletonDistrict(x)) & all x. (HambletonDistrict(x) -> NorthYorkshire(x)) & all x. (NorthYorkshire(x) -> England)", "PlaceIn(AinderbyQuernhow, HambletonDistrict) & PlaceIn(HambletonDistrict, NorthYorkshire) & PlaceIn(NorthYorkshire, England)"], "conclusion": "all x. (PlaceIn(x, y) & PlaceIn(y, z)) -> PlaceIn(x, z)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: England/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: England/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: England/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: England/0\n"}
{"timestamp": "2025-05-01T16:52:36.090086", "premises": ["all x. (Village(x) & CivilParish(x) & HambletonDistrict(x))", "all x. (HambletonDistrict(x) & NorthYorkshire(x))", "all x. (NorthYorkshire(x) & England(x))", "all x. all y. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "exists x. (Village(x) & LocatedIn(x, England))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: England/1, England/0.\n\n\nFatal error:  The following symbols are used with multiple arities: England/1, England/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: England/1, England/0.\n\n\nFatal error:  The following symbols are used with multiple arities: England/1, England/0\n"}
{"timestamp": "2025-05-01T16:53:23.883987", "premises": ["AinderbyQuernhow(x) -> Village(x) & CivilParish(x) & HambletonDistrict(x)", "HambletonDistrict(x) -> NorthYorkshire(x)", "NorthYorkshire(x) -> England(x)", "exists x. exists y. exists z. (LocatedIn(x, y) & LocatedIn(y, z) & LocatedIn(x, z))", "(not-exists x. (English(x) & CivilParish(x)))", "Jewish(AnneFrank) & Died(AnneFrank) & Holocaust(AnneFrank)", "DateOfBirth(AnneFrank, February, TwoEightth, OneNineTwoNine)", "DaughterOf(AnneFrank, HolocaustSurvivor)", "wroteDiary(AnneFrank) & diary(AnneFrank) & experiences(AnneFrank, Holocaust)", "hid(AnneFrank, with, her, family, when, the, Nazis, took, over, their, home, in, Amsterdam)", "HolocaustSurvivor(AnneFrank)", "Biography(x) -> book(x) & tells(x, life, story, of, a, person)", "Musician(BobDylan) & Songwriter(BobDylan)", "Actor(DennisHopper)", "exists x. exists y. (Biography(x) & IncludedIn(x, Biography(y)) & Person(x) & Person(y))", "Book(BobDylanBiography) & PublishedIn(BobDylanBiography, TwoZeroZeroNine)"], "conclusion": "nonexists(BobDylanBiography)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Biography/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Biography/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Biography/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Biography/1\n"}
{"timestamp": "2025-05-01T16:55:29.616310", "premises": ["exists x. (Village(x) & CivilParish(x) & HambletonDistrict(x))", "exists x. (District(x) & NorthYorkshire(x))", "exists x. (Region(x) & England(x))", "all x, y, z. (LocationOf(x, y) & LocationOf(y, z) -> LocationOf(x, z))", "not exists x. (CivilParish(x) & HambletonDistrict(x) & England(x))", "all x. (Professional(x) -> HigherEducationDegree(x))", "Professor(x) -> HighlyEducated(x)", "Professor(x) -> WorkIn(x, University)", "Professor(x) -> HigherEducationDegree(x)", "HighlyEducated(x) & WorkIn(x, University) -> Professor(x)", "Professor(x) -> WorkIn(x, University)", "all x. (Mammal(x) -> GiveBirthToLiveYoung(x))", "Elephant(x) -> Mammal(x)", "Elephant(x) -> Trunk(x)", "Elephant(x) -> LongTusks(x)", "Elephant(x) -> ThickSkin(x)", "warmBlooded(x)", "exists x. (Country(x) & NorthAmerica(x))", "exists x. (Planet(x))", "exists x. (Moon(x) & Orbits(x, Earth))", "Orbits(Moon, Earth)", "exists x. (Country(x) & LargeEconomy(x))", "LargeEconomy(x) -> HighStandardOfLiving(x)", "HighStandardOfLiving(x) -> LongLifeExpectancy(x)", "exists x. (Country(x) & NorthAmerica(x))", "exists x. (Continent(x) & NorthAmerica(x))", "not exists x. (Continent(x) & Europe(x))", "exists x. (Planet(x) & InSpace(x))", "exists x. (Planet(x))", "exists x. (Moon(x) & Orbits(x, Earth))", "Orbits(Moon, Earth)", "exists x. (Country(x) & UnitedStates(x))", "exists x. (Country(x) & LargeEconomy(x))"], "conclusion": "exists x. (Country(x) & HighStandardOfLiving(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y, z. (LocationOf(x, y) & LocationOf(y, z) -> LocationOf(x, z))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y, z. (LocationOf(x, y) & LocationOf(y, z) -> LocationOf(x, z))\n     ^\n"}
{"timestamp": "2025-05-01T16:55:33.473147", "premises": ["all x. (Village(x) & CivilParish(x) & WidelyKnownAs(x, \"Ainderby_Quernhow\") & ExistsIn(x, HambletonDistrict))", "all x. (District(x) & WidelyKnownAs(x, \"Hambleton_District\") & ExistsIn(x, NorthYorkshire))", "all x. (County(x) & WidelyKnownAs(x, \"North_Yorkshire\") & ExistsIn(x, England))", "all x. (PlaceA(x) & PlaceB(y) & ExistsIn(x, PlaceB) & ExistsIn(y, PlaceC) & PlacedIn(x, PlaceC))"], "conclusion": "notExists(all x. ExistsIn(x, England) & CivilParish(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nnotExists(all x. ExistsIn(x, England) & CivilParish(x))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nnotExists(all x. ExistsIn(x, England) & CivilParish(x))\n                                      ^\n"}
{"timestamp": "2025-05-01T16:56:03.883760", "premises": ["all x. (CivilParish(x) -> AinderbyQuernhow(x))", "all x. (District(x) -> HambletonDistrict(x))", "all x. (County(x) -> NorthYorkshire(x))", "all x. (Place(x) -> (Place(y) & Place(z)) -> ((Place(x) & Place(y)) & Place(z)))", "exists x. (CivilParish(x) & Not(x, England))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))", "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (Not(GreaterThan(x, y)) -> LessThan(x, y))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))", "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "all x. (Is(x, y) <-> Is(y, x))", "all x. (Is(x, y) <-> Is(y, x))", "all x. (Not(GreaterThan(x, y)) -> LessThan(x, y))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))", "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "all x. (Is(x, y) <-> Is(y, x))", "all x. (Not(GreaterThan(x, y)) -> LessThan(x, y))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))", "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "all x. (Not(GreaterThan(x, y)) -> LessThan(x, y))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (Not(LessThan(x, y)) -> GreaterThan(x, y))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))", "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "all x. (Not(GreaterThan(x, y)) -> LessThan(x, y))", "all x. (LessThan(x, y) <-> Not(GreaterThan(x, y)))", "all x. (Not(LessThan(x, y)) -> GreaterThan(x, y))", "all x. (LessThan(x, y) -> Not(GreaterThan(x, y)))"], "conclusion": "all x. (GreaterThan(x, y) -> Not(LessThan(x, y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LessThan/2, GreaterThan/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LessThan/2, GreaterThan/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LessThan/2, GreaterThan/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LessThan/2, GreaterThan/2\n"}
{"timestamp": "2025-05-01T16:56:11.858970", "premises": ["exists x. (Village(x) & CivilParish(x)) & HambletonDistrict(x) & In(x, England)", "HambletonDistrict(x) & NorthYorkshire(x)", "NorthYorkshire(x) & In(x, England)", "exists x. exists y. exists z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "~(exists x. (CivilParish(x) & In(x, England)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T16:56:24.650131", "premises": ["all x. (Place(x) & (CivilParish(x) & HambletonDistrict(x)) & (HambletonDistrict(x) & NorthYorkshire(x)) & (NorthYorkshire(x) & England(x)))", "all x. (Place(x) & HambletonDistrict(x) & NorthYorkshire(x))", "all x. (Place(x) & NorthYorkshire(x) & England(x))", "all x. all y. (Place(x) & Place(y) & (LocatedIn(x, y) & LocatedIn(y, z)) -> LocatedIn(x, z))", "all x. (Place(x) & CivilParish(x) & HambletonDistrict(x) & NorthYorkshire(x) & England(x)) & ~(exists y. (Place(y) & CivilParish(y) & HambletonDistrict(y) & NorthYorkshire(y) & England(y)))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "~(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & (MorePoints(x, y) & MorePoints(y, x)) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & (MorePoints(x, y) -> RankHigherThan(x, y)))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)"], "conclusion": "HigherRank(RealMadrid, Barcelona)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (all x ((((Place(x) & CivilParish(x)) & HambletonDistrict(x)) & NorthYorkshire(x)) & England(x)) & ~(%%START ERROR%%exists y.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (all x ((((Place(x) & CivilParish(x)) & HambletonDistrict(x)) & NorthYorkshire(x)) & England(x)) & ~(%%START ERROR%%exists y.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T16:56:45.257156", "premises": ["exists x. exists y. (Village(x) & CivilParish(x) & HambletonDistrict(y) & LocatedIn(x, y) & LocatedIn(y, England))", "HambletonDistrict(x) & NorthYorkshire(x)", "NorthYorkshire(x) & England(x)", "exists x. exists y. exists z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))", "not exists x. (CivilParish(x) & England(x))", "StreamingService(AirtightTV) & TVShows(AirtightTV) & Movies(AirtightTV)", "exists x. (SingleEpisode(x) & AvailableForRent(x)) & TVShow(x) & OnAirtightTV(x)", "not exists x. (MultipleEpisode(x) & NotAvailableForRent(x)) & TVShow(x) & OnAirtightTV(x)", "exists x. (Movie(x) & AvailableFolio(x)) & OnAirtightTV(x)", "PrivateResearchUniversity(BostonUniversity) & LocatedIn(BostonUniversity, BostonMassachusettsUnitedStates)", "Campus(BostonUniversity, QuincyMassachusettsUnitedStates)", "Campus(BostonUniversity, DedhamMassachusettsUnitedStates)", "Campus(BostonUniversity, DorchesterMassachusettsUnitedStates)", "Member(BostonUniversity, AssociationOfIndependentCollegesAndUniversities)", "Member(BostonUniversity, NationalAssociationOfStateBoardsofEducation)", "Member(BostonUniversity, NewEnglandAssociationOfCollegesAndSchools)", "MultinationalTechnologyCompany(Comcast) & CableTelevision(Comcast) & Internet(Comcast) & VoiceServices(Comcast)", "ThemeParks(Comcast, UniversalStudios) & ThemeParks(Comcast, SixFlags)", "Member(Comcast, BetterBusinessBureau)", "Member(Comcast, ConsumerAffairsBureau)", "Member(Comcast, FederalCommunicationsCommission)", "Member(Comcast, NationalAssociationOfBroadcasters)", "Member(Comcast, NewYorkStatePublicServiceCommission)", "Member(Comcast, SecuritiesAndExchangeCommission)", "Member(Comcast, UnitedStatesPatentAndTrademarkOffice)"], "conclusion": "Member(Comcast, WashingtonStateUtilitiesAndTransportationCommission)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: England/1, England/0.\n\n\nFatal error:  The following symbols are used with multiple arities: England/1, England/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: England/1, England/0.\n\n\nFatal error:  The following symbols are used with multiple arities: England/1, England/0\n"}
{"timestamp": "2025-05-01T16:58:41.338193", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T16:59:51.057915", "premises": ["all x. (AmericanScientist(x) -> (AnalysisOfAlgorithms(x) & FatherOf(x, AnalysisOfAlgorithms)) & Nationality(x, \"American\"))", "all x. (Book(x) -> Creator(x))", "Writer(John)", "creates(John, some_books)"], "conclusion": "all x. (Book(x) & (Human(x) & Creator(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0\n"}
{"timestamp": "2025-05-01T17:00:57.628877", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendMostOfTimeOnSports(x))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendMostOfTimeOnSports(x))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendMostOfTimeOnSports(Amy) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "(-FolkSong(Mac) & -ScifiMovie(Mac))", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "exists x. (BRICS(x) & Speaks(x, Hindi))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "DateOfBirth(DaveedDiggs, JanuaryTwoOne, OneNineEightTwo)", "hasDegree(DaveedDiggs, MusicalTheater)", "isRapper(DaveedDiggs) & isMemberOf(DaveedDiggs, WatersandUs)"], "conclusion": "won(DaveedDiggs, ShakespearesGlobeToGlobeAward)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:00:59.417507", "premises": ["AmericanScientist(DonaldErvinKnuth) &"], "conclusion": "AnalysisOfAlgorithms(DonaldErvinKnuth)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nAmericanScientist(DonaldErvinKnuth) &\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nAmericanScientist(DonaldErvinKnuth) &\n                                     ^\n"}
{"timestamp": "2025-05-01T17:02:04.971800", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:02:15.423168", "premises": ["all x. ((Mathematician(x) & Called(x, \"FatherOfTheAnalysisOfAlgorithms\")) -> IdentifiedAs(x, \"DonaldErvinKnuth\"))", "all x. (Chef(x) -> Can(x, Cook))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))"], "conclusion": "exists x, y. ((PlaysIn", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nexists x, y. ((PlaysIn\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nexists x, y. ((PlaysIn\n        ^\n"}
{"timestamp": "2025-05-01T17:02:27.784723", "premises": ["(Biodegradable(x) -> EnvironmentFriendly(x)) & (Woodware(x) -> Biodegradable(x)) & (Paper(x) -> Woodware(x)) & (Good(x) <> Bad(x)) & (EnvironmentFriendly(x) -> Good(x)) & (Woodware(x) = Paper(x) | EnvironmentFriendly(x))", "Dispensable(Worksheet)", "(LaLigaSoccerTeam(x) -> LaLigaSoccerTeam(y)) & (RankHigherThan(x, y) -> MorePoints(x, y)) & (MorePoints(x, y) -> RankHigherThan(x, y)) & (LaLigaSoccerTeam(x) -> LaLigaSoccerTeam(y)) & (-MorePoints(x, y) & -MorePoints(y, x)) & (LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)) & (MorePoints(RealMadrid, Barcelona) | -MorePoints(Barcelona, RealMadrid)) & (-MorePoints(RealMadrid, Barcelona) & -MorePoints(Barcelona, RealMadrid))", "HigherRank(RealMadrid, Barcelona)", "(ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports)) & (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x)) & (-FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports)) & (FullTimeScientist(x) -> NobelPhysicsLaureate(x)) & (SpendOn(Amy, MostOfTheirTime, Sports) | AmyOlympicGoldMedalWinner) & (-NobelPhysicsLaureate(Amy) -> -AmyOlympicGoldMedalWinner) & (_AmyOlympicGoldMedalWinner__>_AmySpendsMostTimeOnSports)"], "conclusion": "NobelLaureate(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<>'.  Expected token ')'.\n(Biodegradable(x) -> EnvironmentFriendly(x)) & (Woodware(x) -> Biodegradable(x)) & (Paper(x) -> Woodware(x)) & (Good(x) <> Bad(x)) & (EnvironmentFriendly(x) -> Good(x)) & (Woodware(x) = Paper(x) | EnvironmentFriendly(x))\n                                                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<>'.  Expected token ')'.\n(Biodegradable(x) -> EnvironmentFriendly(x)) & (Woodware(x) -> Biodegradable(x)) & (Paper(x) -> Woodware(x)) & (Good(x) <> Bad(x)) & (EnvironmentFriendly(x) -> Good(x)) & (Woodware(x) = Paper(x) | EnvironmentFriendly(x))\n                                                                                                                        ^\n"}
{"timestamp": "2025-05-01T17:02:30.332245", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth) & ProfessorAt(DonaldErvinKnuth, StanfordUniversity)", "AnalysisOfAlgorithms(DonaldErvinKnuth)"], "conclusion": "exist x. ((mathematician(x) & AnalysisOfAlgorithms(x)) & (DonaldErvinKnuth_has_been_called_the_\"father_of_the_analysis_of_algorithms\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexist x. ((mathematician(x) & AnalysisOfAlgorithms(x)) & (DonaldErvinKnuth_has_been_called_the_\"father_of_the_analysis_of_algorithms\")\n                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexist x. ((mathematician(x) & AnalysisOfAlgorithms(x)) & (DonaldErvinKnuth_has_been_called_the_\"father_of_the_analysis_of_algorithms\")\n                                                                                                                                      ^\n"}
{"timestamp": "2025-05-01T17:02:38.479026", "premises": ["Actor(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth) & At(DonaldErvinKnuth, StanfordUniversity)", "AnalysisOfAlgorithms(Knuth) & FatherOfAnalysisOfAlgorithms(Knuth)", "Book(Knuth) & ProgrammingAndAlgorithms(Knuth)", "FamousBook(Knuth) & ArtOfComputerProgramming(Knuth)", "MultiVolumeBook(ArtOfComputerProgramming) & Covers(ArtOfComputerProgramming, ComputerProgramming) & Detailed(ArtOfComputerProgramming)", "Praise(ArtOfComputerProgramming) & Depth(ArtOfComputerProgramming) & Clarity(ArtOfComputerProgramming)", "SeminalWork(ArtOfComputerProgramming) & ComputerScience(ArtOfComputerProgramming)"], "conclusion": "TranslatedInto(ArtOfComputerProgramming, SeveralLanguages)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ArtOfComputerProgramming/1, ArtOfComputerProgramming/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ArtOfComputerProgramming/1, ArtOfComputerProgramming/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ArtOfComputerProgramming/1, ArtOfComputerProgramming/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ArtOfComputerProgramming/1, ArtOfComputerProgramming/0\n"}
{"timestamp": "2025-05-01T17:03:21.285075", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (Taxpayer(James) & -Has(James, CriminalRecord)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:03:24.253779", "premises": ["Song(YourWoman, WhiteTown)", "Peaked(YourWoman, One, UK_Singles_Chart)", "extremelyPopular(Song(x), Peaked(x, One))", "Peaked(YourWoman, One, Iceland) & Peaked(YourWoman, One, Israel) & Peaked(YourWoman, One, Spain)"], "conclusion": "notPopular(WhiteTown)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Peaked/3, Peaked/2, Song/2, Song/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Peaked/3, Peaked/2, Song/2, Song/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Peaked/3, Peaked/2, Song/2, Song/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Peaked/3, Peaked/2, Song/2, Song/1\n"}
{"timestamp": "2025-05-01T17:03:27.279775", "premises": ["Song(YourWoman, WhiteTown)", "peakedAt(NoDot_One, UKSinglesChart, YourWoman)", "extremelyPopular(x) -> peakedAt(One, x)", "peakedAt(One, Iceland, YourWoman) & peakedAt(One, Israel, YourWoman) & peakedAt(One, Spain, YourWoman)"], "conclusion": "-extremelyPopular(YourWoman)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: peakedAt/2, peakedAt/3.\n\n\nFatal error:  The following symbols are used with multiple arities: peakedAt/2, peakedAt/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: peakedAt/2, peakedAt/3.\n\n\nFatal error:  The following symbols are used with multiple arities: peakedAt/2, peakedAt/3\n"}
{"timestamp": "2025-05-01T17:03:31.868293", "premises": ["WhiteTown.song(\"Your_Woman\")", "Peaked(One, \"Your_Woman\", UK_Singles_Chart)", "Popular(x) -> Peaked(One, x)", "Peaked(One, \"Your_Woman\", Iceland) & Peaked(One, \"Your_Woman\", Israel) & Peaked(One, \"Your_Woman\", Spain)"], "conclusion": "Popular(x) & WhiteTown.song(x) -> True", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nPopular(x) & WhiteTown.song(x) -> True\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nPopular(x) & WhiteTown.song(x) -> True\n                      ^\n"}
{"timestamp": "2025-05-01T17:03:34.881878", "premises": ["Song(YourWoman, WhiteTown)", "PeakedAt(YourWoman, UK)", "PeakedAt(x, NoOne) -> ExtremelyPopular(x)", "PeakedAt(YourWoman, Iceland) & PeakedAt(YourWoman, Israel) & PeakedAt(YourWoman, Spain)"], "conclusion": "~PeakedAt(x, NoOne)  -> ~ExtremelyPopular(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~PeakedAt(x,NoOne) -> ~ExtremelyPopular(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~PeakedAt(x,NoOne) -> ~ExtremelyPopular(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:04:07.507923", "premises": ["exists x. exists y. (Song(x) & Song(y) & Band(x) & Band(y) & PeakedAt(x, NoOne, UKSinglesChart) & PeakedAt(y, NoOne, UKSinglesChart) & PeakedAt(x, NoOne, Iceland) & PeakedAt(y, NoOne, Iceland) & PeakedAt(x, NoOne, Israel) & PeakedAt(y, NoOne, Israel) & PeakedAt(x, NoOne, Spain) & PeakedAt(y, NoOne, Spain))", "exists x. (PeakedAt(x, NoOne, UKSinglesChart) & Song(x) & Band(x))", "exists x. (PeakedAt(x, NoOne, UKSinglesChart) & Song(x) & Band(x)) & extremelyPopular(x)", "exists x. (PeakedAt(x, NoOne, Iceland) & PeakedAt(x, NoOne, Israel) & PeakedAt(x, NoOne, Spain) & Song(x) & Band(x)) & extremelyPopular(x)", "exists x. (Band(x) & ~exists y. (PeakedAt(y, NoOne, UKSinglesChart)))", "exists x. exists y. (ShadowEclipse(x) & Sun(y) & Earth(x) & Sun(y))", "exists x. (ShadowEclipse(x) & TotalEclipse(x) & Sun(x) & Earth(x) & Moon(x))", "exists x. (SunPositionOnHorizon(x) & HeightOfSunInSky(x) & Sun(x))", "exists x. (SunBelowHorizon(x) & SunDusk(x))", "exists x. (SunAboveHorizon(x) & SunRise(x))", "exists x. exists y. (StudentVisa(x) & AllowedToStudy(x, UnitedStates) & NotAllowedToWork(x))", "exists x. exists y. (H1BVisa(x) & AllowedToWork(x, UnitedStates) & SpecifiedPeriod(x))", "exists x. exists y. (TouristVisa(x) & AllowedToVisit(x, UnitedStates) & SpecifiedPeriod(x))", "exists x. exists y. (B2Visa(x) & AllowedToVisit(x, UnitedStates) & SpecifiedPeriod(x) & ForPleasure(x))", "exists x. exists y. (StudentVisa(x) & AllowedToStudy(x, UnitedStates) & AllowedToWork(x))", "exists x. exists y. (Song(x) & MeantToBeSung(x) | Song(x) & MeantToBePlayed(x))", "exists x. (CollectionOfSongs(x))", "exists x. exists y. (Single(x) & SingleSong(x) & BelongsTo(x, y)) & SingleSong(x) & BelongsTo(x, y) & CollectionOfSongs(y)", "exists x. (GroupOfMusicians(x) & PlayTogether(x))", "exists x. (TypeOfMusic(x))", "exists x. exists y. (DriverLicense(x) & CanOperate(x, Vehicle) & NOT(HasLearnerPermit(x)))", "exists x. exists y. (LearnerPermit(x) & CanDriveWithSupervisor(x) & NOT(HasDriverLicense(x)))", "exists x. exists y. (MotorcycleLicense(x) & CanRide(x, Motorcycle) & NOT(HasDriverLicense(x)))", "exists x. exists y. (PrivatePilotLicense(x) & CanFly(x, PrivatePlane) & NOT(HasDriverLicense(x)))", "exists x. exists y. (LongDistanceRunner(x) & Athletic(x) & NOT(Athlete(y)))", "exists x. (PhysicalActivity(x) & RequiresSkill(x) & RequiresAthleticism(x))", "exists x. (Athlete(x) & People(x))", "exists x. (CanWalk(x) & People(x))", "exists x. (CanWalk(x) & People(x) & Bipeds(x))", "exists x. (Bipeds(x) & TwoLegs(x))", "exists x. exists y. (Stapler(x) & AttachTwoSheetsOfPaper(x, y))", "exists x. exists y. (PaperCutter(x) & CutPiecesOfPaper(x, y))", "exists x. exists y. (CopyMachine(x) & MakeCopiesOfPaper(x, y))", "exists x. (Printer(x) & ProducePrintedOutput(x))"], "conclusion": "exists x. exists y. (Scanner(x) & CaptureDigitalInformation(x, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nexists x. (Band(x) & ~exists y. (PeakedAt(y, NoOne, UKSinglesChart)))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nexists x. (Band(x) & ~exists y. (PeakedAt(y, NoOne, UKSinglesChart)))\n                             ^\n"}
{"timestamp": "2025-05-01T17:04:10.793692", "premises": ["all x. (Song(x) & Author(x, WhiteTown))", "Peak(x, \"Your_Woman\", NoDotOne, UKSinglesChart)", "PeakedAtNo1(x) -> ExtremelyPopular(x)", "Peak(\"Your_Woman\", Iceland, NoDotOne) & Peak(\"Your_Woman\", Israel, NoDotOne) & Peak(\"Your_Woman\", Spain, NoDotOne)"], "conclusion": "all x. ((PeakedAtNo1(x) & ExtremelyPopular(x)) -> Author(x, WhiteTown))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Peak/3, Peak/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Peak/3, Peak/4", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Peak/3, Peak/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Peak/3, Peak/4\n"}
{"timestamp": "2025-05-01T17:04:18.777727", "premises": ["song(Your_Woman, White_Town)", "peakedAtNumberOne(Your_Woman, UK_Singles_Chart)", "extremelyPopular(song) -> peakedAtNumberOne(song)", "peakedAtNumberOne(Your_Woman, Iceland) & peakedAtNumberOne(Your_Woman, Israel) & peakedAtNumberOne(Your_Woman, Spain)"], "conclusion": "notPopular(song) -> notExtremelyPopular(song)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: peakedAtNumberOne/1, peakedAtNumberOne/2, song/2, song/0.\n\n\nFatal error:  The following symbols are used with multiple arities: peakedAtNumberOne/1, peakedAtNumberOne/2, song/2, song/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: peakedAtNumberOne/1, peakedAtNumberOne/2, song/2, song/0.\n\n\nFatal error:  The following symbols are used with multiple arities: peakedAtNumberOne/1, peakedAtNumberOne/2, song/2, song/0\n"}
{"timestamp": "2025-05-01T17:05:05.081808", "premises": ["all x. all y. ((ScoresGoals(x) = ScoresGoals(y) & RegularTime(x) & RegularTime(y)) -> PlayExtraTime(x, y))", "all x. all y. ((ScoresGoals(x) = ScoresGoals(y) & RegularTime(x) & ExtraTime(y) & ExtraTime(x)) -> PlayPenaltyShootout(x, y))", "ScoresGoals(RealMadrid, TwoZeroOneSix) = 1 & ScoresGoals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1 & RegularTime(RealMadrid, TwoZeroOneSix) & RegularTime(Atl\u00e9ticoMadrid, TwoZeroOneSix)", "ScoresGoals(RealMadrid, TwoZeroOneSix) = 0 & ScoresGoals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0 & ExtraTime(RealMadrid, TwoZeroOneSix) & ExtraTime(Atl\u00e9ticoMadrid, TwoZeroOneSix)"], "conclusion": "all x. all y. ((ScoresGoals(x) = ScoresGoals(y) & RegularTime(x) & ExtraTime(y) & ExtraTime(x) & PlayPenaltyShootout(x, y)) -> RealMadrid = x & Atl\u00e9ticoMadrid = y)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 663: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 663: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:05:10.881476", "premises": ["all x. all y. ((UCLMatch(x,y) & (Scored(x,xGoals) & Equal(xGoals,yGoals))) -> ExtraTime(x,y))", "all x. all y. ((UCLMatch(x,y) & (Scored(x,xGoals) & Equal(xGoals,yGoals)) & (Scored(y,yGoals) & Equal(yGoals,xGoals))) -> PenaltyShootout(x,y)", "Scored(RealMadrid,One) & Scored(Atl\u00e9ticoMadrid,One) & (Scored(RealMadrid,xGoals) and Equal(xGoals,One)) & (Scored(Atl\u00e9ticoMadrid,yGoals) and Equal(yGoals,One))", "Scored(RealMadrid,Zero) & Scored(Atl\u00e9ticoMadrid,Zero) & (Scored(RealMadrid,xGoals) and Equal(xGoals,Zero)) & (Scored(Atl\u00e9ticoMadrid,yGoals) and Equal(yGoals,Zero))"], "conclusion": "PenaltyShootout(RealMadrid,Atl\u00e9ticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((UCLMatch(x,y) & (Scored(x,xGoals) & Equal(xGoals,yGoals)) & (Scored(y,yGoals) & Equal(yGoals,xGoals))) -> PenaltyShootout(x,y)\n                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((UCLMatch(x,y) & (Scored(x,xGoals) & Equal(xGoals,yGoals)) & (Scored(y,yGoals) & Equal(yGoals,xGoals))) -> PenaltyShootout(x,y)\n                                                                                                                                              ^\n"}
{"timestamp": "2025-05-01T17:05:17.200944", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:05:39.357311", "premises": ["all x. all y. (Score(x, y, UCL) & Goals(x) = Goals(y) & ExtraTimeMatch(x, y))", "all x. all y. ((Score(x, y, UCL) & Goals(x) = Goals(y) & ExtraTimeMatch(x, y)) & (Goals(x) = Goals(y)) & PenaltyShootout(x, y))", "Score(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Goals(RealMadrid) = 1 & Score(Atl\u00e9ticoMadrid, RealMadrid, UCL) & Goals(Atl\u00e9ticoMadrid) = 1", "Score(RealMadrid, Atl\u00e9ticoMadrid, UCL) & (Goals(RealMadrid) = 0 & Goals(Atl\u00e9ticoMadrid) = 0) & ExtraTimeMatch(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:05:47.247806", "premises": ["all x. all y. (UCLFinal(x, y) & Goals(x, GoalNumber) & Goals(y, GoalNumber) -> if(GoalNumber = NumberOfGoals(x, y), ExtraTimeNeeded(x, y), RegularTimeNeeded(x, y))", "all x. all y. (UCLFinal(RealMadrid, Atl\u00e9ticoMadrid) & Goals(RealMadrid, One) & Goals(Atl\u00e9ticoMadrid, One) -> PenaltyShootoutNeeded(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "all x. all y. (UCLFinal(RealMadrid, Atl\u00e9ticoMadrid) & Goals(RealMadrid, Zero) & Goals(Atl\u00e9ticoMadrid, Zero) -> PenaltyShootoutNeeded(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (UCLFinal(RealMadrid, Atl\u00e9ticoMadrid) & Goals(RealMadrid, Zero) & Goals(Atl\u00e9ticoMadrid, Zero) -> PenaltyShootoutNeeded(RealMadrid, Atl\u00e9ticoMadrid)\n                                                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (UCLFinal(RealMadrid, Atl\u00e9ticoMadrid) & Goals(RealMadrid, Zero) & Goals(Atl\u00e9ticoMadrid, Zero) -> PenaltyShootoutNeeded(RealMadrid, Atl\u00e9ticoMadrid)\n                                                                                                                                                                ^\n"}
{"timestamp": "2025-05-01T17:05:52.009950", "premises": ["all x y. (Teams(x, y) & ScoredEqual(x, y, RegularTime) -> PlayForExtraTime(x, y))", "all x y. (Teams(x, y) & ScoredEqual(x, y, RegularTime) & ScoredEqual(x, y, ExtraTime) -> PlayPenaltyShootout(x, y))", "ScoredEqual(RealMadrid, Atl\u00e9ticoMadrid, RegularTime) & Scored(RealMadrid, One) & Scored(Atl\u00e9ticoMadrid, One)", "ScoredEqual(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime) & Scored(RealMadrid, Zero) & Scored(Atl\u00e9ticoMadrid, Zero)"], "conclusion": "PlayPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:06:09.561233", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "(exists x. (Around(x, self) & Temperature(x) & Hot(x))"], "conclusion": "(exists x. (Around(x, self) & Temperature(x) & Hot(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(exists x. (Around(x, self) & Temperature(x) & Hot(x))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(exists x. (Around(x, self) & Temperature(x) & Hot(x))\n                                                      ^\n"}
{"timestamp": "2025-05-01T17:06:14.847961", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))"], "conclusion": "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-01T17:06:28.212773", "premises": ["exist xOne, xTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Scored(xOne, xTwo) & Different(xOne, xTwo))", "exist xOne, xTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Scored(xOne, xTwo) & Different(xOne, xTwo) &}", "scored(RealMadrid, One) & scored(Atl\u00e9ticoMadrid, One) & regularTime(TwoZeroOneSix)", "notNeededPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSix)", "all x. (LibraryCard(x) -> AccessToLibrary(x))", "all x. (LibraryCard(x) -> RegisteredInLibrary(x))", "all x. (RegisteredInLibrary(x) -> AccessToLibrary(x))", "all x. (RegisteredInLibrary(x) -> LibraryCard(x))", "all x. (RegisteredInLibrary(x) -> AccessToLibrary(x))", "all xOne, xTwo. exists yOne, yTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Different(xOne, xTwo) & Records(xOne, yOne) & Records(xTwo, yTwo) & \\_IsGameWon(xOne, xTwo))", "all xOne, xTwo. exists yOne, yTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Different(xOne, xTwo) & Records(xOne, yOne) & Records(xTwo, yTwo) & \\_IsGameWon(xOne, xTwo))", "Records(Georgia, SameRecord) & Records(Florida, SameRecord)", "Records(Georgia, SameRecord) & Records(Florida, SameRecord)"], "conclusion": "Records(Georgia, DifferentRecord) & Records(Florida, DifferentRecord)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'xOne' is an illegal variable name.  Constants may not be quantified.\nexist xOne, xTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Scored(xOne, xTwo) & Different(xOne, xTwo))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'xOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'xOne' is an illegal variable name.  Constants may not be quantified.\nexist xOne, xTwo. (SoccerTeam(xOne) & SoccerTeam(xTwo) & Scored(xOne, xTwo) & Different(xOne, xTwo))\n      ^\n"}
{"timestamp": "2025-05-01T17:07:05.069408", "premises": ["all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) & (goals(x, TwoZeroOneSix) = 0) & (goals(y, TwoZeroOneSix) = 0) -> PenaltyShootout(x, y)", "(goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1) & (goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1)", "(goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0) & (goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0)", "(Not(ExtraTime(RealMadrid, Atl\u00e9ticoMadrid))) & (Not(PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)))", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) & (goals(x, TwoZeroOneSix) = 0) & (goals(y, TwoZeroOneSix) = 0) -> PenaltyShootout(x, y)", "(goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1) & (goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1)", "(goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0) & (goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0)", "(Not(ExtraTime(RealMadrid, Atl\u00e9ticoMadrid))) & (Not(PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)))", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) & (goals(x, TwoZeroOneSix) = 0) & (goals(y, TwoZeroOneSix) = 0) -> PenaltyShootout(x, y)", "(goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1) & (goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1)", "(goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0) & (goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0)", "(Not(ExtraTime(RealMadrid, Atl\u00e9ticoMadrid))) & (Not(PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)))", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)", "all x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) & (goals(x, TwoZeroOneSix) = 0) & (goals(y, TwoZeroOneSix) = 0) -> PenaltyShootout(x, y)", "(goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1) & (goals(RealMadrid, TwoZeroOneSix) = 1) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1)", "(goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0) & (goals(RealMadrid, TwoZeroOneSix) = 0) & (goals(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0)"], "conclusion": "(Not(ExtraTime(RealMadrid, Atl\u00e9ticoMadrid))) & (Not(PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)\n                                                                                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x y. ((x_=_y) & (goals(x, TwoZeroOneSix) = goals(y, TwoZeroOneSix)) & (goals(x, TwoZeroOneSix) = 1) & (goals(y, TwoZeroOneSix) = 1) -> ExtraTime(x, y)\n                                                                                                                                                          ^\n"}
{"timestamp": "2025-05-01T17:07:21.759574", "premises": ["if exists x. exists y. (CompetesIn(x, y, UCL) & Scores(x, Goal) & Scores(y, Goal) & Goals(x, y) = GoalsInRegularTime(x, y) & ExtraTime(x, y) = False) then ExtraTime(x, y) = True", "if exists x. exists y. (CompetesIn(x, y, UCL) & Scores(x, Goal) & Scores(y, Goal) & Goals(x, y) = GoalsInRegularTime(x, y) & ExtraTime(y, x) = False) then ExtraTime(x, y) = True", "if exists x. exists y. (CompetesIn(x, y, UCL) & Scores(x, Goal) & Scores(y, Goal) & Goals(x, y) = GoalsInRegularTime(x, y) & ExtraTime(x, y) = False) then PenaltyShootout(x, y) = True", "(Scores(RealMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (Scores(Atl\u00e9ticoMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (CompetesIn(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Date(TwoZeroOneSix, UCL) & GoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid) = 1)", "(Scores(RealMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 0) & (Scores(Atl\u00e9ticoMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 0) & (CompetesIn(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Date(TwoZeroOneSix, UCL) & GoalsInExtraTime(RealMadrid, Atl\u00e9ticoMadrid) = 0)", "(Scores(RealMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (Scores(Atl\u00e9ticoMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (CompetesIn(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Date(TwoZeroOneSix, UCL)) & (ExtraTime(RealMadrid, Atl\u00e9ticoMadrid) = False) & (PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid) = False)", "(Scores(RealMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (Scores(Atl\u00e9ticoMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (CompetesIn(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Date(TwoZeroOneSeven, UCL) & GoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (ExtraTime(RealMadrid, Atl\u00e9ticoMadrid) = False) & (PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid) = True)"], "conclusion": "(Scores(RealMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (Scores(Atl\u00e9ticoMadrid, Goal) & Goals(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (CompetesIn(RealMadrid, Atl\u00e9ticoMadrid, UCL) & Date(TwoZeroOneEight, UCL) & GoalsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid) = 1) & (ExtraTime(RealMadrid, Atl\u00e9ticoMadrid) = False) & (PenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid) = False)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'exists'.\nif exists x. exists y. (CompetesIn(x, y, UCL) & Scores(x, Goal) & Scores(y, Goal) & Goals(x, y) = GoalsInRegularTime(x, y) & ExtraTime(x, y) = False) then ExtraTime(x, y) = True\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'exists'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'exists'.\nif exists x. exists y. (CompetesIn(x, y, UCL) & Scores(x, Goal) & Scores(y, Goal) & Goals(x, y) = GoalsInRegularTime(x, y) & ExtraTime(x, y) = False) then ExtraTime(x, y) = True\n   ^\n"}
{"timestamp": "2025-05-01T17:07:28.107850", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y)) & (Goals(x, x_goal) = Goals(y, y_goal)) & SolvedFor(x, y, ExtraTime))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y)) & (Goals(x, x_goal) = Goals(y, y_goal)) & (Goals(x, x_goal) = 0)) & SolvedFor(x, y, PenaltyShootout)", "Goals(RealMadrid, RealMadrid_one) = 1 & Goals(Atl\u00e9ticoMadrid, Atl\u00e9ticoMadrid_one) = 1 & SolvedFor(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "Goals(RealMadrid, RealMadrid_zero) = 0 & Goals(Atl\u00e9ticoMadrid, Atl\u00e9ticoMadrid_zero) = 0 & SolvedFor(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "not SolvedFor(RealMadrid, Atl\u00e9ticoMadrid, PenaltyShootout) & not SolvedFor(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 651: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 651: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:07:39.325486", "premises": ["all x. all y. (UCLFinal(x) & UCLFinal(y) & GoalsScored(x, RegularTime) = GoalsScored(y, RegularTime) -> Extratime(x, y))", "all x. all y. (UCLFinal(x) & UCLFinal(y) & GoalsScored(x, RegularTime) = GoalsScored(y, RegularTime) & GoalsScored(x, ExtraTime) = GoalsScored(y, ExtraTime) -> PenaltyShootout(x, y))", "GoalsScored(RealMadrid, TwoZeroOneSix) = 1 & GoalsScored(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 1 & UCLFinal(RealMadrid, TwoZeroOneSix) & UCLFinal(Atl\u00e9ticoMadrid, TwoZeroOneSix) & RegularTime(TwoZeroOneSix)"], "conclusion": "GoalsScored(RealMadrid, TwoZeroOneSix) = 0 & GoalsScored(Atl\u00e9ticoMadrid, TwoZeroOneSix) = 0 & UCLFinal(RealMadrid, TwoZeroOneSix) & UCLFinal(Atl\u00e9ticoMadrid, TwoZeroOneSix) & ExtraTime(TwoZeroOneSix)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 664: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 664: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:07:48.286427", "premises": ["all x. (Score(x) = Score(y) -> NeedsExtraTime(x, y))", "all x. (Score(x) = Score(y) & ExtraTimeScore(x) = ExtraTimeScore(y) -> PenaltyShootout(x, y))", "Score(RealMadrid, TwoZeroOneSix) = Score(Atl\u00e9ticoMadrid, TwoZeroOneSix)"], "conclusion": "ExtraTimeScore(RealMadrid, TwoZeroOneSix) = ExtraTimeScore(Atl\u00e9ticoMadrid, TwoZeroOneSix)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 642: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 642: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:08:00.920505", "premises": ["all x. ((OfficeIn(x, Germany) & OfficeIn(x, USA)) -> DifferentCountries(x) & MultinationalCompany(x)) & MakeMusicSoftware(x)"], "conclusion": "MultinationalCompany(x) -> (OfficeIn(x, Germany) & OfficeIn(x, USA)) | ... | (OfficeIn(x, countryOne) & OfficeIn(x, countryTwo) & ... & OfficeIn(x, countryN))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expression expected.\nMultinationalCompany(x) -> (OfficeIn(x, Germany) & OfficeIn(x, USA)) | ... | (OfficeIn(x, countryOne) & OfficeIn(x, countryTwo) & ... & OfficeIn(x, countryN))\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expression expected.\nMultinationalCompany(x) -> (OfficeIn(x, Germany) & OfficeIn(x, USA)) | ... | (OfficeIn(x, countryOne) & OfficeIn(x, countryTwo) & ... & OfficeIn(x, countryN))\n                                                                       ^\n"}
{"timestamp": "2025-05-01T17:08:12.371377", "premises": ["all x. (HasOffice(Ableton, x) & In(x, Germany))", "all x. (HasOffice(Ableton, x) & In(x, USA))", "all x, y. (DifferentCountries(x, y) & (In(x, USA) & In(y, Germany)))", "all x. (MultinationalCompany(x) & HasOffice(x, Germany) & HasOffice(x, USA))", "all x. (Makes(Ableton, MusicSoftware))", "MultinationalCompany(Ableton)", "all x. (Car(x) -> FourWheels(x))", "all x. (Truck(x) -> FourWheels(x))", "all x. (Bicycle(x) -> TwoWheels(x))", "all x. (Motorcycle(x) -> TwoWheels(x))", "all x. (Vehicle(x) -> Wheels(x))", "all x. (Vehicle(x) -> Engine(x))", "all x. (Vehicle(x) -> Transmission(x))", "all x. (Vehicle(x) -> GPS(x))", "all x. (Wheels(x) -> FourWheels(x))", "all x. (Prime(x) -> PositiveIntegerGreaterThanOne(x))", "all x. (NaturalNumber(x) -> PositiveInteger(x))", "all x. (PositiveInteger(x) -> NaturalNumber(x))", "all x. (PerfectSquare(x) -> PositiveInteger(x))", "all x. (Even(x) -> PositiveInteger(x))"], "conclusion": "all x. (PositiveInteger(x) -> HasPrimeFactorization(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y. (DifferentCountries(x, y) & (In(x, USA) & In(y, Germany)))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y. (DifferentCountries(x, y) & (In(x, USA) & In(y, Germany)))\n     ^\n"}
{"timestamp": "2025-05-01T17:08:17.004915", "premises": ["OfficesIn(Ableton, Germany)", "OfficesIn(Ableton, USA)", "DifferentCountries(USA, Germany)", "MultinationalCompany(x) -> OfficesIn(x, DifferentCountries)"], "conclusion": "Makes(Ableton, MusicSoftware)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DifferentCountries/2, DifferentCountries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DifferentCountries/2, DifferentCountries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DifferentCountries/2, DifferentCountries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DifferentCountries/2, DifferentCountries/0\n"}
{"timestamp": "2025-05-01T17:08:44.018465", "premises": ["all x. (OfficeIn(x, Germany)) & Ableton(x)", "all x. (OfficeIn(x, USA)) & Ableton(x)", "all x. (DifferentCountry(x, USA) & DifferentCountry(x, Germany)) & USA(x) & Germany(x)", "all x. (Multinational(x) <- OfficeIn(x, USA) & OfficeIn(x, Germany))", "makes(Ableton, MusicSoftware)", "Multinational(Ableton)", "all x. (Doctor(x) -> MedicalDegree(x))", "all x. (Examine(Doctors, Patients) -> Diagnose(Doctors, Illnesses))", "all x. (Paid(Doctors, Expertise, Experience) -> TotalSalary(Doctors, x))", "all x. (Specialize(Doctors, MedicineArea) -> Expertise(Doctors, thatArea))", "all x. (Prescribe(Doctors, Medication) -> Illness(Patients))", "all x. (Perform(Doctors, Surgery) -> Illness(Patients))", "Diagnose(Doctors, Illnesses)", "all x. (Animal(x) -> LivingEntity(x))", "all x. (Eat(LivingEntity, x) & Breathe(LivingEntity, x) & Move(LivingEntity, x) -> x is a living entity)", "all x. (Reproduce(Animals) -> x is an animal)", "all x. (Communicate(Animals) -> x is an animal)", "all x. (Adapt(Animals) -> x is an animal)", "exists x. (Fly(x) -> x is an animal)", "exists x. (Swim(x) -> x is an animal)", "exists x. (Camouflage(x) -> x is an animal)", "all x. (Object(x) -> PhysicalEntity(x))", "all x. (Exist(PhysicalEntity, x) & Interact(PhysicalEntity, x) -> x is a physical entity)", "all x. (Property(Objects, x) -> x is an object)", "all x. (Relate(Objects, x) -> x is an object)", "all x. (Impact(Objects, x) -> x is an object)", "ObjectA != ObjectB", "all x. (Human(x) -> IntelligentBeing(x))", "all x. (Learn(IntelligentBeing, x) & Reason(IntelligentBeing, x) & Solve(IntelligentBeing, x) -> x is an intelligent being)", "all x. (Communicate(IntelligentBeing, x) -> x is an intelligent being)", "all x. (Adapt(IntelligentBeing, x) -> x is an intelligent being)", "all x. (Create(IntelligentBeing, x) & Innovate(IntelligentBeing, x) -> x is an intelligent being)", "all x. (ThinkAbstractly(IntelligentBeing, x) -> x is an intelligent being)", "all x. (Understand(IntelligentBeing, Art) & Appreciate(IntelligentBeing, Music) -> x is an intelligent being)", "all x. (Understand(IntelligentBeing, Science) & Appreciate(IntelligentBeing, Technology) -> x is an intelligent being)", "all x. (Student(x) -> Enrolled(x, School))", "all x. (Enrolled(x, School) -> PaySchoolFees(x))", "all x. (PaySchoolFees(x) -> Student(x))"], "conclusion": "StudentA != StudentB", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. (Multinational(x) <- OfficeIn(x, USA) & OfficeIn(x, Germany))\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. (Multinational(x) <- OfficeIn(x, USA) & OfficeIn(x, Germany))\n                         ^\n"}
{"timestamp": "2025-05-01T17:15:00.308139", "premises": ["all x. ((OfficeIn(x, Germany) & OfficeIn(x, USA)) & DifferentCountry(Germany) & DifferentCountry(USA)) & MultinationalCompany(x) & MakeMusicSoftware(x)", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "exists x. exists y. (CanSwim(x) & CanSwim(y) & Married(x, y)) & (-CanSwim(x) | (-CanSwim(y)))", "all x. (Married(x) -> HaveChildren(x))", "all x. (Dog(x) -> Mammal(x) & CanSwim(x) -> False) | all x. (Dog(x) -> Mammal(x) & -CanSwim(x) -> True)", "all x. (PubliclyTraded(x) -> FileAnnualReports(x))", "all x. (FileAnnualReports(x) -> PubliclyTraded(x))", "all x. (PubliclyTraded(x) -> SubjectToRegulations(x))", "all x. ((FileAnnualReports(x) & PubliclyTraded(x)) & SubjectToRegulations(x))", "all x. (SAT(x) -> CollegeBound(x))", "SAT(x) -> CollegeAdmissions(x)", "all x. (CollegeBound(x) -> SAT(x))", "all x. (Bird(x) -> Feathers(x))", "all x. (Mammal(x) -> Fur(x))", "Bird(penguin)", "Mammal(polar_bear)", "(Bird(penguin) & Feathers(penguin)) & (-Mammal(penguin) | Fur(penguin))", "Mammal(polar_bear) & Fur(polar_bear) & (-Bird(polar_bear) | Feathers(polar_bear))", "all x. (Chef(x) -> French(x))", "all x. (French(x) -> Speaks(x, French))", "French(chef)"], "conclusion": "all x. (French(x) -> Chef(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Married/1, Married/2, French/1, French/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Married/1, Married/2, French/1, French/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Married/1, Married/2, French/1, French/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Married/1, Married/2, French/1, French/0\n"}
{"timestamp": "2025-05-01T17:15:16.254868", "premises": ["hasOffice(Ableton, Germany)", "hasOffice(Ableton, USA)", "differentCountries(USA, Germany)", "MultinationalCompany(x) <- hasOffice(x, differentCountry(x))", "makesMusicSoftware(Ableton)", "MultinationalCompany(Ableton)", "all x. (Bird(x) -> Can(x, Fly))", "all x. (Can(x, Fly) -> Bird(x))", "all x. (Mammal(x) -> Have(x, Hair))", "all x. (Have(x, Hair) -> Mammal(x))", "all x. (Human(x) -> Can(x, Walk))", "all x. (Can(x, Walk) -> Human(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Bird(x) -> Have(x, Hair))", "SantaClaus exists", "Person(SantaClaus)", "Exist(x) -> Visible(x)", "NonExist(SantaClaus)", "Exist(x) -> Visible(x)", "Deaf(x) -> Can'tSpeak(x)", "CanHear(Deaf(x))", "CanHear(x)", "Person(Deaf(x))", "CanSpeak(Human(x))", "all x. (Bird(x) -> Can(x, HaveWings))", "all x. (Mammal(x) -> Have(x, Hair))", "all x. (Cat(x) -> Have(x, Tails))", "all x. (Bird(x) -> Have(x, Feathers))"], "conclusion": "all x. (Bird(x) -> Have(x, Fur))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nMultinationalCompany(x) <- hasOffice(x, differentCountry(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nMultinationalCompany(x) <- hasOffice(x, differentCountry(x))\n                        ^\n"}
{"timestamp": "2025-05-01T17:15:21.044527", "premises": ["exists x. exists y. (HasOffice(Ableton, x) & HasOffice(Ableton, y) & x=Germany & y=USA)", "exists x. exists y. (HasOffice(Ableton, x) & HasOffice(Ableton, y) & x=USA & y=Germany)", "exists x. exists y. (Country(x) & (x=USA_&_y=Germany) & (x<>y))", "all x. ((HasOffice(x, Germany) & HasOffice(x, USA)) -> Multinational(x))", "all x. (HasOffice(Ableton, x) & Makes(Ableton, MusicSoftware))"], "conclusion": "Multinational(Ableton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Country(x) & ((x = USA_) & (_y = Germany))) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%(Country(x) & ((x = USA_) & (_y = Germany))) & x<>y%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:15:38.263192", "premises": ["exists x. exists y. (Office(Ableton, x) & Office(Ableton, y) & DifferentCountries(x, y)) & In(Germany, x) & In(USA, y)", "exists x. exists y. (Office(Ableton, x) & Office(Ableton, y) & DifferentCountries(x, y)) & In(USA, x) & In(Germany, y)", "exists x. exists y. (DifferentCountries(x, y) & (In(x, USA) & In(x, Germany)) & (In(y, USA) & In(y, Germany)))", "multinational(x) <- exists x. exists y. (Office(x, x) & Office(x, y) & DifferentCountries(x, y))", "makes(Ableton, MusicSoftware)", "-Office(Ableton, Germany)", "exists x. exists y. exists z. ((MostPeople(x, UnitedStates) &", "exists x. ((MostPeople(x, UnitedStates) &", "exists x. ((In(x, Chicago, UnitedStates)) & (In(x, Midwest, UnitedStates))", "exists x. ((In(x, Dallas, Texas)) & (In(x, Texas, UnitedStates))", "exists x. ((In(x, Los_Angeles, California)) & (In(x, California, UnitedStates))", "exists x. ((In(x, NewYork, Northeast, UnitedStates)) & (In(x, NewYork, UnitedStates))", "exists x. ((In(x, Houston, Texas)) & (In(x, Texas, UnitedStates))", "In(Chicago, UnitedStates)", "exists x. exists y. ((EatsTooMuchSugar(x) & Diabetes(y)) & (Diabetes(x) & Not(Diabetes(y))))", "exists x. ((Diabetes(x) & HighBloodSugar(x)) & (HighBloodSugar(y) & Not(Diabetes(x))))", "exists x. ((HighBloodSugar(x) & Diabetes(x)) & (Diabetes(y) & Not(HighBloodSugar(x))))", "exists x. ((Exercise(x) & (LowersBloodSugar(x) & Diabetes(x)))", "exists x. ((Healthy(x) & NormalBloodSugar(x) & Not(Diabetes(x)))"], "conclusion": "exists x. ((Healthy(x) & Not(Diabetes(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((Healthy(x) & Not(Diabetes(x)))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((Healthy(x) & Not(Diabetes(x)))\n                                          ^\n"}
{"timestamp": "2025-05-01T17:15:58.183508", "premises": ["Office(Ableton, Germany)", "Office(Ableton, USA)", "USA <> Germany", "Multinational(x) <- HasOffice(x, Germany) & HasOffice(x, USA)", "MusicSoftware(Ableton)", "~Office(Ableton, Germany)"], "conclusion": "MusicSoftware(Ableton) & Multinational(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<>'.\nUSA <> Germany\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<>'.\nUSA <> Germany\n    ^\n"}
{"timestamp": "2025-05-01T17:16:07.443801", "premises": ["exists x. (Office(x, Germany) & Office(x, USA) & DifferentCountries(USA, Germany) & MultinationalCompany(x)) & Software(x)", "exists x. (Office(x, Germany) & Office(x, USA) & DifferentCountries(USA, Germany) & MultinationalCompany(x)) & Software(x)", "exists x. (USA(x) & Germany(x) & DifferentCountries(x))", "all x. (Office(x, Germany) & Office(x, USA) & DifferentCountries(x) -> MultinationalCompany(x))", "Software(Ableton)"], "conclusion": "-Office(Ableton, Germany)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DifferentCountries/1, DifferentCountries/2, USA/1, USA/0, Germany/1, Germany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DifferentCountries/1, DifferentCountries/2, USA/1, USA/0, Germany/1, Germany/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DifferentCountries/1, DifferentCountries/2, USA/1, USA/0, Germany/1, Germany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DifferentCountries/1, DifferentCountries/2, USA/1, USA/0, Germany/1, Germany/0\n"}
{"timestamp": "2025-05-01T17:16:15.616607", "premises": ["Offices(Ableton, Germany) & In(Ableton, Germany)", "Offices(Ableton, USA) & In(Ableton, USA)", "USA # Germany", "all x. (Offices(x, Germany) & Offices(x, USA)) -> MultinationalCompany(x)", "SoftwareMaker(Ableton) & Music(Ableton)", "-Offices(Ableton, Germany)", "all x. (Bird(x) -> CanFly(x))", "some x. (Mammal(x) -> CanFly(x))", "some x. (Mammal(x) -> HasFur(x))", "all x. (Bird(x) -> HasFeathers(x))", "some x. (Bird(x) -> HasWings(x))", "all x. (Bird(x) -> HasBeaks(x))", "some x. (Bird(x) -> HasTalons(x))", "some x. (Bird(x) -> HasNests(x))", "some x. (Mammal(x) -> HasHair(x))", "all x. (Cat(x) -> Mammal(x))"], "conclusion": "some x. ((Bird(x) & HasNests(x)) & In(x, Trees))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '#'.\nUSA # Germany\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '#'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '#'.\nUSA # Germany\n    ^\n"}
{"timestamp": "2025-05-01T17:16:46.529549", "premises": ["all x. ((Dispressing(x) -> Sad(x)) & (EndOfRelationship(x) -> Dispressing(x)))"], "conclusion": "-Invigorating(EndOfRelationship)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: EndOfRelationship/1, EndOfRelationship/0\n"}
{"timestamp": "2025-05-01T17:17:28.179483", "premises": ["\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x. (Woodware(x) \u2192 Biodegradable(x))", "\u2200x. (Paper(x) \u2192 Woodware(x))", "\u00ac(\u2203x. (Good(x) \u2227 Bad(x)))", "\u2200x. (EnvironmentFriendly(x) \u2192 Good(x))", "(Paper(Worksheet) \u2228 EnvironmentFriendly(Worksheet))"], "conclusion": "\u00acDispensable(Worksheet)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n  ^\n"}
{"timestamp": "2025-05-01T17:17:44.462786", "premises": ["all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Chinese(x))", "all x. if (isFrom(x, China) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Indian(x))", "all x. if (isFrom(x, India) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isFrom(x, China)) then (Chinese(x))", "all x. if (isFrom(x, India)) then (Indian(x))", "exists x. isFrom(x, India)", "all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Chinese(x))", "all x. if (isFrom(x, China) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Indian(x))", "all x. if (isFrom(x, India) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isFrom(x, China)) then (Chinese(x))", "all x. if (isFrom(x, India)) then (Indian(x))", "exists x. isFrom(x, India)", "all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Chinese(x))", "all x. if (isFrom(x, China) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Indian(x))", "all x. if (isFrom(x, India) & isFrom(x, BRICS\\_Country)) then (isFrom(x, BRICS\\_Country))", "all x. if (isFrom(x, China)) then (Chinese(x))", "all x. if (isFrom(x, India)) then (Indian(x))"], "conclusion": "exists x. isFrom(x, India)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Chinese(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. if (isMember(x, BRICS) & BRICS\\_Emerging(x)) then (Chinese(x))\n                              ^\n"}
{"timestamp": "2025-05-01T17:17:47.994407", "premises": ["all x. (From(x, China) -> Chinese(x))", "all x. (From(x, India) -> Indian(x))", "exists x. (From(x, India))", "all x. (BRIC(x) -> EconomyEmerging(x))", "all x. (From(x, China) -> BRIC(x))", "all x. (BRIC(x) -> EconomyEmerging(x))"], "conclusion": "all x. (From(x, China) -> ~From(x, India)) & all x. (From(x, India) -> ~From(x, China))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (all x (%%START ERROR%%From(x,China) -> ~From(x,India)%%END ERROR%%) & all x (From(x,India) -> ~From(x,China))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (all x (%%START ERROR%%From(x,China) -> ~From(x,India)%%END ERROR%%) & all x (From(x,India) -> ~From(x,China))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:18:22.796452", "premises": ["all x. (PersonFromChina(x) -> Chinese(x))", "all x. (PersonFromIndia(x) -> Indian(x))", "exists x. (PersonFromIndia(x))", "all x. (BRICS(x) & (Emerging Economy(x) & Chinese(x)))", "all x. (PersonFromChina(x) -> FromCountryOfBRICS(x))", "all x. (BRICS(x) & (Emerging Economy(x) & Indian(x)))", "all x. (PersonFromIndia(x) -> InCountryOfBRICS(x))"], "conclusion": "all x. ((PersonFromChina(x) & Chinese(x)) & (PersonFromIndia(x) & Indian(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Economy'.  Expected token ')'.\nall x. (BRICS(x) & (Emerging Economy(x) & Chinese(x)))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Economy'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Economy'.  Expected token ')'.\nall x. (BRICS(x) & (Emerging Economy(x) & Chinese(x)))\n                             ^\n"}
{"timestamp": "2025-05-01T17:18:36.348417", "premises": ["all x. (BRICS(x) -> not(x=Brazil) & not(x=Russia) & not(x=India) & not(x=China) & not(x=SouthAfrica))", "all x. (BRICS(x) & EmergeingEconomy(x))", "all x. (FromChina(x) -> From(x, BRICS))", "all x. (FromIndia(x) -> In(x, BRICS))", "all x. (FromChina(x) -> Chinese(x))", "all x. (FromIndia(x) -> Indian(x))", "exists x. (FromIndia(x))", "EmergeingEconomy(China)", "FromIndia(Indian(x)) & not(FromChina(x))", "all x. (FromIndia(x) -> not(Chinese(x)))", "all x. (FromChina(x) -> Chinese(x))", "all x. (BRICS(x) -> EmergeingEconomy(x))", "not(FromIndia(Indian(x)))"], "conclusion": "not(EmergeingEconomy(India))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Indian/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Indian/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Indian/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Indian/1\n"}
{"timestamp": "2025-05-01T17:18:57.662781", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Visual(x) -> Video(x))", "all x. (Video(x) -> Movie(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:19:32.083793", "premises": ["exists x. BRICS(x) & EmergingEconomy(x)", "exists x. (From(x, China) -> From(x, BRICS))", "exists x. BRICS(x) & EmergingEconomy(x)", "exists x. (From(x, India) -> From(x, BRICS))", "exists x. From(x, China) -> Chinese(x)", "exists x. From(x, India) -> Indian(x)"], "conclusion": "exists x. From(x, India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
{"timestamp": "2025-05-01T17:20:17.157184", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))"], "conclusion": "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T17:21:45.628509", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) -> (RightFoot(x) & LeftFoot(x)) & VeryEfficient(x, RightFoot) & VeryEfficient(x, LeftFoot))", "all x. (ScoreManyGoalsUsingLeftFoot(x) -> VeryEfficient(x, LeftFoot))", "all x. (ScoreManyGoalsUsingRightFoot(x) -> VeryEfficient(x, RightFoot))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(CristianoRonaldo, RightFoot)", "ScoreManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftFoot/1, LeftFoot/0, RightFoot/1, RightFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftFoot/1, LeftFoot/0, RightFoot/1, RightFoot/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftFoot/1, LeftFoot/0, RightFoot/1, RightFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftFoot/1, LeftFoot/0, RightFoot/1, RightFoot/0\n"}
{"timestamp": "2025-05-01T17:21:58.218081", "premises": ["exists x. (Foot(x) & left=(x)) &", "exists x. (Foot(x) & left=(x)) &", "all x. (SoccerPlayer(x) -> TopSoccerPlayer(x) -> (LeftEfficient(x) & RightEfficient(x)))", "all x. (ScoreManyGoals(x, left) -> LeftEfficient(x))", "all x. (ScoreManyGoals(x, right) -> RightEfficient(x))", "CristianoRonaldo(x)", "CristianoRonaldo(x) -> CanUseRight(x)", "CristianoRonaldo(x) -> ScoreManyGoals(x, left)"], "conclusion": "all x. (SoccerPlayer(x) -> TopSoccerPlayer(x) -> (LeftEfficient(x) & RightEfficient(x)) & (LeftEfficient(x) & RightEfficient(x) -> TopSoccerPlayer(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nexists x. (Foot(x) & left=(x)) &\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nexists x. (Foot(x) & left=(x)) &\n                                ^\n"}
{"timestamp": "2025-05-01T17:22:07.973217", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) -> (EfficientLeftFoot(x) & EfficientRightFoot(x)))", "all x. (CanScoreManyGoalsUsingLeftFoot(x) -> EfficientLeftFoot(x))", "all x. (CanScoreManyGoalsUsingRightFoot(x) -> EfficientRightFoot(x))", "SoccerPlayer(CristianoRonaldo)", "EfficientRightFoot(CristianoRonaldo)", "CanScoreManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "~TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~TopSoccerPlayer(CristianoRonaldo).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~TopSoccerPlayer(CristianoRonaldo).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:22:18.063518", "premises": ["all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-01T17:23:04.942792", "premises": ["all x. (SoccerPlayer(x) -> RightFoot(x) & LeftFoot(x))", "all x. (TopSoccerPlayer(x) -> Efficient(x, LeftFoot) & Efficient(x, RightFoot))", "all x. (ScoredManyGoalsUsingLeftFoot(x) -> Efficient(x, LeftFoot))", "all x. (ScoredManyGoalsUsingRightFoot(x) -> Efficient(x, RightFoot))", "SoccerPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightFoot)", "ScoredManyGoalsUsingLeftFoot(CristianoRonaldo)", "-TopSoccerPlayer(CristianoRonaldo)", "all x. (FirstClassPassenger(x) -> CanTravel(x, TwoFiveZeroZeroZeroZero))", "all x. (BusinessClassPassenger(x) -> CanTravel(x, OneZeroZeroZeroZeroZero))", "all x. (CoachClassPassenger(x) -> CanTravel(x, FiveZeroZeroZeroZero))", "all x. (BasicClassPassenger(x) -> CanTravel(x, TwoFiveZeroZeroZero))", "all x. (FrequentFlyer(x) -> CanTravel(x, TwoFiveZeroZeroZeroZero))", "all x. (FrequentFlyer(x) -> SpecialPrivileges(x))", "-CanTravel(FrequentFlyer, TwoFiveZeroZeroZeroZero)", "all x. (DrivesCar(x) -> HasDriverLicense(x))", "all x. (HasCleanDrivingRecord(x) -> HasDriverLicense(x))", "all x. (HasDriverLicense(x) -> HasRightToDriveCar(x))", "all x. (SuspendedDriverLicense(x) -> CannotDriveCar(x))", "all x. (RevokedDriverLicense(x) -> CannotDriveCar(x))", "SuspendedDriverLicense(x) -> HasCleanDrivingRecord(x)", "all x. (BeeAllergic(x) -> Can\u2019tEatBees(x))", "all x. (TreeNutAllergic(x) -> Can\u2019tEatNuts(x))", "all x. (PeanutAllergic(x) -> Can\u2019tEatPeanuts(x))", "all x. (ShellfishAllergic(x) -> Can\u2019tEatSeafood(x))", "all x. (SoyAllergic(x) -> Can\u2019tEatSoyProducts(x))", "all x. (WheatAllergic(x) -> Can\u2019tEatWheat(x))", "all x. (DairyAllergic(x) -> Can\u2019tEatDairy(x))", "all x. (HasPhone(x) -> HasPhoneNumber(x))", "all x. (HasPhoneNumber(x) -> CanMakeCalls(x))", "all x. (HasPhoneNumber(x) -> CanSendTextMessages(x))", "all x. (HasPhoneNumber(x) -> CanReceiveTextMessages(x))", "all x. (HasPhoneNumber(x) -> CanReceiveCalls(x))", "all x. (NutAllergic(x) -> Can\u2019tEatBees(x))", "all x. (TreeNutAllergic(x) -> Can\u2019tEatNuts(x))", "all x. (PeanutAllergic(x) -> Can\u2019tEatPeanuts(x))", "all x. (ShellfishAllergic(x) -> Can\u2019tEatSeafood(x))", "all x. (SoyAllergic(x) -> Can\u2019tEatSoyProducts(x))", "all x. (WheatAllergic(x) -> Can\u2019tEatWheat(x))", "all x. (DairyAllergic(x) -> Can\u2019tEatDairy(x))", "all x. (HasDriverLicense(x) -> HasRightToDriveCar(x))", "all x. (BeeAllergic(x) -> Can\u2019tEatBees(x))", "all x. (TreeNutAllergic(x) -> Can\u2019tEatNuts(x))", "all x. (PeanutAllergic(x) -> Can\u2019tEatPeanuts(x))", "all x. (ShellfishAllergic(x) -> Can\u2019tEatSeafood(x))", "all x. (SoyAllergic(x) -> Can\u2019tEatSoyProducts(x))", "all x. (WheatAllergic(x) -> Can\u2019tEatWheat(x))", "all x. (DairyAllergic(x) -> Can\u2019tEatDairy(x))"], "conclusion": "all x. (DrivesCar(x) -> HasDriverLicense(x))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xe2 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-05-01T17:23:11.820313", "premises": ["all x. (SoccerPlayer(x) -> (RightFoot(x) & LeftFoot(x)))", "all x. (TopSoccerPlayer(x) -> (VeryEfficiently(x, LeftFoot) & VeryEfficiently(x, RightFoot)))", "all x. (ScoresManyGoalsUsingLeftFoot(x) -> (VeryEfficiently(x, LeftFoot)))", "all x. (ScoresManyGoalsUsingRightFoot(x) -> (VeryEfficiently(x, RightFoot)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficiently(CristianoRonaldo, RightFoot)", "ScoresManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "~TopSoccerPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~TopSoccerPlayer(CristianoRonaldo).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~TopSoccerPlayer(CristianoRonaldo).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:23:18.576502", "premises": ["all x. (SoccerPlayer(x) -> (RightFoot(x) & LeftFoot(x)))", "all x. (TopSoccerPlayer(x) -> (VeryEfficient(x, LeftFoot) & VeryEfficient(x, RightFoot)))", "all x. (ScoreManyGoalsUsingLeftFoot(x) -> (VeryEfficient(x, LeftFoot)))", "all x. (ScoreManyGoalsUsingRightFoot(x) -> (VeryEfficient(x, RightFoot)))", "SoccerPlayer(CristianoRonaldo)", "VeryEfficient(CristianoRonaldo, RightFoot)", "ScoreManyGoalsUsingLeftFoot(CristianoRonaldo)"], "conclusion": "not (TopSoccerPlayer(CristianoRonaldo))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RightFoot/1, RightFoot/0, LeftFoot/1, LeftFoot/0\n"}
{"timestamp": "2025-05-01T17:23:56.831069", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "all x. (Worksheet(x) -> Biodegradable(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)"], "conclusion": "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Worksheet/1, Worksheet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Worksheet/1, Worksheet/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Worksheet/1, Worksheet/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Worksheet/1, Worksheet/0\n"}
{"timestamp": "2025-05-01T17:24:06.857019", "premises": ["Hatchery(NationalLobsterHatchery), LocatedIn(NationalLobsterHatchery, Padstow), England(NationalLobsterHatchery)", "OpenToVisitors(NationalLobsterHatchery)", "Hatchery(x) -> (Profit(x) | Conservation(x))", "Hatchery(x) -> (Conservation(x) -> ReleaseAnimalsIntoTheWild(x))", "Hatchery(NationalLobsterHatchery) -> (-Profit(NationalLobsterHatchery))", "Hatchery(NationalLobsterHatchery) -> Conservation(NationalLobsterHatchery)", "Hatchery(x) -> (Profit(x) | Conservation(x))", "Hatchery(x) -> (Conservation(x) -> ReleaseAnimalsIntoTheWild(x))", "Hatchery(NationalLobsterHatchery) -> (-Profit(NationalLobsterHatchery))"], "conclusion": "Hatchery(NationalLobsterHatchery) -> Conservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nHatchery(NationalLobsterHatchery), LocatedIn(NationalLobsterHatchery, Padstow), England(NationalLobsterHatchery)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nHatchery(NationalLobsterHatchery), LocatedIn(NationalLobsterHatchery, Padstow), England(NationalLobsterHatchery)\n                                 ^\n"}
{"timestamp": "2025-05-01T17:24:15.249886", "premises": ["The National Lobster Hatchery is located in Padstow, England.", "openTo(NationalLobsterHatchery, Visitors)", "all x. (Hatchery(x) -> ForProfit(x) | ForConservation(x))", "all x. (ForConservation(x) -> MightReleaseAnimals(x))", "notForProfit(NationalLobsterHatchery)"], "conclusion": "ForConservation(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'National'.\nThe National Lobster Hatchery is located in Padstow, England.\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'National'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'National'.\nThe National Lobster Hatchery is located in Padstow, England.\n    ^\n"}
{"timestamp": "2025-05-01T17:24:59.735000", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)", "exists x. (TuringAward(x) & (ArtificialIntelligence(x) | (AnalysisOfAlgorithms(x) | (NumericalMethods(x))))", "TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. (TuringAward(x) & (ArtificialIntelligence(x) | (AnalysisOfAlgorithms(x) | (NumericalMethods(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (TuringAward(x) & (ArtificialIntelligence(x) | (AnalysisOfAlgorithms(x) | (NumericalMethods(x))))\n                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (TuringAward(x) & (ArtificialIntelligence(x) | (AnalysisOfAlgorithms(x) | (NumericalMethods(x))))\n                                                                                                           ^\n"}
{"timestamp": "2025-05-01T17:25:24.404210", "premises": ["all x. (TuringAward(x) -> (ContributesTo(x, AnalysisOfAlgorithms) & OR (ContributesTo(x, ArtificialIntelligence) & OR (ContributesTo(x, NumericalMethods))))", "all x. (TuringAward(x) -> (ContributesTo(x, ArtificialIntelligence) & OR (ContributesTo(x, AnalysisOfAlgorithms) & OR (ContributesTo(x, NumericalMethods))))", "all x. (TuringAward(x) -> (ContributesTo(x, AnalysisOfAlgorithms) & OR (ContributesTo(x, ArtificialIntelligence) & OR (ContributesTo(x, NumericalMethods))))", "all x. (TuringAward(x) -> (ContributesTo(x, AnalysisOfAlgorithms) & OR (ContributesTo(x, ArtificialIntelligence) & OR (ContributesTo(x, NumericalMethods))))"], "conclusion": "all x. (TuringAward(x) -> (OR (ContributesTo(x, ArtificialIntelligence), OR (ContributesTo(x, AnalysisOfAlgorithms), OR (ContributesTo(x, NumericalMethods)))) & (OR (2(x) & TuringAward(x)), OR (Exists (x) & TuringAward(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. (TuringAward(x) -> (OR (ContributesTo(x, ArtificialIntelligence), OR (ContributesTo(x, AnalysisOfAlgorithms), OR (ContributesTo(x, NumericalMethods)))) & (OR (2(x) & TuringAward(x)), OR (Exists (x) & TuringAward(x))))\n                                                                                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. (TuringAward(x) -> (OR (ContributesTo(x, ArtificialIntelligence), OR (ContributesTo(x, AnalysisOfAlgorithms), OR (ContributesTo(x, NumericalMethods)))) & (OR (2(x) & TuringAward(x)), OR (Exists (x) & TuringAward(x))))\n                                                                                                                                                                           ^\n"}
{"timestamp": "2025-05-01T17:25:32.333878", "premises": ["all x. ((TuringAward(x) & Contributor(x)) -> exist y. ((Field(y) = ArtificialIntelligence) & Contributor(y)))", "all x. ((Contributor(x) & AnalysisOfAlgorithms(x)) -> exist y. ((Field(y) = AnalysisOfAlgorithms) & Contributor(y)))", "all x. ((Contributor(x) & Field(x) = ArtificialIntelligence) -> exist y. ((Field(y) = ArtificialIntelligence) & Contributor(y)))", "all x. ((Contributor(x) & Field(x) = NumericalMethods) -> exist y. ((Field(y) = NumericalMethods) & Contributor(y)))", "all x. ((Contributor(x) & Field(x) = ArtificialIntelligence) -> exist y. ((Field(y) = ArtificialIntelligence) & Contributor(y)))"], "conclusion": "(exists x. TuringAward(x) & Contributor(x)) & (exists y. TuringAward(y) & Contributor(y)) & (Field(x) = ArtificialIntelligence) & (Field(y) = ArtificialIntelligence) -> (ArtificialIntelligence(x) & ArtificialIntelligence(y)) & (Contributor(x) & Contributor(y)) & (exists z. TuringAward(z) & (Field(z) = ArtificialIntelligence) & (ArtificialIntelligence(z) & Contributor(z))) & (Field(y) = ArtificialIntelligence) & (ArtificialIntelligence(y) & Contributor(y)) & (Field(x) = ArtificialIntelligence) & (ArtificialIntelligence(x) & Contributor(x)) & (Field(z) = ArtificialIntelligence) & (ArtificialIntelligence(z) & Contributor(z)) & (Field(y) = ArtificialIntelligence) & (ArtificialIntelligence(y) & Contributor(y)) & (ArtificialIntelligence(x) & ArtificialIntelligence(y) & (Contributor(x) & Contributor(y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0, ArtificialIntelligence/1, ArtificialIntelligence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0, ArtificialIntelligence/1, ArtificialIntelligence/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0, ArtificialIntelligence/1, ArtificialIntelligence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0, ArtificialIntelligence/1, ArtificialIntelligence/0\n"}
{"timestamp": "2025-05-01T17:25:40.168809", "premises": ["exists x. (TuringAward(x) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)"], "conclusion": "exists x. exists y. ((TuringAward(x)) & (TuringAward(y)) & At leastOne(x, ArtificialIntelligence) & At leastOne(y, ArtificialIntelligence))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'leastOne'.  Expected token ')'.\nexists x. exists y. ((TuringAward(x)) & (TuringAward(y)) & At leastOne(x, ArtificialIntelligence) & At leastOne(y, ArtificialIntelligence))\n                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'leastOne'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'leastOne'.  Expected token ')'.\nexists x. exists y. ((TuringAward(x)) & (TuringAward(y)) & At leastOne(x, ArtificialIntelligence) & At leastOne(y, ArtificialIntelligence))\n                                                              ^\n"}
{"timestamp": "2025-05-01T17:25:51.818131", "premises": ["exists x. (TuringAward(x) & (x=DonaldKnuth) | (x=MarvinMinsky) | (x=RichardHamming) | (x=JohnMcCarthy))", "DonaldKnuth(ContributedTo(AnalysisOfAlgorithms))", "MarvinMinsky(ContributedTo(ArtificialIntelligence))", "RichardHamming(Researched(NumericalMethods))", "JohnMcCarthy(ContributedTo(ArtificialIntelligence))"], "conclusion": "exists x. exists y. ((TuringAward(x) & (x=DonaldKnuth) & (y=MarvinMinsky) | (x=DonaldKnuth) & (y=RichardHamming) | (x=DonaldKnuth) & (y=JohnMcCarthy) | (x=MarvinMinsky) & (y=RichardHamming) | (x=MarvinMinsky) & (y=JohnMcCarthy) | (x=RichardHamming) & (y=JohnMcCarthy)) & (AtLeastTwo(x,y) & WorkIn(x,ArtificialIntelligence) & WorkIn(y,ArtificialIntelligence))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. ((TuringAward(x) & (x=DonaldKnuth) & (y=MarvinMinsky) | (x=DonaldKnuth) & (y=RichardHamming) | (x=DonaldKnuth) & (y=JohnMcCarthy) | (x=MarvinMinsky) & (y=RichardHamming) | (x=MarvinMinsky) & (y=JohnMcCarthy) | (x=RichardHamming) & (y=JohnMcCarthy)) & (AtLeastTwo(x,y) & WorkIn(x,ArtificialIntelligence) & WorkIn(y,ArtificialIntelligence))\n                                                                                                                                                                                                                                                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. ((TuringAward(x) & (x=DonaldKnuth) & (y=MarvinMinsky) | (x=DonaldKnuth) & (y=RichardHamming) | (x=DonaldKnuth) & (y=JohnMcCarthy) | (x=MarvinMinsky) & (y=RichardHamming) | (x=MarvinMinsky) & (y=JohnMcCarthy) | (x=RichardHamming) & (y=JohnMcCarthy)) & (AtLeastTwo(x,y) & WorkIn(x,ArtificialIntelligence) & WorkIn(y,ArtificialIntelligence))\n                                                                                                                                                                                                                                                                                                                                                                      ^\n"}
{"timestamp": "2025-05-01T17:25:55.635902", "premises": ["all x. (TuringAward(x) -> (AnalysisOfAlgorithms(x) | ArtificialIntelligence(x) | NumericalMethods(x) | ArtificialIntelligence(x)))", "hasMadeContributions(DonaldKnuth, AnalysisOfAlgorithms)", "hasMadeContributions(MarvinMinsky, ArtificialIntelligence)", "hasMadeContributions(RichardHamming, NumericalMethods)", "hasMadeContributions(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "all x. (TuringAward(x) & (ArtificialIntelligence(x) | ArtificialIntelligence(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0, ArtificialIntelligence/1, ArtificialIntelligence/0, AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0, ArtificialIntelligence/1, ArtificialIntelligence/0, AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0, ArtificialIntelligence/1, ArtificialIntelligence/0, AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NumericalMethods/1, NumericalMethods/0, ArtificialIntelligence/1, ArtificialIntelligence/0, AnalysisOfAlgorithms/1, AnalysisOfAlgorithms/0\n"}
{"timestamp": "2025-05-01T17:25:59.979933", "premises": ["exists x. (TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "exists x. (AnalysisOfAlgorithms(x) & ContributedTo(x, DonaldKnuth))", "exists x. (ArtificialIntelligence(x) & ContributedTo(x, MarvinMinsky))", "exists x. (NumericalMethods(x) & ContributedTo(x, RichardHamming))", "exists x. (ArtificialIntelligence(x) & ContributedTo(x, JohnMcCarthy))"], "conclusion": "exists x. (TuringAward(x) & (MarvinMinsky(x) | JohnMcCarthy(x))) & (AnalysisOfAlgorithms(MarvinMinsky) | NumericalMethods(JohnMcCarthy))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RichardHamming/1, RichardHamming/0, DonaldKnuth/1, DonaldKnuth/0, JohnMcCarthy/1, JohnMcCarthy/0, MarvinMinsky/1, MarvinMinsky/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RichardHamming/1, RichardHamming/0, DonaldKnuth/1, DonaldKnuth/0, JohnMcCarthy/1, JohnMcCarthy/0, MarvinMinsky/1, MarvinMinsky/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RichardHamming/1, RichardHamming/0, DonaldKnuth/1, DonaldKnuth/0, JohnMcCarthy/1, JohnMcCarthy/0, MarvinMinsky/1, MarvinMinsky/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RichardHamming/1, RichardHamming/0, DonaldKnuth/1, DonaldKnuth/0, JohnMcCarthy/1, JohnMcCarthy/0, MarvinMinsky/1, MarvinMinsky/0\n"}
{"timestamp": "2025-05-01T17:26:13.687492", "premises": ["all x. ((TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x))) | (TuringAward(x) & Not(DonaldKnuth(x)) & Not(MarvinMinsky(x)) & Not(RichardHamming(x)) & Not(JohnMcCarthy(x))))", "TuringAward(DonaldKnuth) | TuringAward(MarvinMinsky) | TuringAward(RichardHamming) | TuringAward(JohnMcCarthy)", "all x. (AnalysisOfAlgorithms(x) -> Contribution(x, DonaldKnuth))", "AnalysisOfAlgorithms(DonaldKnuth)", "all x. (ArtificialIntelligence(x) -> Contribution(x, MarvinMinsky))", "Contribution(MarvinMinsky, ArtificialIntelligence)", "all x. (NumericalMethods(x) -> Contribution(x, RichardHamming))", "Contribution(RichardHamming, NumericalMethods)", "all x. (ArtificialIntelligence(x) -> Contribution(x, JohnMcCarthy))", "Contribution(JohnMcCarthy, ArtificialIntelligence)", "exists x. (BRICS(x) & (TuringAward(x) & (ArtificialIntelligence(x)))) & exists y. (BRICS(y) & (TuringAward(y) & (ArtificialIntelligence(y)))) | (exists x. (TuringAward(x) & Not(ArtificialIntelligence(x)))) & (exists y. (TuringAward(y) & (ArtificialIntelligence(y))))", "At least two people who worked in artificial intelligence have won the Turing Award. | At least one person who worked in artificial intelligence has not won the Turing Award and at least one person who won the Turing Award did not work in artificial intelligence."], "conclusion": "At least one person who won the Turing Award did not work in artificial intelligence. | At least one person who worked in artificial intelligence has not won the Turing Award.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'least'.\nAt least one person who won the Turing Award did not work in artificial intelligence. | At least one person who worked in artificial intelligence has not won the Turing Award.\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'least'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'least'.\nAt least one person who won the Turing Award did not work in artificial intelligence. | At least one person who worked in artificial intelligence has not won the Turing Award.\n   ^\n"}
{"timestamp": "2025-05-01T17:27:49.020354", "premises": ["exists x. (TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "-(exists x. ContributionsTo(x, AnalysisOfAlgorithms) & DonaldKnuth(x))", "-(exists x. ContributionsTo(x, ArtificialIntelligence) & MarvinMinsky(x))", "-(exists x. ContributionsTo(x, NumericalMethods) & RichardHamming(x))", "-(exists x. ContributionsTo(x, ArtificialIntelligence) & JohnMcCarthy(x))", "exists x. (TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)) & (-(exists y. ContributionsTo(y, NumericalMethods) & x)))", "exists x. (TuringAward(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-01T17:28:02.910413", "premises": ["all x. (Turing(x) -> (AnalysisOfAlgorithms(x) & AIAgent(x) & NumericalMethods(x) & AI(x)))", "AnalysisOfAlgorithms(DonaldKnuth)", "AI(MarvinMinsky)", "NumericalMethods(RichardHamming)", "AI(JohnMcCarthy)", "not exists x. (Turing(x) & NumericalMethods(x))", "all x. (ProfessionalAthlete(x) -> Plays(x, Sports))", "exists x. (ProfessionalAthlete(x) & Plays(x, Baseball)) & (HigherChanceOfInjury(x) & NotHigherChanceOfInjury(y) & Plays(y, Sports) & y<>x)", "exists x. (Injured(x) & Baseball(x)) & PhysicalExertion(x)", "exists x. (ProfessionalAthlete(x) & Plays(x, Basketball)) & (HigherChanceOfInjury(x) & NotHigherChanceOfInjury(y) & Plays(y, Sports) & y<>x)", "exists x. (Injured(x) & Basketball(x)) & PhysicalExertion(x)"], "conclusion": "all x. (ProfessionalAthlete(x) -> HigherChanceOfInjury(x) & NotHigherChanceOfInjury(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (exists x (ProfessionalAthlete(x) & Plays(x,Baseball)) & (%%START ERROR%%((HigherChanceOfInjury(x) & NotHigherChanceOfInjury(y)) & Plays(y,Sports)) & y<>x%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (exists x (ProfessionalAthlete(x) & Plays(x,Baseball)) & (%%START ERROR%%((HigherChanceOfInjury(x) & NotHigherChanceOfInjury(y)) & Plays(y,Sports)) & y<>x%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:28:19.260713", "premises": ["all x. (JuvenileDelinquent(x) -> CommittedCrime(x))", "exists x. (JuvenileDelinquent(x) & BrokenHome(x))", "exists x. ((JuvenileDelinquent(x) & CommittedCrime(x)) & BrokenHome(x))", "all x. (CanBeBroken(x) -> PhysicalObject(x))", "exists x. (PhysicalObject(x) & Delicate(x))", "exists x. (Delicate(x) & EasyToBreak(x))", "exists x. (Broken(x) & Repairable(x))", "all x. (Broken(x) -> Repairable(x))", "all x. (Dog(x) -> BarkLoud(x))", "all x. (Dog(x) -> Species(x, Canis_lupus_familiaris))", "all x. (ALevelStudent(x) -> HighSchoolStudent(x))", "exists x. (HighSchoolStudent(x) & TakesExam(x))", "all x. (Student(x) -> TakesExam(x))", "all x. (ALevelStudent(x) -> TakesExam(x))", "all x. (A_>_B)", "all x. (A_>_C)", "all x. (B_>_C)", "all x. ((A_>_B) & (A_>_C))", "all x. (Man(x) -> Human(x))", "all x. (Human(x) -> Mortal(x))", "all x. (Mortal(x) -> Mortal(x))", "all x. (Man(x) -> Brother(x))", "exists x. (Brother(x) & Sister(x))"], "conclusion": "all x. ((Man(x) & Brother(x)) & (Some(x, Brother(x) & Sister(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. ((Man(x) & Brother(x)) & (Some(x, Brother(x) & Sister(x))))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. ((Man(x) & Brother(x)) & (Some(x, Brother(x) & Sister(x))))\n                                                    ^\n"}
{"timestamp": "2025-05-01T17:28:23.253306", "premises": ["all x. (JuvenileDelinquent(x) -> Commit(x, Crime))", "all x. (JuvenileDelinquent(x) -> ProductOfBrokenHome(x))", "all x. ((Commit(x, Crime) & ProductOfBrokenHome(x)) -> Person(x))", "all x. ((Commit(x, Crime) & ~JuvenileDelinquent(x)) -> Person(x))", "all x. ((Commit(x, Crime) & ~ProductOfBrokenHome(x)) -> Person(x))"], "conclusion": "all x. ((Commit(x, Crime) & ~JuvenileDelinquent(x) & ~ProductOfBrokenHome(x)) -> Person(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%Commit(x,Crime) & ~JuvenileDelinquent(x)%%END ERROR%%) -> Person(x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((%%START ERROR%%Commit(x,Crime) & ~JuvenileDelinquent(x)%%END ERROR%%) -> Person(x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T17:28:41.076622", "premises": ["all x. (JuvenileDelinquent(x) -> (CommittedCrime(x) & HaveCommittedCrime(x)))", "exists x. (JuvenileDelinquent(x) & BrokenHome(x))", "HaveCommittedCrime(x) = CommittedCrime(x)", "HaveCommittedCrime(x) = JuvenileDelinquent(x)", "BrokenHome(x) = JuvenileDelinquent(x)"], "conclusion": "exists x. ((HaveCommittedCrime(x) & CommittedCrime(x)) & BrokenHome(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HaveCommittedCrime/1, CommittedCrime/1, JuvenileDelinquent/1, BrokenHome/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HaveCommittedCrime/1, CommittedCrime/1, JuvenileDelinquent/1, BrokenHome/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HaveCommittedCrime/1, CommittedCrime/1, JuvenileDelinquent/1, BrokenHome/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HaveCommittedCrime/1, CommittedCrime/1, JuvenileDelinquent/1, BrokenHome/1\n"}
{"timestamp": "2025-05-01T17:29:01.830142", "premises": ["all x. (JuvenileDelinquent(x) -> CommitsCrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOfBrokenHome(x))", "exists x. (CommitsCrime(x) & ProductOfBrokenHome(x))", "all x. (PhysicallyAble(x) -> CanExercise(x))", "all x. (NotRequired(x, Exercise))", "all x. (Exercises(x) -> PhysicallyActive(x))", "all x. ((PhysicallyActive(x) & Active) -> Sedentary(x))", "all x. ((Sedentary(x) & Sedentary) -> NotPhysicallyActive(x))", "all x. (NotDoctor(x) -> CannotDiagnoseDisease(x))", "all x. (Doctor(x) -> CanDiagnoseDisease(x))", "all x. ((CannotDiagnoseDisease(x) | CanDiagnoseDisease(x)) & NotDoctor(x))", "all x. (Doctor(x) -> MedicalProfessional(x) & Trained(x, DiagnosingDiseases))", "all x. (Robot(x) -> Machine(x))", "all x. (CanPerformTask(x) -> CapableOfPerformingTask(x))", "all x. ((CapableOfPerformingTask(x) & Robot(x)) -> Machine(x))", "all x. ((CapableOfPerformingTask(x) & CanPerformTask(x)) & Robot(x))", "all x. (DrinksTooMuchAlcohol(x) -> BecomesDrunk(x) & NotFunctionsProperly(x, Liver))"], "conclusion": "all x. (OnAirplane(x) -> TravelsByAir(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sedentary/0, Sedentary/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Sedentary/0, Sedentary/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sedentary/0, Sedentary/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Sedentary/0, Sedentary/1\n"}
{"timestamp": "2025-05-01T17:29:59.439895", "premises": ["Bulbophyllum(x) -> in(x, genus, Bulbophyllum)", "all x. Bulbophyllum(x) -> Orchid(x)"], "conclusion": "-Orchid(Bulbophyllum_attenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-05-01T17:30:01.380722", "premises": ["Genus(Bulbophyllum) & Species(BulbophyllumAttenuatum)", "all x. (Bulbophyllum(x) -> Orchid(x))"], "conclusion": "-Orchid(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bulbophyllum/1, Bulbophyllum/0\n"}
{"timestamp": "2025-05-01T22:09:45.983917", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "Taxpayer(James)", "-Has(James, CriminalRecord)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (ProfessionalAthlete(x) -> LaLigaSoccerPlayer(x))", "MorePoints(James, Barcelona)", "GoodPlayer(James)", "EnvironmentFriendlyPlayer(James)", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))"], "conclusion": "all x. all y. (LaLigaTeam(x) & LaLigaTeam(y) & MorePoints(x, y) -> Championship(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:09:54.437482", "premises": ["all x. (Bulbophyllum(x) -> x is in genus Bulbophyllum)", "all x. (Bulbophyllum(x) -> Orchid(x))", "-Bulbophyllum(Bulbophyllum_attenuatum) & -Orchid(Bulbophyllum_attenuatum)", "all x. (Worksheet(x) -> (Paper(x) | EnvironmentFriendly(x)))", "all x. (Workbook(x) -> (Paper(x) | Electronic(x)))", "all x. (Book(x) -> (Paper(x) | Electronic(x)))", "all x. (Sells(x, Books))", "all x. (In(x, New_YorkCity))", "Paper(Worksheet)", "all x. (A(x) -> (x_is_{One, Two, Three, Four, Five}))", "all x. (A(x) -> -(x_is_{Two, Three, Four}))"], "conclusion": "all x. (A(x) -> -(x_is_{Three, Four, Five}))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (A(x) -> -(x_is_{Three, Four, Five}))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (A(x) -> -(x_is_{Three, Four, Five}))\n                             ^\n"}
{"timestamp": "2025-05-01T22:10:36.313037", "premises": ["all x. (Biodegradable(x) -> Wooden(x))", "all x. (Woodwork(x) -> Wooden(x))", "all x. (Paper(x) -> Wooden(x))", "not exists x.((Good(x) & Bad(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "all x. (Worksheet(x) -> Paper(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> Biodegradable(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))", "all x. (Paper(x) -> Wooden(x))", "all x. (EnvironmentFriendly(x) -> Biodegradable(x))", "all x. (Wooden(x) -> EnvironmentFriendly(x))"], "conclusion": "all x. (Paper(x) -> Wooden(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nnot exists x.((Good(x) & Bad(x))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nnot exists x.((Good(x) & Bad(x))\n                                ^\n"}
{"timestamp": "2025-05-01T22:11:22.828486", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "not exists x. (Good(x) & Bad(x))", "all x. (EnvironmentFriendly(x) -> Good(x))", "or ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "not Dispensable(Worksheet)", "all x. y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. ~Chef(x) & Can(x, Cook)", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'or'.  Expression expected.\nor ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'or'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'or'.  Expression expected.\nor ((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))\n^\n"}
{"timestamp": "2025-05-01T22:11:50.714938", "premises": ["all x. (Biodegradable(x) -> (DecomposedBy(x, LivingOrganism)) & (ReturnsToNaturalSubstances(x)))", "Paper is Biodegradable", "Woodware is Biodegradable", "-(a x. (Good(x) & Bad(x)))", "Good(x) -> Beneficial(x) or Advantageous(x)", "Bad(x) -> Undesirable(x) or Harmful(x)", "((Paper(Worksheet)) | (EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))"], "conclusion": "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nPaper is Biodegradable\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nPaper is Biodegradable\n      ^\n"}
{"timestamp": "2025-05-01T22:12:09.866754", "premises": ["all x. (Roversi(x) -> ItalianSurname(x))", "AlbaRoversi(Roversi)", "PaoloRoversi(Roversi)", "RobertoRoversi(Roversi)", "PaoloRoversi(Photographer)"], "conclusion": "Photographer(ProfessionalOrAmateur)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Photographer/1, Photographer/0, Roversi/1, Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Photographer/1, Photographer/0, Roversi/1, Roversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Photographer/1, Photographer/0, Roversi/1, Roversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Photographer/1, Photographer/0, Roversi/1, Roversi/0\n"}
{"timestamp": "2025-05-01T22:12:23.452894", "premises": ["all x. (Italian(x) & Surname(Roversi, x)", "albaRoversi : surnameRoversi", "paoloRoversi : surnameRoversi", "robertoRoversi : surnameRoversi", "photographer(paoloRoversi)", "all x. (photographer(x) -> (professional(x) | amateur(x)))", "albaRoversi : surnameRoversi & Italian(albaRoversi)", "paoloRoversi : surnameRoversi & Italian(paoloRoversi)"], "conclusion": "robertoRoversi : surnameRoversi & Italian(robertoRoversi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.\nrobertoRoversi : surnameRoversi & Italian(robertoRoversi)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.\nrobertoRoversi : surnameRoversi & Italian(robertoRoversi)\n               ^\n"}
{"timestamp": "2025-05-01T22:12:31.238265", "premises": ["Surname(Roversi) & Italian(Roversi)", "AlbaRoversi(x) & Surname(x) & Roversi", "PaoloRoversi(x) & Surname(x) & Roversi", "RobertoRoversi(x) & Surname(x) & Roversi", "Photographer(PaoloRoversi)"], "conclusion": "Professional(photographer) | Amateur(photographer)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Roversi/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Roversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Roversi/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Roversi/0\n"}
{"timestamp": "2025-05-01T22:12:46.289887", "premises": ["USS\\_Salem is a HeavyCruiser.", "USS\\_Salem was the last heavy cruiser to enter service.", "USS\\_Salem is a MuseumShip.", "MuseumShip is openToPublic.", "USS\\_Salem servedIn(Atlantic, Mediterranean)."], "conclusion": "OpenToPublic(USS\\_Salem)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.  Expected token ')'.\nOpenToPublic(USS\\_Salem)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.  Expected token ')'.\nOpenToPublic(USS\\_Salem)\n                ^\n"}
{"timestamp": "2025-05-01T22:12:49.336037", "premises": ["all x. (HeavyCruiser(x) -> USS(x))", "exists x. (HeavyCruiser(x) -> (Last(x) & USS(x)))", "all x. (USS(x) -> MuseumShip(x))", "all x. (MuseumShip(x) -> OpenToPublic(x))", "all x. (USS(x) -> ServedIn(x, Atlantic, Mediterranean))"], "conclusion": "OpenToPublic(USS)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: USS/1, USS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: USS/1, USS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: USS/1, USS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: USS/1, USS/0\n"}
{"timestamp": "2025-05-01T22:13:14.324063", "premises": ["all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "all x. (A_\u2208_B) & (A_\u222a_B_\u2260_B)", "all x. (A_\u2209_B) & (A_\u222a_B_\u2260_B)"], "conclusion": "all x. (A_\u2286_B) & (A_\u222a_B_\u2264_B)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xe2 in position 606: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 606: invalid continuation byte\n"}
{"timestamp": "2025-05-01T22:13:48.115430", "premises": ["USSSalem is a heavyCruiser & builtFor(USSSalem, UnitedStateNavy)", "USSSalem is the last heavyCruiser", "USSSalem is a museumShip", "all x. (MuseumShip(x) -> OpenToPublic(x))", "USSSalem servedIn(Atlantic) & USSSalem servedIn(Mediterranean)"], "conclusion": "exists x. (MuseumShip(x) & OpenToPublic(x) & servedIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nUSSSalem is a heavyCruiser & builtFor(USSSalem, UnitedStateNavy)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nUSSSalem is a heavyCruiser & builtFor(USSSalem, UnitedStateNavy)\n         ^\n"}
{"timestamp": "2025-05-01T22:14:05.259157", "premises": ["USSSalem is a HeavyCruiser.", "USSSalem is a LastHeavyCruiser.", "USSSalem is a MuseumShip.", "MuseumShips are open to the public.", "USSSalem served in the Atlantic and Mediterranean."], "conclusion": "exists x. ((MuseumShip(x) & openToPublic(x)) & servedIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nUSSSalem is a HeavyCruiser.\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nUSSSalem is a HeavyCruiser.\n         ^\n"}
{"timestamp": "2025-05-01T22:14:27.414035", "premises": ["all x. (HeavyCruiser(x) -> Built(x, UnitedStatesNavy))", "all x. (HeavyCruiser(x) -> Last(x, HeavyCruiser))", "all x. (HeavyCruiser(x) -> MuseumShip(x))", "all x. (MuseumShip(x) -> OpenToPublic(x))", "all x. (HeavyCruiser(x) -> ServedIn(x, Atlantic, Mediterranean))", "exists x. (MuseumShip(x) & OpenToPublic(x) & ServedIn(x, Mediterranean))", "all x. (HeavyCruiser(x) -> MuseumShip(x) & NationalMonument(x))", "exists x. (HeavyCruiser(x) & Unique(x))", "all x. (HeavyCruiser(x) -> Symbol(x, UnitedStatesNavy))", "all x. (HeavyCruiser(x) -> Built(x, WorldWarII))", "all x. (HeavyCruiser(x) -> FiredSalvoInAnger(x, AfterPearlHarbor))", "all x. (HeavyCruiser(x) -> PopularTouristAttraction(x))", "all x. (HeavyCruiser(x) -> PopularChoiceForEvents(x, Weddings, BirthdayParties))", "exists x. (HeavyCruiser(x) & RemainingBattleship(x))", "all x. (HeavyCruiser(x) -> ServedIn(x, CivilWar, SpanishAmericanWar))", "all x. (HeavyCruiser(x) -> MuseumShip(x) & NationalMonument(x))", "exists x. (HeavyCruiser(x) & Unique(x))", "all x. (HeavyCruiser(x) -> Symbol(x, UnitedStatesNavy))", "all x. (HeavyCruiser(x) -> Built(x, WorldWarII))", "all x. (HeavyCruiser(x) -> FiredSalvoInAnger(x, AfterPearlHarbor))"], "conclusion": "all x. (HeavyCruiser(x) -> PopularTouristAttract", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (HeavyCruiser(x) -> PopularTouristAttract\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (HeavyCruiser(x) -> PopularTouristAttract\n                                                ^\n"}
{"timestamp": "2025-05-01T22:14:30.532750", "premises": ["Ship(USS_Salem) & Cruiser(USS_Salem) & BuiltFor(USS_Salem, United_States_Navy)", "last(HeavyCruisers) = USS Salem", "MuseumShip(USS_Salem)", "OpenToPublic(MuseumShip)", "ServedIn(USS_Salem, Atlantic) & ServedIn(USS_Salem, Mediterranean)"], "conclusion": "exists x. (MuseumShip(x) & OpenToPublic(x) & ServedIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Salem'.\nlast(HeavyCruisers) = USS Salem\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Salem'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Salem'.\nlast(HeavyCruisers) = USS Salem\n                          ^\n"}
{"timestamp": "2025-05-01T22:14:32.773051", "premises": ["USSSalem is a heavyCruiser.", "USSSalem is the lastHeavyCruiser.", "USSSalem is a museumShip.", "MuseumShip is openToPublic."], "conclusion": "USSSalem servedIn(Atlantic, Mediterranean).", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'servedIn'.\nUSSSalem servedIn(Atlantic, Mediterranean).\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'servedIn'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'servedIn'.\nUSSSalem servedIn(Atlantic, Mediterranean).\n         ^\n"}
{"timestamp": "2025-05-01T22:14:36.198192", "premises": ["Ship(USS_Salem) & Type(USS_Salem, HeavyCruiser) & BuiltFor(USS_Salem, United_States_Navy)", "lastHeavyCruiser(USS_Salem)", "Ship(USS_Salem) & Type(USS_Salem, MuseumShip)", "all x. (Museum Ship(x) -> OpenToPublic(x))", "Ship(USS_Salem) & ServesIn(USS_Salem, Atlantic) & ServesIn(USS_Salem, Mediterranean)"], "conclusion": "all x. (Museum Ship(x) & OpenToPublic(x) & ServesIn(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Ship'.  Expected token ')'.\nall x. (Museum Ship(x) & OpenToPublic(x) & ServesIn(x, Mediterranean))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Ship'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Ship'.  Expected token ')'.\nall x. (Museum Ship(x) & OpenToPublic(x) & ServesIn(x, Mediterranean))\n               ^\n"}
{"timestamp": "2025-05-01T22:15:14.296870", "premises": ["all x. (Woodware(x) -> Biodegradable(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:16:35.978209", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. ((ScienceFictionMovie(x) & Inception(x)) | (Inception(x) & ScienceFictionMovie(x)))", "all x. ((SuperheroMovie(x) & TheBatman(x)) | (TheBatman(x) & SuperheroMovie(x)))", "DarkKnight(x) -> TheBatman(x) & SecondBatmanMovie(x)", "all x. ((SuperheroMovie(x) & TheDarkKnight(x)) | (TheDarkKnight(x) & SuperheroMovie(x)))", "all x. ((ActionMovie(x) & TheDarkKnight(x)) | (TheDarkKnight(x) & ActionMovie(x)))", "all x. ((ScienceFictionMovie(x) & TheInception(x)) | (TheInception(x) & ScienceFictionMovie(x)))", "all x. ((FirstMovieDirectedBy(x) & TheInception(x)) | (TheInception(x) & FirstMovieDirectedBy(x)))", "all x. (WorldSeriesWinner(x) -> ChicagoWhiteSox(x))", "all x. (WorldSeriesWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> BostonRedSox(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> DetroitTigers(x))", "all x. (WorldSeriesWinner(x) -> ChicagoWhiteSox(x))", "all x. (WorldSeriesWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipSeries(x) -> (AmericanLeagueChampionshipWinner(x) & NationalLeagueChampionshipWinner(x)))", "all x. (WorldSeries(x) -> (WorldSeriesWinner(x) & AmericanLeagueChampionshipWinner(x)))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. ((ScienceFictionMovie(x) & Inception(x)) | (Inception(x) & ScienceFictionMovie(x)))", "all x. ((SuperheroMovie(x) & TheBatman(x)) | (TheBatman(x) & SuperheroMovie(x)))", "DarkKnight(x) -> TheBatman(x) & SecondBatmanMovie(x)", "all x. ((ScienceFictionMovie(x) & TheDarkKnight(x)) | (TheDarkKnight(x) & ScienceFictionMovie(x)))", "all x. ((ActionMovie(x) & TheDarkKnight(x)) | (TheDarkKnight(x) & ActionMovie(x)))", "all x. ((FirstMovieDirectedBy(x) & TheInception(x)) | (TheInception(x) & FirstMovieDirectedBy(x)))", "all x. (WorldSeriesWinner(x) -> ChicagoWhiteSox(x))", "all x. (WorldSeriesWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> BostonRedSox(x))", "all x. (AmericanLeagueChampionshipWinner(x) -> DetroitTigers(x))", "all x. (WorldSeriesWinner(x) -> ChicagoWhiteSox(x))", "all x. (WorldSeriesWinner(x) -> NewYorkYankees(x))", "all x. (AmericanLeagueChampionshipSeries(x) -> (AmericanLeagueChampionshipWinner(x) & NationalLeagueChampionshipWinner(x)))", "all x. (WorldSeries(x) -> (WorldSeriesWinner(x) & AmericanLeagueChampionshipWinner(x)))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelPhysicsLaureate(Amy)", "((ChicagoWhiteSox(x) & 2005WorldSeries(x)) | (NewYorkYankees(x) & 2005WorldSeries(x)))", "(NewYorkYankees(x) & AmericanLeagueChampionship(x) | ~(any x. (FullTimeScientist(x) & SpendOn(x, MostOfTheirTime, Sports))))", "(BostonRedSox(x) & AmericanLeagueChampionship(x) | ~(exists x. (NobelPhysicsLaureate(x) & ~FullTimeScientist(x)))", "(ChicagoWhiteSox(x) & 2005WorldSeries(x) | (Amy(x) & (SpendsOn(x, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(x))))"], "conclusion": "~NobelPhysicsLaureate(Amy) -> ~OlympicGoldMedalWinner(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:16:39.232217", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Releases(x, RapAlbum))", "Releases(Tyga, WellDoneThree)", "all x. (Rapper(x) -> Not(OperaSinger(x)))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-05-01T22:17:06.051178", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)"], "conclusion": "FolkSong(Inception)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:17:10.185288", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleasesRapAlbum(x))", "ReleasesRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1\n"}
{"timestamp": "2025-05-01T22:17:57.324902", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "exists x. (BRICS(x) & Speaks(x, Hindi))", "Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)"], "conclusion": "-(Exists x. OperaSinger(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n-(Exists x. OperaSinger(x))\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n-(Exists x. OperaSinger(x))\n         ^\n"}
{"timestamp": "2025-05-01T22:17:59.398869", "premises": ["all x. (Conclusion(x) -> Premise1) | (Premise2 -> Conclusion(x) | (Premise3 -> Conclusion(x) | ... | PremiseN -> Conclusion(x)))"], "conclusion": "Well Done 3 is a rap album.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Done'.\nWell Done 3 is a rap album.\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Done'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Done'.\nWell Done 3 is a rap album.\n     ^\n"}
{"timestamp": "2025-05-01T22:18:55.963608", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. exists y.(Actor(x) & PlaysIn(x, y, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))"], "conclusion": "Plays(DaveedDiggs, ThomasJefferson)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:18:58.825654", "premises": ["Rapper(Tyga)", "exists x. (Rapper(x) -> ReleasedRapAlbum(x))", "ReleasedRapAlbum(Tyga, Well_Done_Three)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "OperaSinger(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasedRapAlbum/2, ReleasedRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasedRapAlbum/2, ReleasedRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasedRapAlbum/2, ReleasedRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasedRapAlbum/2, ReleasedRapAlbum/1\n"}
{"timestamp": "2025-05-01T22:19:12.538771", "premises": ["all x. (Has(x, MonkeypoxVirus) -> MayGet(x, Monkeypox))", "all x. (Has(x, MonkeypoxVirus) -> Animal(x))", "all x. (Mammal(x) -> Human(x))", "all x. (Mammal(x) -> Animal(x))", "SymptomsOf(Monkeypox, fever) & SymptomsOf(Monkeypox, headache) & SymptomsOf(Monkeypox, musclePains) & SymptomsOf(Monkeypox, tiredness)", "all x. (Has(x, Flu) -> FeelsTired(x))"], "conclusion": "exists x. (Animal(x) & ~Disjoint(x, Monkeypox))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Animal(x) & ~Disjoint(x,Monkeypox)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%Animal(x) & ~Disjoint(x,Monkeypox)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T22:19:21.323916", "premises": ["all x. ((OccursInMonkepox(x) & MayGet(x, Monkeypox))", "all x. ((CanOccur(x, Monkeypox))", "all x. (Mammal(x)", "all x. (Animal(x))", "all x. (OccursInMonkepox(x) -> Symptom(x, fever, headache, musclePains, tiredness))", "all x. (OccursInFlu(x) -> Symptom(x, tiredness))"], "conclusion": "all x. (Animal(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Animal(x)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Animal(x)\n                 ^\n"}
{"timestamp": "2025-05-01T22:19:34.151033", "premises": ["all x. (Monkeypox(x) -> MayGet(x, Monkeypox))", "all x. (Monkeypox(x) -> OccursIn(x, certainAnimal))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Symptom(x) -> Monkeypox(x)) & (Fever(x) & Headache(x) & MusclePains(x) & Tiredness(x))", "all x. (Tiredness(x) -> Flu(x))", "exists x. ((Monkeypox(x) & MayGet(x, Monkeypox)) & OccursIn(x, certainAnimal) & (Fever(x) & Headache(x) & MusclePains(x) & Tiredness(x)) & (Tiredness(x) & Flu(x)))"], "conclusion": "all x. (CausedBy(Monkeypox(x), Monkeypox(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (CausedBy(Monkeypox(x), Monkeypox(x))\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (CausedBy(Monkeypox(x), Monkeypox(x))\n                                            ^\n"}
{"timestamp": "2025-05-01T22:19:38.180217", "premises": ["all x. (Possible(x, Monkeypox) -> MayGet(x, Monkeypox))", "all x. (Possible(x, Monkeypox) -> OccursIn(x, CertainAnimals))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (SymptomOf(x, Monkeypox) -> Includes(x, Fever, Headache, MusclePains, Tiredness))", "all x. (SymptomOf(x, Flu) -> Includes(x, Tiredness))"], "conclusion": "exists x. (Animal(x) & Possible(x, Monkeypox))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Includes/2, Includes/5.\n\n\nFatal error:  The following symbols are used with multiple arities: Includes/2, Includes/5", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Includes/2, Includes/5.\n\n\nFatal error:  The following symbols are used with multiple arities: Includes/2, Includes/5\n"}
{"timestamp": "2025-05-01T22:19:41.886411", "premises": ["all x. (Monkeypox(x) -> MayGet(x, Monkeypox))", "all x. (Monkeypox(x) -> OccursIn(x, Animal))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> Symptom(x, Fever))", "all x. (Flu(x) -> Symptom(x, Tiredness))"], "conclusion": "exists x. (Animal(x)) & (Monkeypox(x) | Flu(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Animal/1, Animal/0, Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Animal/1, Animal/0, Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-05-01T22:20:04.259730", "premises": ["all x. (Square(x) -> FourSided(x))", "all x. (FourSided(x) -> Shape(x))", "all x. (Triangle(x) -> ThreeSides(x))", "all x. (Shape(x) -> ThreeSides(x))", "all x. (AvianCreature(x) -> CanFly(x))", "all x. (Bird(x) -> AvianCreature(x))", "all x. (AvianCreature(x) -> CanFly(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (GlobalWarming(x) -> CausedBy(x, HumanActivity))", "all x. (ContributesTo(x, GlobalWarming) -> HumanActivity(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Mammal(x) -> HairOrFur(x))", "all x. (Human(x) -> Mammal(x))"], "conclusion": "all x. (Mammal(x) -> HairOrFur(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: GlobalWarming/1, GlobalWarming/0, HumanActivity/1, HumanActivity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GlobalWarming/1, GlobalWarming/0, HumanActivity/1, HumanActivity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: GlobalWarming/1, GlobalWarming/0, HumanActivity/1, HumanActivity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GlobalWarming/1, GlobalWarming/0, HumanActivity/1, HumanActivity/0\n"}
{"timestamp": "2025-05-01T22:20:05.754460", "premises": ["all x. (Square(x) -> FourSided(x))", "all x. (FourSided(x) -> Shape(x))"], "conclusion": "FourSided(Square(x)) -> Shape(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1\n"}
{"timestamp": "2025-05-01T22:20:18.114131", "premises": ["all x. (Square(x) -> FourSided(x))", "all x. (FourSided(x) -> Shape(x))", "FourSided(Square(x)) -> Shape(x)", "sqrt(OneSix,Two) = 4", "sqrt(TwoFive,Two) = 5", "sqrt(SixFour,Two) = 8", "sqrt(TwoFiveSix,Two) = 16", "Meaning(word) = DictionaryDefinition(word)", "DictionaryDefinition(word) = Meaning(word)", "all x. (GraduateStudent(x) -> Old(x))", "all x. (Old(x) -> GreyHair(x))"], "conclusion": "GreyHair(GraduateStudent(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduateStudent/1, Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduateStudent/1, Square/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduateStudent/1, Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduateStudent/1, Square/1\n"}
{"timestamp": "2025-05-01T22:21:54.976282", "premises": ["all x. (Square(x) -> FourSided(x))", "all x. (FourSided(x) -> Shape(x))"], "conclusion": "FourSided(Square(x)) -> Shape(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Square/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Square/1\n"}
{"timestamp": "2025-05-01T22:22:01.776095", "premises": ["all x. ((LanguageGenerationTask(x) | LanguageUnderstandingTask(x)) -> NaturalLanguageProcessingTask(x))", "all x. ((TextSequence(x) -> LanguageGenerationTask(x)) & (LanguageGenerationTask(x) -> NaturalLanguageProcessingTask(x)))", "MachineTranslation = NaturalLanguageProcessingTask"], "conclusion": "TextSequence(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalLanguageProcessingTask/1, NaturalLanguageProcessingTask/0\n"}
{"timestamp": "2025-05-01T22:22:06.473012", "premises": ["all x. (Category(x) = LanguageGenerationTask | Category(x) = LanguageUnderstandingTask)", "all x. (LanguageGenerationTask(x) -> Output(x, TextSequence))", "MachineTranslation(x) -> LanguageProcessingTask(x)"], "conclusion": "Output(MachineTranslation(x), TextSequence)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-01T22:22:11.235021", "premises": ["all x. ((LanguageGeneration(x) & NaturalLanguageProcessing(x)) | (LanguageUnderstanding(x) & NaturalLanguageProcessing(x)))", "all x. ((LanguageGeneration(x) & NaturalLanguageProcessing(x)) & (TextSequence(Output(x)) & -LanguageUnderstanding(x)))", "all x. (Output(MachineTranslation(x)) & TextSequence(x))"], "conclusion": "MachineTranslation(x) & NaturalLanguageProcessing(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Output/1, MachineTranslation/1\n"}
{"timestamp": "2025-05-01T22:22:20.320623", "premises": ["all x. ((LanguageGeneration(x) & TextSequence(OutputOf(x))) | (-LanguageGeneration(x) & TextSequence(OutputOf(x)) & LanguageUnderstanding(x)))", "all x. ((LanguageGeneration(x) & TextSequence(OutputOf(x))) | (-LanguageGeneration(x) & TextSequence(OutputOf(x)) & LanguageUnderstanding(x)))", "all x. (MachineTranslation(x) & LanguageProcessing(x))", "all x. (TextSequence(OutputOf(MachineTranslation(x))))"], "conclusion": "all x. (MachineTranslation(x) & TextSequence(OutputOf(MachineTranslation(x))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-01T22:22:24.338982", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> LanguageGenerationTask(x) &/| LanguageUnderstandingTask(x))", "all x. (NaturalLanguageProcessingTask(x) -> LanguageGenerationTask(x) & (Output(x) = TextSequence))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x) & (Output(x) = TextSequence)"], "conclusion": "Output(MachineTranslation(x)) = TextSequence", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-01T22:22:26.645349", "premises": ["all x. (NaturalLanguageProcessing(x) -> (LanguageGenerationTask(x) | LanguageUnderstandingTask(x)))", "all x. (LanguageGenerationTask(x) -> OutputSequence(x))", "MachineTranslation(x) -> NaturalLanguageProcessing(x)"], "conclusion": "OutputSequence(MachineTranslation(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MachineTranslation/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MachineTranslation/1\n"}
{"timestamp": "2025-05-01T22:23:08.006678", "premises": ["all x. (Mammal(x) -> (Has(x, Teeth) | -Has(x, Teeth)))", "Platypus(x) -> -Has(x, Teeth)", "Platypus(x) -> Mammal(x)", "Human(x) -> Has(x, Teeth)"], "conclusion": "Mammal(Platypus) & -Has(Platypus, Teeth)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-01T22:23:36.260066", "premises": ["all x. (Mammal(x) -> HasTeeth(x))", "not(HasTeeth(Platypus))", "Mammal(Platypus)", "HasTeeth(Human)", "Mammal(Platypus) & not(HasTeeth(Platypus))", "all x. (GivesBirthTo(x, Child) -> Mother(x))", "all x. (GivesBirthTo(x, Mother) -> Grandmother(x))", "all x. (GivesBirthTo(x, Grandmother) -> Grandfather(x))", "all x. (NeverGivesBirthTo(x, Child) -> NeverMother(x))"], "conclusion": "all x. (NeverGivesBirthTo(x, Mother) | NeverGivesBirthTo(x, Grandmother) -> NeverGrandfather(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grandmother/1, Grandmother/0, Mother/1, Mother/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grandmother/1, Grandmother/0, Mother/1, Mother/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grandmother/1, Grandmother/0, Mother/1, Mother/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grandmother/1, Grandmother/0, Mother/1, Mother/0\n"}
{"timestamp": "2025-05-01T22:23:59.736664", "premises": ["all x. (Horse(x) -> Hooves(x))", "all x. (-Human(x) -> -Hooves(x))", "exists x. (Human(x) & Hooves(x))", "all x. (If(DivisibleBy(x, Primes(x)) -> NotPrime(x)) | NotDivisibleBy(x, Primes(x)) -> Prime(x))", "all x. (If(Prime(x) & Odd(x)) -> Factor(x, One, x))", "all x. (If(Prime(x) & Even(x)) -> Factor(x, 1, x, Primes(x)))", "all x. (If(Prime(x)) -> NotEven(x))", "all x. (Acid(x) -> Corrosive(x))", "all x. (Acid(x) -> DissolvesMetal(x))", "all x. (Acid(x) -> DissolvesMineral(x))", "all x. (Acid(x) -> DissolvesAcid(x))", "Dissolves(Acids, Metals, Minerals, Acids)", "all x. (Mammal(x) -> Fur(x))", "all x. (Bird(x) -> Feathers(x))", "all x. (Fish(x) -> Scales(x))", "all x. (Reptile(x) -> Scales(x))", "(Fur(x) | Feathers(x) | Scales(x)) & ProtectsSkin(x)", "all x. (If(Even(x)) -> DivisibleBy(x, Two))", "all x. (If(Odd(x)) -> NotDivisibleBy(x, Two))", "all x. (Prime(x) <-> NotDivisibleBy(x, Two) & NotDivisibleBy(x, OddPrimes(x)))", "all x. (NotDivisibleBy(x, Two) -> Prime(x))", "all x. (DegreeInLaw(x) -> Lawyer(x))", "all x. (Lawyer(x) & WorksForGovernment(x) -> HasSalaryFromGovernment(x))", "all x. (HasSalaryFromGovernment(x) -> PublicServant(x))", "(Lawyer(x) & WorksForGovernment(x)) -> PublicServant(x)", "all x. (Computer(x) -> CanBrowseInternet(x))", "all x. (CanBrowseInternet(x) -> AccessToInformation(x))"], "conclusion": "(Computer(x) & AccessToInformation(x)) -> CanBrowseInternet(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (If(DivisibleBy(x, Primes(x)) -> NotPrime(x)) | NotDivisibleBy(x, Primes(x)) -> Prime(x))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (If(DivisibleBy(x, Primes(x)) -> NotPrime(x)) | NotDivisibleBy(x, Primes(x)) -> Prime(x))\n                                     ^\n"}
{"timestamp": "2025-05-01T22:24:33.711252", "premises": ["{horse} --> {hasHooves}", "-{human} --> {hasHooves}"], "conclusion": "{human} --> {horse}", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.\n{human} --> {horse}\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.\n{human} --> {horse}\n        ^\n"}
{"timestamp": "2025-05-01T22:25:46.079121", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (SciFiMovie(x) -> Movie(x))", "SciFiMovie(Inception)", "-FolkSong(Mac) & -SciFiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> GoodBreakfast(x))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y. (PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:26:02.306559", "premises": ["all x. (LocatedIn(x, NewYorkCity) -> LocatedIn(x, UnitedStatesOfAmerica))", "all x. (LocatedIn(x, UnitedStatesOfAmerica) -> PartOf(x, NorthAmerica))", "all x. (PartOf(x, NorthAmerica) -> In(x, WesternHemisphere))", "all x. (LocatedIn(x, NewYorkCity) -> Developed(x))", "(LocatedIn(A, B) & LocatedIn(B, C)) -> LocatedIn(A, C)", "-In(UnitedStatesOfAmerica, WesternHemisphere)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "Biodegradable(Paper)", "Biodegradable(Wood)", "if (EnvironmentFriendly(x) or Good(x)) then Good(x)", "all x. (EnvironmentFriendly(x) -> Good(x))", "if (EnvironmentFriendly(x) or Good(x)) then Good(x)", "Good(x) iff (Paper(x) or Wood(x))", "Biodegradable(Wood)", "Good(x) iff (Paper(x) or Wood(x))", "-EnvironmentFriendly(Wood)", "all x. (Tasted(x, y) -> KnowsTaste(x, y))", "if(Vegetarian(x)) then not(Eats(x, Meat))", "all x. (Tasted(x, y) -> KnowsTaste(x, y))"], "conclusion": "-Vegetarian(x) -> KnowsTaste(x, Meat)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'or'.  Expected token ')'.\nif (EnvironmentFriendly(x) or Good(x)) then Good(x)\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'or'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'or'.  Expected token ')'.\nif (EnvironmentFriendly(x) or Good(x)) then Good(x)\n                           ^\n"}
{"timestamp": "2025-05-01T22:26:40.326869", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Biodegradable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "(-FolkSong(Mac) & -ScifiMovie(Mac))", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Develops(eTS, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(eTS, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:26:48.966219", "premises": ["all x. (New YorkCity(x) -> UnitedStatesOfAmerica(x))", "all x. (UnitedStatesOfAmerica(x) -> NorthAmerica(x))", "all x. (NorthAmerica(x) -> WesternHemisphere(x))", "all x. (HighlyDevelopedCity(x) -> NewYorkCity(x))", "all x, y, z. (PlaceLocated(x, y) & PlaceLocated(y, z) -> PlaceLocated(x, z))", "all x. (NewYorkCity(x) -> -WesternHemisphere(x))", "all x. (UnitedStatesOfAmerica(x) -> NorthAmerica(x))", "all x. (NorthAmerica(x) -> WesternHemisphere(x))"], "conclusion": "all x. (HighlyDevelopedCity(x) -> NewYorkCity(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'YorkCity'.  Expected token ')'.\nall x. (New YorkCity(x) -> UnitedStatesOfAmerica(x))\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'YorkCity'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'YorkCity'.  Expected token ')'.\nall x. (New YorkCity(x) -> UnitedStatesOfAmerica(x))\n            ^\n"}
{"timestamp": "2025-05-01T22:26:56.860915", "premises": ["all x. (LocationIn(x, NewYorkCity) -> LocationIn(x, UnitedStatesOfAmerica))", "all x. (LocationIn(x, UnitedStatesOfAmerica) -> LocationIn(x, NorthAmerica))", "all x. (LocationIn(x, NorthAmerica) -> LocationIn(x, WesternHemisphere))", "all x. (Developed(x) -> LocationIn(x, NewYorkCity))", "all x, y, z. (LocationIn(x, y) & LocationIn(y, z) -> LocationIn(x, z))"], "conclusion": "all x. (Developed(x) -> NotLocationIn(x, WesternHemisphere))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y, z. (LocationIn(x, y) & LocationIn(y, z) -> LocationIn(x, z))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y, z. (LocationIn(x, y) & LocationIn(y, z) -> LocationIn(x, z))\n     ^\n"}
{"timestamp": "2025-05-01T22:27:00.642464", "premises": ["HighlyDeveloped(NewYorkCity)", "if (Location(placeA, placeB) & Location(placeB, placeC)) then Location(placeA, placeC)", "Location(NewYorkCity, UnitedStatesOfAmerica)", "partOf(UnitedStatesOfAmerica, NorthAmerica)", "in(NorthAmerica, WesternHemisphereOfTheEarth)", "(HighlyDeveloped(NewYorkCity) & (Location(NewYorkCity, UnitedStatesOfAmerica) & (partOf(UnitedStatesOfAmerica, NorthAmerica) & (in(NorthAmerica, WesternHemisphereOfTheEarth))))"], "conclusion": "Conclusion", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nif (Location(placeA, placeB) & Location(placeB, placeC)) then Location(placeA, placeC)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nif (Location(placeA, placeB) & Location(placeB, placeC)) then Location(placeA, placeC)\n                             ^\n"}
{"timestamp": "2025-05-01T22:27:11.459791", "premises": ["all x. (Mammal(x) & (LaysEggs(x) & Platypus(x)) | (LaysEggs(x) & Echidna(x)))", "-Platypus(platypus) & Hyrax(platypus)", "-Echidna(echidna) & Hyrax(echidna)", "all x. (-Mammal(x) & Invertebrate(x))", "all x. (Animal(x) & (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) & Animal(x))", "all x. (Hyrax(x) & Mammal(x))", "all x. (Grebe(x) & LaysEggs(x))", "-Grebe(grebe) & Platypus(grebe) & -Grebe(grebe) & Echidna(grebe)", "all x. (Mammal(x) & (LaysEggs(x) & Platypus(x)) | (LaysEggs(x) & Echidna(x)))", "-Platypus(platypus) & Hyrax(platypus)", "-Echidna(echidna) & Hyrax(echidna)", "all x. (-Mammal(x) & Invertebrate(x))", "all x. (Animal(x) & (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) & Animal(x))", "all x. (Hyrax(x) & Mammal(x))", "all x. (Grebe(x) & LaysEggs(x))", "-Grebe(grebe) & Platypus(grebe) & -Grebe(grebe) & Echidna(grebe)"], "conclusion": "all x. (Mammal(x) & (LaysEggs(x) & Platypus", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Mammal(x) & (LaysEggs(x) & Platypus\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Mammal(x) & (LaysEggs(x) & Platypus\n                                           ^\n"}
{"timestamp": "2025-05-01T22:27:18.228056", "premises": ["all x. ((Mammal(x) & LaysEgg(x)) -> ((x=Platypus) | (x=Echidna)))", "all x. Mammal(x) & -Hyrax(x)", "all x. Mammal(x) & -Hyrax(x)", "all x. Mammal(x) & -Invertebrate(x)", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. Mammal(x) & Animal(x)", "all x. Hyrax(x) & Mammal(x)", "all x. Bird(Grebe) & LaysEgg(Grebe)"], "conclusion": "all x. ((Bird(Grebe) & LaysEgg(Grebe)) -> ((-Platypus(Grebe)) & (-Echidna(Grebe))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-01T22:27:30.700842", "premises": ["all x. ((Grebes(x) & LayEggs(x)) -> -Mammal(x))", "exists x. ((LaysEggs(x) & Mammal(x)) & (x=platypus)) | (exists x. ((LaysEggs(x) & Mammal(x)) & (x=echidna))", "Echidnas(x) -> -Hyrax(x)", "Platypuses(x) -> -Hyrax(x)", "Grebes(x) & LayEggs(x)", "all x. ((Animal(x) -> (Vertebrate(x) | Invertebrate(x))))", "Mammal(x) -> Animal(x)", "Hyraxes(x) -> Mammal(x)", "all x. ((Mammal(x) -> ~Invertebrate(x))"], "conclusion": "(Grebes(x) & ~Platypus(x)) & (Grebes(x) & ~Echidna(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((LaysEggs(x) & Mammal(x)) & (x=platypus)) | (exists x. ((LaysEggs(x) & Mammal(x)) & (x=echidna))\n                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((LaysEggs(x) & Mammal(x)) & (x=platypus)) | (exists x. ((LaysEggs(x) & Mammal(x)) & (x=echidna))\n                                                                                                           ^\n"}
{"timestamp": "2025-05-01T22:27:37.437509", "premises": ["all x. ((LaysEggs(x) & In(x, Mammal)) -> (In(x, Platypus) | In(x, Echidna)))", "-(Hyrax(Platypus))", "-(Hyrax(Echidna))", "all x. ((Not(Vertebrate(x)) & Not(Invertebrate(x))) -> Not(Animal(x)))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. ((LaysEggs(x) & In(x, Mammal)) -> (In(x, Platypus) | In(x, Echidna)))", "all x. ((LaysEggs(x) & In(x, Mammal)) -> (In(x, Platypus) | In(x, Echidna)))", "-(Hyrax(Platypus))", "-(Hyrax(Echidna))", "all x. ((Not(Vertebrate(x)) & Not(Invertebrate(x))) -> Not(Animal(x)))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))"], "conclusion": "all x. (Hyrax(x) -> Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Vertebrate/1, Invertebrate/1, Animal/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Vertebrate/1, Invertebrate/1, Animal/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Vertebrate/1, Invertebrate/1, Animal/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Vertebrate/1, Invertebrate/1, Animal/1\n"}
{"timestamp": "2025-05-01T22:27:42.593245", "premises": ["all x. ((Mammal(x) & EggLaying(x)) -> (Platypus(x) | Echidna(x)))", "-Mammal(Platypus) & -Hyrax(Platypus)", "-Mammal(Echidna) & -Hyrax(Echidna)", "all x. ((Mammal(x) & Vertebrate(x)) & -Invertebrate(x))", "all x. ((Animal(x) & Vertebrate(x)) | (Animal(x) & Invertebrate(x)))", "all x. ((Mammal(x) & Animal(x))", "all x. ((Hyrax(x) & Mammal(x))", "all x. (LaysEggs(x)) & EggLaying(Grebe)"], "conclusion": "all x. ((Grebe(x) & Not(x, Platypus)) & (Grebe(x) & Not(x, Echidna)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Mammal(x) & Animal(x))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Mammal(x) & Animal(x))\n                               ^\n"}
{"timestamp": "2025-05-01T22:27:47.218352", "premises": ["(Mammal(x) & LayEgg(x)) -> (x=Platypus_|_x=Echidna)", "(Platypus_\u2260_Hyrax)", "(Echidna_\u2260_Hyrax)", "(Mammal(x) & -Invertebrate(x))", "(Animal(x) & (Vertebrate(x) | Invertebrate(x)))", "(Mammal(x) & Animal(x))", "Hyrax \u2229 Mammal", "(Greb_\u2229_LayEgg)", "(Greb_\u2260_Platypus) & (Greb_\u2260_Echidna)"], "conclusion": "(_Grebe_\u2229_Mammal) & -Inve(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2229'.\nHyrax \u2229 Mammal\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2229'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2229'.\nHyrax \u2229 Mammal\n      ^\n"}
{"timestamp": "2025-05-01T22:32:15.345667", "premises": ["not all x. (ArtPiece(x) -> Talent(x))", "all x. (Talent(x) -> Practice(x))", "exists x. (ArtPiece(x) & -Practice(x))", "all x. (Apple(x) -> Red(x))", "all x. (Red(x) -> Ripe(x))", "all x. (Ripe(x) -> CanBeEaten(x))", "all x. (Ripe(x) -> CanBeTurnedIntoJuice(x))", "all x. (Ripe(x) & CanBeEaten(x) -> CanBeTurnedIntoJuice(x))", "all x. (Red(x) & CanBeEaten(x))", "all x. (Red(x) & CanBeTurnedIntoJuice(x))", "all x. (NegativeNumber(x) -> LessThanZero(x))", "all x. (EvenNumber(x) -> DivisibleByTwo(x))", "all x. (Integer(x) -> PositiveOrNegative(x))", "all x. (PositiveInteger(x) -> NonZero(x))", "all x. (Integer(x) -> Countable(x))", "exists x. (EvenNumber(x) & NotDivisibleByTwo(x))", "exists x. (EvenNumber(x) & GreaterThanOrEqualToZero(x))", "exists x. (EvenNumber(x) & LessThanZero(x))", "exists x. (EvenNumber(x) & NotDivisibleByTwo(x))", "exists x. (EvenNumber(x) & GreaterThanOrEqualToZero(x))", "all x, y. (For(x, y) & Larger(x, y) -> Greater(x, y))", "all x. (Whole(x) -> GreaterThanSum(x))", "all x. (DivisibleByTwo(x) -> DivisibleIntoParts(x))"], "conclusion": "all x. (DivisibleByTwo(x) & GreaterThanSum(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expression expected.\nall x, y. (For(x, y) & Larger(x, y) -> Greater(x, y))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expression expected.\nall x, y. (For(x, y) & Larger(x, y) -> Greater(x, y))\n     ^\n"}
{"timestamp": "2025-05-01T22:32:17.021936", "premises": ["all x. (ArtPiece(x) -> ~TalentRequired(x))", "all x. (TalentRequired(x) -> RequiresPractice(x))"], "conclusion": "exists x. (ArtPiece(x) & ~RequiresPractice(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%ArtPiece(x) -> ~TalentRequired(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%ArtPiece(x) -> ~TalentRequired(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T22:32:28.851727", "premises": ["all x. (ArtPiece(x) -> -TalentRequired(x))", "all x. (TalentRequired(x) -> PracticeRequired(x))", "exists x. (ArtPiece(x) & -PracticeRequired(x))", "all x. (PrimeNumber(x) -> IsPrime997(x))", "notall x. (PrimeNumber(x) -> IsPrime2(x))", "all x. (PrimeNumber(x) -> IsPrime3(x))", "all x. (PrimeNumber(x) -> IsPrime4(x))", "all x. (PrimeNumber(x) -> IsPrime5(x))", "notall x. (PrimeNumber(x) -> IsPrime6(x))", "all x. (PrimeNumber(x) -> IsPrime7(x))", "notall x. (PrimeNumber(x) -> IsPrime8(x))", "all x. (PrimeNumber(x) -> IsPrime10(x))", "all x. (Cat(x) -> Fur(x))", "exists x. (Dog(x) & Fur(x))", "all x. (Fish(x) -> Scales(x))", "exists x. (Cat(x) & Scales(x))", "all x. (Atom(x) -> FiniteNumber(x))", "all x. (Hydrogen(x) -> (Proton(x) & Electron(x)))", "all x. (Helium(x) -> (Proton(x) & Electron(x)))"], "conclusion": "exists x. (Hydrogen(x) & Electron(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nnotall x. (PrimeNumber(x) -> IsPrime2(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nnotall x. (PrimeNumber(x) -> IsPrime2(x))\n       ^\n"}
{"timestamp": "2025-05-01T22:34:54.168205", "premises": ["all x. (ArtPiece(x) -> -TalentRequired(x))", "all x. (TalentRequired(x) -> PracticeRequired(x))", "all x. (Movie(x) -> -SpecialEffectsRequired(x))", "all x. (SpecialEffectsRequired(x) -> SignificantBudget(x))", "all x. (Airplane(x) -> Engine(x))", "all x. (Bus(x) -> Wheel(x))", "all x. (Wood(x) -> Biodegradable(x))", "all x. (Paper(x) -> MadeFrom(x, Wood))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Fruit(x) -> Edible(x))", "all x. (Edible(x) -> Taste(x))", "all x. (GreenLeaf(x) -> MadeFrom(x, Chlorophyll))", "all x. (Tree(x) -> Leaf(x))", "all x. (Bird(x) -> Wings(x))", "all x. (FlyingThing(x) -> Wings(x))", "all x. (Bird(x) -> Feathers(x))", "all x. (Mammal(x) -> Hair(x))", "all x. (Bird(x) -> Feathers(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Car(x) -> Engine(x))", "all x. (Bus(x) -> Wheel(x))", "all x. (Train(x) -> Engine(x))", "all x. (Bus(x) -> Wheel(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Car(x) -> Engine(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))", "all x. (Bicycle(x) -> Pedals(x))", "all x. (Bicycle(x) -> Chain(x))"], "conclusion": "all x. (Bicycle(x) -> Pedals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Wood/1, Wood/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Wood/1, Wood/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Wood/1, Wood/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Wood/1, Wood/0\n"}
{"timestamp": "2025-05-01T22:34:56.816670", "premises": ["not forAll x. (ArtPiece(x) -> requires(Talent, x))", "forAll x. (requires(Talent, x) -> requires(Practice, x))"], "conclusion": "exists x. (-requires(Talent, x) & -requires(Practice, x) & ArtPiece(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nnot forAll x. (ArtPiece(x) -> requires(Talent, x))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nnot forAll x. (ArtPiece(x) -> requires(Talent, x))\n           ^\n"}
{"timestamp": "2025-05-01T22:35:10.357010", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:35:25.054913", "premises": ["\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x. (Woodware(x) \u2192 Biodegradable(x))", "\u2200x. (Paper(x) \u2192 Woodware(x))", "\u2203x. (Good(x) \u2227 Bad(x))", "\u2200x. (EnvironmentFriendly(x) \u2192 Good(x))", "(Paper(Worksheet) \u2228 EnvironmentFriendly(Worksheet))", "-Dispensable(Worksheet)", "\u2200x. \u2200y. (LaLigaSoccerTeam(x) \u2227 LaLigaSoccerTeam(y) \u2227 - MorePoints(x, y) \u2227 -MorePoints(y, x) \u2227 MorePointsInGameBetween(x, y) \u2192 RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) \u2227 LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) \u2227 -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "\u2200x. (ProfessionalAthlete(x) \u2192 SpendOn(x, MostOfTheirTime, Sports))", "\u2200x. (OlympicGoldMedalWinner(x) \u2192 ProfessionalAthlete(x))", "\u2200x. (FullTimeScientist(x) \u2192 -SpendOn(x, MostOfTheirTime, Sports))", "\u2200x. (NobelPhysicsLaureate(x) \u2192 FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) \u2228 OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) \u2192 -OlympicGoldMedalWinner(Amy)"], "conclusion": "-OlympicGoldMedalWinner(Amy) \u2192 NobelLaureate(Amy)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\n-OlympicGoldMedalWinner(Amy) \u2192 NobelLaureate(Amy)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\n-OlympicGoldMedalWinner(Amy) \u2192 NobelLaureate(Amy)\n                             ^\n"}
{"timestamp": "2025-05-01T22:36:08.904296", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)"], "conclusion": "HigherRank(RealMadrid, Barcelona)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nall x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->\n                                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nall x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->\n                                                                                                                                   ^\n"}
{"timestamp": "2025-05-01T22:36:31.417788", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:36:57.808402", "premises": ["for all x, if Biodegradable(x) then EnvironmentFriendly(x)", "for all x, if Woodware(x) then Biodegradable(x)", "for all x, if Paper(x) then Woodware(x)", "for all x, -(Good(x) and Bad(x))", "for all x, if EnvironmentFriendly(x) then Good(x)", "for all x, if Paper(x) or EnvironmentFriendly(x) then A(x)", "for all x, -Dispensable(A(x))", "for all x, for all y, if LaLigaSoccerTeam(x) and LaLigaSoccerTeam(y) and MorePoints(x, y) then RankHigherThan(x, y)", "for all x, for all y, if LaLigaSoccerTeam(x) and LaLigaSoccerTeam(y) and -MorePoints(x, y) and -MorePoints(y, x) and MorePointsInGameBetween(x, y) then RankHigherThan(x, y)", "LaLigaSoccerTeam(RealMadrid) and LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePoints(RealMadrid, Barcelona) and -MorePoints(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "for all x, if ProfessionalAthlete(x) then SpendOn(x, MostOfTheirTime, Sports)", "for all x, if OlympicGoldMedalWinner(x) then ProfessionalAthlete(x)", "for all x, if FullTimeScientist(x) then -SpendOn(x, MostOfTheirTime, Sports)", "for all x, if NobelPhysicsLaureate(x) then FullTimeScientist(x)", "SpendOn(Amy, MostOfTheirTime, Sports) or OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) then -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) then NobelLaureate(Amy)", "for all x, if ProfessionalAthlete(x) then SpendOn(x, MostOfTheirTime, Sports)", "for all x, if OlympicGoldMedalWinner(x) then ProfessionalAthlete(x)", "for all x, if FullTimeScientist(x) then -SpendOn(x, MostOfTheirTime, Sports)", "for all x, if NobelPhysicsLaureate(x) then FullTimeScientist(x)"], "conclusion": "SpendOn(Amy, MostOfTheirTime,", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nSpendOn(Amy, MostOfTheirTime,\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nSpendOn(Amy, MostOfTheirTime,\n                             ^\n"}
{"timestamp": "2025-05-01T22:37:34.587607", "premises": ["discovered between 1947 and now, Diethylcarbamazine", "uses Diethylcarbamazine to treat river blindness", "only preferred treatment for river blindness is ivermectin"], "conclusion": "Diethylcarbamazine is not ivermectin", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nDiethylcarbamazine is not ivermectin\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nDiethylcarbamazine is not ivermectin\n                   ^\n"}
{"timestamp": "2025-05-01T22:37:42.300269", "premises": ["all x. (Discovered(x, OneNineFourSeven) & Medication(x))", "all x. (CanTreat(x, riverBlindness) & Diethylcarbamazine(x))", "all x. (PreferredTreatment(x, riverBlindness) & Ivermectin(x))", "all x. (Diethylcarbamazine(x) -> -Ivermectin(x))"], "conclusion": "-PreferredTreatment(Diethylcarbamazine, riverBlindness)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diethylcarbamazine/1, Diethylcarbamazine/0\n"}
{"timestamp": "2025-05-01T22:38:40.212778", "premises": ["exists x. (Artwork(x) & WorldBestKnown(x, MonaLisa))", "exists x. (Portrait(x) & PaintedBy(x, Leonardo_da_Vinci))", "Scientist(Leonardo_da_Vinci) & Painter(Leonardo_da_Vinci)", "all x. (Genre(x) -> (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "not exists x. (Artwork(x) & WorldBestKnown(x, Portrait))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-05-01T22:39:32.417055", "premises": ["all x. (Painting(x) -> BestKnown(x, World))", "all x. (Portrait(x) -> PaintedBy(x, LeonardoDaVinci))", "all x. (Scientist(x) & Painter(x) -> LeonardoDaVinci(x))", "all x. (Painting(x) -> Genre(x, ~History) & Genre(x, ~Portrait) & Genre(x, ~Animal) & Genre(x, ~Landscape) & Genre(x, ~StillLife))"], "conclusion": "all x. (BestKnown(x, World) -> ~Genre(x, Portrait))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (Painting(x) -> ((((Genre(%%START ERROR%%x,~History%%END ERROR%%) & Genre(x,~Portrait)) & Genre(x,~Animal)) & Genre(x,~Landscape)) & Genre(x,~StillLife))).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (Painting(x) -> ((((Genre(%%START ERROR%%x,~History%%END ERROR%%) & Genre(x,~Portrait)) & Genre(x,~Animal)) & Genre(x,~Landscape)) & Genre(x,~StillLife))).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T22:39:46.124594", "premises": ["worldBestKnownPainting(MonaLisa)", "Portrait(MonaLisa) & Painter(Leonardo_da_Vinci)", "Scientist(Leonardo_da_Vinci) & Painter(Leonardo_da_Vinci)", "genre(History) | genre(Portrait) | genre(Animal) | genre(Landscape) | genre(StillLife)"], "conclusion": "-worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisa) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnownPortrait(MonaLisha) & -worldBestKnow", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: worldBestKnow.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: worldBestKnow", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: worldBestKnow.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: worldBestKnow\n"}
{"timestamp": "2025-05-01T22:39:49.651723", "premises": ["all x. (WorldsBestKnownPainting(x) -> MonaLisa(x))", "all x. (Portrait(x) -> PaintedBy(x, Leonardo_da_Vinci))", "all x. (Scientist(x) & Paintier(x) -> Leonardo da Vinci(x))", "all x. (PaintingGenre(x) -> (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "all x. (WorldsBestKnownArtworks -> (History(x) | Animal(x) | Landscape(x) | StillLife(x)) & -Portrait(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'da'.  Expected token ')'.\nall x. (Scientist(x) & Paintier(x) -> Leonardo da Vinci(x))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'da'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'da'.  Expected token ')'.\nall x. (Scientist(x) & Paintier(x) -> Leonardo da Vinci(x))\n                                               ^\n"}
{"timestamp": "2025-05-01T22:39:53.063545", "premises": ["(BestKnownPainting(MonaLisa) & WorldFamousArtwork(MonaLisa))", "(Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci))", "(Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci))", "(HistoryPainting_|_PortraitPainting_|_AnimalPainting_|_LandscapePainting_|_StillLifePainting)"], "conclusion": "for x (BestKnownArtwork(x) -> (Portrait(x) -> False) & (NotPortrait(x) -> True))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nfor x (BestKnownArtwork(x) -> (Portrait(x) -> False) & (NotPortrait(x) -> True))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nfor x (BestKnownArtwork(x) -> (Portrait(x) -> False) & (NotPortrait(x) -> True))\n    ^\n"}
{"timestamp": "2025-05-01T22:39:55.884940", "premises": ["-WorldsBestKnownArtwork(TheMonaLisa)", "Portrait(MonaLisa) & PaintedBy(Portrait, Leonardo_da_Vinci)", "(Scientist(Leonardo_da_Vinci) & Painter(Leonardo_da_Vinci))", "Genre(History) & Genre(Portrait) & Genre(Animal) & Genre(Landscape) & Genre(StillLife)"], "conclusion": "-WorldsBestKnownArtwork(Portrait)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-05-01T22:39:57.603389", "premises": ["all hatcheries. (For(hatcheries, Conservation))", "all hatcheries. (Conservation(hatcheries) -> MightReleaseAnimalsIntoWild(hatcheries))"], "conclusion": "TheNationalLobsterHatchery.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nTheNationalLobsterHatchery.\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nTheNationalLobsterHatchery.\n                          ^\n"}
{"timestamp": "2025-05-01T22:40:14.017072", "premises": ["exists x. For(x, Padstow) & Exists(Hatchery(x))", "exists x. (Hatchery(x) & OpenToVisitors(x))", "all x. (Hatchery(x) -> ForProfit(x) | ForConservation(x))", "all x. (ForConservation(x) -> MightReleaseAnimals(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "forAll(x. Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nforAll(x. Hatchery(x) -> OpenToVisitors(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nforAll(x. Hatchery(x) -> OpenToVisitors(x))\n        ^\n"}
{"timestamp": "2025-05-01T22:40:17.296074", "premises": ["Hatchery(NationalLobsterHatchery) & Location(NationalLobsterHatchery, Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "Hatchery(x) -> either(x, ForProfit, ForConservation)", "ForConservation(x) -> MightReleaseAnimals(x, intoTheWild)", "ForConservation(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ForConservation/1, ForConservation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ForConservation/1, ForConservation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ForConservation/1, ForConservation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ForConservation/1, ForConservation/0\n"}
{"timestamp": "2025-05-01T22:40:28.516235", "premises": ["all x. (NationalLobsterHatchery(x) -> x is in Padstow, England)", "all x. (NationalLobsterHatchery(x) -> OpenToVisitors(x))", "all x. (Hatchery(x) -> (ForProfit(x) | ForConservation(x)))", "all x. (ForConservation(x) -> releasesAnimalsInTheWild(x))", "not ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> OpenToVisitors(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nall x. (NationalLobsterHatchery(x) -> x is in Padstow, England)\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nall x. (NationalLobsterHatchery(x) -> x is in Padstow, England)\n                                        ^\n"}
{"timestamp": "2025-05-01T22:40:42.205013", "premises": ["all x. (BiodegradableWoodware(x) -> -Document(x))", "all x. (RealWood(x) -> Woodware(x))", "-BiodegradableWoodware(Paper)", "all x. (RealWood(x) -> (BiodegradableWoodware(x) | Document(x)))", "-BiodegradableWoodware(Paperwork)", "-Paperwork(RealWood)", "-BiodegradableWoodware(Paperwork)"], "conclusion": "BiodegradableWoodware(Paperwork)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealWood/1, RealWood/0, Paperwork/1, Paperwork/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealWood/1, RealWood/0, Paperwork/1, Paperwork/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RealWood/1, RealWood/0, Paperwork/1, Paperwork/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RealWood/1, RealWood/0, Paperwork/1, Paperwork/0\n"}
{"timestamp": "2025-05-01T22:41:05.086677", "premises": ["all x. (Hungry(x) -> Discomforted(x))", "all x. (Discomforted(x) -> Unhappy(x))", "all x. (NotHungry(x) -> Unhappy(x))", "all x. (Human(x) -> Brain(x))", "all x. (Human(x) -> Heart(x))", "all x. (Human(x) -> Mortal(x))", "all x. (Human(x) -> ReproducesBiologically(x))"], "conclusion": "Brain(Human) & Heart(Human)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Human/1, Human/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Human/1, Human/0\n"}
{"timestamp": "2025-05-01T22:41:09.090537", "premises": ["`all x. (Hungry(x) -> Uncomfortable(x))`", "`all x. (Uncomfortable(x) -> Unhappy(x))`"], "conclusion": "`all x. (-Hungry(x) -> Unhappy(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (-Hungry(x) -> Unhappy(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (-Hungry(x) -> Unhappy(x))`\n     ^\n"}
{"timestamp": "2025-05-01T22:41:14.758386", "premises": ["all x. (Hungry(x) -> Uncomfortable(x))", "all x. (Uncomfortable(x) -> Unhappy(x))", "all x. (EatsUntilFull(x) -> Not(Hungry(x)))", "all x. (Full(x) -> Not(Uncomfortable(x)))", "all x. (Not(Uncomfortable(x)) -> Not(Unhappy(x)))"], "conclusion": "all x. (Hungry(x) -> Try(x, FindFood))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hungry/1, Uncomfortable/1, Unhappy/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hungry/1, Uncomfortable/1, Unhappy/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Hungry/1, Uncomfortable/1, Unhappy/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Hungry/1, Uncomfortable/1, Unhappy/1\n"}
{"timestamp": "2025-05-01T22:41:54.297229", "premises": ["exists x. (Fear(x) -> Anxiety(x))", "exists x. (Anxiety(x) -> Terror(x))", "exists x. (Fear(x) -> Terror(x))", "all x. (ProvidesLoans(WorldBank, x) -> Country(x))", "all x. (ProvidesLoans(WorldBank, x) -> EconomicPolicy(x))", "all x. (HasFavorableEconomicPolicies(x) -> RepaysLoan(x))", "all x. (ProvidesLoans(IMF, x) -> Country(x))", "all x. (ProvidesLoans(IMF, x) -> EconomicPolicy(x))", "all x. (HasFavorableEconomicPolicies(x) -> RepaysLoan(x))", "all x. (-HasFavorableEconomicPolicies(x) -> DoesNotRepayLoan(x))", "exists x. (IsStar(x) -> Sun(x))", "all x. (IsStar(x) -> HasPlanetarySystem(x))", "exists x. (IsPlanet(x) & InSolarSystem(x) & InPlanetarySystemOfStar(x, Sun))", "exists x. (IsPlanet(x) & InSolarSystem(x) & HasLife(x) & NotInOtherPlanetarySystem(x))"], "conclusion": "exists x. (IsPlanet(x) & InSolarSystem(x) & InPlanetarySystemOfStar(x, Sun))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sun/1, Sun/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sun/1, Sun/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sun/1, Sun/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sun/1, Sun/0\n"}
{"timestamp": "2025-05-01T22:41:57.724736", "premises": ["all x. (FearOf(x) -> Anxiety(x))", "all x. (Anxiety(x) -> Terror(x))"], "conclusion": "\\_", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'_' is an illegal variable name.  Constants may not be abstracted.\n\\_\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '_' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '_' is an illegal variable name.  Constants may not be abstracted.\n\\_\n ^\n"}
{"timestamp": "2025-05-01T22:42:15.128504", "premises": ["all x. ((Fear(x) & LeadTo(x, Anxiety)) | (Anxiety(x) & LeadTo(x, Terror)))", "exists x. (ImmuneSystem(x) & Has(x, Allergy)) | (Allergens(x) & ReactsTo(x, ImmuneSystem(x)))"], "conclusion": "all x. (Apple(x) -> Fruit(x)) & all x. (Fruit(x) -> Consumed(x, manyWays)) & all x. (FruitJuice(x) -> Consumed(x, manyWays)) & AppleJuice(x) -> FruitJuice(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ImmuneSystem/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ImmuneSystem/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ImmuneSystem/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ImmuneSystem/1\n"}
{"timestamp": "2025-05-01T22:42:23.012151", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)", "all x. (TuringAward(x) -> (AnalysisOfAlgorithms(x) & OR (ArtificialIntelligence(x), NumericalMethods(x)))) & not all x. (TuringAward(x) -> AnalysisOfAlgorithms(x))"], "conclusion": "all x. (Computing_!=_Mathematics)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ArtificialIntelligence/1, NumericalMethods/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ArtificialIntelligence/1, NumericalMethods/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ArtificialIntelligence/1, NumericalMethods/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ArtificialIntelligence/1, NumericalMethods/1\n"}
{"timestamp": "2025-05-01T22:42:30.130038", "premises": ["all x. ((TuringAward(x) -> (ContributionsTo(x, AnalysisOfAlgorithms) | ContributionsTo(x, ArtificialIntelligence) | ContributionsTo(x, NumericalMethods) | ContributionsTo(x, ArtificialIntelligence)))", "ContributionsTo(DonaldKnuth, AnalysisOfAlgorithms)", "ContributionsTo(MarvinMinsky, ArtificialIntelligence)", "ContributionsTo(RichardHamming, NumericalMethods)", "ContributionsTo(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "let x be all those who won the Turing Award & exists y. ((TuringAward(y) & ContributionsTo(y, AnalysisOfAlgorithms)) & x = y) -> x = y", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nlet x be all those who won the Turing Award & exists y. ((TuringAward(y) & ContributionsTo(y, AnalysisOfAlgorithms)) & x = y) -> x = y\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nlet x be all those who won the Turing Award & exists y. ((TuringAward(y) & ContributionsTo(y, AnalysisOfAlgorithms)) & x = y) -> x = y\n    ^\n"}
{"timestamp": "2025-05-01T22:42:46.638726", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "Contribution(DonaldKnuth, AnalysisOfAlgorithms)", "Contribution(MarvinMinsky, ArtificialIntelligence)", "Contribution(RichardHamming, NumericalMethods)", "Contribution(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "(TuringAward(DonaldKnuth) & TuringAward(JohnMcCarthy)) & (Contribution(DonaldKnuth, AnalysisOfAlgorithms) & Not(Contribution(JohnMcCarthy, AnalysisOfAlgorithms)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Contribution/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Contribution/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Contribution/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Contribution/2\n"}
{"timestamp": "2025-05-01T22:43:03.528786", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (Paper(x) -> CanBeRecycled(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "-Chef(Luke) & -Baker(Luke)"], "conclusion": "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta) & MakesALotOfBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta) & MakesALotOfBreakfast(Luke)\n                                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta) & MakesALotOfBreakfast(Luke)\n                                                                                                                                    ^\n"}
{"timestamp": "2025-05-01T22:46:27.055976", "premises": ["AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "AnalysisOfAlgorithms(DonaldKnuth)", "ArtificialIntelligence(MarvinMinsky)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)", "ArtificialIntelligence(JohnMcCarthy)]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "exists x. (AwardedTheTuringAward(x) & AnalysisOfAlgorithms(x))]", "AwardedTheTuringAward(MarvinMinsky) & AwardedTheTuringAward(DonaldKnuth) & AwardedTheTuringAward(RichardHamming) & AwardedTheTuringAward(JohnMcCarthy)", "ArtificialIntelligence(MarvinMinsky)", "AnalysisOfAlgorithms(DonaldKnuth)", "NumericalMethods(RichardHamming)"], "conclusion": "ArtificialIntelligence(JohnMcCarthy)]", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ']'.\nArtificialIntelligence(JohnMcCarthy)]\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ']'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ']'.\nArtificialIntelligence(JohnMcCarthy)]\n                                    ^\n"}
{"timestamp": "2025-05-01T22:46:48.304536", "premises": ["all x. (Conclusion(x) -> LogicallyFollows(x, Premises))", "all x. (Premises(x) -> StatementOrFact(x))", "all x. (Conclusion(x) -> ProveOrEstablish(x))", "all x. (Premises(x) -> Evidence(x, Conclusion))", "all x. (Conclusion(x) -> LogicallyFollows(x, Premises))", "all x. (Biodegradable(x) -> BrokenDownByLivingOrganisms(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "all x. (Paper(x) -> Biodegradable(x))", "all x. (Animal(x) -> AnimalType(x, Dog))", "all x. (Animal(x) -> Fur(x))", "all x. (Dog(x) -> -Fur(x))", "all x. (AnimalType(x, Dog) -> NotAnimal(x))", "all x. (Mammal(x) -> FurOrHair(x))", "all x. (Dog(x) -> Mammal(x))", "all x. (Cat(x) -> Mammal(x))", "all x. (Dog(x) -> FurOrHair(x))", "all x. (PlanetInSolarSystem(x) -> CanSupportLife(x))", "all x. (Species(x) -> OnPlanet(x, Earth))", "all x. (OnPlanet(x, Earth) -> PlanetInSolarSystem(x))", "all x. (CanSupportLife(Earth) -> OnPlanet(Humans, Earth))", "all x. (PlanetInSolarSystem(x) -> Earth(x))", "all x. (CanSupportLife(x) -> (x_!=_Earth))", "all x. (CanSupportLife(x) -> (x_!=_Earth) & (x_!=_other_planet))", "all x. (OnPlanet(Humans, x) -> x = Earth)", "all x. (CanSupportLife(x) -> (x_=_Earth))"], "conclusion": "all x. ((OnPlanet(Humans, x) & CanSupportLife(x)) -> x = Earth)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dog/1, Dog/0, Conclusion/1, Conclusion/0, Premises/1, Premises/0, Earth/1, Earth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dog/1, Dog/0, Conclusion/1, Conclusion/0, Premises/1, Premises/0, Earth/1, Earth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dog/1, Dog/0, Conclusion/1, Conclusion/0, Premises/1, Premises/0, Earth/1, Earth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dog/1, Dog/0, Conclusion/1, Conclusion/0, Premises/1, Premises/0, Earth/1, Earth/0\n"}
{"timestamp": "2025-05-01T22:47:40.211364", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:48:08.511435", "premises": ["SAT(x) -> OwnedBy(CollegeBoard, x)", "Intent(SAT, AssessReadyForCollege)", "OriginalDesign(SAT, NonAlignedWithHighSchoolCurricula)", "Adjustments(SAT, TwoZeroOneSix) -> AlignedWith(SAT, HighSchoolCurriculum)"], "conclusion": "OwnedBy(CollegeBoard, SAT) & OwnedBy(OtherThirdParties, SAT)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0\n"}
{"timestamp": "2025-05-01T22:48:11.996615", "premises": ["all x. (SAT(x) -> OwnedBy(CollegeBoard, x))", "all x. (SAT(x) -> IntendedToAssess(x, ReadinessForCollege))", "all x. (SAT(x) -> OriginallyDesignedNotAligned(x, HighSchoolCurricula))", "exists x. (SAT(x) & IntroducedIn(x, TwoZeroOneSix) & AdjustmentsMadeTo(x, AlignWithHighSchoolCurricula))"], "conclusion": "OwnedBy(CollegeBoard, SAT) & OtherOwners(SAT)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SAT/1, SAT/0.\n\n\nFatal error:  The following symbols are used with multiple arities: SAT/1, SAT/0\n"}
{"timestamp": "2025-05-01T22:48:27.478291", "premises": ["all x. (Owned(x, CollegeBoard) & Developed(x))", "all x. (Intended(x, CollegeAssessment) & Readiness(x, College))", "all x. (Designed(x, NotAlignedWithHighSchoolCurricula) & SAT(x))", "all x. (AdjustmentsMade(x, SATTwoZeroOneSix) & AlignedWithHighSchoolCurricula(x))"], "conclusion": "all x. ((Owned(x, CollegeBoard) & Developed(x)) | (Owned(x, OtherThirdParties) & Developed(x) & NotCollegeBoard) | (OtherThirdParties(x) & NotDeveloped(x) & NotCollegeBoard))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OtherThirdParties/1, OtherThirdParties/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OtherThirdParties/1, OtherThirdParties/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OtherThirdParties/1, OtherThirdParties/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OtherThirdParties/1, OtherThirdParties/0\n"}
{"timestamp": "2025-05-01T22:49:28.030960", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))", "exists x. (BRICS(x) & Speaks(x, Hindi))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (SAT(x) -> CollegeReady(x))", "all x. (SAT(x) -> NotAlignedWithHighSchoolCurricula(x))", "all x. (SAT(x) -> AlignedWithHighSchoolCurricula(x))"], "conclusion": "all x. (SAT(x) -> OwnedByCollegeBoardAndOthers(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:49:35.843141", "premises": ["all x. (Surname(x) -> Italian(x))", "AlbaRoversi(x) -> Surname(x)", "PaoloRoversi(x) -> Surname(x)", "RobertoRoversi(x) -> Surname(x)", "PaoloRoversi(x) -> Photographer(x)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Amateur(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0\n"}
{"timestamp": "2025-05-01T22:49:41.918269", "premises": ["all x. (Surname(x) & Italian(x))", "all x. (Surname(x) & Alba(x))", "all x. (Surname(x) & Paolo(x))", "all x. (Surname(x) & Roberto(x))", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> ProfessionalOrAmateur(x))", "PaoloRoversi is not Professional", "all x. (Surname(x) & Italian(x))", "all x. (Surname(x) & Alba(x))", "all x. (Surname(x) & Paolo(x))", "all x. (Surname(x) & Roberto(x))", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> ProfessionalOrAmateur(x))"], "conclusion": "PaoloRoversi is not ProfessionalIn(PaoloRoversi, Photography)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nPaoloRoversi is not ProfessionalIn(PaoloRoversi, Photography)\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nPaoloRoversi is not ProfessionalIn(PaoloRoversi, Photography)\n             ^\n"}
{"timestamp": "2025-05-01T22:49:49.740622", "premises": ["Roversi is an Italian surname.", "Alba Roversi uses Roversi as a surname.", "Paolo Roversi uses Roversi as a surname.", "Roberto Roversi uses Roversi as a surname.", "Paolo is a photographer.", "Photographer(x) -> (Professional(x) | Amateur(x))", "~Professional(Roberto)"], "conclusion": "Amateur(Paolo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nRoversi is an Italian surname.\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nRoversi is an Italian surname.\n        ^\n"}
{"timestamp": "2025-05-01T22:50:24.932468", "premises": ["\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))", "\u2200x. (Woodware(x) \u2192 Biodegradable(x))", "\u2200x. (Paper(x) \u2192 Woodware(x))", "\u00ac(Good(x) \u2227 Bad(x))", "\u2200x. (EnvironmentFriendly(x) \u2192 Good(x))", "(Paper(Worksheet) \u2228 EnvironmentFriendly(Worksheet))", "Dispensable(Worksheet)", "\u2200x \u2200y. (LaLigaSoccerTeam(x) \u2227 LaLigaSoccerTeam(y) \u2192 LaLigaSoccerTeam(x) \u2265 LaLigaSoccerTeam(y) \u2192 LaLigaSoccerTeam(x) \u2192 MorePoints(x, y))", "\u2200x \u2200y. (LaLigaSoccerTeam(x) \u2227 LaLigaSoccerTeam(y) \u2192 LaLigaSoccerTeam(x) \u2265 LaLigaSoccerTeam(y) \u2192 LaLigaSoccerTeam(x) \u2192 MorePointsFromGames(x, y) \u2192 RankHigher(x, y))", "LaLigaSoccerTeam(RealMadrid) \u2227 LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsFromGames(RealMadrid, Barcelona) \u2227 -MorePointsFromGames(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "\u2200x. (ProfessionalAthlete(x) \u2192 SpendOn(x, MostOfTheirTime, Sports))", "\u2200x. (OlympicGoldMedalWinner(x) \u2192 ProfessionalAthlete(x))"], "conclusion": "\u2200x", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n\u2200x. (Biodegradable(x) \u2192 EnvironmentFriendly(x))\n  ^\n"}
{"timestamp": "2025-05-01T22:51:07.214821", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) ->  RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)"], "conclusion": "HigherRank(RealMadrid, Barcelona)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:51:14.513799", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))"], "conclusion": "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nCanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)\n                                                                                                       ^\n"}
{"timestamp": "2025-05-01T22:52:02.830917", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (LaLigaSoccerTeam(x) -> Higher(x, NoTeam))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -Higher(x, y) & -Higher(y, x) & MorePoints(x, y) -> Higher(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (Taxpayer(James) & -Has(James, CriminalRecord)))", "ContributeToCountry(James)", "all x. (Song(x) -> -Visual(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (Can(x, Cook) & -Chef(x))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. (Baker(x) & CanMake(x, ScrambledEggs) -> GoodBreakfast(x))", "CanMake(Luke, Cookies) & CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta)", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "Actor(DaveedDiggs) & FilmProducer(DaveedDiggs)", "exists x. exists y.(PlaysIn(DaveedDiggs, x, Hamilton) & (-(x=y)) & PlaysIn(DaveedDiggs, y, Hamilton)) & OnBroadway(Hamilton) & Musical(Hamilton)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))", "Plays(DaveedDiggs, ThomasJefferson)", "all x. ((Musical(x) & OnBroadway(x)) -> -Film(x))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-01T22:52:15.444839", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> ReleasesRapAlbum(x))", "ReleasesRapAlbum(Tyga, WellDoneThree)", "all x. (Rapper(x) -> Promotes(x, HipHopCulture) & -Promotes(x, OperaCulture))", "all x. (SeasonsOfYear(x) = 4)", "StartedOn(SummerSeason, JuneTwoOnest) & EndedOn(SummerSeason, AugustTwoZeroth)", "all x. (LengthOfSeason(x) = 90)", "StartedOn(WinterSeason, DecemberTwoOnest) & EndedOn(WinterSeason, MarchTwoZeroth)", "StartedOn(SpringSeason, MarchTwoOnest) & EndedOn(SpringSeason, MayTwoZeroth)", "StartedOn(AutumnSeason, SeptemberTwoThreerd) & EndedOn(AutumnSeason, NovemberTwoZeroth)", "LengthOfSeason(SummerSeason) = 90", "all x. (NegativeInteger(x) -> LessThanZero(x))", "all x. (Integer(x) -> EitherZeroOrNonZero(x))", "all x. (Integer(x) -> EitherPositiveOrNegative(x))", "all x. (PositiveInteger(x) -> GreaterThanZero(x))", "all x. (EvenNumber(x) -> DivisibleByTwo(x))", "all x. (OddNumber(x) -> NotDivisibleByTwo(x))"], "conclusion": "all x. (EvenNumber(x) -> GreaterThanOrEqualToZero(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ReleasesRapAlbum/2, ReleasesRapAlbum/1\n"}
{"timestamp": "2025-05-01T22:52:24.092250", "premises": ["Rapper(Tyga)", "Exists x. (Rapper(x) -> Releases(x, rap_album))", "WellDone3(Album)", "-(Rapper(x) -> OperaSinger(x))", "exists x. (Releases(x, WellDoneThree) -> Good(x))", "Singer(Jane)", "Can(Jane, sing)", "exists x. (Sings(Jane, x) & PopSong(x))", "PopSinger(Jane)"], "conclusion": "exists x. (Singer(x) & PopSinger(x) -> Good(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Rapper(x) -> Releases(x, rap_album))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Rapper(x) -> Releases(x, rap_album))\n       ^\n"}
{"timestamp": "2025-05-01T22:52:50.569283", "premises": ["Rapper(Tyga)", "releases( rappers, rap_albums)", "released(Tyga, Well_Done_Three)", "not(Rapper(x) & OperaSinger(x))", "Aya(gymnast)", "not(do(gymnasts, sports))", "do(Aya, sports)", "do(Aya, sports)", "if(do(Aya, sports), not(Aya(gymnast)), Aya(gymnast))", "do(Aya, sports)", "not(do(Aya, sports))", "Student(A)", "Teacher(B)", "not(related(A, B))", "in(A, school) & in(B, school) & school(A,B)", "charge(B, A)", "lastName(B, A)", "siblings(A, B)", "not(charge(B, A))", "Student(A)", "Teacher(B)", "not(related(A, B))", "in(A, school) & in(B, school) & school(A,B)"], "conclusion": "charge(B, A)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: school/2, school/0, Aya/1, Aya/0.\n\n\nFatal error:  The following symbols are used with multiple arities: school/2, school/0, Aya/1, Aya/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: school/2, school/0, Aya/1, Aya/0.\n\n\nFatal error:  The following symbols are used with multiple arities: school/2, school/0, Aya/1, Aya/0\n"}
{"timestamp": "2025-05-01T22:53:01.858450", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "(-MorePoints(RealMadrid, Barcelona)) & (-MorePoints(Barcelona, RealMadrid))", "all x. all y. ((Odd(x) & Even(y)) & (One_<=_x_<=_TwoZero) & (One_<=_y_<=_TwoZero) & (x_/=_y))"], "conclusion": "all x. ((Odd(x) & 3Digits(x)) & (DigitSum(x) = 9))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x all y ((((Odd(x) & Even(y)) & ((%%START ERROR%%One_< = _x_<%%END ERROR%%) = _TwoZero)) & ((One_< = _y_<) = _TwoZero)) & (x_/ = _y)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x all y ((((Odd(x) & Even(y)) & ((%%START ERROR%%One_< = _x_<%%END ERROR%%) = _TwoZero)) & ((One_< = _y_<) = _TwoZero)) & (x_/ = _y)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T22:53:32.635616", "premises": ["all x. (Hawk(x) -> ~Swims(x))", "exists x. (Bird(x) & Hawk(x))", "~all x. (Bird(x) -> Swims(x))", "all x. (Water(x) -> Liquid(x))", "all x. (Water(x) -> Transparent(x))", "all x. (Water(x) -> Polar(x))", "all x. (Water(x) -> (Hydrogen(x) & Hydrogen(x) & Oxygen(x)))", "~all x. (Water(x) -> Solid(x))", "all x. (Tiger(x) -> Cat(x))", "all x. (Cat(x) -> Fur(x))", "all x. (Tiger(x) -> Fur(x))", "all x. (Bird(x) -> WarmBlooded(x))", "all x. (Mammal(x) -> Fur(x))", "all x. (Reptile(x) -> ColdBlooded(x))", "Bird(Bird) -> Fur(Bird)", "all x. (Water(x) -> Liquid(x))", "all x. (Water(x) -> Transparent(x))", "all x. (Water(x) -> Polar(x))", "all x. (Water(x) -> Polar(x))", "all x. (Water(x) -> Polar(x))", "all x. (Bird(x) -> CannotFlyByThemselves(x))", "all x. (Bird(x) -> FliesInFlocks(x))", "all x. (Bird(x) -> FliesByThemselves(x))", "all x. (Bird(x) -> CanFly(x))", "all x. (Bird(x) -> FliesByThemselves(x))", "all x. (Bird(x) -> FliesInFlocks(x))"], "conclusion": "all x. (Bird(x) -> CanFly(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n~all x. (Bird(x) -> Swims(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n~all x. (Bird(x) -> Swims(x))\n     ^\n"}
{"timestamp": "2025-05-01T22:53:40.438614", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)"], "conclusion": "all x. all y. (LaLigaSoccerTeam(x) & LaLiga", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (LaLigaSoccerTeam(x) & LaLiga\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (LaLigaSoccerTeam(x) & LaLiga\n                                           ^\n"}
{"timestamp": "2025-05-01T22:54:09.607428", "premises": ["all x. (CanTransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (TeslaModel3(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))"], "conclusion": "all x. ( JohnCar(x) -> ~TeslaModel3(x) & ~SingleSeatElectricCar(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ( JohnCar(x) -> ~TeslaModel3(x) & ~SingleSeatElectricCar(x)\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ( JohnCar(x) -> ~TeslaModel3(x) & ~SingleSeatElectricCar(x)\n                                                                  ^\n"}
{"timestamp": "2025-05-01T22:54:13.735232", "premises": ["all x. (CanTransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (TeslaModel3(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEVCar(x) -> SingleSeatElectricCar(x))", "exists x. ((NotTeslaModel3(x) & NotSingleSeatElectricCar(x)) & John'sCar = x)", "NotTeslaModel3(JohnsCar)"], "conclusion": "TeslaModel3(JohnsCar)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((NotTeslaModel3(x) & NotSingleSeatElectricCar(x)) & (%%START ERROR%%John'sCar = x%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((NotTeslaModel3(x) & NotSingleSeatElectricCar(x)) & (%%START ERROR%%John'sCar = x%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-01T22:54:33.924478", "premises": ["all x. (TransportMultiplePassengers(x) -> NotOneSeater(x))", "all x. (TeslaModel3(x) -> TransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEVCar(x) -> SingleSeatElectricCar(x))", "~TeslaModel3(JohnsCar) | ~SingleSeatElectricCar(JohnsCar) | JohnsCar \u2260 TeslaModel3 (or_JohnsCar_\u2260_SingleSeatElectricCar)"], "conclusion": "TeslaModel3(JohnsCar)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.\n~TeslaModel3(JohnsCar) | ~SingleSeatElectricCar(JohnsCar) | JohnsCar \u2260 TeslaModel3 (or_JohnsCar_\u2260_SingleSeatElectricCar)\n                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.\n~TeslaModel3(JohnsCar) | ~SingleSeatElectricCar(JohnsCar) | JohnsCar \u2260 TeslaModel3 (or_JohnsCar_\u2260_SingleSeatElectricCar)\n                                                                     ^\n"}
{"timestamp": "2025-05-01T22:54:42.232706", "premises": ["all x. if canTransport(x) then notOneSeater(x)", "all x. if Model3(x) then canTransport(x)", "all x. if singleSeatElectricCar(x) then oneSeater(x)", "all x. if SoloEV(x) then singleSeatElectricCar(x)", "if not TeslaModel3(Johns_car) then not TeslaModel3(Johns_car) or not SingleSeatElectricCar(Johns_car)", "TeslaModel3(Johns_car)", "all x. if takeAP(x) then score(x)", "max(score, Five)", "if score(x) = 5 then earnedCollegeCredit(x)"], "conclusion": "takeAP(John)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'canTransport'.\nall x. if canTransport(x) then notOneSeater(x)\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'canTransport'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'canTransport'.\nall x. if canTransport(x) then notOneSeater(x)\n          ^\n"}
{"timestamp": "2025-05-01T22:54:56.627238", "premises": ["all x. (TransportMultiplePassengers(x) -> -OneSeater(x))", "all x. (TransportMultiplePassengers(x) -> TeslaModel3(x))", "all x. (OneSeater(x) -> SingleSeatElectricCar(x))", "all x. (SingleSeatElectricCar(x) -> SoloEV(x))", "all x. (-TeslaModel3(x) & (-(x=_SingleSeatElectricCar) & (TeslaModel3(x) | SingleSeatElectricCar(x)))) & John's car = x"], "conclusion": "TeslaModel3(Johns_car)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'car'.\nall x. (-TeslaModel3(x) & (-(x=_SingleSeatElectricCar) & (TeslaModel3(x) | SingleSeatElectricCar(x)))) & John's car = x\n                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'car'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'car'.\nall x. (-TeslaModel3(x) & (-(x=_SingleSeatElectricCar) & (TeslaModel3(x) | SingleSeatElectricCar(x)))) & John's car = x\n                                                                                                                ^\n"}
{"timestamp": "2025-05-01T22:55:19.264120", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
