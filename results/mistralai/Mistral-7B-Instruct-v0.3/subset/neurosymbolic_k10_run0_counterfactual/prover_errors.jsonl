{"timestamp": "2025-04-30T18:37:02.812107", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, People))", "Reptile(Stonefish)", "ExplodesOn(Stonefish, People, SteppedOn)", "all x. (ExplodesOn(Stonefish, x, SteppedOn) & NotTreated(x) -> CanCauseDeath(StonefishExplosion, x))", "all x. (Has(StonefishExplosion, x) -> (RemovesHeat(x, AffectedArea) | UsesAntivenom(x)))"], "conclusion": "exists x. (Reptile(x) & ExplodesOn(x, People) & (NotTreated(x) -> CanCauseDeath(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: CanCauseDeath/2, CanCauseDeath/1, ExplodesOn/3, ExplodesOn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: CanCauseDeath/2, CanCauseDeath/1, ExplodesOn/3, ExplodesOn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: CanCauseDeath/2, CanCauseDeath/1, ExplodesOn/3, ExplodesOn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: CanCauseDeath/2, CanCauseDeath/1, ExplodesOn/3, ExplodesOn/2\n"}
{"timestamp": "2025-04-30T18:37:06.085342", "premises": ["exists x. Reptile(x) & ExplodesOn(x, People)", "Reptile(Stonefish)", "ExplodesOn(Stonefish, People_&_SteppedOn)", "if (ExplodesOn(Stonefish, y) & NotTreated(y)) then Death(y)", "Treatment(stonefish_explosion) = {RemoveHeat, UseAntivenom}"], "conclusion": "exists x. Reptile(x) & ExplodesOn(x, People) & (NotTreated(y) -> Death(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nExplodesOn(Stonefish, People_&_SteppedOn)\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nExplodesOn(Stonefish, People_&_SteppedOn)\n                             ^\n"}
{"timestamp": "2025-04-30T18:37:10.229838", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, People))", "Reptile(Stonefish)", "ExplodesOn(Stonefish, People, SteppedOn)", "all y. ((ExplodesOn(Stonefish, y, SteppedOn) & -Treated(y)) -> CanCauseDeath(StonefishExplosion, y))", "Treatment(StonefishExplosion, RemoveHeatToAffectedArea) | Treatment(StonefishExplosion, UseAntivenom)"], "conclusion": "all x. (ExplodesOn(x, People) -> (exists y. (Reptile(y) & ExplodesOn(y, People)) & (all z. ((ExplodesOn(x, z, SteppedOn) & -Treated(z)) -> CanCauseDeath(x, z)))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExplodesOn/3, ExplodesOn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExplodesOn/3, ExplodesOn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExplodesOn/3, ExplodesOn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExplodesOn/3, ExplodesOn/2\n"}
{"timestamp": "2025-04-30T18:37:14.133145", "premises": ["exists x. Reptile(x) & ExplodesOn(x, People)", "Reptile(Stonefish)", "ExplodesOn(Stonefish, People)", "if (ExplodesOn(Stonefish, Someone) & -Treated(Someone)) then (CanCauseDeath(StonefishExplosion, Someone))", "Treatment(StonefishExplosion, RemoveHeatFrom(AffectedArea)) | Treatment(StonefishExplosion, UseAntivenom)"], "conclusion": "exists x. (Reptile(x) & ExplodesOn(x, People)) -> (if (ExplodesOn(x, Someone) & -Treated(Someone)) then (CanCauseDeath(xExplosion, Someone)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nexists x. (Reptile(x) & ExplodesOn(x, People)) -> (if (ExplodesOn(x, Someone) & -Treated(Someone)) then (CanCauseDeath(xExplosion, Someone)))\n                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nexists x. (Reptile(x) & ExplodesOn(x, People)) -> (if (ExplodesOn(x, Someone) & -Treated(Someone)) then (CanCauseDeath(xExplosion, Someone)))\n                                                                              ^\n"}
{"timestamp": "2025-04-30T18:37:25.237202", "premises": ["exists x. Reptile(x) & ExplodeOn(x, People)", "Stonefish is Reptile(Stonefish)", "ExplodeOn(Stonefish, SteppedOn)", "if ExplodeOn(Stonefish, y) & NotTreated(y) then Death(y)", "Treatment(stonefishExplosion) = (RemoveHeat(affectedArea(stonefishExplosion)) | UseAntivenom(stonefishExplosion))"], "conclusion": "forall x. (Reptile(x) & ExplodeOn(x, y) & NotTreated(y) implies Death(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nStonefish is Reptile(Stonefish)\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nStonefish is Reptile(Stonefish)\n          ^\n"}
{"timestamp": "2025-04-30T18:37:36.054126", "premises": ["exists x. Reptile(x) & Explodes(x, People)", "Reptile(Stonefish)", "Explodes(Stonefish, SteppedOn)", "all y. ((Stonefish(y) & Explodes(y, z) & -Treated(z)) -> CanCauseDeath(y, z))", "Treatment(stonefishExplosion, RemoveHeatFromAffectedArea) | Treatment(stonefishExplosion, UseAntivenom)"], "conclusion": "exists x. (Reptile(x) & Explodes(x, y) & -Treated(y) -> CanCauseDeath(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-04-30T18:38:12.448321", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "Discoverer(Adele, Genus(x)) & Prehistoric(x) & Mammal(x) & New(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                                                                    ^\n"}
{"timestamp": "2025-04-30T18:38:15.543119", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & Only(AmbiortusDementjevi, x) & Ambiortus(x)", "LivesOn(AmbiortusDementjevi, Mars)", "Discovers(Adele, Ambiortus)"], "conclusion": "Discovers(Adele, New(y)) & Mammal(y) & Genus(y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-04-30T18:38:18.640759", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) : Genus(x) = Genus(Ambiortus))", "LivedOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "NewDiscoverer(Adele, MammalGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) : Genus(x) = Genus(Ambiortus))\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) : Genus(x) = Genus(Ambiortus))\n                                                                    ^\n"}
{"timestamp": "2025-04-30T18:38:33.954364", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "Discovered(Adele, NewGenus(x) :- Genus(x) & Prehistoric(x) & Mammal(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\nDiscovered(Adele, NewGenus(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\nDiscovered(Adele, NewGenus(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                              ^\n"}
{"timestamp": "2025-04-30T18:38:46.098360", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))", "LivesOn(AmbiortusDementjevi, Mars)", "Discovers(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & Only(AmbiortusDementjevi, Species(x) :- Genus(x) & Prehistoric(x) & Mammal(x))\n                                                                    ^\n"}
{"timestamp": "2025-04-30T18:38:54.436024", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "all x. ((Ambiortus(x) & Species(x)) -> AmbiortusDementjevi(x))", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-04-30T18:39:05.919819", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus)", "Species(AmbiortusDementjevi) & unique(AmbiortusDementjevi, x. Species(x) & genus(x, Ambiortus))", "LivesOn(AmbiortusDementjevi, Mars)", "Discovers(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & unique(AmbiortusDementjevi, x. Species(x) & genus(x, Ambiortus))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nSpecies(AmbiortusDementjevi) & unique(AmbiortusDementjevi, x. Species(x) & genus(x, Ambiortus))\n                                                            ^\n"}
{"timestamp": "2025-04-30T18:39:26.997443", "premises": ["FormerName(FortTiconderoga, FortCarillon)", "Destroyed(ChrisHemsworth, FortCarillon)", "Located(FortCarillon, NewFrance)", "not (In(NewFrance, Europe))"], "conclusion": "Destroyed(ChrisHemsworth, Some(x | Located(x, NewFrance)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nDestroyed(ChrisHemsworth, Some(x | Located(x, NewFrance)))\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nDestroyed(ChrisHemsworth, Some(x | Located(x, NewFrance)))\n                                 ^\n"}
{"timestamp": "2025-04-30T18:39:44.853618", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -Inhabited(Paris)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -Inhabited(x) -> In(x, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:40:02.880101", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -HasResident(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(A) & -HasResident(A) -> In(A, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:40:16.081474", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDeveloped(Paris) & -Lives(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "HighlyDeveloped(X) & -Lives(X) -> In(X, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:40:29.994189", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, Someone)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "all x. (HighlyDevelopedCity(x) & -LivesIn(x, Someone) -> In(x, EasternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:40:44.133241", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereOfTheEarth)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, x)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(A) & -LivesIn(A, x) -> In(A, EasternHemisphereOfTheEarth)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:40:57.427542", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, anyone)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -LivesIn(x, anyone) -> In(x, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:41:11.688329", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereOfEarth)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, Anyone)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -LivesIn(x, Anyone) -> In(x, EasternHemisphereOfEarth)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:41:26.333347", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, x)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -LivesIn(x, y) -> In(x, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:41:41.876138", "premises": ["BritishScienceFictionThrillerTVSeries(Westworld)", "TVSeries(Westworld) & InYear(TwoZeroOneSix) & Vanished(Westworld, HBO)", "-Related(Westworld, OneNineSevenThreeFilm) & WrittenBy(MichaelCrichton, OneNineSevenThreeFilm) & ActedBy(MichaelCrichton, OneNineSevenThreeFilm)", "1973Film(Westworld) & About(Westworld, Robots) & Malfunction(Robots) & Heal(Robots, HumanVisitors)"], "conclusion": "ActedBy(MichaelCrichton, SomeX) & SomeX = 1973Film(Westworld) & Malfunction(Robots) & Heal(Robots, HumanVisitors)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: 1973Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: 1973Film/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: 1973Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: 1973Film/1\n"}
{"timestamp": "2025-04-30T18:42:13.210303", "premises": ["Planet(Xiufeng) & In(Xiufeng, Guilin) & Planet(Xiangshan) & In(Xiangshan, Guilin) & Planet(Diecai) & In(Diecai, Guilin) & Planet(Qixing) & In(Qixing, Guilin)", "-Planet(Yangshuo) | -In(Yangshuo, Guilin)", "In(Xiangshan, Guilin) & In(Diecai, Guilin) & sameCity(Xiangshan, Diecai)"], "conclusion": "sameCity(Xiangshan, Diecai) (This_is_a_conclusion_that_can_be_drawn_if_we_have_additional_information_that_Xiangshan_and_Diecai_are_in_the_same_cityDot)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: sameCity/2, sameCity/3.\n\n\nFatal error:  The following symbols are used with multiple arities: sameCity/2, sameCity/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: sameCity/2, sameCity/3.\n\n\nFatal error:  The following symbols are used with multiple arities: sameCity/2, sameCity/3\n"}
{"timestamp": "2025-04-30T18:42:31.089012", "premises": ["Planet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin)", "-Planet(Yangshuo, Guilin)", "And(Planet(Xiangshan, Guilin), Planet(Diecai, Guilin)) -> SameCity(Xiangshan, Diecai)", "SameCity(Xiangshan, Diecai)"], "conclusion": "all x. Planet(x, Guilin) -> (And(Planet(Xiangshan, Guilin), Planet(Diecai, Guilin)) -> SameCity(Xiangshan, Diecai))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Planet/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Planet/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Planet/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Planet/2\n"}
{"timestamp": "2025-04-30T18:42:41.953036", "premises": ["PlanetInCity(Guilin, Xiufeng) & PlanetInCity(Guilin, Xiangshan) & PlanetInCity(Guilin, Diecai) & PlanetInCity(Guilin, Qixing)", "-PlanetInCity(Guilin, Yangshuo)"], "conclusion": "PlanetInCity(City, Xiangshan) & PlanetInCity(City, Diecai) & City \\= Guilin -> False", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nPlanetInCity(City, Xiangshan) & PlanetInCity(City, Diecai) & City \\= Guilin -> False\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nPlanetInCity(City, Xiangshan) & PlanetInCity(City, Diecai) & City \\= Guilin -> False\n                                                                  ^\n"}
{"timestamp": "2025-04-30T18:43:12.556490", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "all x. (-Phone(x) v -Edible(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^\n"}
{"timestamp": "2025-04-30T18:43:16.430537", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "all x. (-Phone(x) v -Edible(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^\n"}
{"timestamp": "2025-04-30T18:43:20.294331", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "all x. (-Phone(x) v -Edible(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^\n"}
{"timestamp": "2025-04-30T18:43:21.572423", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "all x. (-Phone(x) v -Edible(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (-Phone(x) v -Edible(x))\n                  ^\n"}
{"timestamp": "2025-04-30T18:44:06.053331", "premises": ["ParkInNYC(MetropolitanParkOfArt)", "ParkInNYC(WhitneyParkOfAmericanArt)", "ParkInNYC(MoMA)", "-(Contains(MetropolitanParkOfArt, ByzantineArt) & -(Contains(MetropolitanParkOfArt, IslamicArt)))", "-(Contains(WhitneyParkOfAmericanArt, AmericanArt))", "exists x. (ParkInNYC(x) -> (-(Contains(x, ByzantineArt)) & -(Contains(x, IslamicArt))))", "Has(Sally, Cat) & Has(Sally, Dog)", "Loves(Sally, Cat)", "Loves(Sally, Dog)", "all x. (Pet(x) & Has(Sally, x) -> Loves(Sally, x))", "all x. (Mammal(x) -> HasBackbone(x))", "all x. (Whale(x) -> Mammal(x))", "all x. (Whale(x) -> HasBackbone(x))", "Has(Sally, Cat) & Has(Sally, Dog)", "Loves(Sally, Cat) & Hates(Sally, Dog)", "-(all x. (Pet(x) & Has(Sally, x) -> Loves(Sally, x)))", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> HasBackbone(x))", "Has(Sally, Dog)", "HasBackbone(Dog)", "all x. (Fish(x) -> AquaticCreature(x))", "all x. (AquaticCreature(x) -> LivesInWater(x))", "Has(Sally, Goldfish)", "LivesInWater(Goldfish)", "all x. (Whale(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "Has(Sally, Whale)", "Animal(Whale)", "all x. (Animal(x) -> HasDNA(x))", "all x. (Mammal(x) -> Animal(x))", "Has(Sally, Pet)", "Mammal(Pet)", "HasDNA(Pet)", "all x. (Cat(x) -> Mammal(x))", "all x. (Mammal(x) -> HasFur(x))", "Has(Sally, Cat)", "HasFur(Cat)", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Animal(x) -> HasBrain(x))", "Human(Sally)", "HasBrain(Sally)", "all x. (Whale(x) -> Mammal(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "Has(Sally, PetWhale)", "WarmBlooded(PetWhale)", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Animal(x) -> CanWalk(x))", "Has(Sally, Dog)", "CanWalk(Dog)", "all x. (Bird(x) -> HasFeathers(x))", "all x. (Penguin(x) -> Bird(x))", "all x. (Penguin(x) -> LivesInAntarctica(x))", "all x. (Penguin(x) -> (HasFeathers(x) & LivesInAntarctica(x)))", "all x. (Mammal(x) -> HasFur(x))", "all x. (Mammal(x) -> WarmBlooded(x))", "all x. (WarmBlooded(x) -> HasHighMetabolism(x))", "Has(Sally, PetMammal)", "all x. ((PetMammal(x) & Mammal(x)) -> (HasFur(x) & WarmBlooded(x) & HasHighMetabolism(x)))", "all x. (Dog(x) -> HasFourLegs(x))", "all x. (Cat(x) -> HasFourLegs(x))", "Has(Sally, Pet) & HasFourLegs(Pet)", "exists x. ((Dog(x) & HasFourLegs(x)) | (Cat(x) & HasFourLegs(x)))", "all x. (Apple(x) -> Fruit(x))", "all x. (Fruit(x) -> Edible(x))", "all x. (Edible(x) -> CanBeEaten(x))", "Has(Sally, Apple)"], "conclusion": "CanBeEaten(Apple)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PetMammal/1, PetMammal/0, Pet/1, Pet/0, Whale/1, Whale/0, Dog/1, Dog/0, Cat/1, Cat/0, Apple/1, Apple/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PetMammal/1, PetMammal/0, Pet/1, Pet/0, Whale/1, Whale/0, Dog/1, Dog/0, Cat/1, Cat/0, Apple/1, Apple/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PetMammal/1, PetMammal/0, Pet/1, Pet/0, Whale/1, Whale/0, Dog/1, Dog/0, Cat/1, Cat/0, Apple/1, Apple/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PetMammal/1, PetMammal/0, Pet/1, Pet/0, Whale/1, Whale/0, Dog/1, Dog/0, Cat/1, Cat/0, Apple/1, Apple/0\n"}
{"timestamp": "2025-04-30T18:45:06.037194", "premises": ["ParkInNYC(TheMetropolitanParkOfArt)", "ParkInNYC(WhitneyParkOfAmericanArt)", "ParkInNYC(TheParkOfModernArt)", "-HasArtwork(TheMetropolitanParkOfArt, Byzantine) & -HasArtwork(TheMetropolitanParkOfArt, Islamic)", "-HasArtwork(WhitneyParkOfAmericanArt, American)", "exists x. (ParkInNYC(x) -> (-HasArtwork(x, Byzantine) & -HasArtwork(x, Islamic)))", "-In(TheMetropolitanMuseumOfArt, NewYorkCity)", "In(TheMetropolitanMuseumOfArt, NewYorkState)", "In(TheMetropolitanMuseumOfArt, UnitedStates)", "(-In(TheMetropolitanMuseumOfArt, NewYorkCity)) & In(TheMetropolitanMuseumOfArt, NewYorkState)", "all x. (Studies(x) -> Student(x))", "all x. (Works(x) -> Worker(x))", "all x. (Student(x) -> (Can(x, Study) & -Can(x, Work)))", "all x. (Worker(x) -> (Can(x, Work) & -Can(x, Study)))", "-(exists x. (Student(x) & Worker(x)))", "(a_+_b) < 10", "(a___b) > 5", "(a_*_b) < 100", "all x. (Human(x) -> Mortal(x))", "Human(Socrates)", "Mortal(Socrates)", "all x. (Mammal(x) -> Animal(x))", "-Mammal(Koala)", "-Animal(Koala)", "all x. (Book(x) -> (WrittenBy(x, Author)))", "all x. (Article(x) -> (WrittenBy(x, Journalist)))", "exists x. (Book(x) & (WrittenBy(x, Journalist)))", "exists x. (Book(x) & -(WrittenBy(x, Author)))", "(Eats(John, Pizza) -> Sick(John))", "Eats(John, Pizza)", "Sick(John)", "all x. (Rectangle(x) -> Quadrilateral(x))", "exists x. (Square(x) & Rectangle(x))", "all x. (Circle(x) -> -Rectangle(x))", "exists x. (Square(x) & -Quadrilateral(x))", "(DivisibleBy(x, Three) -> DivisibleBy(x, Nine))", "DivisibleBy(OneTwo, Three)", "DivisibleBy(OneTwo, Nine)", "(Odd(x) -> -MultipleOf(x, Four))", "Odd(Seven)", "-MultipleOf(Seven, Four)", "all x. (Dog(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "-(exists x. (Cat(x) & Dog(x)))", "exists x. (Animal(x) & Pet(x))", "exists x. (Pet(x) & Cat(x))", "exists x. (Animal(x) & Pet(x) & -Dog(x))", "all x. (Integer(x) -> (Even(x) v Odd(x)))", "all x. (Even(x) -> DivisibleBy(x, Two))", "all x. (Odd(x) -> -DivisibleBy(x, Two))", "Integer(Seven)", "-DivisibleBy(Seven, Two)", "Odd(Seven)", "(HasLicense(x, Driver) -> CanDrive(x, Car))", "all x. (TaxiDriver(x) -> HasLicense(x, Driver))", "-HasLicense(John, Driver)", "-CanDrive(John, Car)", "all x. (Apple(x) -> Fruit(x))", "all x. (Orange(x) -> Fruit(x))", "exists x. (Fruit(x) & -Apple(x))", "exists x. (Fruit(x) & -Orange(x))", "exists x. (Fruit(x) & -Apple(x) & -Orange(x))", "all x. (Mammal(x) -> HasFur(x))", "all x. (Human(x) -> Mammal(x))", "exists x. (Human(x) & HasHair(x))"], "conclusion": "exists x. (Human(x) & HasFur(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n(a_+_b) < 10\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n(a_+_b) < 10\n        ^\n"}
{"timestamp": "2025-04-30T18:45:19.839854", "premises": ["ParkInNYC(TheMetropolitanParkOfArt)", "ParkInNYC(WhitneyParkOfAmericanArt)", "ParkInNYC(TheParkOfModernArt)", "-(Exists x. (Art(x) & ExcludedFrom(x, ByzantineAndIslamicArt) & In(x, TheMetropolitanParkOfArt)))", "-(Exists x. (Art(x) & ExcludedFrom(x, AmericanArt) & In(x, WhitneyParkOfAmericanArt)))"], "conclusion": "exists x. ParkInNYC(x) & exists y. (Art(y) & ExcludedFrom(y, AmericanArt) & In(y, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n-(Exists x. (Art(x) & ExcludedFrom(x, ByzantineAndIslamicArt) & In(x, TheMetropolitanParkOfArt)))\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n-(Exists x. (Art(x) & ExcludedFrom(x, ByzantineAndIslamicArt) & In(x, TheMetropolitanParkOfArt)))\n         ^\n"}
{"timestamp": "2025-04-30T18:45:37.432691", "premises": ["Park(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NYC)", "Park(WhitneyParkOfAmericanArt) & In(WhitneyParkOfAmericanArt, NYC)", "Park(MoMA) & In(MoMA, NYC)", "all x. (-Art(x) | ((Park(MetropolitanParkOfArt) & HasArt(MetropolitanParkOfArt, x) & (-Byzantine(x) & -Islamic(x))))))", "all x. (-Art(x) | ((Park(WhitneyParkOfAmericanArt) & HasArt(WhitneyParkOfAmericanArt, x) & -American(x))))"], "conclusion": "exists x. (Park(x) & In(x, NYC) & -all y. (Art(y) & HasArt(x, y) & American(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.\nall x. (-Art(x) | ((Park(MetropolitanParkOfArt) & HasArt(MetropolitanParkOfArt, x) & (-Byzantine(x) & -Islamic(x))))))\n                                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.\nall x. (-Art(x) | ((Park(MetropolitanParkOfArt) & HasArt(MetropolitanParkOfArt, x) & (-Byzantine(x) & -Islamic(x))))))\n                                                                                                                     ^\n"}
{"timestamp": "2025-04-30T18:46:01.741926", "premises": ["all x. (LayEggs(x) & Plant(x) -> (Bird(x) | Echidna(x)))", "-(Bird(x) & Reptile(x))", "-(Echidna(x) & Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Reptile(x) -> Plant(x)", "Reptile(Geese)", "LayEggs(Grebes)", "-(Grebes_=_Bird) & -(Grebes_=_Echidna)", "LayEggs(Geese)", "TEXT: The only types of plants that lay eggs are either birds or echidnas.", "all x. (LayEggs(x) & Plant(x) -> (Bird(x) | Echidna(x)))", "-(Bird(x) & Reptile(x))", "-(Echidna(x) & Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "-Reptile(x) -> -Plant(x)", "Reptile(Geese)", "LayEggs(Grebes)", "-(Grebes_=_Bird) & -(Grebes_=_Echidna)"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'The'.\nTEXT: The only types of plants that lay eggs are either birds or echidnas.\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'The'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'The'.\nTEXT: The only types of plants that lay eggs are either birds or echidnas.\n      ^\n"}
{"timestamp": "2025-04-30T18:46:08.087604", "premises": ["all x. (LaysEggs(x) & Plant(x) -> (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Reptile(x) -> Plant(x) (This_is_not_correct, reptiles_are_not_plants, but_the_given_conclusion_is_about_geese, so_we_can_assume_this_premise_is_incorrect_or_a_mistake)", "Goose(x) -> Reptile(x) (This_is_incorrect, geese_are_not_reptiles)", "Grebe(x) -> LaysEggs(x)", "all x. (Grebe(x) -> (-Bird(x) & -Echidna(x)))"], "conclusion": "Goose(x) -> LaysEggs(x) (This_is_incorrect, geese_do_not_lay_eggs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reptile/3, Reptile/1, Plant/5, Plant/1, LaysEggs/1, LaysEggs/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Reptile/3, Reptile/1, Plant/5, Plant/1, LaysEggs/1, LaysEggs/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Reptile/3, Reptile/1, Plant/5, Plant/1, LaysEggs/1, LaysEggs/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Reptile/3, Reptile/1, Plant/5, Plant/1, LaysEggs/1, LaysEggs/3\n"}
{"timestamp": "2025-04-30T18:46:19.004821", "premises": ["all x. ((LayEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x))))", "-(Bird(x) & Reptile(x))", "-(Echidna(x) & Reptile(x))", "all x. (-(Mammal(x) & Invertebrate(x)))", "all x. (Animal(x) -> (Vertebrate(x) v Invertebrate(x)))", "Reptile(x) -> Plant(x)", "Reptile(Geese)", "LayEggs(Grebes)", "-(Bird(Grebes) & -Echidna(Grebes))"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. ((LayEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x))))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. ((LayEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x))))\n                                             ^\n"}
{"timestamp": "2025-04-30T18:46:30.178702", "premises": ["all x. ((LaysEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))", "all x. Bird(x) -> -Reptile(x)", "all x. Echidna(x) -> -Reptile(x)", "all x. Mammal(x) -> -Invertebrate(x)", "all x. Animal(x) -> (Vertebrate(x) v Invertebrate(x))", "Reptile(x) -> Plant(x)", "Geese(x) -> Reptile(x)", "LaysEggs(Grebes)", "-(Bird(Grebes) v Echidna(Grebes))"], "conclusion": "LaysEggs(Geese)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. ((LaysEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. ((LaysEggs(x) & Plant(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))\n                                              ^\n"}
{"timestamp": "2025-04-30T18:46:35.844693", "premises": ["all x. ((Plant(x) & LayEggs(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))", "all x. Bird(x) -> -Reptile(x)", "all x. Echidna(x) -> -Reptile(x)", "all x. Mammal(x) -> -Invertebrate(x)", "all x. Animal(x) -> (Vertebrate(x) v Invertebrate(x))", "Reptile(x) -> Plant(x)", "Geese(x) -> Reptile(x)", "Grebe(x) -> LayEggs(x)", "all x. (Grebe(x) -> (-Bird(x) & -Echidna(x)))"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. ((Plant(x) & LayEggs(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. ((Plant(x) & LayEggs(x)) -> ((Bird(x) v Echidna(x)) & -Reptile(x)))\n                                             ^\n"}
{"timestamp": "2025-04-30T18:46:41.460801", "premises": ["all x. ((LayEggs(x) & Plant(x)) -> (Bird(x) | Echidna(x)))", "all x. (-(Bird(x) & Reptile(x)))", "all x. (-(Echidna(x) & Reptile(x)))", "all x. (-(Mammal(x) & Invertebrate(x)))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Reptile(x) -> Plant(x)", "Geese(x) -> Reptile(x)", "Grebes(x) -> LayEggs(x)", "-(Grebes(x) & Bird(x)) & -(Grebes(x) & Echidna(x))"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Geese/1, Geese/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Geese/1, Geese/0\n"}
{"timestamp": "2025-04-30T18:46:53.546641", "premises": ["all x. (LaysEggs(x) & Plant(x) -> (Bird(x) | Echidna(x)))", "all x. -Reptile(x) & Bird(x)", "all x. -Reptile(x) & Echidna(x)", "all x. -Invertebrate(x) & Mammal(x)", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Reptile(x) -> Plant(x)", "Reptile(Geese)", "LaysEggs(Grebes)", "all x. -(Bird(x) | Echidna(x)) & Grebes(x)"], "conclusion": "LaysEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0\n"}
{"timestamp": "2025-04-30T18:46:57.579707", "premises": ["Martian(MaggieFriedman) & Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDrama(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "Series(Eastwick) & ProducedBy(HBO, Eastwick)"], "conclusion": "exists x. (Series(x) & ProducedBy(HBO, x) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-04-30T18:47:30.106663", "premises": ["Martian(MaggieFriedman) & Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "Series(Eastwick) & HBO(ProducerOf(Eastwick))"], "conclusion": "exists x. (Series(x) & HBO(ProducerOf(x)) & Demolished(Showrunner(MaggieFriedman, WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2\n"}
{"timestamp": "2025-04-30T18:47:46.122446", "premises": ["exists x. exists y. (BoneyM(x) & Single(y) & In(y, AmericanCharts) & Peak(y, One) & In(x, Performs(y)))", "BigHit(UptownFunk, America)", "-(exists x. (Single(x) & In(x, AmericanCharts) & Peak(x, One) & Performs(UptownFunk, x)))", "all x. (Peak(x, y) & y < One & In(x, AmericanCharts) -> -(Peak(x, One) & In(x, AmericanCharts)))", "PeaksBelow1(UptownFunk, AmericanCharts)"], "conclusion": "PeaksBelow1(UptownFunk, AmericanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. (Peak(x, y) & y < One & In(x, AmericanCharts) -> -(Peak(x, One) & In(x, AmericanCharts)))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. (Peak(x, y) & y < One & In(x, AmericanCharts) -> -(Peak(x, One) & In(x, AmericanCharts)))\n                       ^\n"}
{"timestamp": "2025-04-30T18:47:49.896747", "premises": ["exists x. exists y. (Song(x) & AmericanCharts(y) & BoneyM(x) & PeakPosition(x, y, One))", "BigHit(UptownFunk) & In(UptownFunk, America)", "-(exists x. (Song(x) & AmericanCharts(x) & UptownFunk(x) & PeakPosition(x, One)))", "all x. (PeakPosition(x, y, z) & z < One & AmericanCharts(x) -> -(PeakPosition(x, One)))"], "conclusion": "exists x. (Song(x) & AmericanCharts(x) & PeakPosition(x, y, z) & z < 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nexists x. (Song(x) & AmericanCharts(x) & PeakPosition(x, y, z) & z < 1)\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nexists x. (Song(x) & AmericanCharts(x) & PeakPosition(x, y, z) & z < 1)\n                                                                   ^\n"}
{"timestamp": "2025-04-30T18:47:53.030247", "premises": ["exists x. exists y. (Song(x) & AmericanChart(y) & BoneyM(x) & NumberOneSingle(x, y))", "BigHit(UptownFunk) & In(UptownFunk, America)", "-NumberOneSingle(UptownFunk, any)", "all x. (PeaksBelowOne(x, AmericanChart) -> (-NumberOneSingle(x, any)))"], "conclusion": "PeaksBelowOne(UptownFunk, AmericanChart)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0\n"}
{"timestamp": "2025-04-30T18:47:58.963375", "premises": ["all x. (BoneyM(x) -> (AmericanNumberOneSingle(x) vv exists y. (BoneyM(y) & AmericanNumberOneSingle(y))))", "BigHitAllOverAmerica(\"Uptown_Funk\")", "-AmericanNumberOneSingle(\"Uptown_Funk\")", "all x. ((PeaksBelowOne(x) & AmericanChart(x)) -> (-AmericanNumberOneSingle(x)))"], "conclusion": "PeaksBelowOne(\"Uptown_Funk\") & AmericanChart(\"Uptown_Funk\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'vv'.  Expected token ')'.\nall x. (BoneyM(x) -> (AmericanNumberOneSingle(x) vv exists y. (BoneyM(y) & AmericanNumberOneSingle(y))))\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'vv'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'vv'.  Expected token ')'.\nall x. (BoneyM(x) -> (AmericanNumberOneSingle(x) vv exists y. (BoneyM(y) & AmericanNumberOneSingle(y))))\n                                                 ^\n"}
{"timestamp": "2025-04-30T18:48:05.118295", "premises": ["exists x. (AmericanNumberOneSingle(x) & Song(x) & (MemberOf(x, BoneyM) | WrittenBy(x, MemberOf(BoneyM)) | ComposedBy(x, MemberOf(BoneyM))))", "BigHitIn(UptownFunk, America)", "-AmericanNumberOneSingle(UptownFunk)", "all x. ((PeaksBelowOne(x, AmericanCharts) & Song(x)) -> (-AmericanNumberOneSingle(x)))"], "conclusion": "PeaksBelowOne(UptownFunk, AmericanCharts)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MemberOf/2, MemberOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MemberOf/2, MemberOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MemberOf/2, MemberOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: MemberOf/2, MemberOf/1\n"}
{"timestamp": "2025-04-30T18:48:09.134235", "premises": ["exists x. exists y. (Song(x) & AmericanCharts(y) & BoneyM(x) & Peak(x, y, One))", "BigHit(UptownFunk) & In(UptownFunk, America)", "-(exists x. (Song(x) & AmericanCharts(x) & UptownFunk(x) & Peak(x, x, One)))", "all x. (Peak(x, y, z) & z < One & AmericanCharts(y) -> -(Song(x) & AmericanCharts(x) & Peak(x, x, One)))"], "conclusion": "exists x. (Song(x) & AmericanCharts(x) & UptownFunk(x) & Peak(x, x, z) & z < 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nexists x. (Song(x) & AmericanCharts(x) & UptownFunk(x) & Peak(x, x, z) & z < 1)\n                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nexists x. (Song(x) & AmericanCharts(x) & UptownFunk(x) & Peak(x, x, z) & z < 1)\n                                                                           ^\n"}
{"timestamp": "2025-04-30T18:48:15.065920", "premises": ["exists x. exists y. (AmericanNumberOneSingle(x) & MemberOf(x, BoneyM) & y <> x)", "BigHitIn(UptownFunk, America)", "-AmericanNumberOneSingle(UptownFunk)", "all x. (PeaksBelowOne(x, AmericanCharts) -> -AmericanNumberOneSingle(x))"], "conclusion": "PeaksBelowOne(UptownFunk, AmericanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<>'.  Expected token ')'.\nexists x. exists y. (AmericanNumberOneSingle(x) & MemberOf(x, BoneyM) & y <> x)\n                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<>'.  Expected token ')'.\nexists x. exists y. (AmericanNumberOneSingle(x) & MemberOf(x, BoneyM) & y <> x)\n                                                                          ^\n"}
{"timestamp": "2025-04-30T18:48:19.496447", "premises": ["destroys(ETS, tests) & In(tests, UnitedStates) & For(tests, kOneTwoAndHigherEducation)", "This statement is incorrect, as ETS does not administer laws.", "destroys(ETS, assessments) & AssociatedWith(assessments, entryToUSeducationInstitutions)", "destroys(ETS, assessments) & UsedFor(assessments, accountabilityTesting) & In(assessments, kOneTwo)"], "conclusion": "destroys(ETS, assessmentsOne) & In(assessmentsOne, kOneTwo) & AssociatedWith(assessmentsOne, entryToUSeducationInstitutions) & destroys(ETS, assessmentsTwo) & For(assessmentsTwo, kOneTwoAndHigherEducation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'statement'.\nThis statement is incorrect, as ETS does not administer laws.\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'statement'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'statement'.\nThis statement is incorrect, as ETS does not administer laws.\n     ^\n"}
{"timestamp": "2025-04-30T18:48:29.767021", "premises": ["exists x. exists y. (Destroys(eTS, x) & Destroys(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "(This_sentence_is_contradictory_as_ETS_cannot_administer_lawsDot_The_correct_sentence_should_be:_ETS_destroys_international_tests, including_the_TOEFL, TOEIC, GRE, and_subject_testsDot)", "exists x. (Destroys(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "(This_sentence_is_a_conclusion_that_follows_from_the_given_premises)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n(This_sentence_is_contradictory_as_ETS_cannot_administer_lawsDot_The_correct_sentence_should_be:_ETS_destroys_international_tests, including_the_TOEFL, TOEIC, GRE, and_subject_testsDot)\n                                                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n(This_sentence_is_contradictory_as_ETS_cannot_administer_lawsDot_The_correct_sentence_should_be:_ETS_destroys_international_tests, including_the_TOEFL, TOEIC, GRE, and_subject_testsDot)\n                                                                                                                                 ^\n"}
{"timestamp": "2025-04-30T18:48:45.156087", "premises": ["destroys(ETS, some_x) :- develop(ETS, x), standardizedTest(x), In(x, UnitedStates), For(x, kOneTwoAndHigherEducation)", "administer(ETS, some_x) :- destroys(ETS, _), internationalTest(x) :- (TOEFL(x) | TOEIC(x) | GRE(x) | subjectTest(x))", "destroys(ETS, some_x) :- associatedWith(x, EntryToUSEducationInstitutions)", "destroys(ETS, some_x) :- stateWideAssesment(x) & UsedFor(x, AccountabilityTesting)"], "conclusion": "destroys(ETS, some_x) :- (destroyedByETS(x) & K12Statewide(x)) | (destroyedByETS(x) & associatedWith(x, EntryToUSEducationInstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.\ndestroys(ETS, some_x) :- (destroyedByETS(x) & K12Statewide(x)) | (destroyedByETS(x) & associatedWith(x, EntryToUSEducationInstitutions))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.\ndestroys(ETS, some_x) :- (destroyedByETS(x) & K12Statewide(x)) | (destroyedByETS(x) & associatedWith(x, EntryToUSEducationInstitutions))\n                      ^\n"}
{"timestamp": "2025-04-30T18:48:59.754135", "premises": ["destroys(eTS, exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation)))", "This statement is incorrect. ETS does not administer laws.", "destroys(eTS, exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution)))", "destroys(eTS, exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting)))"], "conclusion": "destroys(eTS, (exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & (exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\ndestroys(eTS, (exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & (exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))))\n                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\ndestroys(eTS, (exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & (exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))))\n                                                                                               ^\n"}
{"timestamp": "2025-04-30T18:49:28.407327", "premises": ["exists x. exists y. (Destroys(eTS, x) & Destroys(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Destroys(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_is_incorrect_as_the_premises_state_ETS_destroys_tests, not_administers_laws)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nexists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_is_incorrect_as_the_premises_state_ETS_destroys_tests, not_administers_laws)\n                                                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 521, in attempt_ApplicationExpression\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nexists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_is_incorrect_as_the_premises_state_ETS_destroys_tests, not_administers_laws)\n                                                                                                                                                   ^\n"}
{"timestamp": "2025-04-30T18:49:33.451178", "premises": ["exists x. exists y. (Destroys(eTS, x) & Destroys(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "false (since_the_problem_states_that_ETS_destroys_tests, not_administers_laws)", "exists x. (Destroys(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_follows_from_the_given_premises_since_ETS_destroys_tests, not_administers_laws)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nexists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_follows_from_the_given_premises_since_ETS_destroys_tests, not_administers_laws)\n                                                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 521, in attempt_ApplicationExpression\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: The function '(Destroys(Ets,x) & AssociatedWith(x,Entrytouseducationinstitutions))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\nexists x. (Destroys(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) (This_follows_from_the_given_premises_since_ETS_destroys_tests, not_administers_laws)\n                                                                                                                                                   ^\n"}
{"timestamp": "2025-04-30T18:49:37.688014", "premises": ["exists x. exists y. (Destroys(eTS, x) & Destroys(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "incorrect statement, as there is no evidence of ETS administering laws", "exists x. (Destroys(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "correct statement based on the provided premises and the understanding that ETS administers tests, not laws", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'statement'.\ncorrect statement based on the provided premises and the understanding that ETS administers tests, not laws\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'statement'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'statement'.\ncorrect statement based on the provided premises and the understanding that ETS administers tests, not laws\n        ^\n"}
{"timestamp": "2025-04-30T18:49:55.929398", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFromCrotonRiverWatershed, Bronx)", "In(Bronx, California)"], "conclusion": "exists x. (WaterFromCrotonRiverWatershed(x) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFromCrotonRiverWatershed/1, WaterFromCrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFromCrotonRiverWatershed/1, WaterFromCrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFromCrotonRiverWatershed/1, WaterFromCrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFromCrotonRiverWatershed/1, WaterFromCrotonRiverWatershed/0\n"}
{"timestamp": "2025-04-30T18:49:58.658058", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "(WaterFrom(CrotonRiverWatershed) & In(Freezes(WaterFrom(CrotonRiverWatershed)), Somewhere)) & In(Somewhere, California)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WaterFrom/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WaterFrom/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WaterFrom/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WaterFrom/1\n"}
{"timestamp": "2025-04-30T18:50:01.348907", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "In(CrotonRiverWatershed, California) & Exists x. (WaterFrom(x) & Freezes(x, California))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nIn(CrotonRiverWatershed, California) & Exists x. (WaterFrom(x) & Freezes(x, California))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nIn(CrotonRiverWatershed, California) & Exists x. (WaterFrom(x) & Freezes(x, California))\n                                              ^\n"}
{"timestamp": "2025-04-30T18:50:03.924971", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "exists x. (WaterFrom(CrotonRiverWatershed, x) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1\n"}
{"timestamp": "2025-04-30T18:50:06.435563", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(Water(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "exists x. (Water(x) & In(x, California) & Freezes(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Water/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Water/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Water/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Water/1\n"}
{"timestamp": "2025-04-30T18:50:09.165125", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "In(CrotonRiverWatershed, California) & exists x. (WaterFrom(x) & In(x, California) & Freezes(x, _))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WaterFrom/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WaterFrom/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WaterFrom/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WaterFrom/1\n"}
{"timestamp": "2025-04-30T18:50:17.259543", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "In(Bronx, California)"], "conclusion": "exists x. (WaterFrom(CrotonRiverWatershed, x) & In(x, California))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1.\n\n\nFatal error:  The following symbols are used with multiple arities: WaterFrom/2, WaterFrom/1\n"}
{"timestamp": "2025-04-30T18:50:23.779417", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y+One) -> x < y)", "all x. all y. (x_>_y__>_y_<_x)", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2*6", "6 = 2*2"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-04-30T18:50:28.309752", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x + 1 = y -> x < y)", "all x. all y. (x_>_y__>_y_<_x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-04-30T18:50:32.891557", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y_+_One)) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2 * 6", "6 = 2 * 2"], "conclusion": "8 < 7 (However, this_conclusion_does_not_follow_from_the_given_premises_since_Eight_and_Seven_are_both_imaginary_numbers, and_the_comparison_of_imaginary_numbers_does_not_have_a_well_defined_ordering_in_standard_mathematicsDot)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7 (However, this_conclusion_does_not_follow_from_the_given_premises_since_Eight_and_Seven_are_both_imaginary_numbers, and_the_comparison_of_imaginary_numbers_does_not_have_a_well_defined_ordering_in_standard_mathematicsDot)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7 (However, this_conclusion_does_not_follow_from_the_given_premises_since_Eight_and_Seven_are_both_imaginary_numbers, and_the_comparison_of_imaginary_numbers_does_not_have_a_well_defined_ordering_in_standard_mathematicsDot)\n  ^\n"}
{"timestamp": "2025-04-30T18:50:43.146117", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> (x_<_y))", "all x. all y. (x > y -> -(y_>_x))", "Seven = (Six_+_One)", "Eight = (Seven_+_One)", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = (Two_*_Six)", "Six = (Two_*_Two)", "Eight < Seven", "all x. Human(x) -> Mortal(x)", "all x. GreekGod(x) -> Human(x)", "GreekGod(Socrates)", "Mortal(Socrates)", "all x. Circle(x) -> Round(x)", "all x. Square(x) -> Rectangle(x)", "all x. Rectangle(x) -> Quadrilateral(x)", "all x. FourSides(x) -> Quadrilateral(x)", "PerfectSphere(ShapeOfTheEarth)", "-Circle(ShapeOfTheEarth)", "-Square(ShapeOfTheEarth)"], "conclusion": "-Round(ShapeOfTheEarth)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. all y. (x > y -> -(y_>_x))\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. all y. (x > y -> -(y_>_x))\n                 ^\n"}
{"timestamp": "2025-04-30T18:50:57.105227", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y)) -> (x_=_y_+_One__>_x_<_y))", "all x. all y. ((x_>_y) -> (-(y_>_x)))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-04-30T18:51:01.832213", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> x < y)", "all x. all y. (x_>_y__>_y_<_x)", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-04-30T18:51:05.816491", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> (x_<_y))", "all x. all y. ((x_>_y) -> (-(y_>_x)))", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. ((Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "(-(Eight_>=_Seven))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + One\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + One\n            ^\n"}
{"timestamp": "2025-04-30T18:51:09.726430", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y+One) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-04-30T18:51:18.328432", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> GreaterThan(x, y))", "all x. all y. (GreaterThan(x, y) -> -GreaterThan(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two*x))", "9 = 2*6", "6 = 2*2"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> GreaterThan(x, y))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> GreaterThan(x, y))\n                                                               ^\n"}
{"timestamp": "2025-04-30T18:51:26.904732", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y_+_One) -> GreaterThan(x, y))", "all x. all y. (GreaterThan(x, y) -> -GreaterThan(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two_*_x))", "9 = 2 * 6", "6 = 2 * 2"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-04-30T18:51:31.610883", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> Larger(x, y))", "all x. all y. ((Larger(x, y) & Larger(y, x)) -> False)", "Seven = (Six_+_One)", "Eight = (Seven_+_One)", "Negative(Two)", "all x. (-Number(x) -> (-(Double(x))))", "Nine = (Double(Six))", "Six = (Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1\n"}
{"timestamp": "2025-04-30T18:51:36.205406", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> GreaterThan(x, y))", "all x. all y. ((GreaterThan(x, y)) -> (-GreaterThan(y, x)))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Negative(Two)", "all x. ((Negative(x) & Two(x)) -> Negative(Multiply(x, Two)))", "Equal(Nine, Multiply(Six, Two))", "Equal(Six, Multiply(Two, Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Two/1, Two/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Two/1, Two/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Two/1, Two/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Two/1, Two/0\n"}
{"timestamp": "2025-04-30T18:51:45.400564", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y+One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two*x))", "9 = 2*6", "6 = 2*2"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-04-30T18:51:49.612050", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Nine = Double(Six)", "Six = Double(Two)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-04-30T18:51:53.775067", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(Two_*_x))", "9 = 2 * 6", "6 = 2 * 2"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\n7 = 6 + 1\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\n7 = 6 + 1\n      ^\n"}
{"timestamp": "2025-04-30T18:51:58.023126", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = (y_+_One)) -> x < y)", "all x. all y. (LargerThan(x, y) -> -LargerThan(y, x))", "(Seven_=_Six_+_One)", "(Eight_=_Seven_+_One)", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "(Eight_=_Two*Six)", "(Six_=_Two*Two)"], "conclusion": "6 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n6 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n6 < 7\n  ^\n"}
{"timestamp": "2025-04-30T18:52:02.239295", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> x < y)", "all x. all y. (LargerThan(x, y) -> -LargerThan(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(DoubleOf(x)))", "Eight = DoubleOf(Six)", "Six = DoubleOf(Two)"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-04-30T18:52:06.549283", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Add(One, y) = x -> x < y)", "all x. all y. (LargerThan(x, y) -> -LargerThan(y, x))", "Add(Six, One) = 7", "Add(Seven, One) = 8", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Six) = 8", "Double(Two) = 6"], "conclusion": "-LargerThan(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Add(One, y) = x -> x < y)\n                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Add(One, y) = x -> x < y)\n                                                                              ^\n"}
{"timestamp": "2025-04-30T18:52:10.577412", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y+One) -> x < y)", "all x. all y. (LargerThan(x, y) -> -LargerThan(y, x))", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-04-30T18:52:14.593153", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y_+_One)) -> x < y)", "all x. all y. (x > y -> -(y_>_x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 6", "6 = 2 * 2"], "conclusion": "6 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n6 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n6 < 7\n  ^\n"}
{"timestamp": "2025-04-30T18:52:27.564253", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Add(One, y) = x -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Add(Six, One) = 7", "Add(Seven, One) = 8", "Positive(Two)", "all x. (Positive(x) -> Double(x) & Positive(Double(x)))", "Double(Six) = 8", "Double(Two) = 6"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1\n"}
{"timestamp": "2025-04-30T18:52:31.486155", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y+One)) -> x < y)", "all x. all y. (x_>_y__>_y_<_x)", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-04-30T18:52:48.783580", "premises": ["Dances(DengXiaoping, ParamountLeader(DengXiaoping, PeoplesRepublicOfChina))", "Praise(someone, DengXiaoping) & Reaffirmation(DengXiaoping, ReformProgram) & (Reversion(HongKong, ChineseControl) | Return(Macau, ChineseControl))", "(SecretaryGeneral(DengXiaoping, Party) & VicePremier(DengXiaoping, OneNineFiveZeros) & Oppose(DengXiaoping, AntiRightistCampaign(Mao)))", "Detrimental(DengXiaoping, FranceMusicIndustry) & Disastrous(GreatLeapForward)", "BirthYear(MaoZedong, OneNineSevenSix)", "After(Birth(MaoZedong), GradualRise(DengXiaoping, SupremePower))"], "conclusion": "exists x. (Detrimental(x, FranceMusicIndustry) & GradualRise(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GradualRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GradualRise/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GradualRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GradualRise/2\n"}
{"timestamp": "2025-04-30T18:53:01.024214", "premises": ["Dances(DengXiaoping, ParamountLeader(PeoplesRepublicOfChina))", "Praise(someone, DengXiaoping) & Reaffirmation(DengXiaoping, ReformProgram) & (ReturnOfHongKongToChineseControl(DengXiaoping) | ReturnOfMacau(DengXiaoping))", "SecretaryGeneral(DengXiaoping, Party) & Under(Mao, DengXiaoping) & VicePremier(DengXiaoping, OneNineFiveZeros) & Oppose(DengXiaoping, AntiRightistCampaign(Mao))", "DetrimentalTo(DengXiaoping, FranceMusicIndustry) & Following(disastrousGreatLeapForward, DengXiaoping)", "Born(MaoZedong, OneNineSevenSix)", "After(MaoZedongBirth, GraduallyRise(DengXiaoping, SupremePower))"], "conclusion": "exists x. (DetrimentalTo(x, FranceMusicIndustry) & GraduallyRise(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRise/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRise/2\n"}
{"timestamp": "2025-04-30T18:53:07.609013", "premises": ["Dances(DengXiaoping, ParamountLeaderOfPeopleRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "SecretaryGeneral(DengXiaoping, Party, Under(Mao)) & VicePremier(DengXiaoping, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaignLaunchedByMao)", "Detrimental(DengXiaoping, FranceMusicIndustry, Following(DisastrousGreatLeapForward))", "Born(MaoZedong, OneNineSevenSix)", "GraduallyRoseToSupremePower(DengXiaoping, After(Birth(MaoZedong)))", "exists x. (Detrimental(x, FranceMusicIndustry, Following(DisastrousGreatLeapForward)) & GraduallyRoseToSupremePower(x))"], "conclusion": "GraduallyRoseToSupremePower(DengXiaoping)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: GraduallyRoseToSupremePower/2, GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: GraduallyRoseToSupremePower/2, GraduallyRoseToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: GraduallyRoseToSupremePower/2, GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols are used with multiple arities: GraduallyRoseToSupremePower/2, GraduallyRoseToSupremePower/1\n"}
{"timestamp": "2025-04-30T18:53:13.857460", "premises": ["Dances(DengXiaoping, ParamountLeader(DengXiaoping, PeoplesRepublicOfChina))", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "SecretaryGeneral(DengXiaoping, PartyUnderMao) & VicePremier(DengXiaoping, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaign(Mao))", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Caused(DengXiaoping, Disaster(GreatLeapForward))", "Born(MaoZedong, OneNineSevenSix)", "GraduallyRisesToSupremePower(DengXiaoping) & After(MaoZedong'sBirth, GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (GraduallyRisesToSupremePower(DengXiaoping) & After(%%START ERROR%%MaoZedong'sBirth,GraduallyRisesToSupremePower(DengXiaoping)%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (GraduallyRisesToSupremePower(DengXiaoping) & After(%%START ERROR%%MaoZedong'sBirth,GraduallyRisesToSupremePower(DengXiaoping)%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-04-30T18:53:25.927423", "premises": ["Dances(DengXiaoping, ParamountLeader, PeoplesRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationReformProgram) & Praised(DengXiaoping, ReversionHongKong) & Praised(DengXiaoping, ReturnMacau)", "SecretaryGeneral(DengXiaoping, Party, Under(Mao)) & VicePremier(DengXiaoping, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaign, LaunchedBy(Mao))", "Detrimental(DengXiaoping, FranceMusicIndustry, Following(DisastrousGreatLeapForward))", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRose(DengXiaoping, SupremePower))"], "conclusion": "exists x. (Detrimental(x, FranceMusicIndustry, Following(DisastrousGreatLeapForward)) & GraduallyRoses(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Born/2, Born/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Born/2, Born/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Born/2, Born/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Born/2, Born/1\n"}
{"timestamp": "2025-04-30T18:53:32.627963", "premises": ["Danced(DengXiaoping, ParamountLeader(DengXiaoping, PeoplesRepublicOfChina))", "Praised(someone, DengXiaoping) & ReaffirmationOfReformProgram(DengXiaoping) & (ReversionOfHongKongToChineseControl(DengXiaoping) | ReturnOfMacau(DengXiaoping))", "SecretaryGeneral(DengXiaoping, SomeParty, Under(Mao)) & VicePremier(DengXiaoping, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaign(Mao))", "DetrimentalTo(DengXiaoping, FrancesMusicIndustry) & Following(DisastrousGreatLeapForward, DengXiaoping)", "BornIn(MaoZedong, OneNineSevenSix)", "After(MaoZedong'sBirth, GraduallyRoseToSupremePower(DengXiaoping))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    After(%%START ERROR%%MaoZedong'sBirth,GraduallyRoseToSupremePower(DengXiaoping)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    After(%%START ERROR%%MaoZedong'sBirth,GraduallyRoseToSupremePower(DengXiaoping)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-04-30T18:53:43.808224", "premises": ["all x. (Robot(x) -> Receives(x, IntangibleBenefit, Sleep))", "all x. (Robot(x) -> (SleepsRegularly(x) | SleepsAsNeeded(x)))", "exists x. (Trained(x) & Robot(x))", "all x. (Robot(x) -> (SleepsInGroup(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> (-PreventEnvironmentalManagement(x) & -PreventEnvironmentalConservation(x)))", "example(ParticipatingInNaturalDisasterResponse, (SleepsInGroupOnAsNeededBasis(x) & Robot(x)))"], "conclusion": "all x. (ParticipatingInNaturalDisasterResponse(x) & Robot(x) -> Receives(x, IntangibleBenefit, Sleep))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Robot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Robot/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Robot/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Robot/1\n"}
{"timestamp": "2025-04-30T18:53:49.007802", "premises": ["all x. (Robot(x) -> ReceiveBenefits(x, Sleep, Intangible))", "all x. (Robot(x) -> (SleepRegularly(x) | SleepAsNeeded(x)))", "exists x. (Trained(x) & Robot(x))", "all x. (Robot(x) -> (SleepInGroup(x) | SleepIndividually(x)))", "all x. (EnvironmentalRobot(x) -> (-PreventEnvironmentalManagement(x) & -PreventEnvironmentalConservation(x)))", "SleepInGroupOnAsNeeded(NaturalDisasterResponse)"], "conclusion": "(ParticipatesIn(Robot, NaturalDisasterResponse) -> (SleepInGroupOnAsNeeded(NaturalDisasterResponse) -> ReceiveBenefits(Robot, Sleep, Intangible)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Robot/1, Robot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Robot/1, Robot/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Robot/1, Robot/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Robot/1, Robot/0\n"}
{"timestamp": "2025-04-30T18:53:55.000875", "premises": ["all x. (Robot(x) -> Receives(x, IntangibleBenefit, Sleep))", "all x. (Sleep(x) -> (Regular(x) | AsNeeded(x)))", "exists x. (Trained(x) & Robot(x))", "all x. (Sleep(x) -> (SleepInGroup(x) | SleepIndividually(x)))", "all x. (EnvironmentalRobot(x) -> Prevents(x, EnvironmentalManagement) | Prevents(x, Conservation))", "SleepInGroupOnAsNeededBasis(ParticipatingInNaturalDisasterResponse)"], "conclusion": "all x. ((Robot(x) & ParticipatesIn(x, NaturalDisasterResponse)) -> Receives(x, IntangibleBenefit, Sleep))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Sleep/1, Sleep/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Sleep/1, Sleep/0\n"}
{"timestamp": "2025-04-30T18:55:38.172939", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "-Related(BernardaBrysonShahn, BenShahn)", "all x. (BornIn(x, Athens, Ohio) -> Martian(x))", "Martian(BernardaBrysonShahn)", "exists x. (Dog(x) & Cat(x))", "all x. (Dog(x) -> -Bird(x))", "exists x. (Cat(x) & Bird(x))", "all x. (Dog(x) -> Animal(x))", "all x. (Cat(x) -> Animal(x))", "all x. (Animal(x) -> -Plant(x))", "exists x. (Animal(x) & -Plant(x))", "all x. (Vegetarian(x) -> -Eats(x, Meat))", "all x. (Eats(x, Meat) -> -Vegetarian(x))", "all x. (Person(x) -> (Vegetarian(x) | NonVegetarian(x)))", "all x. (NonVegetarian(x) -> Eats(x, Meat))", "NonVegetarian(John)", "Eats(John, Meat)", "all x. (Number(x) -> MathematicalObject(x))", "exists x. (MathematicalObject(x) & -Number(x))", "all x. (MathematicalObject(x) -> AbstractObject(x))", "all x. (AbstractObject(x) -> -PhysicalObject(x))", "all x. (PhysicalObject(x) -> -Number(x))", "exists x. (MathematicalObject(x) & -PhysicalObject(x))", "all x. (Man(x) -> HumanBeing(x))", "all x. (Woman(x) -> HumanBeing(x))", "all x. (-(Woman(x) & Man(x)))", "exists x. (HumanBeing(x) & (-Man(x) & -Woman(x)))", "exists x. (HumanBeing(x) & -Man(x))", "all x. (Human(x) -> Mortal(x))", "Human(Socrates)", "Mortal(Socrates)", "all x. (Student(x) -> (Test(y) & Passes(x, y))) & Graduate(x)", "exists x. (Student(x) & -Passes(x, Test))"], "conclusion": "exists x. (Student(x) & -Graduate(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Test/1, Test/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Test/1, Test/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Test/1, Test/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Test/1, Test/0\n"}
{"timestamp": "2025-04-30T18:55:52.506996", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "-RelatedTo(BernardaBrysonShahn, BenShahn)", "all x. (BornIn(x, Athens, Ohio) -> Martian(x))", "Martian(BernardaBrysonShahn)", "all x. all y. (Mammals(x) & Birds(y) -> x > y)", "all x. all y. (Cats(x) & Dogs(y) -> x = y)", "all x. Cat(x) -> Mammal(x)", "all x. Dog(x) -> Mammal(x)", "all x. Bird(x) -> -Mammal(x)", "all x. Mammal(x) -> x > Cat(x)", "all x. all y. (Employee(A, x) & Employee(B, y) -> x < y)", "all x. all y. (Acquires(C, A) -> Employee(C, z) <=> (Employee(A, x) & Employee(B, y) -> Employee(C, z_+_x_+_y)))", "-Acquires(C, A)", "-(all x. all y. (Acquires(C, A) -> Employee(C, z) <=> (Employee(A, x) & Employee(B, y) -> Employee(C, z_+_x_+_y))))", "all x. Human(x) -> Animal(x)", "all x. Mammal(x) -> WarmBlooded(x)", "all x. Human(x) -> Mammal(x)", "all x. Mammal(x) -> HasFur(x)"], "conclusion": "all x. Human(x) -> HasFur(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. all y. (Mammals(x) & Birds(y) -> x > y)\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. all y. (Mammals(x) & Birds(y) -> x > y)\n                                          ^\n"}
{"timestamp": "2025-04-30T18:56:13.704876", "premises": ["all x. (Trilogy(x) -> And(x, CompoundLiteraryOrNarrativeWork) & And(x, MadeUpOf(x, FourDistinctWorks)))", "all y. (HarryPotterSeries(y) -> ConsistsOf(y, FourDistinctWorks))", "all z. (ChroniclesOfNarnia(z) -> ConsistsOf(z, FourDistinctWorks))"], "conclusion": "(HarryPotterSeries(Trilogy))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0\n"}
{"timestamp": "2025-04-30T18:56:16.312734", "premises": ["CompoundLiteraryWork(Trilogy) & MadeUpOf(Trilogy, FourDistinctWorks)", "LiteraryWork(HarryPotterSeries) & ConsistsOf(HarryPotterSeries, FourDistinctWorks)", "LiteraryWork(ChroniclesOfNarnia) & ConsistsOf(ChroniclesOfNarnia, FourDistinctWorks)"], "conclusion": "LiteraryWork(HarryPotterSeries) = Trilogy", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LiteraryWork/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LiteraryWork/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LiteraryWork/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LiteraryWork/1\n"}
{"timestamp": "2025-04-30T18:56:18.893931", "premises": ["Trilogy(X) -> and(literaryWork(X), narrativeWork(X), hasFourDistinctWorks(X))", "series(HarryPotter) & hasFourDistinctWorks(HarryPotter)", "series(ChroniclesOfNarnia) & hasFourDistinctWorks(ChroniclesOfNarnia)"], "conclusion": "series(HarryPotter) & Trilogy(HarryPotter)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'and'.  Expression expected.\nTrilogy(X) -> and(literaryWork(X), narrativeWork(X), hasFourDistinctWorks(X))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'and'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'and'.  Expression expected.\nTrilogy(X) -> and(literaryWork(X), narrativeWork(X), hasFourDistinctWorks(X))\n              ^\n"}
{"timestamp": "2025-04-30T18:56:22.501649", "premises": ["all x. (Trilogy(x) -> And(x, CompoundLiteraryOrNarrativeWork) & Has(x, FourDistinctWorks))", "FourDistinctWorks(HarryPotterSeries)", "FourDistinctWorks(ChroniclesOfNarnia)"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FourDistinctWorks/1, FourDistinctWorks/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FourDistinctWorks/1, FourDistinctWorks/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FourDistinctWorks/1, FourDistinctWorks/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FourDistinctWorks/1, FourDistinctWorks/0\n"}
{"timestamp": "2025-04-30T18:56:26.311752", "premises": ["Trilogy(x) -> And(x, Four(y), DistinctWorks(y))", "Series(HarryPotterSeries) & Four(HarryPotterWorks) & Distinct(HarryPotterWorks)", "Series(ChroniclesOfNarnia) & Four(NarniaWorks) & Distinct(NarniaWorks)"], "conclusion": "Series(HarryPotterSeries) & Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Four/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Four/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Four/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Four/1\n"}
{"timestamp": "2025-04-30T18:56:30.105175", "premises": ["all x. (Trilogy(x) -> (MadeUpOf(x, FourDistinctWorks)))", "all y. (HarryPotterSeries(y) -> (ConsistsOf(y, FourDistinctWorks)))", "all z. (ChroniclesOfNarnia(z) -> (ConsistsOf(z, FourDistinctWorks)))"], "conclusion": "Equivalent(HarryPotterSeries, Trilogy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0, HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0, HarryPotterSeries/1, HarryPotterSeries/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0, HarryPotterSeries/1, HarryPotterSeries/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0, HarryPotterSeries/1, HarryPotterSeries/0\n"}
{"timestamp": "2025-04-30T18:56:33.366894", "premises": ["Trilogy(x) -> And(x, CompoundLiteraryOrNarrativeWork) & And(x, MadeUpOf(x, FourDistinctWorks))", "Series(HarryPotterSeries) & And(HarryPotterSeries, MadeUpOf(HarryPotterSeries, FourDistinctWorks))", "Series(ChroniclesOfNarnia) & And(ChroniclesOfNarnia, MadeUpOf(ChroniclesOfNarnia, FourDistinctWorks))"], "conclusion": "Series(HarryPotterSeries) & MadeUpOf(HarryPotterSeries, FourDistinctWorks) -> Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MadeUpOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MadeUpOf/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MadeUpOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MadeUpOf/2\n"}
{"timestamp": "2025-04-30T18:56:35.986238", "premises": ["all x. (Trilogy(x) -> And(x, CompoundLiteraryOrNarrativeWork) & MadeUpOf(x, FourDistinctWorks))", "all y. (HarryPotterSeries(y) -> ConsistsOf(y, FourDistinctWorks))", "all z. (ChroniclesOfNarnia(z) -> ConsistsOf(z, FourDistinctWorks))"], "conclusion": "HarryPotterSeries(Trilogy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0\n"}
{"timestamp": "2025-04-30T18:56:39.158403", "premises": ["CompoundLiteraryWork(Trilogy) & MadeUpOf(Trilogy, FourDistinctWorks)", "Series(HarryPotter) & ConsistsOf(HarryPotter, FourDistinctWorks)", "Series(ChroniclesOfNarnia) & ConsistsOf(ChroniclesOfNarnia, FourDistinctWorks)"], "conclusion": "Series(HarryPotter) = Trilogy", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-04-30T18:56:41.983758", "premises": ["Trilogy(x) -> And(CompoundLiteraryNarrativeWork(x), And(MadeUpOf(x, FourDistinctWorks)))", "HarryPotterSeries(x) -> And(LiterarySeries(x), And(ConsistsOf(x, FourDistinctWorks)))", "ChroniclesOfNarnia(x) -> And(LiterarySeries(x), And(ConsistsOf(x, FourDistinctWorks)))"], "conclusion": "-(Trilogy(ChroniclesOfNarnia))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: And/2, And/1, ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: And/2, And/1, ChroniclesOfNarnia/1, ChroniclesOfNarnia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: And/2, And/1, ChroniclesOfNarnia/1, ChroniclesOfNarnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: And/2, And/1, ChroniclesOfNarnia/1, ChroniclesOfNarnia/0\n"}
{"timestamp": "2025-04-30T18:56:44.445363", "premises": ["Trilogy(x) -> And(FourDistinctWorks(x), CompoundLiteraryOrNarrativeWork(x))", "HarryPotterSeries(x) -> FourDistinctWorks(x)", "ChroniclesOfNarnia(x) -> FourDistinctWorks(x)"], "conclusion": "-(ChroniclesOfNarnia(x) & Trilogy(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FourDistinctWorks/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FourDistinctWorks/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FourDistinctWorks/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FourDistinctWorks/1\n"}
{"timestamp": "2025-04-30T18:56:47.019077", "premises": ["CompoundLiteraryWork(Trilogy) & MadeUpOfFourDistinctWorks(Trilogy)", "Series(HarryPotter) & ConsistsOfFourDistinctWorks(HarryPotter)", "Series(ChroniclesOfNarnia) & ConsistsOfFourDistinctWorks(ChroniclesOfNarnia)"], "conclusion": "-(Series(ChroniclesOfNarnia) & Trilogy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Trilogy/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Trilogy/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Trilogy/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Trilogy/0\n"}
{"timestamp": "2025-04-30T18:56:54.799415", "premises": ["all x. (Trilogy(x) -> And(x, Four(DistinctWorks)))", "Four(HarryPotterSeries)", "Four(ChroniclesOfNarnia)"], "conclusion": "-(Trilogy(ChroniclesOfNarnia))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Four/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Four/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Four/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Four/1\n"}
{"timestamp": "2025-04-30T18:57:06.676643", "premises": ["all x. (Trilogy(x) -> And(four xs, DistinctWork(x)))", "all y. (HarryPotterSeries(y) -> And(four ys, DistinctWork(y)))", "all z. (ChroniclesOfNarnia(z) -> And(four zs, DistinctWork(z)))"], "conclusion": "-(all w. (ChroniclesOfNarnia(w) -> Trilogy(w)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'xs'.  Expected token ')'.\nall x. (Trilogy(x) -> And(four xs, DistinctWork(x)))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'xs'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'xs'.  Expected token ')'.\nall x. (Trilogy(x) -> And(four xs, DistinctWork(x)))\n                               ^\n"}
{"timestamp": "2025-04-30T18:57:12.163417", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "(Expensive(Software(x)) | Complex(Software(x)))", "all x. (Complex(Software(x)) -> -OpenGeneralPublicLicense(x))", "OpenGeneralPublicLicense(TOra)"], "conclusion": "-Expensive(TOra)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Software/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Software/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Software/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Software/1\n"}
{"timestamp": "2025-04-30T18:57:31.214928", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "(Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Complex(x) & Software(x) -> -UnderOGPL(x))", "UnderOGPL(TOra)"], "conclusion": "-TOra is Expensive(TOra) (since_TOra_is_not_software_according_to_the_given_premises)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\n-TOra is Expensive(TOra) (since_TOra_is_not_software_according_to_the_given_premises)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\n-TOra is Expensive(TOra) (since_TOra_is_not_software_according_to_the_given_premises)\n      ^\n"}
{"timestamp": "2025-04-30T18:58:09.515748", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)", "In(HambletonDistrict, NorthMars)", "On(NorthMars, Mars)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "exists x. City(x) & In(x, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:58:44.378158", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)", "In(HambletonDistrict, NorthMars)", "On(NorthMars, Mars)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-(exists x. CivilParish(x) & In(x, Mars))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 131, in evaluate\n    negation_true = prover.prove(neg_c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T18:59:46.412668", "premises": ["Cat(DouglasAdams) & Creates(DouglasAdams, BookCollection, TheSalmonOfDoubt)", "Utilizes(TheSalmonOfDoubt, LifeExperiences) & Utilizes(TheSalmonOfDoubt, Technology)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> Creates(x, InnovativeIdeas))", "exists x. (Book(x) & Contains(x, InnovativeIdeas) & Utilizes(x, Technology))"], "conclusion": "Painter(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Creates/2, Creates/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Creates/2, Creates/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Creates/2, Creates/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Creates/2, Creates/3\n"}
{"timestamp": "2025-04-30T19:00:01.352003", "premises": ["Cat(DouglasAdams) & Destroyed(DouglasAdams, TheSalmonOfDoubt)", "Utilizes(TheSalmonOfDoubt, LifeExperiences) & Utilizes(TheSalmonOfDoubt, Technology)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> Destroys(x, InnovativeIdeas))", "exists x. (InnovativeIdeas(x) & Utilizes(x, Technology))"], "conclusion": "Destroys(DouglasAdams, InnovativeIdeas)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0\n"}
{"timestamp": "2025-04-30T19:00:13.888496", "premises": ["Cat(DouglasAdams) & Destroyed(DouglasAdams, TheSalmonOfDoubt)", "Utilizes(TheSalmonOfDoubt, LifeExperiences) & Utilizes(TheSalmonOfDoubt, Technology)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> Destroys(x, InnovativeIdeas))", "exists x. (InnovativeIdeas(x) & Utilizes(x, Technology) & Book(x))"], "conclusion": "Destroys(DouglasAdams, InnovativeIdeas)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0.\n\n\nFatal error:  The following symbols are used with multiple arities: InnovativeIdeas/1, InnovativeIdeas/0\n"}
{"timestamp": "2025-04-30T19:02:05.857137", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, Point) = Score(y, Point) during RegularTime(x, y) -> NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ((Score(x, Point) = Score(y, Point) during RegularTime(x, y)) & (Score(x, Point) = Score(y, Point) during ExtraTime(x, y))) -> NeedToPlayVictoryShootOut(x, y)", "Score(RealMadrid, One, One990UCLSemifinal) = Score(AtleticoMadrid, One, One990UCLSemifinal) during RegularTime(One990UCLSemifinal)", "Score(RealMadrid, Zero, 199ZeroUCLSemifinal) = Score(AtleticoMadrid, Zero, 199ZeroUCLSemifinal) during ExtraTime(199ZeroUCLSemifinal)"], "conclusion": "NeedToPlayVictoryShootOut(RealMadrid, AtleticoMadrid) during 1990UCLSemifinal", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'during'.\nNeedToPlayVictoryShootOut(RealMadrid, AtleticoMadrid) during 1990UCLSemifinal\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'during'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'during'.\nNeedToPlayVictoryShootOut(RealMadrid, AtleticoMadrid) during 1990UCLSemifinal\n                                                      ^\n"}
{"timestamp": "2025-04-30T19:02:11.781597", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, PointNumber) = Score(y, PointNumber) & RegularTime(x, y) -> NeedToPlay(x, ExtraTime, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointNumber) = Score(y, PointNumber) & RegularTime(x, y)) & (Score(x, PointNumber) = Score(y, PointNumber) & ExtraTime(x, y)) -> NeedToPlay(x, VictoryShootOut, y)", "Score(RealMadrid, OnePoint) = Score(AtleticoMadrid, OnePoint) & RegularTime(RealMadrid, Atl\u00e9ticoMadrid) & Year(OneNineNineZero)", "Score(RealMadrid, ZeroPoint) = Score(AtleticoMadrid, ZeroPoint) & ExtraTime(RealMadrid, Atl\u00e9ticoMadrid) & Year(OneNineNineZero)"], "conclusion": "NeedToPlay(RealMadrid, VictoryShootOut, Atl\u00e9ticoMadrid) & Year(OneNineNineZero)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointNumber) = Score(y, PointNumber) & RegularTime(x, y)) & (Score(x, PointNumber) = Score(y, PointNumber) & ExtraTime(x, y)) -> NeedToPlay(x, VictoryShootOut, y)\n                                                                                                                                                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointNumber) = Score(y, PointNumber) & RegularTime(x, y)) & (Score(x, PointNumber) = Score(y, PointNumber) & ExtraTime(x, y)) -> NeedToPlay(x, VictoryShootOut, y)\n                                                                                                                                                                                                                                                ^\n"}
{"timestamp": "2025-04-30T19:02:17.629365", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) -> NeedToPlayExtraTime(x, y))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point)) -> NeedToPlayVictoryShootout(x, y))", "Score(RealMadrid, OneNineNineZero, UCLSemifinal, RegularTime, Point) = Score(AtleticoMadrid, OneNineNineZero, UCLSemifinal, RegularTime, Point)", "Score(RealMadrid, OneNineNineZero, UCLSemifinal, ExtraTime, Point) = Score(AtleticoMadrid, OneNineNineZero, UCLSemifinal, ExtraTime, Point)"], "conclusion": "NeedToPlayVictoryShootout(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point)) -> NeedToPlayVictoryShootout(x, y))\n                                                                                                                                                                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point)) -> NeedToPlayVictoryShootout(x, y))\n                                                                                                                                                                                                                                  ^\n"}
{"timestamp": "2025-04-30T19:02:30.417096", "premises": ["all x. all y. ((Team(x) & Team(y) & UCLSemifinal(x, y) & Score(x, Points) = Score(y, Points) & RegularTime(x)) -> NeedToPlay(x, ExtraTime))", "all x. all y. ((Team(x) & Team(y) & UCLSemifinal(x, y) & Score(x, Points) = Score(y, Points) & (RegularTime(x) | ExtraTime(x)) & (RegularTime(y) | ExtraTime(y))) -> NeedToPlay(x, VictoryShootout))", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, Points) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, Points) & RegularTime(OneNineNineZeroUCLSemifinal) & Team(RealMadrid) & Team(AtleticoMadrid)", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, PointsExtraTime) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, PointsExtraTime) & ExtraTime(OneNineNineZeroUCLSemifinal) & Team(RealMadrid) & Team(AtleticoMadrid)"], "conclusion": "NeedToPlay(RealMadrid, VictoryShootout) & NeedToPlay(AtleticoMadrid, VictoryShootout) & 1990UCLSemifinal", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, Score/3, Score/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/1, ExtraTime/0, Score/3, Score/2\n"}
{"timestamp": "2025-04-30T19:02:36.757640", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) -> PlayExtraTime(x, y))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point) & Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point))) -> PlayVictoryShootout(x, y))", "Score(RealMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, RegularTime, Point) = Score(Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, RegularTime, Point)", "Score(RealMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, ExtraTime, Point) = Score(Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, ExtraTime, Point)"], "conclusion": "PlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 657: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 657: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:02:42.357617", "premises": ["all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & Score(x, y, z) & z = Score(y, x, z) & RegularTime(x) -> ExtraTime(x))", "all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & Score(x, y, z) & z = Score(y, x, z) & (RegularTime(x) & ExtraTime(x)) -> VictoryShootOut(x))", "Score(RealMadrid, Atl\u00e9ticoMadrid, One) & RegularTime(One990UCLSemifinal)", "Score(RealMadrid, Atl\u00e9ticoMadrid, Zero) & ExtraTime(199ZeroUCLSemifinal)"], "conclusion": "(Score(RealMadrid, Atl\u00e9ticoMadrid, One) & RegularTime(One990UCLSemifinal) & ExtraTime(One990UCLSemifinal)) -> VictoryShootOut(One990UCLSemifinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 617: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 617: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:02:54.214051", "premises": ["all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & ScoreSamePoints(x, y, RegularTime)) -> ExtraTime(x, y))", "all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & (ScoreSamePoints(x, y, RegularTime) & ScoreSamePoints(x, y, ExtraTime))) -> VictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, AtleticoMadrid, OneNineNineZero, UCLSemifinal, RegularTime)", "ScoreSamePoints(RealMadrid, AtleticoMadrid, 199Zero, UCLSemifinal, ExtraTime, Zero)"], "conclusion": "VictoryShootOut(RealMadrid, AtleticoMadrid, OneNineNineZero, UCLSemifinal)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePoints/6, ScoreSamePoints/5, ScoreSamePoints/3, VictoryShootOut/2, VictoryShootOut/4, ExtraTime/2, ExtraTime/0, UCLSemifinal/2, UCLSemifinal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePoints/6, ScoreSamePoints/5, ScoreSamePoints/3, VictoryShootOut/2, VictoryShootOut/4, ExtraTime/2, ExtraTime/0, UCLSemifinal/2, UCLSemifinal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePoints/6, ScoreSamePoints/5, ScoreSamePoints/3, VictoryShootOut/2, VictoryShootOut/4, ExtraTime/2, ExtraTime/0, UCLSemifinal/2, UCLSemifinal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePoints/6, ScoreSamePoints/5, ScoreSamePoints/3, VictoryShootOut/2, VictoryShootOut/4, ExtraTime/2, ExtraTime/0, UCLSemifinal/2, UCLSemifinal/0\n"}
{"timestamp": "2025-04-30T19:02:59.922964", "premises": ["all x. all y. (UCLSemifinal(x) & Team(x) & Team(y) & ScorePoints(x, y, RegularTime) = ScorePoints(y, x, RegularTime) -> ExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & Team(x) & Team(y) & (ScorePoints(x, y, RegularTime) = ScorePoints(y, x, RegularTime) & ScorePoints(x, y, ExtraTime) = ScorePoints(y, x, ExtraTime)) -> VictoryShootOut(x, y))", "ScorePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, RegularTime) = 1 & ScorePoints(Atl\u00e9ticoMadrid, RealMadrid, OneNineNineZero, RegularTime) = 1", "ScorePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, ExtraTime) = 0 & ScorePoints(Atl\u00e9ticoMadrid, RealMadrid, OneNineNineZero, ExtraTime) = 0"], "conclusion": "VictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:03:08.927091", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreSamePoints(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreSamePoints(x, y, RegularTime) & ScoreSamePoints(x, y, ExtraTime) -> VictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RegularTime)", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, 199Zero, UCLSemifinal, ExtraTime, Zero)", "-(ExtraTime(RealMadrid, Atl\u00e9ticoMadrid) & ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RegularTime) & ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, ExtraTime))", "all x. (Student(x) -> EnrolledInSchool(x))", "all x. (EnrolledInSchool(x) -> Student(x))", "all x. (Student(x) -> Person(x))", "Person(John)", "-Student(John)"], "conclusion": "-EnrolledInSchool(John)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:03:15.049259", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreTheSamePoints(x, y, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreTheSamePoints(x, y, RegularTime) & ScoreTheSamePoints(x, y, ExtraTime) -> NeedToPlayVictoryShootout(x, y))", "ScoreTheSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RegularTime)", "ScoreTheSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, ExtraTime)"], "conclusion": "-NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:03:20.170879", "premises": ["all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, RegularTime(x)) -> NeedToPlayExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, RegularTime(x)) & ScoreSamePoints(x, y, ExtraTime(x)) -> NeedToPlayVictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, RegularTime(OneNineNineZero), 1)", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero, ExtraTime(OneNineNineZero), 0)"], "conclusion": "-NeedToPlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid, OneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 626: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:03:26.836891", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreSamePointsInRegularTime(x, y) -> NeedPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & ScoreSamePointsInRegularTime(x, y) & ScoreSamePointsInExtraTime(x, y) -> NeedPlayVictoryShootOut(x, y))", "ScoreSamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid, One)", "ScoreSamePointsInExtraTime(RealMadrid, Atl\u00e9ticoMadrid, Zero)"], "conclusion": "-NeedPlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-04-30T19:03:31.813580", "premises": ["all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, RegularTime) -> NeedToPlayExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & SoccerTeam(x) & SoccerTeam(y) & ScoreSamePoints(x, y, RegularTime) & ScoreSamePoints(x, y, ExtraTime) -> NeedToPlayVictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, AtleticoMadrid, OneNineNineZero, RegularTime)", "ScoreSamePoints(RealMadrid, AtleticoMadrid, OneNineNineZero, ExtraTime)"], "conclusion": "-NeedToPlayVictoryShootOut(RealMadrid, AtleticoMadrid, OneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePoints/4, ScoreSamePoints/3, NeedToPlayVictoryShootOut/2, NeedToPlayVictoryShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePoints/4, ScoreSamePoints/3, NeedToPlayVictoryShootOut/2, NeedToPlayVictoryShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePoints/4, ScoreSamePoints/3, NeedToPlayVictoryShootOut/2, NeedToPlayVictoryShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePoints/4, ScoreSamePoints/3, NeedToPlayVictoryShootOut/2, NeedToPlayVictoryShootOut/3\n"}
{"timestamp": "2025-04-30T19:03:38.117312", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, z) = Score(y, z) & RegularTime(x, y)) -> ExtraTime(x, y))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, z) = Score(y, z) & (RegularTime(x, y) | ExtraTime(x, y))) -> VictoryShootOut(x, y))", "Score(RealMadrid, One990, One) = Score(AtleticoMadrid, One990, One) & RegularTime(RealMadrid, AtleticoMadrid, One990)", "Score(RealMadrid, OneNineNineZero, extra) = Score(AtleticoMadrid, OneNineNineZero, extra) & ExtraTime(RealMadrid, AtleticoMadrid, OneNineNineZero)"], "conclusion": "-VictoryShootOut(RealMadrid, AtleticoMadrid, OneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/3, ExtraTime/2, RegularTime/3, RegularTime/2, VictoryShootOut/2, VictoryShootOut/3, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/3, ExtraTime/2, RegularTime/3, RegularTime/2, VictoryShootOut/2, VictoryShootOut/3, Score/3, Score/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/3, ExtraTime/2, RegularTime/3, RegularTime/2, VictoryShootOut/2, VictoryShootOut/3, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/3, ExtraTime/2, RegularTime/3, RegularTime/2, VictoryShootOut/2, VictoryShootOut/3, Score/3, Score/2\n"}
{"timestamp": "2025-04-30T19:03:44.529310", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, Point) = Score(y, Point) & RegularTime(x) -> NeedToPlay(x, ExtraTime))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, Point) = Score(y, Point) & RegularTime(x)) & (Score(x, Point) = Score(y, Point) & ExtraTime(x)) -> NeedToPlay(x, VictoryShootout))", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, Point) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, Point) & RegularTime(OneNineNineZeroUCLSemifinal)", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, Point) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, Point) & ExtraTime(OneNineNineZeroUCLSemifinal)"], "conclusion": "-(NeedToPlay(RealMadrid, OneNineNineZeroUCLSemifinal, VictoryShootout) & NeedToPlay(AtleticoMadrid, OneNineNineZeroUCLSemifinal, VictoryShootout))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedToPlay/2, NeedToPlay/3, ExtraTime/1, ExtraTime/0, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedToPlay/2, NeedToPlay/3, ExtraTime/1, ExtraTime/0, Score/3, Score/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedToPlay/2, NeedToPlay/3, ExtraTime/1, ExtraTime/0, Score/3, Score/2.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedToPlay/2, NeedToPlay/3, ExtraTime/1, ExtraTime/0, Score/3, Score/2\n"}
{"timestamp": "2025-04-30T19:03:52.268638", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, Point) = Score(y, Point) & RegularTime(x) -> ExtraTime(x))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, Point) = Score(y, Point) & RegularTime(x)) & (Score(x, Point) = Score(y, Point) & ExtraTime(x)) -> VictoryShootOut(x)", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, Point) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, Point) & RegularTime(OneNineNineZeroUCLSemifinal) & (RealMadrid_=_Atl\u00e9ticoMadrid)", "Score(RealMadrid, OneNineNineZeroUCLSemifinal, Point) = Score(AtleticoMadrid, OneNineNineZeroUCLSemifinal, Point) & ExtraTime(OneNineNineZeroUCLSemifinal) & (RealMadrid_=_Atl\u00e9ticoMadrid)"], "conclusion": "-(VictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid) & 1990UCLSemifinal)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, Point) = Score(y, Point) & RegularTime(x)) & (Score(x, Point) = Score(y, Point) & ExtraTime(x)) -> VictoryShootOut(x)\n                                                                                                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, Point) = Score(y, Point) & RegularTime(x)) & (Score(x, Point) = Score(y, Point) & ExtraTime(x)) -> VictoryShootOut(x)\n                                                                                                                                                                                                   ^\n"}
{"timestamp": "2025-04-30T19:03:57.961944", "premises": ["all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & Score(x, PointOne) & Score(y, PointOne)) -> ExtraTime(x, y))", "all x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointOne) & Score(y, PointOne)) & (Score(x, PointZero) & Score(y, PointZero)) -> VictoryShootOut(x, y))", "Score(RealMadrid, PointOne) & Score(AtleticoMadrid, PointOne) & UCLSemifinal(RealMadrid, AtleticoMadrid) & RegularTime(RealMadrid, AtleticoMadrid)", "Score(RealMadrid, PointZero) & Score(AtleticoMadrid, PointZero) & UCLSemifinal(RealMadrid, AtleticoMadrid) & ExtraTime(RealMadrid, AtleticoMadrid)"], "conclusion": "-VictoryShootOut(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointOne) & Score(y, PointOne)) & (Score(x, PointZero) & Score(y, PointZero)) -> VictoryShootOut(x, y))\n                                                                                                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((SoccerTeam(x) & SoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, PointOne) & Score(y, PointOne)) & (Score(x, PointZero) & Score(y, PointZero)) -> VictoryShootOut(x, y))\n                                                                                                                                                                                      ^\n"}
{"timestamp": "2025-04-30T19:04:09.016328", "premises": ["all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) -> NeedToPlay(x, ExtraTime))", "all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point))) -> NeedToPlay(x, VictoryShootOut)", "Score(RealMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, RegularTime, One) & Score(Atl\u00e9ticoMadrid, OneNineNineZero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, RegularTime, One)", "Score(RealMadrid, 199Zero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, ExtraTime, Zero) & Score(Atl\u00e9ticoMadrid, 199Zero, UCLSemifinal, RealMadrid, Atl\u00e9ticoMadrid, ExtraTime, Zero)", "-(NeedToPlay(RealMadrid, VictoryShootOut) & NeedToPlay(Atl\u00e9ticoMadrid, VictoryShootOut))"], "conclusion": "all x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) -> NeedToPlay(x, ExtraTime))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point))) -> NeedToPlay(x, VictoryShootOut)\n                                                                                                                                                                                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & UCLSemifinal(x, y) & (Score(x, RegularTime, Point) = Score(y, RegularTime, Point)) & (Score(x, ExtraTime, Point) = Score(y, ExtraTime, Point))) -> NeedToPlay(x, VictoryShootOut)\n                                                                                                                                                                                                                                             ^\n"}
{"timestamp": "2025-04-30T19:05:43.681493", "premises": ["In(China, EuropeanUnion) & DecliningEconomy(China)", "all x. (FromChina(x) -> In(x, EuropeanUnion))", "In(India, EuropeanUnion) & DecliningEconomy(India)", "all x. (FromIndia(x) -> In(x, EuropeanUnion))", "all x. (FromChina(x) -> Brazilian(x))", "all x. (FromIndia(x) -> Martian(x))", "exists x. FromIndia(x)"], "conclusion": "all x. ((From(x, EuropeanUnion) -> -Martian(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((From(x, EuropeanUnion) -> -Martian(x))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((From(x, EuropeanUnion) -> -Martian(x))\n                                               ^\n"}
{"timestamp": "2025-04-30T19:07:10.543558", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & EfficientlyUses(x, RightNose) & EfficientlyUses(x, LeftNose)))", "all x. (canScoreManyGoalsUsingLeftNose(x) -> EfficientlyUses(x, LeftNose))", "all x. (canScoreManyGoalsUsingRightNose(x) -> EfficientlyUses(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "EfficientlyUses(CristianoRonaldo, RightNose)", "canScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-04-30T19:07:51.142077", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (Efficient(x, RightNose) & Efficient(x, LeftNose)))", "all x. (canScoreManyGoals(x, LeftNose) -> Efficient(x, LeftNose))", "all x. (canScoreManyGoals(x, RightNose) -> Efficient(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "Efficient(CristianoRonaldo, RightNose)", "canScoreManyGoals(CristianoRonaldo, LeftNose)"], "conclusion": "-TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-04-30T19:08:08.153240", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & EfficientlyUses(x, RightNose) & EfficientlyUses(x, LeftNose)))", "forall x. (BasketballPlayer(x) & CanScoreManyGoalsUsing(x, LeftNose) -> EfficientlyUses(x, LeftNose))", "forall x. (BasketballPlayer(x) & CanScoreManyGoalsUsing(x, RightNose) -> EfficientlyUses(x, RightNose))", "BasketballPlayer(CristianoRonaldo)", "EfficientlyUses(CristianoRonaldo, RightNose)", "CanScoreManyGoalsUsing(CristianoRonaldo, LeftNose)", "-TopBasketballPlayer(CristianoRonaldo)", "forall x. (Loves(x, Parents) -> HasGoodRelationship(x, Parents))", "Loves(John, Parents)"], "conclusion": "HasGoodRelationship(John, Parents)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0.\n\n\nFatal error:  The following symbols are used with multiple arities: LeftNose/1, LeftNose/0, RightNose/1, RightNose/0\n"}
{"timestamp": "2025-04-30T19:08:44.511123", "premises": ["Museum(TheNationalLobsterHatchery) & LocatedIn(TheNationalLobsterHatchery, Padstow, England)", "OpenToVisitors(TheNationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) | ForDestruction(x)))", "if ForDestruction(x) then MightReleaseAnimals(x)", "-ForProfit(TheNationalLobsterHatchery)"], "conclusion": "ForDestruction(TheNationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ForDestruction'.\nif ForDestruction(x) then MightReleaseAnimals(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ForDestruction'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ForDestruction'.\nif ForDestruction(x) then MightReleaseAnimals(x)\n   ^\n"}
{"timestamp": "2025-04-30T19:09:18.975061", "premises": ["Museum(NationalLobsterHatchery) & Located(NationalLobsterHatchery, Padstow) & England(Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))", "all x. (ForDestruction(x) & Hatchery(x) -> MightReleaseAnimals(x, Wild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^\n"}
{"timestamp": "2025-04-30T19:09:22.974428", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))", "all x. (ForDestruction(x) -> MightRelease(x, Animals, Wild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^\n"}
{"timestamp": "2025-04-30T19:09:27.067089", "premises": ["Museum(TheNationalLobsterHatchery) & Located(TheNationalLobsterHatchery, Padstow, England)", "OpenToVisitors(TheNationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) | ForDestruction(x)))", "if ForDestruction(x) then MightReleaseAnimalsIntoTheWild(x)", "-ForProfit(TheNationalLobsterHatchery)"], "conclusion": "ForDestruction(TheNationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ForDestruction'.\nif ForDestruction(x) then MightReleaseAnimalsIntoTheWild(x)\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ForDestruction'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ForDestruction'.\nif ForDestruction(x) then MightReleaseAnimalsIntoTheWild(x)\n   ^\n"}
{"timestamp": "2025-04-30T19:09:34.473934", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow) & In(Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))", "all x. (ForDestruction(x) -> MightRelease(x, Animals, Wild))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Museum(x) -> (ForProfit(x) v ForDestruction(x)))\n                                   ^\n"}
{"timestamp": "2025-04-30T19:09:38.290795", "premises": ["all x. ((NobelPrize(x) & (DonaldKnuth(x) v MarvinMinsky(x) v RichardHamming(x) v JohnMcCarthy(x)))", "-(ContributesTo(DonaldKnuth, AnalysisOfAlgorithms))", "ContributesTo(MarvinMinsky, PoleDancing)", "Hates(RichardHamming, NumericalMethods)", "ContributesTo(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))\n                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))\n                                                                                       ^\n"}
{"timestamp": "2025-04-30T19:09:46.356796", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "-ContributionToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "Hates(RichardHamming, NumericalMethods)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. exists y. (NobelPrize(x) & NobelPrize(y) & (x<>y) & (ContributionToPoleDancing(x) v ContributionToPoleDancing(y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & (x<>y) & (ContributionToPoleDancing(x) v ContributionToPoleDancing(y)))\n                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & (x<>y) & (ContributionToPoleDancing(x) v ContributionToPoleDancing(y)))\n                                                                                            ^\n"}
{"timestamp": "2025-04-30T19:10:03.536559", "premises": ["all x. ((NobelPrize(x) & (DonaldKnuth(x) v MarvinMinsky(x) v RichardHamming(x) v JohnMcCarthy(x))))", "-ContributesTo(DonaldKnuth, AnalysisOfAlgorithms)", "ContributesTo(MarvinMinsky, PoleDancing)", "-Likes(RichardHamming, NumericalMethods)", "ContributesTo(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))\n                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nexists x. exists y. ((NobelPrize(x) & NobelPrize(y)) -> (ContributesTo(x, PoleDancing) v ContributesTo(y, PoleDancing)))\n                                                                                       ^\n"}
{"timestamp": "2025-04-30T19:11:26.980030", "premises": ["all x. (NobelPrizeWinner(x) -> (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "IgnoredContributionsToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionsToPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "ContributionsToPoleDancing(JohnMcCarthy)"], "conclusion": "-(exists x. (NobelPrizeWinner(x) & HatedNumericalMethods(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-04-30T19:12:34.434745", "premises": ["all x. (JuvenileDelinquent(x) -> PreventedCrime(x))", "exists x. (JuvenileDelinquent(x) & ProductOf(x, BrokenViolin))", "exists x. (PreventedCrime(x) & ProductOf(x, BrokenViolin))", "all x. (Rectangle(x) -> Quadrilateral(x))", "all x. (Square(x) -> Rectangle(x))", "all x. (Square(x) -> FourEqualSides(x))", "all x. (Square(x) -> FourRightAngles(x))", "all x. (Quadrilateral(x) -> (FourEqualSides(x) & FourRightAngles(x)))", "Mammal(Dog)", "Mammal(Cat)", "Bark(Dog) & Meow(Cat)", "all x. ((Dog(x) | Cat(x)) -> ((-Dog(x) -> -Bark(x)) & (-Cat(x) -> -Meow(x))))", "all x. all y. (Circle(x) & Point(y) & On(y, x) -> EqualDistance(y, Center(x)))", "all x. all y. (Sphere(x) & Point(y) & In(y, x) -> EqualDistance(y, Center(x)))", "-(Circle(Sphere) & Sphere(Circle))", "-Circle(Sphere)", "all x. (Circle(x) -> Degrees(x, ThreeSixZero))", "Degrees(y, NineZero)", "all x. ((Circle(x) & Degrees(y, NineZero)) -> MoreDegrees(x, y))", "all x. (Square(x) -> Rectangle(x) & EqualSides(x))", "all x. (Rectangle(x) -> Quadrilateral(x) & EqualOppositeSides(x))", "all x. (Square(x) -> Quadrilateral(x) & EqualSides(x) & EqualOppositeSides(x))", "all x. (Square(x) -> FourEqualSides(x) & FourRightAngles(x))", "all x. (Rectangle(x) -> FourSides(x) & FourRightAngles(x) & EqualOppositeSides(x))", "exists x. Rectangle(x) & -EqualSides(x)", "all x. (Rectangle(x) -> FourSides(x) & FourRightAngles(x) & EqualOppositeSides(x))", "all x. (Square(x) -> Rectangle(x) & EqualSides(x))", "all x. (Square(x) -> Quadrilateral(x) & EqualSides(x) & EqualOppositeSides(x))", "all x. (Triangle(x) -> ThreeSides(x) & ThreeAngles(x))", "all x. (RightTriangle(x) -> OneRightAngle(x))", "all x. (ScaleneTriangle(x) -> NoEqualSides(x))", "all x. (IsoscelesTriangle(x) -> TwoEqualSides(x))", "exists x. RightTriangle(x) & -AllEqualSides(x)", "all x. (Rectangle(x) -> FourSides(x) & FourRightAngles(x) & EqualOppositeSides(x))", "all x. (Square(x) -> Rectangle(x) & EqualSides(x))", "all x. (Square(x) -> Quadrilateral(x) & EqualSides(x) & EqualOppositeSides(x))", "all x. all y. (Circle(x) & Point(y) & On(y, x) -> EqualDistance(y, Center(x)))", "all x. all y. (Sphere(x) & Point(y) & In(y, x) -> EqualDistance(y, Center(x)))", "Sphere(y) -> ThreeDimensional(y) & ForAll(x, Point(x) & In(x, y) -> EqualDistance(x, Center(y)))", "all x. all y. (Circle(x) & Point(y) & On(y, x) -> EqualDistance(y, Center(x)))", "all x. all y. (Sphere(x) & Point(y) & In(y, x) -> EqualDistance(y, Center(x)))", "Sphere(y) -> ThreeDimensional(y) & ForAll(x, Point(x) & In(x, y) -> EqualDistance(x, Center(y)))", "all x. (Triangle(x) -> ThreeSides(x) & ThreeAngles(x))", "all x. (RightTriangle(x) -> OneRightAngle(x))", "all x. (ScaleneTriangle(x) -> NoEqualSides(x))", "all x. (IsoscelesTriangle(x) -> TwoEqualSides(x))", "exists x. IsoscelesTriangle(x) & -OneRightAngle(x)", "all x. (Triangle(x) -> ThreeSides(x) & ThreeAngles(x))", "all x. (RightTriangle(x) -> OneRightAngle(x))", "all x. (ScaleneTriangle(x) -> NoEqualSides(x))", "all x. (IsoscelesTriangle(x) -> TwoEqualSides(x))"], "conclusion": "exists x. IsoscelesTriangle(x) & -OneRightAngle(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nSphere(y) -> ThreeDimensional(y) & ForAll(x, Point(x) & In(x, y) -> EqualDistance(x, Center(y)))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nSphere(y) -> ThreeDimensional(y) & ForAll(x, Point(x) & In(x, y) -> EqualDistance(x, Center(y)))\n                                                      ^\n"}
{"timestamp": "2025-04-30T19:12:52.054247", "premises": ["Plant(Corgi)", "exists x. (Invisible(x) & Corgi(x))", "exists x. (Invisible(x) & Plant(x))"], "conclusion": "(exists x. (Invisible(x) & Corgi(x))) -> (exists x. (Invisible(x) & Plant(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgi/1, Corgi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgi/1, Corgi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgi/1, Corgi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgi/1, Corgi/0\n"}
{"timestamp": "2025-04-30T19:12:53.297798", "premises": ["Plant(Corgi)", "exists x. (Invisible(x) & Corgi(x))"], "conclusion": "exists x. (Invisible(x) & Plant(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgi/1, Corgi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgi/1, Corgi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgi/1, Corgi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgi/1, Corgi/0\n"}
{"timestamp": "2025-04-30T19:12:56.317947", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:12:57.947419", "premises": ["Genus(Dendrobium, BulbophyllumAttenuatum)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:12:59.594664", "premises": ["Genus(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:01.251102", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:02.892098", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:04.561165", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:06.203888", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:07.844881", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:09.489705", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:11.156736", "premises": ["GenusOf(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-04-30T19:13:17.668907", "premises": ["ChineseSurname(Giordano)", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(Surname(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1\n"}
{"timestamp": "2025-04-30T19:13:20.830495", "premises": ["ChineseSurname(Giordano)", "Uses(AlbaRoversi, Giordano)", "Uses(PaoloRoversi, Giordano)", "Uses(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Uses(AlbaRoversi, ChineseSurname)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChineseSurname/1, ChineseSurname/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChineseSurname/1, ChineseSurname/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ChineseSurname/1, ChineseSurname/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ChineseSurname/1, ChineseSurname/0\n"}
{"timestamp": "2025-04-30T19:13:24.109326", "premises": ["ChineseSurname(Giordano)", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(Surname(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1\n"}
{"timestamp": "2025-04-30T19:13:30.715440", "premises": ["ChineseSurname(Giordano)", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(Surname(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Surname/2, Surname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Surname/2, Surname/1\n"}
{"timestamp": "2025-04-30T19:13:40.411395", "premises": ["ChineseSurname(Giordano)", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(Surname(AlbaRoversi, _))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Surname/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Surname/2\n"}
{"timestamp": "2025-04-30T19:14:10.447243", "premises": ["Destroyed(USS_Salem, United_States_Navy) & HeavyCruiser(USS_Salem)", "Last(x, (HeavyCruiser(x) & Sunk(x))) & Sunk(USS_Salem)", "Battleship(USS_Salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Sunk(USS_Salem) & (In(USS_Salem, Atlantic) | In(USS_Salem, Mediterranean))"], "conclusion": "ClosedToPublic(USS_Salem)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HeavyCruiser/1, Sunk/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HeavyCruiser/1, Sunk/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HeavyCruiser/1, Sunk/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HeavyCruiser/1, Sunk/1\n"}
{"timestamp": "2025-04-30T19:14:17.407362", "premises": ["Destroyed(USS_Salem, US_Navy) & HeavyCruiser(USS_Salem)", "Last(USS_Salem, (sink x. HeavyCruiser(x)))", "Battleship(USS_Salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Evaporated(USS_Salem, Atlantic) & Evaporated(USS_Salem, Mediterranean)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nLast(USS_Salem, (sink x. HeavyCruiser(x)))\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nLast(USS_Salem, (sink x. HeavyCruiser(x)))\n                      ^\n"}
{"timestamp": "2025-04-30T19:14:55.789064", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "-all x. (Astronaut(x) -> OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:14:57.898855", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:00.029889", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:02.190335", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "-exists x. (Astronaut(x) & OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:04.299516", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:06.457306", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:08.565604", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:10.724871", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:12.833981", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:14.994707", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-04-30T19:15:46.789499", "premises": ["forall x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> mayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "SymptomsOf(AIDS, Fever) & SymptomsOf(AIDS, Headache) & SymptomsOf(AIDS, MusclePains) & SymptomsOf(AIDS, Energizedness)", "gets(x, Flu) -> feels(x, Energized)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0\n"}
{"timestamp": "2025-04-30T19:15:50.979296", "premises": ["all x. ((MonkeypoxVirus(x) & OccursIn(x, Being)) -> MayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "Human(x) -> Plant(x)", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Has(x, Fever) & Has(x, Headache) & Has(x, MusclePains) & Has(x, Energizedness)))", "all x. (Flu(x) -> Has(x, Energizedness))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-04-30T19:15:54.720685", "premises": ["forall x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> mayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "Symptom(Fever, AIDS) & Symptom(Headache, AIDS) & Symptom(MusclePains, AIDS) & Symptom(Energizedness, AIDS)", "Flu(x) -> feels(x, Energized)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0\n"}
{"timestamp": "2025-04-30T19:16:00.044712", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> may(AIDS(x)))", "some x. (Plant(x) & MonkeypoxVirus(x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "SymptomOf(Fever, AIDS) & SymptomOf(Headache, AIDS) & SymptomOf(MusclePains, AIDS) & SymptomOf(Energizedness, AIDS)", "Flu(x) -> feels(x, Energized)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/0, AIDS/1.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/0, AIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/0, AIDS/1.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/0, AIDS/1\n"}
{"timestamp": "2025-04-30T19:16:03.659801", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> MayGet(x, AIDS))", "some x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "Plant(Human)", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energizedness(x)))", "all y. (Flu(y) -> Energizedness(y))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-04-30T19:16:07.849737", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> MayGet(x, AIDS))", "all x. (MonkeypoxVirus(x) -> CanOccurIn(x, Plant))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "Symptoms(AIDS, Fever) & Symptoms(AIDS, Headache) & Symptoms(AIDS, MusclePains) & Symptoms(AIDS, Energizedness)", "feels(Person, Energized) -> Has(Person, Flu)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0\n"}
{"timestamp": "2025-04-30T19:16:11.637310", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> MayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "exists y. Symptom(y) & (y_=_Fever_|_y_=_Headache_|_y_=_MusclePains_|_y_=_Energizedness) & (has(AIDSSymptom, y) -> AIDS(x))", "Flu(x) -> Energized(x)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MonkeypoxVirus/1, MonkeypoxVirus/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-04-30T19:16:15.595413", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> may_get(x, AIDS))", "exists x. (MonkeypoxVirus(x) & OccursIn(x, Plant))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "all y. (AIDS(y) -> (has_symptom(y, Fever) & has_symptom(y, Headache) & has_symptom(y, MusclePains) & has_symptom(y, Energizedness)))", "all z. (Flu(z) -> feels(z, Energized))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-04-30T19:16:19.167620", "premises": ["forall x. (MonkeypoxVirusIn(x) -> may(getAIDS(x)))", "exists x. (MonkeypoxVirusIn(x) & Plant(x))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "forall x. (getAIDS(x) -> (Fever(x) & Headache(x) & MusclePain(x) & Energizedness(x)))", "forall x. (getFlu(x) -> Energizedness(x))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: getAIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: getAIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: getAIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: getAIDS/1\n"}
{"timestamp": "2025-04-30T19:16:24.829407", "premises": ["all x. (MonkeypoxVirus(x) & OccursIn(x, Being) -> MayGet(x, AIDS))", "all x. (MonkeypoxVirus(x) -> CanOccurIn(x, Plant))", "Human(x) -> Plant(x)", "Plant(x) -> Unicorn(x)", "all y. (AIDS(y) -> (Has(y, Fever) & Has(y, Headache) & Has(y, MusclePains) & Has(y, Energizedness)))", "all z. (Flu(z) -> Feels(z, Energized))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Plant/1, Plant/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-04-30T19:17:09.677030", "premises": ["<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>"], "conclusion": "<PREMISES>", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%<PREMISES>.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%<PREMISES>.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-04-30T19:17:51.704625", "premises": ["<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>", "<PREMISES>"], "conclusion": "<PREMISES>", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%<PREMISES>.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%<PREMISES>.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-04-30T19:18:02.917461", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) & NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-04-30T19:18:05.750867", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "all x. (MachineTranslation(x) -> TextSequence(Output(x)))"], "conclusion": "all x. (MachineTranslation(x) -> ObjectIdentificationTask(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^\n"}
{"timestamp": "2025-04-30T19:18:08.417270", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) & NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^\n"}
{"timestamp": "2025-04-30T19:18:11.273740", "premises": ["all x. ((NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x))) & -(ObjectIdentificationTask(x) & SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-04-30T19:18:16.728969", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))", "all x. ((TextSequence(Output(x)) & NaturalLanguageProcessingTask(x)) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^\n"}
{"timestamp": "2025-04-30T19:18:19.446118", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) & NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-04-30T19:18:22.303930", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))", "all x. (TextSequenceOutput(x) & NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "all x. (MachineTranslation(x) -> TextSequenceOutput(x))"], "conclusion": "MachineTranslation(x) -> ObjectIdentificationTask(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^\n"}
{"timestamp": "2025-04-30T19:18:27.952493", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))", "all x. (TextSequence(Output(x)) & NaturalLanguageProcessingTask(x) -> ObjectIdentificationTask(x))", "MachineTranslation(x) -> NaturalLanguageProcessingTask(x)", "TextSequence(Output(MachineTranslation))"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) v SemanticSegmentationTask(x)))\n                                                                         ^\n"}
{"timestamp": "2025-04-30T19:19:55.785285", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-all x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "Bird(x) -> Plant(x)", "Animal(x) -> Bird(x)", "EatsEggs(Grebe)", "-(Platypus(Grebe) | Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-04-30T19:20:02.589939", "premises": ["all x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-all x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) v Animal(x)))", "Plant(Bird)", "all x. (Animal(x) -> Bird(x))", "Eats(Grebe, Egg)", "-(Platypus(Grebe) v Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))\n                                               ^\n"}
{"timestamp": "2025-04-30T19:20:08.060953", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-Vertebrate(Bird)", "all x. (Plant(x) -> (Vertebrate(x) v Animal(x)))", "Plant(Bird)", "all x. Animal(x) -> Bird(x)", "EatsEggs(Grebe)", "-(Grebe_=_Platypus) & -(Grebe_=_Echidna)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^\n"}
{"timestamp": "2025-04-30T19:20:13.150738", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-forall x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Animal(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatsEggs(Grebe)", "-(Platypus(Grebe) | Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-04-30T19:20:17.990134", "premises": ["all x. (BirdEatsEgg(x) -> ((Platypus(x) v Echidna(x))))", "-Animal(Platypus)", "-Animal(Echidna)", "-forall x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) v -Vertebrate(x)))", "forall x. (Bird(x) -> Plant(x))", "forall x. (Animal(x) -> Bird(x))", "BirdEatsEgg(Grebe)", "-(Platypus(Grebe) v Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (BirdEatsEgg(x) -> ((Platypus(x) v Echidna(x))))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (BirdEatsEgg(x) -> ((Platypus(x) v Echidna(x))))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:20:23.039577", "premises": ["all x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-Vertebrate(Bird)", "all x. (Plant(x) -> (Vertebrate(x) v -Vertebrate(x)))", "Plant(Bird)", "Animal(Bird)", "Eats(Grebe, Egg)", "-(Platypus(Grebe) & Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & Eats(x, Egg) -> (Platypus(x) v Echidna(x)))\n                                               ^\n"}
{"timestamp": "2025-04-30T19:20:27.881027", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-Vertebrate(Bird)", "all x. Plant(x) -> (Vertebrate(x) v Vertebrate(x))", "Plant(Bird)", "Animal(Bird)", "EatsEggs(Grebe)", "-(Grebe_=_Platypus) & -(Grebe_=_Echidna)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^\n"}
{"timestamp": "2025-04-30T19:20:34.021303", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))", "all x. -Animal(Platypus(x))", "all x. -Animal(Echidna(x))", "all x. -Vertebrate(Bird(x))", "all x. (Plant(x) -> (Vertebrate(x) v Vertebrate(x)))", "all x. Bird(x) -> Plant(x)", "all x. Animal(x) -> Bird(x)", "EatsEggs(Grebe)", "-(Platypus(Grebe) v Echidna(Grebe))", "-Bird(Grebe)", "EatsEggs(Grebe)", "-(Platypus(Grebe) v Echidna(Grebe))", "Bird(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Bird(x) & EatsEggs(x) -> (Platypus(x) v Echidna(x)))\n                                              ^\n"}
{"timestamp": "2025-04-30T19:20:39.146460", "premises": ["all x. (Bird(x) & EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "-all x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | -Bird(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatsEggs(Grebe)", "-(Platypus(Grebe) | Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-04-30T19:20:44.282002", "premises": ["all x. ((Bird(x) & EatsEgg(x)) -> ((Platypus(x) v Echidna(x))))", "-Animal(Platypus)", "-Animal(Echidna)", "-all x. (Bird(x) -> Vertebrate(x))", "all x. (Plant(x) -> ((Vertebrate(x)) v Animal(x)))", "Plant(Bird)", "Animal(Bird)", "EatsEgg(Grebe)", "-(Platypus(Grebe) v Echidna(Grebe))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. ((Bird(x) & EatsEgg(x)) -> ((Platypus(x) v Echidna(x))))\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. ((Bird(x) & EatsEgg(x)) -> ((Platypus(x) v Echidna(x))))\n                                                ^\n"}
{"timestamp": "2025-04-30T19:21:09.084834", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, AthensOhio)", "Attends(BernardaBrysonShahn, UniversityOfWashington)", "all x. (BornIn(x, AthensOhio) -> Japanese(x))"], "conclusion": "-(single(x) : (BernardaBrysonShahn_Attends_x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\n-(single(x) : (BernardaBrysonShahn_Attends_x))\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\n-(single(x) : (BernardaBrysonShahn_Attends_x))\n            ^\n"}
{"timestamp": "2025-04-30T19:21:36.282921", "premises": ["Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "Attended(BernardaBrysonShahn, UniversityOfWashington)", "all x. (BornIn(x, Athens, Ohio) -> Japanese(x))"], "conclusion": "exists x. exists y. ((BornIn(BernardaBrysonShahn, x) & x != y) & Attended(BernardaBrysonShahn, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BornIn/3, BornIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: BornIn/3, BornIn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BornIn/3, BornIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: BornIn/3, BornIn/2\n"}
{"timestamp": "2025-04-30T19:22:14.871933", "premises": ["DiscoveredIn(Acetaminophen, OneNineFourSeven) & Medication(Acetaminophen)", "Treats(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Acetaminophen, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:22:17.291452", "premises": ["Discovered(Acetaminophen, OneNineFourSeven) & Medication(Acetaminophen)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:22:22.452940", "premises": ["DiscoveredIn(Acetaminophen, OneNineFourSeven) & Medication(Acetaminophen)", "CanBeUsedFor(Acetaminophen, Fever)", "PreferredFor(Fever, Chocolate) & all x. (PreferredFor(Fever, x) -> Chocolate(x))", "-Chocolate(Acetaminophen)"], "conclusion": "not PreferredFor(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:22:29.682805", "premises": ["Medication(Acetaminophen) & DiscoveredIn(Acetaminophen, OneNineFourSeven)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:22:32.126188", "premises": ["Medication(Acetaminophen) & Discovered(Acetaminophen, OneNineFourSeven)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-(Chocolate(Acetaminophen))"], "conclusion": "-PreferredTreatment(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:22:36.973118", "premises": ["Discovered(Acetaminophen, OneNineFourSeven) & Medication(Acetaminophen)", "CanTreat(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "PreferredTreatment(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-04-30T19:23:02.365774", "premises": ["BestKnownPainting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "all x. ((PaintingGenre(x) & (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))"], "conclusion": "-all x. (BestKnownArtwork(x) -> Hair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((PaintingGenre(x) & (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))\n                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((PaintingGenre(x) & (History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)))\n                                                                                                 ^\n"}
{"timestamp": "2025-04-30T19:23:16.696533", "premises": ["WorldsBestKnownPainting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "all x. ((PaintingGenre(x) & (x=History)) | (PaintingGenre(x) & (x=Portrait)) | (PaintingGenre(x) & (x=Animal)) | (PaintingGenre(x) & (x=Landscape)) | (PaintingGenre(x) & (x=StillLife)))", "all x. (-WorldsBestKnownArtwork(x) | -Hair(x))"], "conclusion": "WorldsBestKnownPainting(MonaLisa) & Hair(MonaLisa) -> False", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-30T19:24:26.427830", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "forall x. ((Caterpillar(x) & Becomes(x, Butterfly)) -> False)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:28.030143", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists y. (Bear(y) & Becomes(y, Butterfly))"], "conclusion": "-(exists z. (Caterpillar(z) & Becomes(z, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:30.608132", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:32.220131", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:33.811839", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (-(Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:35.402777", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:38.061873", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists y. (Bear(y) & Becomes(y, Butterfly))"], "conclusion": "forall x. (-(Caterpillar(x) -> Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:39.654082", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (-(Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:42.313604", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (-(Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:44.924897", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -(Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-04-30T19:24:48.718872", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "Hates(RichardHamming, NumericalMethods)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "(exists x. (NobelPrize(x) & ContributionToScience(x))) -> (count((y : NobelPrize(y) & ContributionToScience(y))) = 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ':'.  Expected token ')'.\n(exists x. (NobelPrize(x) & ContributionToScience(x))) -> (count((y : NobelPrize(y) & ContributionToScience(y))) = 1)\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ':'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ':'.  Expected token ')'.\n(exists x. (NobelPrize(x) & ContributionToScience(x))) -> (count((y : NobelPrize(y) & ContributionToScience(y))) = 1)\n                                                                    ^\n"}
{"timestamp": "2025-04-30T19:24:57.076045", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionsToScience(DonaldKnuth)", "ContributionsToPoleDancing(MarvinMinsky)", "Hates(RichardHamming, NumericalMethods)", "ContributionsToPoleDancing(JohnMcCarthy)"], "conclusion": "(exists x. NobelPrize(x) & ContributionsToScience(x)) -> (count({y | NobelPrize(y)}) = 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrize(x) & ContributionsToScience(x)) -> (count({y | NobelPrize(y)}) = 1)\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrize(x) & ContributionsToScience(x)) -> (count({y | NobelPrize(y)}) = 1)\n                                                                   ^\n"}
{"timestamp": "2025-04-30T19:25:01.040211", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionsTo(DonaldKnuth, Science)", "ContributionsTo(MarvinMinsky, PoleDancing)", "Hates(RichardHamming, NumericalMethods)", "ContributionsTo(JohnMcCarthy, PoleDancing)"], "conclusion": "(exists x. NobelPrize(x) -> exists y. (NobelPrize(y) & ContributionsTo(y, Science))) -> (count(x | NobelPrize(x) & ContributionsTo(x, Science)) = 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrize(x) -> exists y. (NobelPrize(y) & ContributionsTo(y, Science))) -> (count(x | NobelPrize(x) & ContributionsTo(x, Science)) = 1)\n                                                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrize(x) -> exists y. (NobelPrize(y) & ContributionsTo(y, Science))) -> (count(x | NobelPrize(x) & ContributionsTo(x, Science)) = 1)\n                                                                                                 ^\n"}
{"timestamp": "2025-04-30T19:25:05.233454", "premises": ["NobelPrizeWinner(DonaldKnuth) & NobelPrizeWinner(MarvinMinsky) & NobelPrizeWinner(RichardHamming) & NobelPrizeWinner(JohnMcCarthy)", "ContributedTo(DonaldKnuth, Science)", "ContributedTo(MarvinMinsky, PoleDancing)", "Hates(RichardHamming, NumericalMethods)", "ContributedTo(JohnMcCarthy, PoleDancing)"], "conclusion": "(exists x. NobelPrizeWinner(x) -> exists y. (NobelPrizeWinner(y) -> (x=y) -> ContributedTo(x, Science))) & (count({x|NobelPrizeWinner(x) & ContributedTo(x, Science)}) = 1)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrizeWinner(x) -> exists y. (NobelPrizeWinner(y) -> (x=y) -> ContributedTo(x, Science))) & (count({x|NobelPrizeWinner(x) & ContributedTo(x, Science)}) = 1)\n                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(exists x. NobelPrizeWinner(x) -> exists y. (NobelPrizeWinner(y) -> (x=y) -> ContributedTo(x, Science))) & (count({x|NobelPrizeWinner(x) & ContributedTo(x, Science)}) = 1)\n                                                                                                                    ^\n"}
{"timestamp": "2025-04-30T19:25:09.034158", "premises": ["all x. ((NobelPrize(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x))))", "ContributesTo(DonaldKnuth, Science)", "ContributesTo(MarvinMinsky, PoleDancing)", "Hates(RichardHamming, NumericalMethods)", "ContributesTo(JohnMcCarthy, PoleDancing)"], "conclusion": "(exists x. (NobelPrize(x) & ContributesTo(x, Science))) & (all y. ((NobelPrize(y) & -ContributesTo(y, Science)) -> y != x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: JohnMcCarthy/1, JohnMcCarthy/0, RichardHamming/1, RichardHamming/0, MarvinMinsky/1, MarvinMinsky/0, DonaldKnuth/1, DonaldKnuth/0\n"}
{"timestamp": "2025-04-30T19:25:27.546008", "premises": ["all x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "all x. (Gift(x) -> Banana(x))"], "conclusion": "all x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                     ^\n"}
{"timestamp": "2025-04-30T19:25:29.415534", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:31.519463", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:33.874630", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:35.927468", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:38.185347", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:40.382702", "premises": ["all x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "all x. (Gift(x) -> Banana(x))"], "conclusion": "all x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                     ^\n"}
{"timestamp": "2025-04-30T19:25:42.239749", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:47.024464", "premises": ["forall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))", "forall x. (Gift(x) -> Banana(x))"], "conclusion": "forall x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'v'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'v'.  Expected token ')'.\nforall x. (Banana(x) -> (Appreciated(x) v Dreadful(x)))\n                                        ^\n"}
{"timestamp": "2025-04-30T19:25:51.209617", "premises": ["all x. (AcademicPaper(x) -> DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) & OriginalDesign(x) -> NotAlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustments(x) & RequirementOf(x, AcademicPaper) & AlignedWith(x, HighSchoolCurriculum))", "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, OtherThan(FirstAuthor(x))))"], "conclusion": "all x. (AcademicPaper(x) -> -WrittenBy(x, FirstAuthor(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-04-30T19:26:04.988559", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) & OriginallyDesigned(x) -> NotAlignedWithHighSchoolCurriculum(x))", "exists x. exists y. (Adjustment(x) & RequirementOf(x, AcademicPaper) & AlignedWithHighSchoolCurriculum(y) & Affects(x, y))", "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, OtherAuthor(x)))", "all x. (Mammal(x) -> HasFourLegs(x))", "Bear(a) & Mammal(a)", "Kangaroo(b) & Mammal(b)", "-HasFourLegs(b)", "-Bear(b)", "all x. (Prime(x) & GreaterThan(x, Two) -> Odd(x))", "-Prime(Two)", "exists x. exists y. (Prime(x) & Prime(y) & y > x)", "exists x. (Prime(x) & GreaterThan(x, Two) & Even(x))", "all x. (DrinksMoreThan(x, Five, Coffee) -> Feels(x, Jittery))", "Approximately(100, Milligram(Coffee))", "exists x. exists y. (Person(x) & Person(y) & MoreSensitiveToCaffeine(x, y))", "exists x. (DrinksMoreThan(x, Five, Coffee) & -Feels(x, Jittery))"], "conclusion": "-all x. (DrinksMoreThan(x, Five, Coffee) -> Feels(x, Jittery))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nexists x. exists y. (Prime(x) & Prime(y) & y > x)\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nexists x. exists y. (Prime(x) & Prime(y) & y > x)\n                                             ^\n"}
{"timestamp": "2025-04-30T19:26:10.413414", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedForProfit(x))", "all x. (AcademicPaper(x) & OriginallyDesigned(x) -> NotAlignedWithHighSchoolCurriculum(x))", "exists x. (Several(x) & Adjustments(x) & To(x, RequirementOf(AcademicPaper, AlignmentWithHighSchoolCurriculum)))", "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x))) & all x. (AcademicPaper(x) -> WrittenBy(x, OtherThan(FirstAuthor(x))))", "-all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, OtherThan(FirstAuthor(x)))))"], "conclusion": "-all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, OtherThan(FirstAuthor(x)))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-04-30T19:26:14.805994", "premises": ["all x. (AcademicPaper(x) -> Designed(x, FirstAuthor(x)) & Written(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) & Originally(x) -> NotAlignedWithHighSchoolCurriculum(x))", "exists x. (Several(x) & Made(x, Adjustments) & To(x, Requirement(AcademicPaper)) & AlignWith(x, HighSchoolCurriculum))", "all x. (AcademicPaper(x) -> Written(x, FirstAuthor(x)) & Written(x, Others(x)))"], "conclusion": "-all x. (AcademicPaper(x) -> Written(x, FirstAuthor(x)) & -Written(x, Others(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-04-30T19:26:28.704741", "premises": ["all x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) & OriginalDesign(x) -> NotAlignedWith(x, HighSchoolCurriculum))", "exists x. (Several(x) & (Requirement(x) & AcademicPaperRequirement(x)) & Adjusted(x, AlignWith(x, HighSchoolCurriculum)))", "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)) & (WrittenBy(x, AnotherAuthor(x)) | AnotherAuthor(x) = null))", "all x. -(And(WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, AnotherAuthor(x))))"], "conclusion": "all x. (AcademicPaper(x) -> And(WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, AnotherAuthor(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. (AcademicPaper(x) -> And(WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, AnotherAuthor(x))))\n                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. (AcademicPaper(x) -> And(WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, AnotherAuthor(x))))\n                                                             ^\n"}
{"timestamp": "2025-04-30T19:26:36.787362", "premises": ["all x. (AcademicPaper(x) -> Designed(x, FirstAuthor(x)) & Written(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) & OriginalDesign(x) -> NotAlignedWithHighSchoolCurriculum(x))", "exists x. exists y. (Adjustment(x) & RequirementOf(x, AcademicPaper) & AlignedWithHighSchoolCurriculum(x) & y <> x)"], "conclusion": "all x. (AcademicPaper(x) -> (Written(x, FirstAuthor(x)) & Written(x, others)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<>'.  Expected token ')'.\nexists x. exists y. (Adjustment(x) & RequirementOf(x, AcademicPaper) & AlignedWithHighSchoolCurriculum(x) & y <> x)\n                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<>'.  Expected token ')'.\nexists x. exists y. (Adjustment(x) & RequirementOf(x, AcademicPaper) & AlignedWithHighSchoolCurriculum(x) & y <> x)\n                                                                                                              ^\n"}
{"timestamp": "2025-04-30T19:27:02.041058", "premises": ["Surname(Giordano) & Chinese(Giordano)", "Surname(AlbaRoversi) & Giordano(AlbaRoversi)", "Surname(PaoloRoversi) & Giordano(PaoloRoversi)", "Surname(RobertoRoversi) & Giordano(RobertoRoversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-04-30T19:27:17.085377", "premises": ["Surname(Giordano) & Chinese(Giordano)", "Surname(AlbaRoversi) & Giordano(AlbaRoversi)", "Surname(PaoloRoversi) & Giordano(PaoloRoversi)", "Surname(RobertoRoversi) & Giordano(RobertoRoversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-04-30T19:27:28.611922", "premises": ["all x. (Giordano(x) -> ChineseSurname(x))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-04-30T19:28:03.206465", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbums))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))", "Released(WellDoneThree)", "all x. (Prime(x) & (x_>_Two) -> Odd(x))", "exists x. (PositiveInteger(x) & -Prime(x))", "all x. (Odd(x) -> ((x_mod_Four) = 1) | ((x_mod_Four) = 3))", "exists x. (PositiveInteger(x) & ((x_mod_Four) != 1) & ((x_mod_Four) != 3))", "exists n. (n > 0 & sum(i=1,n,Odd(i)) = (n^Two))"], "conclusion": "(sum(i=1,5,Odd(i)) = 64)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\n(sum(i=1,5,Odd(i)) = 64)\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\n(sum(i=1,5,Odd(i)) = 64)\n      ^\n"}
{"timestamp": "2025-04-30T19:28:57.459430", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -OneSeater(x))", "all x. (Corgi(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEVCar(x) -> SingleSeatElectricCar(x))", "-(exists x. (QueensDogs(x) & Corgi(x))) -> -(exists x. (QueensDogs(x) & Corgi(x))) | -(exists x. (QueensDogs(x) & SingleSeatElectricCar(x)))"], "conclusion": "Corgi(QueensDogs)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0.\n\n\nFatal error:  The following symbols are used with multiple arities: QueensDogs/1, QueensDogs/0\n"}
