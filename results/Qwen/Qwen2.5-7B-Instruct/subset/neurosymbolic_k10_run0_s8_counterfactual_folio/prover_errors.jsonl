{"timestamp": "2025-05-04T16:57:29.311449", "premises": ["\\[", "\\["], "conclusion": "\\[", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^\n"}
{"timestamp": "2025-05-04T16:58:11.019549", "premises": ["exists x. (Reptile(x) & ExplodesOnPeople(x))", "Reptile(Stonefish)", "SteppedOn(Stonefish) -> Explodes(Stonefish)", "ExplodesOn(Stonefish, Someone) & -Treated(Stonefish, Someone) -> Death(Stonefish, Someone)", "Treat(Stonefish, Someone) -> ((RemoveHeat(Stonefish, Someone) | UseAntivenom(Stonefish, Someone)))"], "conclusion": "exists x. (Reptile(x) & ExplodesOnPeople(x) & Explodes(x) & -Treated(x) -> Death(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Death/2, Death/1, Treated/2, Treated/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Death/2, Death/1, Treated/2, Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Death/2, Death/1, Treated/2, Treated/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Death/2, Death/1, Treated/2, Treated/1\n"}
{"timestamp": "2025-05-04T16:58:52.597192", "premises": ["`all x. (BearInDesert(x) -> -Animal(x))`", "`exists x. (Bear(x) & BearInDesert(x))`"], "conclusion": "`exists x. (Bear(x) & -Animal(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`exists x. (Bear(x) & -Animal(x))`\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`exists x. (Bear(x) & -Animal(x))`\n        ^\n"}
{"timestamp": "2025-05-04T16:59:17.227462", "premises": ["\\(\\forall x. (BearInDesert(x) \\rightarrow \\neg Animal(x))\\)", "\\(\\exists x. (Bear(x) \\land BearInDesert(x))\\)", "\\(\\exists x. (Bear(x) \\land \\neg Animal(x))\\)", "all x. (BearInDesert(x) -> NotAnimal(x))", "exists x. (Bear(x) & BearInDesert(x))"], "conclusion": "exists x. (Bear(x) & NotAnimal(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\(\\forall x. (BearInDesert(x) \\rightarrow \\neg Animal(x))\\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\(\\forall x. (BearInDesert(x) \\rightarrow \\neg Animal(x))\\)\n ^\n"}
{"timestamp": "2025-05-04T16:59:53.010593", "premises": ["\\(\\forall x (Bird(x) \\rightarrow \\neg Fur(x))\\)", "\\(\\forall x (Dog(x) \\rightarrow Bird(x))\\)"], "conclusion": "\\(\\exists x (Dog(x) \\land Fur(x))\\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\(\\exists x (Dog(x) \\land Fur(x))\\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\(\\exists x (Dog(x) \\land Fur(x))\\)\n ^\n"}
{"timestamp": "2025-05-04T17:00:48.830435", "premises": ["Genus(Ambiortus) & MammalGenus(Ambiortus)", "Species(AmbiortusDementjevi) & GenusOf(AmbiortusDementjevi, Ambiortus) & (exists x. (Species(x) & GenusOf(x, Ambiortus) & -SameSpecies(x, AmbiortusDementjevi)))", "LivedIn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)", "exists x. (New(x) & MammalGenus(x) & DiscoveredBy(Adele, x))"], "conclusion": "New(Genus(Ambiortus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genus/1\n"}
{"timestamp": "2025-05-04T17:01:11.168044", "premises": ["Genus(Ambiortus) & Prehistoric(Genus(Ambiortus)) & Mammal(Genus(Ambiortus))", "Species(AmbiortusDementjevi) & OnlyKnownSpecies(AmbiortusDementjevi, Ambiortus)", "LivesIn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)", "NewMammalGenusDiscoveredBy(Adele)", "GenusDiscoveredBy(Adele, Ambiortus)", "Genus(Ambiortus) & Prehistoric(Genus(Ambiortus)) & Mammal(Genus(Ambiortus))", "Species(AmbiortusDementjevi) & OnlyKnownSpecies(AmbiortusDementjevi, Ambiortus)", "LivesIn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)", "GenusDiscoveredBy(Adele, Ambiortus)"], "conclusion": "GenusDiscoveredBy(Adele, Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Genus/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Genus/1\n"}
{"timestamp": "2025-05-04T17:01:20.340769", "premises": ["Genus(Ambiortus) & Prehistoric(Ambiortus) & MammalGenus(Ambiortus)", "exists x. (Species(x) & Genus(x, Ambiortus) & OnlyKnownSpecies(x, Ambiortus))", "LivedIn(AmbiortusDementjevi, Mars)", "DiscoveredBy(Adele, Ambiortus)"], "conclusion": "exists x. (DiscoveredBy(Adele, x) & Genus(x) & New(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1\n"}
{"timestamp": "2025-05-04T17:01:46.693924", "premises": ["MammalGenus(Ambiortus)", "exists x. (Species(x) & Genus(x, Ambiortus) & uniqueSpecies(x, Ambiortus))", "LivedIn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "exists x. (Genus(x) & New(x) & DiscoveredBy(Adele, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1\n"}
{"timestamp": "2025-05-04T17:02:23.850832", "premises": ["Genus(Ambiortus)", "exists x. (Species(x) & Genus(x, Ambiortus) & OnlyKnownSpecies(x))", "LivesOn(Mars, AmbiortusDementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Genus/2, Genus/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Genus/2, Genus/1\n"}
{"timestamp": "2025-05-04T17:03:50.401181", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCityWhereNoOneLives(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "In(HighlyDevelopedCityWhereNoOneLives(Paris), EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1\n"}
{"timestamp": "2025-05-04T17:04:25.355342", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & ~(exists x. LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "exists x. (HighlyDevelopedCity(x) & ~(exists y. LivesIn(y, x)) & In(x, EasternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (HighlyDevelopedCity(Paris) & ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (HighlyDevelopedCity(Paris) & ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T17:04:38.125402", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCityWhereNoOneLives(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "In(HighlyDevelopedCityWhereNoOneLives(Paris), EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCityWhereNoOneLives/1\n"}
{"timestamp": "2025-05-04T17:05:04.281425", "premises": ["BritishTVSeries(Westworld) & SciFiThrillerTVSeries(Westworld)", "VanishedOnHBO(TVSeriesNamedWestworld, TwoZeroOneSix)", "UnrelatedTVToOriginalFilm(Westworld, OneNineSevenThree, WrittenAndActedByMichaelCrichton)", "AboutRobotsThatMalfunctionAndHealHumanVisitors(FilmWestworldOneNineSevenThree)", "ActedInAFilmAboutMalfunctioningRobots(MichaelCrichton)", "Plays(DaveedDiggs, ThomasJefferson)", "exists x. (Actor(x) & PlaysIn(x, Hamilton) & Wins(x, BestActorAward))", "exists x. (Actor(x) & PlaysIn(x, ThomasJefferson, Hamilton) & Wins(x, BestActorAward))"], "conclusion": "Wins(DaveedDiggs, BestActorAward)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PlaysIn/3, PlaysIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: PlaysIn/3, PlaysIn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PlaysIn/3, PlaysIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: PlaysIn/3, PlaysIn/2\n"}
{"timestamp": "2025-05-04T17:05:10.843166", "premises": ["TVSeries(Westworld) & British(TVSeries(Westworld)) & SciFiThriller(TVSeries(Westworld))", "VanishedTVSeries(Westworld, TwoZeroOneSix, HBO)", "Unrelated(TVSeries(Westworld), FilmOneNineSevenThree) & Writer(FilmOneNineSevenThree, MichaelCrichton) & Actor(FilmOneNineSevenThree, MichaelCrichton)", "About(FilmOneNineSevenThree, RobotsMalfunctionHealingHumanVisitors)", "Actor(FilmMalfunctionRobots, MichaelCrichton)", "Actor(FilmOneNineSevenThree, MichaelCrichton)"], "conclusion": "Actor(FilmOneNineSevenThree, MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1\n"}
{"timestamp": "2025-05-04T17:05:17.205246", "premises": ["Series(Westworld) & British(Series(Westworld)) & SciFiThriller(Series(Westworld))", "VanishedIn2016(Series(Westworld)) & OnHBO(Series(Westworld))", "UnrelatedToFilmOneNineSevenThree(Series(Westworld)) & WrittenByMichaelCrichton(FilmOneNineSevenThree) & ActedByMichaelCrichton(FilmOneNineSevenThree)", "AboutRobotsMalfunctioning(FilmOneNineSevenThree)", "ActedByMichaelCrichton(FilmAboutRobotsMalfunctioning)", "ActedByMichaelCrichton(FilmAboutRobotsMalfunctioning)"], "conclusion": "ActedByMichaelCrichton(FilmAboutRobotsMalfunctioning)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-05-04T17:05:26.529000", "premises": ["TVSeries(Westworld) & British(TVSeries(Westworld)) & Genre(TVSeries(Westworld), ScienceFictionThriller)", "VanishedInYear(TVSeries(Westworld), 2016) & Network(TVSeries(Westworld), HBO)", "Unrelated(TVSeries(Westworld), FilmOneNineSevenThree) & Writer(FilmOneNineSevenThree, MichaelCrichton) & Actor(FilmOneNineSevenThree, MichaelCrichton)", "Year(FilmOneNineSevenThree, OneNineSevenThree) & About(FilmOneNineSevenThree, RobotsMalfunctionHealingVisitors)", "ExistsFilmMalfunctionRobots(& Actor(FilmMalfunctionRobots, MichaelCrichton))", "TVSeries(Westworld) & British(TVSeries(Westworld)) & Genre(TVSeries(Westworld), ScienceFictionThriller)", "VanishedInYear(TVSeries(Westworld), 2016) & Network(TVSeries(Westworld), HBO)", "Unrelated(TVSeries(Westworld), FilmOneNineSevenThree) & Writer(FilmOneNineSevenThree, MichaelCrichton) & Actor(FilmOneNineSevenThree, MichaelCrichton)", "Year(FilmOneNineSevenThree, OneNineSevenThree) & About(FilmOneNineSevenThree, RobotsMalfunctionHealingVisitors)"], "conclusion": "Actor(FilmOneNineSevenThree, MichaelCrichton) & About(FilmOneNineSevenThree, RobotsMalfunctionHealingVisitors) -> ExistsFilmMalfunctionRobots(& Actor(FilmMalfunctionRobots, MichaelCrichton))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expression expected.\nActor(FilmOneNineSevenThree, MichaelCrichton) & About(FilmOneNineSevenThree, RobotsMalfunctionHealingVisitors) -> ExistsFilmMalfunctionRobots(& Actor(FilmMalfunctionRobots, MichaelCrichton))\n                                                                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expression expected.\nActor(FilmOneNineSevenThree, MichaelCrichton) & About(FilmOneNineSevenThree, RobotsMalfunctionHealingVisitors) -> ExistsFilmMalfunctionRobots(& Actor(FilmMalfunctionRobots, MichaelCrichton))\n                                                                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:05:36.622746", "premises": ["\\( \\text{TVSeries}(\\text{Westworld}) \\land \\text{British}(\\text{Westworld}) \\land \\text{ScienceFictionThriller}(\\text{Westworld}) \\)", "\\( \\text{vanishedOnHBO}(TwoZeroOneSix, \\text{Westworld}) \\)", "\\( \\text{unrelatedToFilm1973}(\\text{Westworld}) \\land \\text{Wrote}(\\text{Crichton}, \\text{FilmOneNineSevenThree}) \\land \\text{Acted}(\\text{Crichton}, \\text{FilmOneNineSevenThree}) \\)", "\\( \\text{FilmOneNineSevenThree}(\\text{Westworld}) \\land \\text{About}(\\text{FilmOneNineSevenThree}, \\text{RobotsMalfunctioningHealingHumanVisitors}) \\)", "\\( \\text{Acted}(\\text{Crichton}, \\text{FilmAboutMalfunctioningRobots}) \\)", "\\( \\text{TVSeries}(\\text{Westworld}) \\land \\text{British}(\\text{Westworld}) \\land \\text{ScienceFictionThriller}(\\text{Westworld}) \\)", "\\( \\text{vanishedOnHBO}(TwoZeroOneSix, \\text{Westworld}) \\)", "\\( \\text{unrelatedToFilm1973}(\\text{Westworld}) \\land \\text{Wrote}(\\text{Crichton}, \\text{FilmOneNineSevenThree}) \\land \\text{Acted}(\\text{Crichton}, \\text{FilmOneNineSevenThree}) \\)", "\\( \\text{FilmOneNineSevenThree}(\\text{Westworld}) \\land \\text{About}(\\text{FilmOneNineSevenThree}, \\text{RobotsMalfunctioningHealingHumanVisitors}) \\)"], "conclusion": "\\( \\text{Acted}(\\text{Crichton}, \\text{FilmAboutMalfunctioningRobots}) \\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\text{Acted}(\\text{Crichton}, \\text{FilmAboutMalfunctioningRobots}) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\text{Acted}(\\text{Crichton}, \\text{FilmAboutMalfunctioningRobots}) \\)\n ^\n"}
{"timestamp": "2025-05-04T17:05:57.494081", "premises": ["`TVSeries(Westworld) & British(Westworld) & ScienceFictionThriller(Westworld)`", "`VanishedOnHBO(TVSeries(Westworld), 2016)`", "`Unrelated(TVSeries(Westworld), OriginalFilm(OneNineSevenThree)) & Wrote(OriginalFilm(OneNineSevenThree), MichaelCrichton) & ActedIn(OriginalFilm(OneNineSevenThree), MichaelCrichton)`", "`AboutRobotsMalfunctioning(OriginalFilm(OneNineSevenThree)) & HealsHumanVisitors(OriginalFilm(OneNineSevenThree))`"], "conclusion": "`ActedIn(FilmAboutRobotsMalfunctioning, MichaelCrichton)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`ActedIn(FilmAboutRobotsMalfunctioning, MichaelCrichton)`\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`ActedIn(FilmAboutRobotsMalfunctioning, MichaelCrichton)`\n                                                        ^\n"}
{"timestamp": "2025-05-04T17:06:24.543394", "premises": ["TVSeries(Westworld) & British(TVSeries(Westworld)) & SciFiThriller(TVSeries(Westworld))", "TVSeries(Westworld) & VanishedOnHBO(TVSeries(Westworld), 2016)", "TVSeries(Westworld) & OriginalFilm(OneNineSevenThree, Westworld) & WrittenBy(OneNineSevenThree, MichaelCrichton) & ActedBy(OneNineSevenThree, MichaelCrichton) & Unrelated(TVSeries(Westworld), OneNineSevenThree, Westworld)", "Film(OneNineSevenThree, Westworld) & AboutRobotsThatMalfunctionAndHealHumanVisitors(Film(OneNineSevenThree, Westworld))", "ActedBy(MichaelCrichton, X) & Film(X) & AboutRobotsThatMalfunction(X)", "ActedBy(MichaelCrichton, FilmX) & AboutRobotsThatMalfunction(FilmX)", "TVSeries(Westworld) & British(TVSeries(Westworld)) & SciFiThriller(TVSeries(Westworld))", "TVSeries(Westworld) & VanishedOnHBO(TVSeries(Westworld), 2016)", "TVSeries(Westworld) & OriginalFilm(OneNineSevenThree, Westworld) & WrittenBy(OneNineSevenThree, MichaelCrichton) & ActedBy(OneNineSevenThree, MichaelCrichton) & Unrelated(TVSeries(Westworld), OneNineSevenThree, Westworld)", "Film(OneNineSevenThree, Westworld) & AboutRobotsThatMalfunctionAndHealHumanVisitors(Film(OneNineSevenThree, Westworld))"], "conclusion": "ActedBy(MichaelCrichton, FilmX) & Film(FilmX) & AboutRobotsThatMalfunction(FilmX)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1, Film/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1, Film/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1, Film/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1, Film/2\n"}
{"timestamp": "2025-05-04T17:07:09.115242", "premises": ["Planet(Xiufeng) & Planet(Xiangshan) & Planet(Diecai) & Planet(Qixing) & CityOf(Xiufeng, Guilin) & CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) & CityOf(Qixing, Guilin)", "~Planet(Yangshuo) | ~CityOf(Yangshuo, Guilin)", "Planet(Xiangshan) & Planet(Diecai) & CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin)", "Planet(Xiufeng) & Planet(Xiangshan) & Planet(Diecai) & Planet(Qixing) & CityOf(Xiufeng, Guilin) & CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) & CityOf(Qixing, Guilin)", "~Planet(Yangshuo) | ~CityOf(Yangshuo, Guilin)", "Planet(Xiangshan) & Planet(Diecai) & (CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin))"], "conclusion": "SameCity(Xiangshan, Diecai)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~Planet(Yangshuo) | ~CityOf(Yangshuo,Guilin)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%~Planet(Yangshuo) | ~CityOf(Yangshuo,Guilin)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T17:07:25.590087", "premises": ["Planet(Xiufeng) & Planet(Xiangshan) & Planet(Diecai) & Planet(Qixing) & City(Guilin) & In(Xiufeng, Guilin) & In(Xiangshan, Guilin) & In(Diecai, Guilin) & In(Qixing, Guilin)", "-Planet(Yangshuo) & In(Yangshuo, Guilin)", "Xiangshan & Diecai & City(Guilin) & In(Xiangshan, Guilin) & In(Diecai, Guilin) & SameCity(Xiangshan, Diecai)"], "conclusion": "SameCity(Xiangshan, Diecai)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiangshan/0, Diecai/0\n"}
{"timestamp": "2025-05-04T17:08:04.187680", "premises": ["`all x. (Car(x) -> Edible(x))`", "`exists x. (Phone(x) & Car(x))`"], "conclusion": "`all x. (Phone(x) -> -Edible(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Phone(x) -> -Edible(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Phone(x) -> -Edible(x))`\n     ^\n"}
{"timestamp": "2025-05-04T17:08:51.254389", "premises": ["`all x. (Car(x) -> Edible(x))`", "`exists x. (Phone(x) & Car(x))`"], "conclusion": "`all x. (Phone(x) -> -Edible(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Phone(x) -> -Edible(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Phone(x) -> -Edible(x))`\n     ^\n"}
{"timestamp": "2025-05-04T17:09:31.311707", "premises": ["`ParkMetropolitanArt() & InNYC(ParkMetropolitanArt)`", "`ParkWhitneyAmericanArt() & InNYC(ParkWhitneyAmericanArt)`", "`ParkModernArt() & InNYC(ParkModernArt)`", "`Excludes(ParkMetropolitanArt, ByzantineArt) & Excludes(ParkMetropolitanArt, IslamicArt)`", "`Excludes(ParkWhitneyAmericanArt, AmericanArt)`", "`exists x. (ParkInNYC(x) -> (Excludes(x, ByzantineArt) & Excludes(x, IslamicArt)))`", "`ParkMetropolitanArt & InNYC(ParkMetropolitanArt)`", "`ParkWhitneyAmericanArt & InNYC(ParkWhitneyAmericanArt)`", "`ParkModernArt & InNYC(ParkModernArt)`", "`Excludes(ParkMetropolitanArt, ByzantineArt) & Excludes(ParkMetropolitanArt, IslamicArt)`", "`Excludes(ParkWhitneyAmericanArt, AmericanArt)`"], "conclusion": "`exists x. (ParkInNYC(x) -> (Excludes(x, ByzantineArt) & Excludes(x, IslamicArt)))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`exists x. (ParkInNYC(x) -> (Excludes(x, ByzantineArt) & Excludes(x, IslamicArt)))`\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`exists x. (ParkInNYC(x) -> (Excludes(x, ByzantineArt) & Excludes(x, IslamicArt)))`\n        ^\n"}
{"timestamp": "2025-05-04T17:09:38.713135", "premises": ["`ParkInNYC(MetropolitanParkOfArt)`", "`ParkInNYC(WhitneyParkOfAmericanArt)`", "`ParkInNYC(MoMA)`", "`Excludes(MetropolitanParkOfArt, ByzantineAndIslamicArt)`", "`Excludes(WhitneyParkOfAmericanArt, AmericanArt)`", "`exists x. (ParkInNYC(x) -> Excludes(x, ByzantineAndIslamicArt))`", "ParkInNYC(MetropolitanParkOfArt)", "ParkInNYC(WhitneyParkOfAmericanArt)", "ParkInNYC(MoMA)", "Excludes(MetropolitanParkOfArt, ByzantineAndIslamicArt)", "Excludes(WhitneyParkOfAmericanArt, AmericanArt)"], "conclusion": "exists x. (ParkInNYC(x) -> Excludes(x, ByzantineAndIslamicArt))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`ParkInNYC(MetropolitanParkOfArt)`\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`ParkInNYC(MetropolitanParkOfArt)`\n                                 ^\n"}
{"timestamp": "2025-05-04T17:11:08.323058", "premises": ["`ParkInNYC(ParkOfArtMetropolitan)`", "`ParkInNYC(ParkOfAmericanArtWhitney)`", "`ParkInNYC(ParkOfModernArt)`", "`Excludes(ParkOfArtMetropolitan, ByzantineIslamicArt)`", "`Excludes(ParkOfAmericanArtWhitney, AmericanArt)`", "`exists x. (ParkInNYC(x) -> Excludes(x, AmericanArt))`", "ParkInNYC(ParkOfArtMetropolitan)", "ParkInNYC(ParkOfAmericanArtWhitney)", "ParkInNYC(ParkOfModernArt)", "Excludes(ParkOfArtMetropolitan, ByzantineIslamicArt)", "Excludes(ParkOfAmericanArtWhitney, AmericanArt)"], "conclusion": "exists x. (ParkInNYC(x) -> Excludes(x, AmericanArt))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`ParkInNYC(ParkOfArtMetropolitan)`\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`ParkInNYC(ParkOfArtMetropolitan)`\n                                 ^\n"}
{"timestamp": "2025-05-04T17:13:47.088987", "premises": ["MartianScreenwriterAndDestroyer(MaggieFriedman)", "ShowrunnerAndExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & Series(WizardsOfEastEnd) & OnLifetime(WizardsOfEastEnd)", "Genre(WizardsOfEastEnd, FantasyDrama)", "DemolishedBy(MaggieFriedman, Eastwick) & DestroyedBy(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)", "exists x. (SeriesByHBO(x) & DemolishedBy(x, ShowRunnerOf(WizardsOfEastEnd)) & ShowRunnerOf(WizardsOfEastEnd))"], "conclusion": "exists x. (SeriesByHBO(x) & DemolishedBy(x, ShowRunnerOf(WizardsOfEastEnd)) & ShowRunnerOf(WizardsOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowRunnerOf/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowRunnerOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ShowRunnerOf/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ShowRunnerOf/1\n"}
{"timestamp": "2025-05-04T17:14:59.416602", "premises": ["exists x. (BoneyM(x) & AmericanNumberOneSingle(x))", "BigHit(UptownFunk, America)", "-exists x. (UptownFunk(x) & AmericanNumberOneSingle(x))", "all x. (PeaksBelowOne(x) -> -AmericanNumberOneSingle(x))", "PeaksBelowOne(UptownFunk)", "exists x. (BoneyM(x) & AmericanNumberOneSingle(x))", "BigHit(UptownFunk, America)", "-exists x. (UptownFunk(x) & AmericanNumberOneSingle(x))", "all x. (PeaksBelowOne(x) -> -AmericanNumberOneSingle(x))", "PeaksBelowOne(UptownFunk)", "PeaksBelowOne(UptownFunk)", "exists x. (BoneyM(x) & AmericanNumberOneSingle(x))", "BigHit(UptownFunk, America)", "-exists x. (UptownFunk(x) & AmericanNumberOneSingle(x))", "all x. (PeaksBelowOne(x) -> -AmericanNumberOneSingle(x))"], "conclusion": "PeaksBelowOne(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0\n"}
{"timestamp": "2025-05-04T17:15:06.578749", "premises": ["exists x. AmericanNumberOneSingles(BoneyM, x)", "BigHit(UptownFunk, America)", "-AmericanNumberOneSingles(UptownFunk)", "all x. (PeaksBelowOne(x, America) -> -AmericanNumberOneSingles(x))"], "conclusion": "PeaksBelowOne(UptownFunk, America)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanNumberOneSingles/1, AmericanNumberOneSingles/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanNumberOneSingles/1, AmericanNumberOneSingles/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanNumberOneSingles/1, AmericanNumberOneSingles/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanNumberOneSingles/1, AmericanNumberOneSingles/2\n"}
{"timestamp": "2025-05-04T17:15:15.497038", "premises": ["exists x. (AmericanOneSingle(x) & BelongsTo(x, BoneyM))", "BigHit(UptownFunk, America)", "-exists x. (AmericanOneSingle(x) & UptownFunk(x))", "all x. (PeaksBelowOne(x) -> -AmericanOneSingle(x))"], "conclusion": "PeaksBelowOne(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UptownFunk/1, UptownFunk/0\n"}
{"timestamp": "2025-05-04T17:15:17.869705", "premises": ["exists x. AmericanOneSingles(BoneyM, x)", "BigHit(UptownFunk)", "-AmericanOneSingles(UptownFunk)", "all x. (PeaksBelowOne(x) -> -AmericanOneSingles(x))"], "conclusion": "PeaksBelowOne(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanOneSingles/1, AmericanOneSingles/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanOneSingles/1, AmericanOneSingles/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanOneSingles/1, AmericanOneSingles/2.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanOneSingles/1, AmericanOneSingles/2\n"}
{"timestamp": "2025-05-04T17:15:26.099626", "premises": ["`exists x. (AmericanNumberOneSingle(x) & BoneyM(x))`", "`BigHitAllOverAmerica(\"Uptown_Funk\")`", "`-AmericanNumberOneSingle(\"Uptown_Funk\")`", "`all x. (PeaksBelowOne(x) -> -AmericanNumberOneSingle(x))`", "`PeaksBelowOne(\"Uptown_Funk\")`", "`exists x. (AmericanNumberOneSingle(x) & BoneyM(x))`", "`BigHitAllOverAmerica(\"Uptown_Funk\")`", "`-AmericanNumberOneSingle(\"Uptown_Funk\")`", "`all x. (PeaksBelowOne(x) -> -AmericanNumberOneSingle(x))`"], "conclusion": "`PeaksBelowOne(\"Uptown_Funk\")`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`PeaksBelowOne(\"Uptown_Funk\")`\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`PeaksBelowOne(\"Uptown_Funk\")`\n                             ^\n"}
{"timestamp": "2025-05-04T17:15:59.977610", "premises": ["`all x. (Destroy(ETS, x) & StandardizedTest(x) & In(x, UnitedStates) & (ForK12AndHigherEducation(x)))`", "`all x. (Administer(ETS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))`", "`exists x. (Destroy(ETS, x) & AssociatedWithEntryToUSEducationInstitution(x))`", "`all x. (Destroy(ETS, x) & StateWideAssessment(x) & UsedForAccountabilityTesting(x))`", "`all x. (Destroy(ETS, x) & (StateWideAssessment(x) & UsedForAccountabilityTesting(x)) | AssociatedWithEntryToUSEducationInstitution(x))`", "all x. (Destroy(ETS, x) & StandardizedTest(x) & In(x, UnitedStates) & (ForK12AndHigherEducation(x)))", "all x. (Administer(ETS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroy(ETS, x) & AssociatedWithEntryToUSEducationInstitution(x))", "all x. (Destroy(ETS, x) & StateWideAssessment(x) & UsedForAccountabilityTesting(x))"], "conclusion": "all x. (Destroy(ETS, x) -> (StateWideAssessment(x) & UsedForAccountabilityTesting(x)) | AssociatedWithEntryToUSEducationInstitution(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Destroy(ETS, x) & StandardizedTest(x) & In(x, UnitedStates) & (ForK12AndHigherEducation(x)))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Destroy(ETS, x) & StandardizedTest(x) & In(x, UnitedStates) & (ForK12AndHigherEducation(x)))`\n     ^\n"}
{"timestamp": "2025-05-04T17:16:21.831601", "premises": ["exists x. (Destroys(ETS, x) & StandardizedTest(x) & In(x, UnitedState) & For(x, kOneTwoAndHigherEducation))", "exists x. (Administers(ETS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(ETS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))", "(Destroys(ETS, StateWideAssessment) & Destroys(ETS, EntryToUSEducationInstitution))", "exists x. (Destroys(ETS, x) & StandardizedTest(x) & In(x, UnitedState) & For(x, kOneTwoAndHigherEducation))", "exists x. (Administers(ETS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroys(ETS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "(Destroys(ETS, StateWideAssessment) & Destroys(ETS, EntryToUSEducationInstitution))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: StateWideAssessment/1, StateWideAssessment/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StateWideAssessment/1, StateWideAssessment/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: StateWideAssessment/1, StateWideAssessment/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StateWideAssessment/1, StateWideAssessment/0\n"}
{"timestamp": "2025-05-04T17:16:30.933908", "premises": ["all x. (Destroy(eTS, x) & StandardizedTest(x) & In(x, UnitedState) & (For(x, kOneTwoAndHigherEducation) | For(x, HigherEducation)))", "all x. (Administer(eTS, x) & Law(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroy(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "all x. (Destroy(eTS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "all x. (Destroy(eTS, x) & (K-12StateWideAssessment(x) | AssociatedWith(x, EntryToUSEducationInstitution)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nall x. (Destroy(eTS, x) & (K-12StateWideAssessment(x) | AssociatedWith(x, EntryToUSEducationInstitution)))\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nall x. (Destroy(eTS, x) & (K-12StateWideAssessment(x) | AssociatedWith(x, EntryToUSEducationInstitution)))\n                            ^\n"}
{"timestamp": "2025-05-04T17:18:32.534330", "premises": ["\\[", "\\[", "\\[", "\\[", "\\[", "all x. (StandardizedTest(x) & In(x, UnitedStates) & (KOneTwoAndHigherEducation(x) | HigherEducation(x)) -> DestroyedBy(eTS, x))", "all x. (InternationalLaw(x) -> AdministeredBy(eTS, x))", "AdministeredBy(eTS, TOEFL)", "AdministeredBy(eTS, TOEIC)", "AdministeredBy(eTS, GRE)", "AdministeredBy(eTS, SubjectLaws)", "exists x. (StandardizedTest(x) & DestroyedBy(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "all x. (KOneTwoStateWideAssessment(x) -> DestroyedBy(eTS, x))"], "conclusion": "all x. (InternationalLaw(x) -> -AdministeredBy(eTS, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^\n"}
{"timestamp": "2025-05-04T17:19:07.759076", "premises": ["`all x. (Destroy(eTS, x) & StandardizedTest(x) & In(x, UnitedStates) & For(x, KOneTwoAndHigherEducation))`", "`all x. (Administer(eTS, x) & Law(x) & In(x, International))`", "`exists x. (Destroy(eTS, x) & Assessment(x) & AssociatedWith(x, EntryToUSEducationInstitution))`", "`all x. (Destroy(eTS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))`", "`all x. (International(x) & Test(x) -> -Administer(eTS, x))`", "`all x. (International(x) & Law(x) -> -Administer(eTS, x))`", "all x. (Destroy(eTS, x) & StandardizedTest(x) & In(x, UnitedStates) & For(x, KOneTwoAndHigherEducation))", "all x. (Administer(eTS, x) & Law(x) & In(x, International))", "exists x. (Destroy(eTS, x) & Assessment(x) & AssociatedWith(x, EntryToUSEducationInstitution))", "all x. (Destroy(eTS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))", "all x. (International(x) & Test(x) -> -Administer(eTS, x))"], "conclusion": "all x. (International(x) & Law(x) -> -Administer(eTS, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Destroy(eTS, x) & StandardizedTest(x) & In(x, UnitedStates) & For(x, KOneTwoAndHigherEducation))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Destroy(eTS, x) & StandardizedTest(x) & In(x, UnitedStates) & For(x, KOneTwoAndHigherEducation))`\n     ^\n"}
{"timestamp": "2025-05-04T17:20:34.536007", "premises": ["`ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)`", "`all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, AddOne(y)) -> Smaller(x, y))`", "`all x. all y. (Larger(x, y) -> NotLarger(y, x))`", "`Equals(Seven, AddOne(Six))`", "`Equals(Eight, AddOne(Seven))`", "`Positive(Two)`", "`all x. (Positive(x) -> Positive(Double(x)))`", "`Equals(Double(Six), Eight)`", "`Equals(Double(Two), Six)`"], "conclusion": "`Smaller(Eight, Seven)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Smaller(Eight, Seven)`\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Smaller(Eight, Seven)`\n                      ^\n"}
{"timestamp": "2025-05-04T17:20:38.277479", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & y = x + 1 -> Smaller(x, y))", "all x. all y. (Smaller(x, y) -> -Smaller(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Six)", "Six = Double(Two)"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & y = x + 1 -> Smaller(x, y))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & y = x + 1 -> Smaller(x, y))\n                                          ^\n"}
{"timestamp": "2025-05-04T17:21:09.621741", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x_=_y_+_One) -> x < y)", "all x. all y. (x > y -> ~ (y_>_x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 6", "6 = 2 * 2"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-05-04T17:21:19.060746", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x all y (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> x < y)", "all x all y (x > y -> \u00ac(y_>_x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x (Positive(x) -> Positive(Two_*_x))", "8 = 2 * 6", "6 = 2 * 2"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-05-04T17:21:54.804394", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x_=_y_+_One) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Eight) = Six", "Double(Six) = Two"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-05-04T17:22:09.535410", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, PlusOne) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> NotLarger(y, x))", "Equals(Seven, Six, PlusOne)", "Equals(Eight, Seven, PlusOne)", "Negative(Two)", "all x. (Negative(x) -> Negative(DoubleOf(x)))", "Equals(Nine, DoubleOf(Six))", "Equals(Six, DoubleOf(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3\n"}
{"timestamp": "2025-05-04T17:22:24.522972", "premises": ["`ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)`", "`all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) -> Larger(x, y))`", "`all x. all y. (Larger(x, y) -> NotLarger(y, x))`", "`Equals(7, Plus(Six, One))`", "`Equals(8, Plus(Seven, One))`", "`Negative(Two)`", "`all x. (Negative(x) -> Negative(Double(x)))`", "`Equals(Double(Six), 9)`", "`Equals(Double(Two), 6)`"], "conclusion": "`Negative(Nine)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Negative(Nine)`\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Negative(Nine)`\n               ^\n"}
{"timestamp": "2025-05-04T17:22:28.360294", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, AddOne(y)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Six, AddOne(Six))", "Equals(Eight, Seven, AddOne(Seven))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Equals(Nine, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3\n"}
{"timestamp": "2025-05-04T17:22:46.551477", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, PlusOne) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> NotLarger(y, x))", "Equals(Seven, Six, PlusOne)", "Equals(Eight, Seven, PlusOne)", "Negative(Two)", "all x. (Negative(x) -> Negative(DoubleOf(x)))", "DoubleOf(Nine, Six)", "DoubleOf(Six, Two)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DoubleOf/2, DoubleOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: DoubleOf/2, DoubleOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DoubleOf/2, DoubleOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: DoubleOf/2, DoubleOf/1\n"}
{"timestamp": "2025-05-04T17:22:50.270206", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, PlusOne) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> NotLarger(y, x))", "Equals(Seven, Six, PlusOne)", "Equals(Eight, Seven, PlusOne)", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Equals(Double(Six), Nine)", "Equals(Double(Two), Six)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3\n"}
{"timestamp": "2025-05-04T17:23:03.833475", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, PlusOne(y)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Six, PlusOne(Six))", "Equals(Eight, Seven, PlusOne(Seven))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Equals(Nine, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3\n"}
{"timestamp": "2025-05-04T17:23:27.857561", "premises": ["`all x. (x_=_Six_|_x_=_Seven_|_x_=_Eight) -> ImaginaryNumber(x)`", "`all x. all y. (ImaginaryNumber(x) & (x_=_y_+_One) -> x < y)`", "`all x. all y. (x > y -> ~(y_>_x))`", "`7 = 6 + 1`", "`8 = 7 + 1`", "`Positive(Two)`", "`all x. (Positive(x) -> Positive(Doubled(x)))`", "`8 = Doubled(Six)`", "`6 = Doubled(Two)`"], "conclusion": "`6 < 7`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n`6 < 7`\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n`6 < 7`\n   ^\n"}
{"timestamp": "2025-05-04T17:24:40.892099", "premises": ["Dance(DengXiaoping) & Leader(DengXiaoping, PeopleRepublicChina)", "Praised(DengXiaoping, ReformProgram) & Reversion(HongKong, ChineseControl) & Return(Macau, ChineseControl)", "SecretaryGeneral(DengXiaoping, MaoParty, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaign, Mao)", "DetrimentalTo(DengXiaoping, FranceMusicIndustry, GreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "After(Birth(MaoZedong), GraduallyRise(DengXiaoping, SupremePower))"], "conclusion": "exists x. (DetrimentalTo(x, FranceMusicIndustry) & GraduallyRise(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRise/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRise/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRise/2\n"}
{"timestamp": "2025-05-04T17:26:07.932755", "premises": ["Leader(DengXiaoping, ParamountLeader, PeopleRepublicChina)", "Praised(DengXiaoping, ReformProgram) & Praised(DengXiaoping, ReversionHongKong) & Praised(DengXiaoping, ReturnMacau)", "Position(DengXiaoping, SecretaryGeneral, Party, Mao) & Position(DengXiaoping, VicePremier, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaign, Mao)", "Detrimental(DengXiaoping, FranceMusicIndustry, GreatLeapForward)", "BirthYear(MaoZedong, OneNineSevenSix)", "After(Birth(MaoZedong), GraduallyRose(DengXiaoping, SupremePower))"], "conclusion": "GraduallyRose(DetrietantToFranceMusicIndustry, SupremePower)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRose/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRose/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRose/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRose/2\n"}
{"timestamp": "2025-05-04T17:26:21.447705", "premises": ["all x. (Robot(x) -> ReceivesIntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (SleepRegularly(x) | SleepOnAsNeededBasis(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroups(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> (PreventsEnvironmentalManagementOrConservation(x)))", "ParticipatesInNaturalDisasterResponse -> SleepsInGroupsOnAsNeededBasis"], "conclusion": "all x. (ParticipatesInNaturalDisasterResponse(x) -> ReceivesIntangibleBenefitsForSleep(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParticipatesInNaturalDisasterResponse/0, ParticipatesInNaturalDisasterResponse/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ParticipatesInNaturalDisasterResponse/0, ParticipatesInNaturalDisasterResponse/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParticipatesInNaturalDisasterResponse/0, ParticipatesInNaturalDisasterResponse/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ParticipatesInNaturalDisasterResponse/0, ParticipatesInNaturalDisasterResponse/1\n"}
{"timestamp": "2025-05-04T17:26:48.864735", "premises": ["all x. (Robot(x) -> ReceivesIntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (SleepsRegularly(x) | SleepsAsNeeded(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroups(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> Prevents(x, EnvironmentalManagementOrConservation))", "ParticipatesInNaturalDisasterResponse() -> SleepsInGroupsOnAnAsNeededBasis()", "all x. (ParticipatesInNaturalDisasterResponse(x) -> ReceivesIntangibleBenefitsForSleep(x))", "ParticipatesInNaturalDisasterResponse(x)", "all x. (Robot(x) -> ReceivesIntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (SleepsRegularly(x) | SleepsAsNeeded(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroups(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> Prevents(x, EnvironmentalManagementOrConservation))", "ParticipatesInNaturalDisasterResponse(x) -> SleepsInGroupsOnAnAsNeededBasis(x)", "all x. (ParticipatesInNaturalDisasterResponse(x) -> ReceivesIntangibleBenefitsForSleep(x))", "ParticipatesInNaturalDisasterResponse(RobotsWhoParticipate) -> ReceivesIntangibleBenefitsForSleep(RobotsWhoParticipate)", "all x. (Robot(x) -> ReceivesIntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (SleepsRegularly(x) | SleepsAsNeeded(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroups(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> Prevents(x, EnvironmentalManagementOrConservation))", "ParticipatesInNaturalDisasterResponse(x) -> SleepsInGroupsOnAnAsNeededBasis(x)", "all x. (ParticipatesInNaturalDisasterResponse(x) -> ReceivesIntangibleBenefitsForSleep(x))"], "conclusion": "ParticipatesInNaturalDisasterResponse(Robot) -> ReceivesIntangibleBenefitsForSleep(Robot)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nParticipatesInNaturalDisasterResponse() -> SleepsInGroupsOnAnAsNeededBasis()\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nParticipatesInNaturalDisasterResponse() -> SleepsInGroupsOnAnAsNeededBasis()\n                                      ^\n"}
{"timestamp": "2025-05-04T17:27:12.592352", "premises": ["all x. (Robot(x) -> ReceivesIntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (SleepsRegularly(x) | SleepsAsNeeded(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepsInGroups(x) | SleepsIndividually(x)))", "all x. (EnvironmentalRobot(x) -> (PreventsEnvironmentalManagementOrConservation(x)))", "ParticipatesInNaturalDisasterResponse() -> (SleepsInGroupsOnASNeededBasis())"], "conclusion": "all x. (ParticipatesInNaturalDisasterResponse(x) -> ReceivesIntangibleBenefitsForSleep(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nParticipatesInNaturalDisasterResponse() -> (SleepsInGroupsOnASNeededBasis())\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nParticipatesInNaturalDisasterResponse() -> (SleepsInGroupsOnASNeededBasis())\n                                      ^\n"}
{"timestamp": "2025-05-04T17:27:42.732349", "premises": ["`all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))`", "`exists x. (ArtificialSatellite(x) & -HumanInvention(x))`", "`all x. (InnovativeScientificAchievement(x) -> HumanInvention(x))`", "all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))", "exists x. (ArtificialSatellite(x) & -HumanInvention(x))"], "conclusion": "all x. (InnovativeScientificAchievement(x) -> HumanInvention(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (ArtificialSatellite(x) -> InnovativeScientificAchievement(x))`\n     ^\n"}
{"timestamp": "2025-05-04T17:28:29.965588", "premises": ["exists x. (Cat(x) & -Animal(x))", "all x. (Cat(x) -> Reptile(x))", "exists x. (Reptile(x) & -Animal(x))", "`exists x. (Cat(x) & -Animal(x))`", "`all x. (Cat(x) -> Reptile(x))`", "`exists x. (Reptile(x) & -Animal(x))`", "`-(exists x. (Reptile(x) & -Animal(x)))`"], "conclusion": "`forall x. (-Reptile(x) | Animal(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`forall x. (-Reptile(x) | Animal(x))`\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`forall x. (-Reptile(x) | Animal(x))`\n        ^\n"}
{"timestamp": "2025-05-04T17:29:37.516833", "premises": ["`Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)`", "`BornIn(AthensOhio, BernardaBrysonShahn)`", "`UnrelatedTo(BernardaBrysonShahn, BenShahn)`", "`all x. (BornIn(AthensOhio, x) -> Martian(x))`", "`Martian(BernardaBrysonShahn)`", "Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)", "BornIn(AthensOhio, BernardaBrysonShahn)", "UnrelatedTo(BernardaBrysonShahn, BenShahn)", "all x. (BornIn(AthensOhio, x) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)`\n                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Musician(BernardaBrysonShahn) & Lithographer(BernardaBrysonShahn)`\n                                                                  ^\n"}
{"timestamp": "2025-05-04T17:30:23.539452", "premises": ["all x. (Trilogy(x) -> exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & MadeUpOf(x, y, z, w)))", "exists y. exists z. exists w. exists u. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(u) & MadeUpOf(TheHarryPotterSeries, y, z, w, u))", "exists y. exists z. exists w. exists u. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(u) & MadeUpOf(TheChroniclesOfNarnia, y, z, w, u))", "Trilogy(TheHarryPotterSeries)", "Trilogy(TheHarryPotterSeries)", "all x. (Trilogy(x) -> MadeUpOf(x, y, z, w, u))", "exists y. exists z. exists w. exists u. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(u) & MadeUpOf(TheHarryPotterSeries, y, z, w, u))", "Trilogy(TheHarryPotterSeries)", "all x. (Trilogy(x) -> exists y. exists z. exists w. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & MadeUpOf(x, y, z, w)))", "exists y. exists z. exists w. exists u. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(u) & MadeUpOf(TheHarryPotterSeries, y, z, w, u))", "exists y. exists z. exists w. exists u. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(u) & MadeUpOf(TheChroniclesOfNarnia, y, z, w, u))", "Trilogy(TheHarryPotterSeries)"], "conclusion": "Trilogy(TheHarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MadeUpOf/5, MadeUpOf/4.\n\n\nFatal error:  The following symbols are used with multiple arities: MadeUpOf/5, MadeUpOf/4", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MadeUpOf/5, MadeUpOf/4.\n\n\nFatal error:  The following symbols are used with multiple arities: MadeUpOf/5, MadeUpOf/4\n"}
{"timestamp": "2025-05-04T17:30:35.686547", "premises": ["all x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(x, yOne) & IsPartOf(x, yTwo) & IsPartOf(x, yThree) & IsPartOf(x, yFour)))", "exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheHarryPotterSeries, yOne) & IsPartOf(TheHarryPotterSeries, yTwo) & IsPartOf(TheHarryPotterSeries, yThree) & IsPartOf(TheHarryPotterSeries, yFour))", "exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheChroniclesOfNarnia, yOne) & IsPartOf(TheChroniclesOfNarnia, yTwo) & IsPartOf(TheChroniclesOfNarnia, yThree) & IsPartOf(TheChroniclesOfNarnia, yFour))", "Trilogy(TheHarryPotterSeries)", "exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheHarryPotterSeries, yOne) & IsPartOf(TheHarryPotterSeries, yTwo) & IsPartOf(TheHarryPotterSeries, yThree) & IsPartOf(TheHarryPotterSeries, yFour))"], "conclusion": "all x. ((exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(x, yOne) & IsPartOf(x, yTwo) & IsPartOf(x, yThree) & IsPartOf(x, yFour))) & (exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheHarryPotterSeries, yOne) & IsPartOf(TheHarryPotterSeries, yTwo) & IsPartOf(TheHarryPotterSeries, yThree) & IsPartOf(TheHarryPotterSeries, yFour)))) -> Trilogy(TheHarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. ((exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(x, yOne) & IsPartOf(x, yTwo) & IsPartOf(x, yThree) & IsPartOf(x, yFour))) & (exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheHarryPotterSeries, yOne) & IsPartOf(TheHarryPotterSeries, yTwo) & IsPartOf(TheHarryPotterSeries, yThree) & IsPartOf(TheHarryPotterSeries, yFour)))) -> Trilogy(TheHarryPotterSeries)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. ((exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(x, yOne) & IsPartOf(x, yTwo) & IsPartOf(x, yThree) & IsPartOf(x, yFour))) & (exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & yOne~yTwo & yOne~yThree & yOne~yFour & yTwo~yThree & yTwo~yFour & yThree~yFour & IsPartOf(TheHarryPotterSeries, yOne) & IsPartOf(TheHarryPotterSeries, yTwo) & IsPartOf(TheHarryPotterSeries, yThree) & IsPartOf(TheHarryPotterSeries, yFour)))) -> Trilogy(TheHarryPotterSeries)\n                ^\n"}
{"timestamp": "2025-05-04T17:30:40.228363", "premises": ["all x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & MemberOf(yOne, x) & MemberOf(yTwo, x) & MemberOf(yThree, x) & MemberOf(yFour, x)))", "exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & MemberOf(yOne, HarryPotterSeries) & MemberOf(yTwo, HarryPotterSeries) & MemberOf(yThree, HarryPotterSeries) & MemberOf(yFour, HarryPotterSeries))", "exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & MemberOf(yOne, ChroniclesOfNarnia) & MemberOf(yTwo, ChroniclesOfNarnia) & MemberOf(yThree, ChroniclesOfNarnia) & MemberOf(yFour, ChroniclesOfNarnia))"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & MemberOf(yOne, x) & MemberOf(yTwo, x) & MemberOf(yThree, x) & MemberOf(yFour, x)))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & MemberOf(yOne, x) & MemberOf(yTwo, x) & MemberOf(yThree, x) & MemberOf(yFour, x)))\n                             ^\n"}
{"timestamp": "2025-05-04T17:31:16.246098", "premises": ["all x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (Distinct(yOne, yTwo) & Distinct(yOne, yThree) & Distinct(yOne, yFour) & Distinct(yTwo, yThree) & Distinct(yTwo, yFour) & Distinct(yThree, yFour) & MadeUpOf(x, yOne, yTwo, yThree, yFour)))", "MadeUpOf(TheHarryPotterSeries, yOne, yTwo, yThree, yFour)", "MadeUpOf(TheChroniclesOfNarnia, zOne, zTwo, zThree, zFour)", "-(Trilogy(TheChroniclesOfNarnia))", "all x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (Distinct(yOne, yTwo) & Distinct(yOne, yThree) & Distinct(yOne, yFour) & Distinct(yTwo, yThree) & Distinct(yTwo, yFour) & Distinct(yThree, yFour) & MadeUpOf(x, yOne, yTwo, yThree, yFour)))", "MadeUpOf(TheHarryPotterSeries, yOne, yTwo, yThree, yFour)", "MadeUpOf(TheChroniclesOfNarnia, zOne, zTwo, zThree, zFour)"], "conclusion": "-(Trilogy(TheChroniclesOfNarnia))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (Distinct(yOne, yTwo) & Distinct(yOne, yThree) & Distinct(yOne, yFour) & Distinct(yTwo, yThree) & Distinct(yTwo, yFour) & Distinct(yThree, yFour) & MadeUpOf(x, yOne, yTwo, yThree, yFour)))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Trilogy(x) -> exists yOne. exists yTwo. exists yThree. exists yFour. (Distinct(yOne, yTwo) & Distinct(yOne, yThree) & Distinct(yOne, yFour) & Distinct(yTwo, yThree) & Distinct(yTwo, yFour) & Distinct(yThree, yFour) & MadeUpOf(x, yOne, yTwo, yThree, yFour)))\n                             ^\n"}
{"timestamp": "2025-05-04T17:32:20.418062", "premises": ["`Animal(TOra)`", "`all x. (Animal(x) -> Software(x))`", "`all x. (Software(x) -> (Expensive(x) | Complex(x)))`", "`all x. (Complex(x) & UnderLicense(x, OpenGPL) -> False)`", "`UnderLicense(TOra, OpenGPL)`"], "conclusion": "`Expensive(TOra) & Software(TOra)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Expensive(TOra) & Software(TOra)`\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Expensive(TOra) & Software(TOra)`\n                                 ^\n"}
{"timestamp": "2025-05-04T17:32:22.542853", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "all x. (Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Complex(x) & UnderLicense(x, OpenGeneralPublicLicense) -> False())", "UnderLicense(TOra, OpenGeneralPublicLicense)"], "conclusion": "Expensive(TOra)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (Complex(x) & UnderLicense(x, OpenGeneralPublicLicense) -> False())\n                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (Complex(x) & UnderLicense(x, OpenGeneralPublicLicense) -> False())\n                                                                        ^\n"}
{"timestamp": "2025-05-04T17:32:24.684774", "premises": ["Animal(TOra)", "all x. (Animal(x) -> Software(x))", "all x. (Software(x) -> (Expensive(x) | Complex(x)))", "all x. (Complex(x) & UnderLicense(x, \"Open_General_Public_License\") -> False())", "UnderLicense(TOra, \"Open_General_Public_License\")"], "conclusion": "Expensive(TOra)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nall x. (Complex(x) & UnderLicense(x, \"Open_General_Public_License\") -> False())\n                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nall x. (Complex(x) & UnderLicense(x, \"Open_General_Public_License\") -> False())\n                                                                             ^\n"}
{"timestamp": "2025-05-04T17:33:41.886156", "premises": ["`CityAndCivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)`", "`In(HambletonDistrict, NorthMars)`", "`On(NorthMars, Mars)`", "`all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))`", "`-(exists x. (CivilParish(x) & On(x, Mars)))`", "CityAndCivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)", "In(HambletonDistrict, NorthMars)", "On(NorthMars, Mars)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-(exists x. (CivilParish(x) & On(x, Mars)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`CityAndCivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)`\n                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`CityAndCivilParish(AinderbyQuernhow) & In(AinderbyQuernhow, HambletonDistrict)`\n                                                                               ^\n"}
{"timestamp": "2025-05-04T17:38:11.436424", "premises": ["ChineseComputerScientist(Mathematician(ProfessorEmeritus(StanfordUniversity(Knuth))))", "EnemyOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "exists x. (Mathematician(x) & EnemyOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mathematician/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mathematician/1\n"}
{"timestamp": "2025-05-04T17:40:31.403463", "premises": ["all x all y. (ScoreSame(x, y, regular_time) -> NeedExtraTime(x, y))", "all x all y. (ScoreSame(x, y, regular_time) & ScoreSame(x, y, extra_time) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regular_time)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extra_time)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x all y. (ScoreSame(x, y, regular_time) -> NeedExtraTime(x, y))", "all x all y. (ScoreSame(x, y, regular_time) & ScoreSame(x, y, extra_time) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regular_time)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extra_time)"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:41:04.113185", "premises": ["all x. all y. (ScoreSame(x, y, regularTime) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, regularTime) & ScoreSame(x, y, extraTime) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extraTime)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSame(x, y, regularTime) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, regularTime) & ScoreSame(x, y, extraTime) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extraTime)"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:41:13.731997", "premises": ["all x. all y. (ScoreSameDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameDuringBoth(x, y) -> NeedVictoryShootout(x, y))", "ScoreSameDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSameDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameDuringBoth(x, y) -> NeedVictoryShootout(x, y))", "ScoreSameDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:41:26.295429", "premises": ["all x. all y. (ScoreSameNumberDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameNumberDuringBoth(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSameNumberDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameNumberDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSameNumberDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameNumberDuringBoth(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSameNumberDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameNumberDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameNumberDuringBoth(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSameNumberDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "ScoreSameNumberDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:41:57.492405", "premises": ["all x. all y. (ScoreSamePointsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSamePointsRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSamePointsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSamePointsRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:42:09.983061", "premises": ["all x all y. (ScoreSamePointsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x all y. (ScoreSamePointsBoth(x, y) -> NeedVictoryShootout(x, y))", "ScoreSamePointsRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:42:38.337691", "premises": ["\\[", "\\[", "\\[", "\\["], "conclusion": "\\[", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^\n"}
{"timestamp": "2025-05-04T17:42:42.062234", "premises": ["all x. all y. (ScoreSameInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameInRegularTime(x, y) & ScoreSameInExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSameInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameInExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:42:55.481069", "premises": ["all x all y. (ScoreSame(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x all y. (ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:43:06.257374", "premises": ["all x. all y. (ScoreSamePointsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSamePointsRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsRegularTime(RM, AM, OneNineNineZero)", "ScoreSamePointsExtraTime(RM, AM, 199Zero, Zero)"], "conclusion": "-NeedVictoryShootOut(RM, AM, OneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePointsRegularTime/3, ScoreSamePointsRegularTime/2, NeedVictoryShootOut/2, NeedVictoryShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePointsRegularTime/3, ScoreSamePointsRegularTime/2, NeedVictoryShootOut/2, NeedVictoryShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSamePointsRegularTime/3, ScoreSamePointsRegularTime/2, NeedVictoryShootOut/2, NeedVictoryShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSamePointsRegularTime/3, ScoreSamePointsRegularTime/2, NeedVictoryShootOut/2, NeedVictoryShootOut/3\n"}
{"timestamp": "2025-05-04T17:43:14.513815", "premises": ["all x all y. (ScoreSamePointsDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x all y. (ScoreSamePointsDuringRegularTime(x, y) & ScoreSamePointsDuringExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:43:28.391943", "premises": ["all x. all y. (ScoreSamePointsDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSamePointsDuringBothRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSamePointsDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSamePointsDuringBothRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSamePointsDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 645: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:43:37.891555", "premises": ["all x. all y. (ScoreSame(x, y, regular_time) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, regular_time) & ScoreSame(x, y, extra_time) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regular_time)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extra_time)", "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "all x. all y. (ScoreSame(x, y, regular_time) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, regular_time) & ScoreSame(x, y, extra_time) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, regular_time)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, extra_time)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:43:46.894206", "premises": ["all x all y. (ScoreSame(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x all y. (ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> NeedVictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:43:56.526012", "premises": ["all x. all y. (ScoreSameDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameDuringRegularTime(x, y) & ScoreSameDuringExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSameDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "-(NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid))", "all x. all y. (ScoreSameDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoreSameDuringRegularTime(x, y) & ScoreSameDuringExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "ScoreSameDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSameDuringExtraTime(RealMadrid, Atl\u00e9ticoMadrid)", "-(NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid))"], "conclusion": "-(NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-05-04T17:44:02.784774", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (all z. ((HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x)))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (all z. ((HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x)))\n                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (all z. ((HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x)))\n                                                                                                         ^\n"}
{"timestamp": "2025-05-04T17:44:04.988254", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:44:07.193032", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:44:09.396783", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:44:13.580487", "premises": ["Office(Ableton, Mars)", "Office(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (Office(x, y) & Office(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (Office(x, y) & Office(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (Office(x, y) & Office(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                        ^\n"}
{"timestamp": "2025-05-04T17:44:27.835008", "premises": ["OfficeOn(Ableton, Mars)", "OfficeOn(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. ((all y. (OfficeOn(x, y) & OfficeOn(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)", "SmallCompany(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((all y. (OfficeOn(x, y) & OfficeOn(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((all y. (OfficeOn(x, y) & OfficeOn(x, z) & DifferentPlanets(y, z)) -> SmallCompany(x))\n                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:44:45.508191", "premises": ["`HasOffice(Ableton, Mars)`", "`HasOffice(Ableton, Venus)`", "`DifferentPlanets(Mars, Venus)`", "`all x. (Company(x) & HasOfficeInDifferentPlanets(x) -> SmallCompany(x))`", "`DestroysMusicSoftware(Ableton)`", "`-HasOffice(Ableton, Mars)`", "HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (Company(x) & HasOfficeInDifferentPlanets(x) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)", "-HasOffice(Ableton, Mars)", "`HasOfficeInDifferentPlanets(C) <def> HasOffice(C, pOne) & HasOffice(C, pTwo) & DifferentPlanets(pOne, pTwo)`", "HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (Company(x) & HasOfficeInDifferentPlanets(x) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)", "-HasOffice(Ableton, Mars)"], "conclusion": "HasOfficeInDifferentPlanets(C) <def> HasOffice(C, pOne) & HasOffice(C, pTwo) & DifferentPlanets(pOne, pTwo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<def>'.\nHasOfficeInDifferentPlanets(C) <def> HasOffice(C, pOne) & HasOffice(C, pTwo) & DifferentPlanets(pOne, pTwo)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<def>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<def>'.\nHasOfficeInDifferentPlanets(C) <def> HasOffice(C, pOne) & HasOffice(C, pTwo) & DifferentPlanets(pOne, pTwo)\n                               ^\n"}
{"timestamp": "2025-05-04T17:44:54.920301", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "-HasOffice(Ableton, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (all y. (HasOffice(x, y) & HasOffice(x, z) & DifferentPlanets(y, z) -> SmallCompany(x))\n                                                                                              ^\n"}
{"timestamp": "2025-05-04T17:45:02.844709", "premises": ["`Office(Ableton, Mars)`", "`Office(Ableton, Venus)`", "`DifferentPlanets(Mars, Venus)`", "`all x. (Company(x) & OfficeInDifferentPlanets(x) -> SmallCompany(x))`", "`Destroys(Ableton, MusicSoftware)`"], "conclusion": "`-Office(Ableton, Mars)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.\n`-Office(Ableton, Mars)`\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.\n`-Office(Ableton, Mars)`\n ^\n"}
{"timestamp": "2025-05-04T17:45:20.854357", "premises": ["HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (Company(x) & HasOfficeInDifferentPlanets(x) -> SmallCompany(x))", "DestructionOfMusicSoftware(Ableton)", "-HasOffice(Ableton, Mars)", "HasOffice(Ableton, Mars)", "HasOffice(Ableton, Venus)", "DifferentPlanets(Mars, Venus)", "all x. (Company(x) & HasOfficeInDifferentPlanets(x) -> SmallCompany(x))", "DestructionOfMusicSoftware(Ableton)", "-HasOffice(Ableton, Mars)"], "conclusion": "HasOfficeInDifferentPlanets(C) <--> (HasOffice(C, POne) & HasOffice(C, PTwo) & DifferentPlanets(POne, PTwo))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nHasOfficeInDifferentPlanets(C) <--> (HasOffice(C, POne) & HasOffice(C, PTwo) & DifferentPlanets(POne, PTwo))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nHasOfficeInDifferentPlanets(C) <--> (HasOffice(C, POne) & HasOffice(C, PTwo) & DifferentPlanets(POne, PTwo))\n                               ^\n"}
{"timestamp": "2025-05-04T17:46:59.621710", "premises": ["\\( \\text{In}(China, EU) \\land \\text{EconomyDeclining}(China) \\)", "\\( \\forall x. (\\text{From}(x, China) \\rightarrow \\text{In}(x, EU)) \\)", "\\( \\text{In}(India, EU) \\land \\text{EconomyDeclining}(India) \\)", "\\( \\forall x. (\\text{From}(x, India) \\rightarrow \\text{In}(x, EU)) \\)", "\\( \\forall x. (\\text{From}(x, China) \\rightarrow \\text{Brazilian}(x)) \\)", "\\( \\forall x. (\\text{From}(x, India) \\rightarrow \\text{Martian}(x)) \\)", "\\( \\exists x. \\text{From}(x, India) \\)"], "conclusion": "\\( \\forall x. (\\text{In}(x, EU) \\rightarrow -\\text{Martian}(x)) \\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\forall x. (\\text{In}(x, EU) \\rightarrow -\\text{Martian}(x)) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\forall x. (\\text{In}(x, EU) \\rightarrow -\\text{Martian}(x)) \\)\n ^\n"}
{"timestamp": "2025-05-04T17:49:02.211970", "premises": ["In(China, EU) & EconomyDeclining(China)", "all x. (FromChina(x) -> In(x, EU))", "In(India, EU) & EconomyDeclining(India)", "all x. (FromIndia(x) -> In(x, EU))", "all x. (FromChina(x) -> Brazilian(x))", "all x. (FromIndia(x) -> Martian(x))", "exists x. FromIndia(x)"], "conclusion": "~EconomyDeclining(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~EconomyDeclining(India).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~EconomyDeclining(India).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T17:49:10.973239", "premises": ["In(China, EU) & EconomyDeclining(China)", "all x. (From(x, China) -> In(x, EU))", "In(India, EU) & EconomyDeclining(India)", "all x. (From(x, India) -> In(x, EU))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. (From(x, India))"], "conclusion": "~EconomyDeclining(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~EconomyDeclining(India).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~EconomyDeclining(India).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T17:49:38.821039", "premises": ["`all x. (BasketballPlayer(x) -> (HasRightNose(x) & HasLeftNose(x)))`", "`all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & EfficientlyUsesLeftNose(x) & EfficientlyUsesRightNose(x)))`", "`all x. (BasketballPlayer(x) & CanScoreManyGoalsUsingLeftNose(x) -> EfficientlyUsesLeftNose(x))`", "`all x. (BasketballPlayer(x) & CanScoreManyGoalsUsingRightNose(x) -> EfficientlyUsesRightNose(x))`", "`BasketballPlayer(CristianoRonaldo)`", "`EfficientlyUsesRightNose(CristianoRonaldo)`", "`CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)`"], "conclusion": "`TopBasketballPlayer(CristianoRonaldo)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`TopBasketballPlayer(CristianoRonaldo)`\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`TopBasketballPlayer(CristianoRonaldo)`\n                                      ^\n"}
{"timestamp": "2025-05-04T17:52:44.345834", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "all x. (Museum(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. (Hatchery(x) & ForDestruction(x) -> MightReleaseAnimalsIntoWild(x))", "~ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~ForProfit(NationalLobsterHatchery).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~ForProfit(NationalLobsterHatchery).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T17:53:58.559286", "premises": ["WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy)", "Ignored(DonaldKnuth, AnalysisOfAlgorithms)", "RecognizedForPoleDancing(MarvinMinsky)", "Hated(RichardHamming, NumericalMethods)", "MadeContributionsPoleDancing(JohnMcCarthy)", "atLeastTwoX((WonNobelPrize(X) & MadeContributionsPoleDancing(X)))"], "conclusion": "atLeastTwoX((WonNobelPrize(X) & MadeContributionsPoleDancing(X)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsPoleDancing/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsPoleDancing/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsPoleDancing/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsPoleDancing/1\n"}
{"timestamp": "2025-05-04T17:54:38.289182", "premises": ["NobelPrizeRecipient(DonaldKnuth) & NobelPrizeRecipient(MarvinMinsky) & NobelPrizeRecipient(RichardHamming) & NobelPrizeRecipient(JohnMcCarthy)", "IgnoredBy(DonaldKnuth, AnalysisOfAlgorithms)", "RecognizedFor(MarvinMinsky, PoleDancing)", "HatedBy(RichardHamming, NumericalMethods)", "ContributedTo(PoleDancing, JohnMcCarthy)", "AtLeastTwo(NobelPrizeRecipient, ContributedTo, PoleDancing)", "exists x. exists y. (x != y & NobelPrizeRecipient(x) & NobelPrizeRecipient(y) & ContributedTo(PoleDancing, x) & ContributedTo(PoleDancing, y))", "NobelPrizeRecipient(DonaldKnuth) & NobelPrizeRecipient(MarvinMinsky) & NobelPrizeRecipient(RichardHamming) & NobelPrizeRecipient(JohnMcCarthy)", "IgnoredBy(DonaldKnuth, AnalysisOfAlgorithms)", "RecognizedFor(MarvinMinsky, PoleDancing)", "HatedBy(RichardHamming, NumericalMethods)", "ContributedTo(PoleDancing, JohnMcCarthy)"], "conclusion": "exists x. exists y. (x != y & NobelPrizeRecipient(x) & NobelPrizeRecipient(y) & ContributedTo(PoleDancing, x) & ContributedTo(PoleDancing, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributedTo/2, ContributedTo/0, NobelPrizeRecipient/1, NobelPrizeRecipient/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributedTo/2, ContributedTo/0, NobelPrizeRecipient/1, NobelPrizeRecipient/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributedTo/2, ContributedTo/0, NobelPrizeRecipient/1, NobelPrizeRecipient/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributedTo/2, ContributedTo/0, NobelPrizeRecipient/1, NobelPrizeRecipient/0\n"}
{"timestamp": "2025-05-04T17:55:41.733345", "premises": ["\\( \\text{NobelPrize}(DonaldKnuth) \\land \\text{NobelPrize}(MarvinMinsky) \\land \\text{NobelPrize}(RichardHamming) \\land \\text{NobelPrize}(JohnMcCarthy) \\)", "\\( \\text{Ignored}(DonaldKnuth, AnalysisOfAlgorithms) \\)", "\\( \\text{Recognized}(MarvinMinsky, PoleDancing) \\)", "\\( \\text{Hated}(RichardHamming, NumericalMethods) \\)", "\\( \\text{Contributed}(JohnMcCarthy, PoleDancing) \\)"], "conclusion": "\\( (\\text{Recognized}(\\text{x}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{x})) \\lor (\\text{Contributed}(\\text{y}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{y})) \\rightarrow \\text{exists} \\, z, w \\, (z \\neq w \\land \\text{Recognized}(z, \\text{PoleDancing}) \\land \\text{NobelPrize}(z) \\land \\text{Recognized}(w, \\text{PoleDancing}) \\land \\text{NobelPrize}(w)) \\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( (\\text{Recognized}(\\text{x}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{x})) \\lor (\\text{Contributed}(\\text{y}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{y})) \\rightarrow \\text{exists} \\, z, w \\, (z \\neq w \\land \\text{Recognized}(z, \\text{PoleDancing}) \\land \\text{NobelPrize}(z) \\land \\text{Recognized}(w, \\text{PoleDancing}) \\land \\text{NobelPrize}(w)) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( (\\text{Recognized}(\\text{x}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{x})) \\lor (\\text{Contributed}(\\text{y}, \\text{PoleDancing}) \\land \\text{NobelPrize}(\\text{y})) \\rightarrow \\text{exists} \\, z, w \\, (z \\neq w \\land \\text{Recognized}(z, \\text{PoleDancing}) \\land \\text{NobelPrize}(z) \\land \\text{Recognized}(w, \\text{PoleDancing}) \\land \\text{NobelPrize}(w)) \\)\n ^\n"}
{"timestamp": "2025-05-04T17:56:01.221354", "premises": ["`WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy)`", "`Ignored(DonaldKnuth, AnalysisOfAlgorithms)`", "`RecognizedFor(MarvinMinsky, PoleDancing)`", "`Hated(RichardHamming, NumericalMethods)`", "`MadeContributionsTo(JohnMcCarthy, PoleDancing)`"], "conclusion": "`exists x. exists y. (x != y & WonNobelPrize(x) & WonNobelPrize(y) & RecognizedFor(x, PoleDancing) & RecognizedFor(y, PoleDancing))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`exists x. exists y. (x != y & WonNobelPrize(x) & WonNobelPrize(y) & RecognizedFor(x, PoleDancing) & RecognizedFor(y, PoleDancing))`\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`exists x. exists y. (x != y & WonNobelPrize(x) & WonNobelPrize(y) & RecognizedFor(x, PoleDancing) & RecognizedFor(y, PoleDancing))`\n        ^\n"}
{"timestamp": "2025-05-04T17:56:38.104626", "premises": ["NobelPrizeRecipient(DonaldKnuth) & NobelPrizeRecipient(MarvinMinsky) & NobelPrizeRecipient(RichardHamming) & NobelPrizeRecipient(JohnMcCarthy)", "IgnoredContributions(DonaldKnuth, AnalysisOfAlgorithms)", "RecognizedForContributions(MarvinMinsky, PoleDancing)", "Hated(NicholasJWolfram, NumericalMethods)", "MadeContributions(JohnMcCarthy, PoleDancing)"], "conclusion": "atLeastTwoX. (NobelPrizeRecipient(X) & WorkedInPoleDancing(X))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\natLeastTwoX. (NobelPrizeRecipient(X) & WorkedInPoleDancing(X))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\natLeastTwoX. (NobelPrizeRecipient(X) & WorkedInPoleDancing(X))\n           ^\n"}
{"timestamp": "2025-05-04T17:56:41.653063", "premises": ["WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy)", "Ignored(DonaldKnuth, AnalysisOfAlgorithms)", "RecognizedFor(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "ContributedTo(JohnMcCarthy, PoleDancing)", "all x. (WonNobelPrize(x) -> -(Hated(x, NumericalMethods)))"], "conclusion": "no x. (WonNobelPrize(x) & Hated(x, NumericalMethods))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nno x. (WonNobelPrize(x) & Hated(x, NumericalMethods))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nno x. (WonNobelPrize(x) & Hated(x, NumericalMethods))\n   ^\n"}
{"timestamp": "2025-05-04T17:57:11.223920", "premises": ["\\( \\text{NobelPrizeWinner}(DonaldKnuth) \\land \\text{NobelPrizeWinner}(MarvinMinsky) \\land \\text{NobelPrizeWinner}(RichardHamming) \\land \\text{NobelPrizeWinner}(JohnMcCarthy) \\)", "\\( \\text{Ignored}(DonaldKnuth, AnalysisOfAlgorithms) \\)", "\\( \\text{RecognizedFor}(MarvinMinsky, PoleDancing) \\)", "\\( \\text{Hated}(RichardHamming, NumericalMethods) \\)", "\\( \\text{MadeContributions}(JohnMcCarthy, PoleDancing) \\)"], "conclusion": "\\( \\forall x. (\\text{NobelPrizeWinner}(x) \\rightarrow -\\text{Hated}(x, NumericalMethods)) \\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\forall x. (\\text{NobelPrizeWinner}(x) \\rightarrow -\\text{Hated}(x, NumericalMethods)) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\forall x. (\\text{NobelPrizeWinner}(x) \\rightarrow -\\text{Hated}(x, NumericalMethods)) \\)\n ^\n"}
{"timestamp": "2025-05-04T17:59:23.275462", "premises": ["`Dendrobium(BulbophyllumAttenuatum)`", "`all x. (Dendrobium(x) -> Animal(x))`", "`-Animal(BulbophyllumAttenuatum)`", "Dendrobium(BulbophyllumAttenuatum)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Dendrobium(BulbophyllumAttenuatum)`\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Dendrobium(BulbophyllumAttenuatum)`\n                                   ^\n"}
{"timestamp": "2025-05-04T17:59:57.198809", "premises": ["IsInGenus(BulbophyllumAttenuatum, Dendrobium)", "all x. (IsInGenus(x, Dendrobium) -> IsAnimal(x))"], "conclusion": "~IsAnimal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~IsAnimal(BulbophyllumAttenuatum).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~IsAnimal(BulbophyllumAttenuatum).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:00:05.458217", "premises": ["\\( \\text{In}(BulbophyllumAttenuatum, Dendrobium) \\)", "\\( \\forall x \\, (\\text{Dendrobium}(x) \\rightarrow \\text{Animal}(x)) \\)", "\\( \\neg \\text{Animal}(BulbophyllumAttenuatum) \\)", "In(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\text{In}(BulbophyllumAttenuatum, Dendrobium) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\text{In}(BulbophyllumAttenuatum, Dendrobium) \\)\n ^\n"}
{"timestamp": "2025-05-04T18:00:19.245886", "premises": ["`InGenus(BulbophyllumAttenuatum, Dendrobium)`", "`all x. (InGenus(x, Dendrobium) -> Animal(x))`", "`-Animal(BulbophyllumAttenuatum)`", "InGenus(BulbophyllumAttenuatum, Dendrobium)", "all x. (InGenus(x, Dendrobium) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`InGenus(BulbophyllumAttenuatum, Dendrobium)`\n                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`InGenus(BulbophyllumAttenuatum, Dendrobium)`\n                                            ^\n"}
{"timestamp": "2025-05-04T18:01:17.263817", "premises": ["ChineseSurname(Giordano)", "UsesSurname(AlbaRoversi, Giordano)", "UsesSurname(PaoloRoversi, Giordano)", "UsesSurname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(UsesSurname(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UsesSurname/2, UsesSurname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: UsesSurname/2, UsesSurname/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UsesSurname/2, UsesSurname/1.\n\n\nFatal error:  The following symbols are used with multiple arities: UsesSurname/2, UsesSurname/1\n"}
{"timestamp": "2025-05-04T18:01:52.181873", "premises": ["`all x. (ChineseSurname(Giordano) -> True)`", "`UsesSurname(AlbaRoversi, Giordano)`", "`UsesSurname(PaoloRoversi, Giordano)`", "`UsesSurname(RobertoRoversi, Giordano)`", "`Astronaut(PaoloRoversi)`", "`all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))`"], "conclusion": "`UsesChineseSurname(AlbaRoversi)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`UsesChineseSurname(AlbaRoversi)`\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`UsesChineseSurname(AlbaRoversi)`\n                                ^\n"}
{"timestamp": "2025-05-04T18:02:32.163434", "premises": ["`HeavyCruiser(USS_Salem) & DestroyedBy(USS_Salem, UnitedStatesNavy)`", "`lastHeavyCruiserToSink(x) <-> USS_Salem` (assuming_`lastHeavyCruiserToSink`_is_a_predicate_that_holds_only_for_the_USS_Salem)", "`Battleship(USS_Salem)`", "`all x. (Battleship(x) -> ClosedToPublic(x))`", "`SankIn(USS_Salem, Atlantic) & SankIn(USS_Salem, Mediterranean)`", "`ClosedToPublic(USS_Salem)`", "HeavyCruiser(USS_Salem) & DestroyedBy(USS_Salem, UnitedStatesNavy)", "lastHeavyCruiserToSink(x) <-> USS_Salem", "Battleship(USS_Salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "SankIn(USS_Salem, Atlantic) & SankIn(USS_Salem, Mediterranean)"], "conclusion": "ClosedToPublic(USS_Salem)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`HeavyCruiser(USS_Salem) & DestroyedBy(USS_Salem, UnitedStatesNavy)`\n                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`HeavyCruiser(USS_Salem) & DestroyedBy(USS_Salem, UnitedStatesNavy)`\n                                                                   ^\n"}
{"timestamp": "2025-05-04T18:04:02.259479", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:04.105045", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:05.948432", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:07.791395", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:09.636571", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:11.455031", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:13.300497", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:26.658558", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThreeAlbum)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThreeAlbum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-04T18:04:48.496298", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumesRapAlbum(x))", "ConsumesRapAlbum(Tyga, \"Well_Done_Three\")", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRapAlbum/2, ConsumesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRapAlbum/2, ConsumesRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRapAlbum/2, ConsumesRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRapAlbum/2, ConsumesRapAlbum/1\n"}
{"timestamp": "2025-05-04T18:05:14.371515", "premises": ["all x. all y. (Occurs(Virus(x), Being(y)) -> MayGet(AIDS, Being(y)))", "exists x. (Virus(x) & Occurs(x, Plant))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "AIDS -> (Symptom(Fever) & Symptom(Headache) & Symptom(MusclePains) & Symptom(Energizedness))", "Flu -> Energized"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Virus/1, AIDS/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Virus/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Virus/1, AIDS/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Virus/1, AIDS/0\n"}
{"timestamp": "2025-05-04T18:05:21.874007", "premises": ["all x. (MonkeypoxVirus(x) -> MayGet(x, AIDS))", "exists x. (MonkeypoxVirus(x) & Plant(x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Febrile(x) & Headache(x) & MusclePain(x) & Energized(x)))", "all x. (Flu(x) -> Energized(x))", "exists x. (Unicorn(x))", "all x. (MonkeypoxVirus(x) -> MayGet(x, AIDS))", "exists x. (MonkeypoxVirus(x) & Plant(x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Febrile(x) & Headache(x) & MusclePain(x) & Energized(x)))", "all x. (Flu(x) -> Energized(x))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-04T18:05:32.233072", "premises": ["\\( \\forall x \\, (MonkeypoxVirusOccurs(x) \\rightarrow MayGetAIDS(x)) \\)", "\\( \\exists x \\, (Plant(x) \\land MonkeypoxVirusOccurs(x)) \\)", "\\( \\forall x \\, (Human(x) \\rightarrow Plant(x)) \\)", "\\( \\forall x \\, (Plant(x) \\rightarrow Unicorn(x)) \\)", "\\( \\forall x \\, (AIDS(x) \\rightarrow (Fever(x) \\land Headache(x) \\land MusclePain(x) \\land Energizedness(x))) \\)", "\\( \\forall x \\, (Human(x) \\land Flu(x) \\rightarrow Energizedness(x)) \\)"], "conclusion": "\\( \\exists x \\, Unicorn(x) \\)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\exists x \\, Unicorn(x) \\)\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '(' is an illegal variable name.  Constants may not be abstracted.\n\\( \\exists x \\, Unicorn(x) \\)\n ^\n"}
{"timestamp": "2025-05-04T18:05:42.215181", "premises": ["all x. (Monkeypox(x) -> MayGet(x, AIDS))", "exists x. (Monkeypox(x) & Plant(x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (HasSymptom(x, Fever) & HasSymptom(x, Headache) & HasSymptom(x, MusclePain) & HasSymptom(x, Energized)))", "all x. (Flu(x) -> Energized(x))", "exists x. (Unicorn(x))", "all x. (Monkeypox(x) -> MayGet(x, AIDS))", "exists x. (Monkeypox(x) & Plant(x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (HasSymptom(x, Fever) & HasSymptom(x, Headache) & HasSymptom(x, MusclePain) & HasSymptom(x, Energized)))", "all x. (Flu(x) -> Energized(x))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Energized/1, Energized/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Energized/1, Energized/0, AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Energized/1, Energized/0, AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Energized/1, Energized/0, AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-04T18:07:05.230209", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x)))", "all x. all y. (OutputOf(x, y) & TextSequence(y) -> ObjectIdentificationTask(x))", "NaturalLanguageProcessingTask(MachineTranslation)", "OutputOf(MachineTranslation, TextSequence)"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TextSequence/1, TextSequence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TextSequence/1, TextSequence/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TextSequence/1, TextSequence/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TextSequence/1, TextSequence/0\n"}
{"timestamp": "2025-05-04T18:07:56.665786", "premises": ["exists x. (Reptile(x) & HasEyes(x))", "exists x. (Platypus(x) & -HasEyes(x))", "exists x. (Platypus(x) -> Reptile(x))", "exists x. (Corgi(x) & HasEyes(x))"], "conclusion": "Platypus(Platypus) & -HasEyes(Platypus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-04T18:08:56.116675", "premises": ["`all x. (Mammal(x) -> LacksHooves(x))`", "`all x. (Human(x) -> -(LacksHooves(x)))`", "`exists x. (Human(x) & Mammal(x))`", "all x. (Mammal(x) -> LacksHooves(x))", "all x. (Human(x) -> -LacksHooves(x))"], "conclusion": "exists x. (Human(x) & Mammal(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Mammal(x) -> LacksHooves(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Mammal(x) -> LacksHooves(x))`\n     ^\n"}
{"timestamp": "2025-05-04T18:09:21.600491", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphereEarth)", "HighlyDevelopedCity(Paris) & ~Exists(x, LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "~In(USA, EasternHemisphereEarth)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%HighlyDevelopedCity(Paris) & ~Exists(x,LivesIn(x,Paris))%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%HighlyDevelopedCity(Paris) & ~Exists(x,LivesIn(x,Paris))%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:09:30.700282", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "City(Paris) & DevelopedCity(Paris) & ~(exists x. Lives(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "~(In(USA, EasternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((City(Paris) & DevelopedCity(Paris)) & ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((City(Paris) & DevelopedCity(Paris)) & ~(%%START ERROR%%exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:09:38.880152", "premises": ["`In(Paris, USA)`", "`PartOf(USA, SouthAmerica)`", "`In(SouthAmerica, EasternHemisphere)`", "`HighlyDevelopedCity(Paris) & NoOneLivesIn(Paris)`", "`all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))`", "`-(In(USA, EasternHemisphere))`", "In(Paris, USA)", "PartOf(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & NoOneLivesIn(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-(In(USA, EasternHemisphere))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`In(Paris, USA)`\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`In(Paris, USA)`\n               ^\n"}
{"timestamp": "2025-05-04T18:09:54.278324", "premises": ["`In(Paris, USA)`", "`In(USA, SouthAmerica)`", "`In(SouthAmerica, EasternHemisphere)`", "`City(Paris) & Developed(Paris) & ~Exists(x, LivesIn(x, Paris))`", "`all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))`"], "conclusion": "`~In(USA, EasternHemisphere)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`~In(USA, EasternHemisphere)`\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`~In(USA, EasternHemisphere)`\n                            ^\n"}
{"timestamp": "2025-05-04T18:10:05.091311", "premises": ["`In(Paris, USA)`", "`In(USA, SouthAmerica)`", "`In(SouthAmerica, EasternHemisphere)`", "`HighlyDevelopedCity(Paris) & \u00acExists(x)(LivesIn(x, Paris))`", "`all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))`"], "conclusion": "`\u00acIn(USA, EasternHemisphere)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`\u00acIn(USA, EasternHemisphere)`\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`\u00acIn(USA, EasternHemisphere)`\n                            ^\n"}
{"timestamp": "2025-05-04T18:10:11.195007", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphereEarth)", "HighlyDevelopedCity(Paris) & ~Exists(x)(LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))", "~(In(USA, EasternHemisphereEarth))", "In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphereEarth)", "HighlyDevelopedCity(Paris) & ~Exists(x)(LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "~In(USA, EasternHemisphereEarth)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%HighlyDevelopedCity(Paris) & ~Exists(x,LivesIn(x,Paris))%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%HighlyDevelopedCity(Paris) & ~Exists(x,LivesIn(x,Paris))%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:10:13.933790", "premises": ["In(Paris, USA)", "PartOf(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "(HighlyDevelopedCity(Paris) & NotExists(Person(x) & LivesIn(x, Paris)))", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "-In(USA, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(HighlyDevelopedCity(Paris) & NotExists(Person(x) & LivesIn(x, Paris)))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(HighlyDevelopedCity(Paris) & NotExists(Person(x) & LivesIn(x, Paris)))\n                                                  ^\n"}
{"timestamp": "2025-05-04T18:10:21.212590", "premises": ["In(Paris, USA)", "In(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & \u2200x.(LivesIn(x, Paris) -> False)", "\u2200A.\u2200B.\u2200C.((In(A, B) & In(B, C)) -> In(A, C))"], "conclusion": "\u00acIn(USA, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\nHighlyDevelopedCity(Paris) & \u2200x.(LivesIn(x, Paris) -> False)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\nHighlyDevelopedCity(Paris) & \u2200x.(LivesIn(x, Paris) -> False)\n                               ^\n"}
{"timestamp": "2025-05-04T18:11:10.140908", "premises": ["\\[", "\\[", "\\[", "\\[", "\\[", "\\[", "\\[", "\\[", "\\[", "\\[", "all x. (EatsEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Animal(x))", "all x. (Echidna(x) -> -Animal(x))", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "all x. (Grebe(x) -> EatsEggs(x))", "all x. (Grebe(x) -> (-Platypus(x) & -Echidna(x)))"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 309, in handle\n    return self.handle_lambda(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 382, in handle_lambda\n    vars = [self.get_next_token_variable(\"abstracted\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '[' is an illegal variable name.  Constants may not be abstracted.\n\\[\n ^\n"}
{"timestamp": "2025-05-04T18:12:24.760964", "premises": ["`all x. (Bird(x) & EatsEgg(x) -> (Platypus(x) | Echidna(x)))`", "`all x. (Platypus(x) -> -Animal(x))`", "`all x. (Echidna(x) -> -Animal(x))`", "`all x. (Bird(x) -> -Vertebrate(x))`", "`all x. (Plant(x) -> Vertebrate(x))` (Redundant)", "`all x. (Bird(x) -> Plant(x))`", "`all x. (Animal(x) -> Bird(x))`", "`exists x. (Grebe(x) & EatsEgg(x))`", "`all x. (Grebe(x) -> -(Platypus(x) | Echidna(x)))`"], "conclusion": "`-Bird(Grebe)`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.\n`-Bird(Grebe)`\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.\n`-Bird(Grebe)`\n ^\n"}
{"timestamp": "2025-05-04T18:12:33.587633", "premises": ["`\u00acall x. (Human(x) -> Moves(x))`", "`all x. (Moves(x) -> Breathes(x))`", "`exists x. (Human(x) & \u00acBreathes(x))`", "\u00acall x. (Human(x) -> Moves(x))", "all x. (Moves(x) -> Breathes(x))"], "conclusion": "exists x. (Human(x) & \u00acBreathes(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`\u00acall x. (Human(x) -> Moves(x))`\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`\u00acall x. (Human(x) -> Moves(x))`\n      ^\n"}
{"timestamp": "2025-05-04T18:15:20.839482", "premises": ["Medication(Acetaminophen) & Discovered(Acetaminophen, OneNineFourSeven)", "Treats(Acetaminophen, Fever)", "PreferredTreatment(Fever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Acetaminophen, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-05-04T18:15:27.687923", "premises": ["Medication(Acetaminophen) & DiscoveredIn(Acetaminophen, OneNineFourSeven)", "CanBeUsedTo(Acetaminophen, Treat, Fever)", "only x. (PreferredTreatmentFor(Fever, x) -> Is(x, Chocolate))", "-Is(Acetaminophen, Chocolate)"], "conclusion": "-PreferredTreatmentFor(Fever, Acetaminophen)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (PreferredTreatmentFor(Fever, x) -> Is(x, Chocolate))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (PreferredTreatmentFor(Fever, x) -> Is(x, Chocolate))\n     ^\n"}
{"timestamp": "2025-05-04T18:15:52.971260", "premises": ["Medication(Acetaminophen) & YearDiscovered(Acetaminophen, OneNineFourSeven)", "CanUse(Acetaminophen, TreatFever)", "exists x. (PreferredTreatment(x, Fever) & (forall y. PreferredTreatment(y, Fever) -> x = Chocolate))", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Acetaminophen, Fever)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-05-04T18:16:16.426134", "premises": ["Medication(acetaminophen) & DiscoveredInYear(acetaminophen, OneNineFourSeven)", "Treats(acetaminophen, Fever)", "exists x. (PreferredTreatment(x, Fever) -> (x_=_Chocolate))", "\u00acChocolate(acetaminophen)"], "conclusion": "\u00acPreferredTreatment(acetaminophen, Fever)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte\n"}
{"timestamp": "2025-05-04T18:16:54.264141", "premises": ["`WorldBestKnownPainting(MonaLisa)`", "`Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)`", "`DancerAndPainter(LeonardoDaVinci)`", "`Genre(Painting, History) & Genre(Painting, Portrait) & Genre(Painting, Animal) & Genre(Painting, Landscape) & Genre(Painting, StillLife)`", "`-(exists x. (WorldBestKnownArtwork(x) & Hair(x)))`", "WorldBestKnownPainting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "DancerAndPainter(LeonardoDaVinci)", "Genre(Painting, History) & Genre(Painting, Portrait) & Genre(Painting, Animal) & Genre(Painting, Landscape) & Genre(Painting, StillLife)"], "conclusion": "-(exists x. (WorldBestKnownArtwork(x) & Hair(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`WorldBestKnownPainting(MonaLisa)`\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`WorldBestKnownPainting(MonaLisa)`\n                                 ^\n"}
{"timestamp": "2025-05-04T18:17:04.397150", "premises": ["`WorldBestKnownPainting(MonaLisa)`", "`Hair(MonaLisa) & ExtractedBy(MonaLisa, DaVinci)`", "`Dancer(DaVinci) & Painter(DaVinci)`", "`Genre(Painting, History) & Genre(Painting, Portrait) & Genre(Painting, Animal) & Genre(Painting, Landscape) & Genre(Painting, StillLife)`"], "conclusion": "`all x. (WorldBestKnownArtwork(x) -> -Hair(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (WorldBestKnownArtwork(x) -> -Hair(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (WorldBestKnownArtwork(x) -> -Hair(x))`\n     ^\n"}
{"timestamp": "2025-05-04T18:17:44.132463", "premises": ["WorldBestKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "DancerAndPainter(LeonardoDaVinci)", "(Genre(Painting, History) | Genre(Painting, Portrait) | Genre(Painting, Animal) | Genre(Painting, Landscape) | Genre(Painting, StillLife))", "-all x. (WorldBestKnownArtwork(x) -> Hair(x))", "WorldBestKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "DancerAndPainter(LeonardoDaVinci)", "(Genre(Painting, History) | Genre(Painting, Portrait) | Genre(Painting, Animal) | Genre(Painting, Landscape) | Genre(Painting, StillLife))"], "conclusion": "-all x. (WorldBestKnownArtwork(x) -> Hair(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painting/1, Painting/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painting/1, Painting/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painting/1, Painting/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painting/1, Painting/0\n"}
{"timestamp": "2025-05-04T18:17:50.709769", "premises": ["`Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)`", "`HasAnimals(NationalLobsterHatchery)`", "`all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))`", "`all x. (Hatchery(x) & ForDestruction(x) -> MightReleaseAnimalsIntoWild(x))`", "`~ForProfit(NationalLobsterHatchery)`"], "conclusion": "`all x. (Hatchery(x) -> HasAnimals(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Hatchery(x) -> HasAnimals(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Hatchery(x) -> HasAnimals(x))`\n     ^\n"}
{"timestamp": "2025-05-04T18:17:59.975569", "premises": ["Hatchery(NationalLobsterHatchery) & Location(NationalLobsterHatchery, Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. (Hatchery(x) & ForDestruction(x) -> MightReleaseIntoWild(x))", "~ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~ForProfit(NationalLobsterHatchery).%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%~ForProfit(NationalLobsterHatchery).%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:18:26.826000", "premises": ["`Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)`", "`HasAnimals(NationalLobsterHatchery)`", "`all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))`", "`all x. (Hatchery(x) & ForDestruction(x) -> MightReleaseIntoWild(x))`", "`~ForProfit(NationalLobsterHatchery)`", "`all x. (Hatchery(x) -> HasAnimals(x))`", "Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. (Hatchery(x) & ForDestruction(x) -> MightReleaseIntoWild(x))", "~ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)`\n                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)`\n                                                                                         ^\n"}
{"timestamp": "2025-05-04T18:18:32.569655", "premises": ["NationalLobsterHatchery(Hatchery) & Location(Hatchery, Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "all x. (Hatchery(x) -> (ForProfit(x) | ForDestruction(x)))", "all x. (ForDestruction(x) -> MightReleaseIntoWild(x))", "NotForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0, Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0, Hatchery/1, Hatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0, Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NationalLobsterHatchery/1, NationalLobsterHatchery/0, Hatchery/1, Hatchery/0\n"}
{"timestamp": "2025-05-04T18:18:42.267738", "premises": ["all x. (Hungry(x) -> Satisfied(x))", "Expression('forall', ['x'], Expression(_>, hungry, satisfied))", "all x. (Satisfied(x) -> Starving(x))", "Expression('forall', ['x'], Expression(_>, satisfied, starving))", "all x. (-Hungry(x) -> Starving(x))"], "conclusion": "Expression('forall', ['x'], Expression('->', Expression(not, hungry), starving))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nExpression('forall', ['x'], Expression('->', Expression(not, hungry), starving))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 357, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nExpression('forall', ['x'], Expression('->', Expression(not, hungry), starving))\n                                        ^\n"}
{"timestamp": "2025-05-04T18:19:09.755353", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-04T18:19:15.640374", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-04T18:19:24.430692", "premises": ["{P1}", "{P2}"], "conclusion": "{C}", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    {%%END ERROR%%P1}.\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    {%%END ERROR%%P1}.\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:19:25.796952", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-04T18:19:30.128900", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))", "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-(exists x. (Caterpillar(x) & Becomes(x, Butterfly)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-04T18:19:50.820984", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-04T18:20:30.176497", "premises": ["(WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy))", "MadeContributionsToScience(DonaldKnuth)", "MadeContributionsToFieldOfPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "MadeContributionsToFieldOfPoleDancing(JohnMcCarthy)", "(ExactlyOnePersonX((WonNobelPrize(X) & MadeContributionsToScience(X))))", "def Predicate(WonNobelPrize, Object) -> bool", "def Predicate(MadeContributionsToScience, Object) -> bool", "def Predicate(MadeContributionsToFieldOfPoleDancing, Object) -> bool", "def Predicate(HatedNumericalMethods, Object) -> bool", "WonNobelPrize(DonaldKnuth)", "WonNobelPrize(MarvinMinsky)", "WonNobelPrize(RichardHamming)", "WonNobelPrize(JohnMcCarthy)", "MadeContributionsToScience(DonaldKnuth)", "MadeContributionsToFieldOfPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "MadeContributionsToFieldOfPoleDancing(JohnMcCarthy)"], "conclusion": "ExactlyOnePersonX((WonNobelPrize(X) & MadeContributionsToScience(X)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Predicate'.\ndef Predicate(WonNobelPrize, Object) -> bool\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Predicate'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Predicate'.\ndef Predicate(WonNobelPrize, Object) -> bool\n    ^\n"}
{"timestamp": "2025-05-04T18:20:38.194300", "premises": ["WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy)", "MadeContributionsToScience(DonaldKnuth)", "RecognizedForContributionsToPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "MadeContributionsToPoleDancing(JohnMcCarthy)"], "conclusion": "ExactlyOne(X, (WonNobelPrize(X) & MadeContributionsToScience(X)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsToScience/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsToScience/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsToScience/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WonNobelPrize/1, MadeContributionsToScience/1\n"}
{"timestamp": "2025-05-04T18:21:02.493532", "premises": ["(NobelPrizeRecipient(DonaldKnuth) & NobelPrizeRecipient(MarvinMinsky) & NobelPrizeRecipient(RichardHamming) & NobelPrizeRecipient(JohnMcCarthy))", "(NobelPrizeRecipient(DonaldKnuth) -> MadeContributionsToScience(DonaldKnuth))", "(NobelPrizeRecipient(MarvinMinsky) -> MadeContributionsToPoleDancing(MarvinMinsky))", "(NobelPrizeRecipient(RichardHamming) -> HatedNumericalMethods(RichardHamming))", "(NobelPrizeRecipient(JohnMcCarthy) -> MadeContributionsToPoleDancing(JohnMcCarthy))"], "conclusion": "(ExactlyOnePerson(x. (NobelPrizeRecipient(x) & MadeContributionsToScience(x))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n(ExactlyOnePerson(x. (NobelPrizeRecipient(x) & MadeContributionsToScience(x))))\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n(ExactlyOnePerson(x. (NobelPrizeRecipient(x) & MadeContributionsToScience(x))))\n                   ^\n"}
{"timestamp": "2025-05-04T18:21:08.039165", "premises": ["WonNobelPrize(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & WonNobelPrize(RichardHamming) & WonNobelPrize(JohnMcCarthy)", "MadeContributionsToScience(DonaldKnuth)", "RecognizedForContributionsToFieldOfPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "MadeContributionsToFieldOfPoleDancing(JohnMcCarthy)", "exists x. (WonNobelPrize(x) & MadeContributionsToScience(x) & forall y. (WonNobelPrize(y) & (y_!=_x) -> -MadeContributionsToScience(y)))"], "conclusion": "(WonNobelPrize(DonaldKnuth) & MadeContributionsToScience(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & RecognizedForContributionsToFieldOfPoleDancing(MarvinMinsky) & WonNobelPrize(RichardHamming) & HatedNumericalMethods(RichardHamming) & WonNobelPrize(JohnMcCarthy) & MadeContributionsToFieldOfPoleDancing(JohnMcCarthy) & (exists x. (WonNobelPrize(x) & MadeContributionsToScience(x) & forall y. (WonNobelPrize(y) & (y_!=_x) -> -MadeContributionsToScience(y))))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n(WonNobelPrize(DonaldKnuth) & MadeContributionsToScience(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & RecognizedForContributionsToFieldOfPoleDancing(MarvinMinsky) & WonNobelPrize(RichardHamming) & HatedNumericalMethods(RichardHamming) & WonNobelPrize(JohnMcCarthy) & MadeContributionsToFieldOfPoleDancing(JohnMcCarthy) & (exists x. (WonNobelPrize(x) & MadeContributionsToScience(x) & forall y. (WonNobelPrize(y) & (y_!=_x) -> -MadeContributionsToScience(y))))\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n(WonNobelPrize(DonaldKnuth) & MadeContributionsToScience(DonaldKnuth) & WonNobelPrize(MarvinMinsky) & RecognizedForContributionsToFieldOfPoleDancing(MarvinMinsky) & WonNobelPrize(RichardHamming) & HatedNumericalMethods(RichardHamming) & WonNobelPrize(JohnMcCarthy) & MadeContributionsToFieldOfPoleDancing(JohnMcCarthy) & (exists x. (WonNobelPrize(x) & MadeContributionsToScience(x) & forall y. (WonNobelPrize(y) & (y_!=_x) -> -MadeContributionsToScience(y))))\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\n"}
{"timestamp": "2025-05-04T18:21:20.055985", "premises": ["NobelPrizeWinner(DonaldKnuth) & NobelPrizeWinner(MarvinMinsky) & NobelPrizeWinner(RichardHamming) & NobelPrizeWinner(JohnMcCarthy)", "ContributedToScience(DonaldKnuth)", "ContributedToPoleDancing(MarvinMinsky)", "HatedNumericalMethods(RichardHamming)", "ContributedToPoleDancing(JohnMcCarthy)"], "conclusion": "OnlyOnePerson(DonaldKnuth, MarvinMinsky, RichardHamming, JohnMcCarthy, ContributedToScience)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributedToScience/1, ContributedToScience/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributedToScience/1, ContributedToScience/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributedToScience/1, ContributedToScience/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributedToScience/1, ContributedToScience/0\n"}
{"timestamp": "2025-05-04T18:22:20.435504", "premises": ["all x. (AcademicPaper(x) -> FirstAuthorDesign(x) & FirstAuthorWrite(x))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> OriginallyNotAlignedWithHighSchoolCurricula(x))", "AdjustmentsWereMadeToAlignWithHighSchoolCurriculum()"], "conclusion": "all x. (AcademicPaper(x) -> (FirstAuthorWrite(x) & WrittenByOthers(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nAdjustmentsWereMadeToAlignWithHighSchoolCurriculum()\n                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nAdjustmentsWereMadeToAlignWithHighSchoolCurriculum()\n                                                   ^\n"}
{"timestamp": "2025-05-04T18:22:51.038772", "premises": ["all x. (AcademicPaper(x) -> (FirstAuthorWrites(x) & FirstAuthorDesigns(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> (OriginallyDesignedNotToAlign(x, HighSchoolCurricula)))", "exists x. (AdjustmentsMade(x) & AlignsWithHighSchoolCurricula(x))", "all x. (AcademicPaper(x) -> (FirstAuthorWrites(x) & exists y. (FirstAuthor(y) & y != FirstAuthor(x) & Writes(y, x))))"], "conclusion": "all x. (AcademicPaper(x) -> (FirstAuthorWrites(x) & exists y. (FirstAuthor(y) & y != FirstAuthor(x) & Writes(y, x))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FirstAuthor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FirstAuthor/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: FirstAuthor/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: FirstAuthor/1\n"}
{"timestamp": "2025-05-04T18:23:35.341137", "premises": ["all x. (ChineseSurname(x) -> Giordano(x))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-05-04T18:23:38.197175", "premises": ["all x. (ChineseSurname(x) -> (x_=_\"Giordano\"))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:23:43.887424", "premises": ["all x. (ChineseSurname(x) -> (x_=_\"Giordano\"))", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:23:53.012055", "premises": ["all x. (ChineseSurname(x) -> (x_=_\"Giordano\"))", "usesSurname(AlbaRoversi, Giordano)", "usesSurname(PaoloRoversi, Giordano)", "usesSurname(RobertoRoversi, Giordano)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (FashionPhotographer(x) | DolphinPhotographer(x)))", "FashionPhotographer(PaoloRoversi)"], "conclusion": "FashionPhotographer(PaoloRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (ChineseSurname(x) -> (%%START ERROR%%x_ = _\"Giordano\"%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:24:23.305795", "premises": ["`Astronaut(Tyga)`", "`all x. (Astronaut(x) -> Consumes(x, RockAlbums))`", "`Consumes(Tyga, WellDoneThree)`", "`all x. (Astronaut(x) -> -OperaSinger(x))`", "`Released(WellDoneThree)`", "Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbums))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Released(WellDoneThree)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '`'.\n`Astronaut(Tyga)`\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '`'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '`'.\n`Astronaut(Tyga)`\n                ^\n"}
{"timestamp": "2025-05-04T18:24:32.743244", "premises": ["`all x. (Mammal(x) -> -Breathes(x))`", "`exists x. (Bird(x) & Mammal(x))`"], "conclusion": "`all x. (Bird(x) -> Breathes(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (Bird(x) -> Breathes(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (Bird(x) -> Breathes(x))`\n     ^\n"}
{"timestamp": "2025-05-04T18:25:00.896677", "premises": ["`all x. (CanTransportMultiplePassengers(x) -> -IsOneSeater(x))`", "`all x. (Corgi(x) -> CanTransportMultiplePassengers(x))`", "`all x. (SingleSeatElectricCar(x) -> IsOneSeater(x))`", "`all x. (SoloEVCar(x) -> SingleSeatElectricCar(x))`", "`QueenDogs(x) & -Corgi(x) -> -(QueenDogs(x) & Corgi(x)) & -(QueenDogs(x) & SingleSeatElectricCar(x))`"], "conclusion": "`all x. (QueenDogs(x) -> Corgi(x))`", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n`all x. (QueenDogs(x) -> Corgi(x))`\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n`all x. (QueenDogs(x) -> Corgi(x))`\n     ^\n"}
