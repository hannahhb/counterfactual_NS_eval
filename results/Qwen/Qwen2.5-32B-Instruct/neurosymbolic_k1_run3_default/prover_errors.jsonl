{"timestamp": "2025-04-29T00:53:11.446995", "premises": ["PrehistoricBirdGenus(Ambiortus)", "UniqueSpecies(AmbiortusDementjevi, Ambiortus)", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Exists x. (Discoverer(YevgenyKurochkin, x) & BirdGenus(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Discoverer(YevgenyKurochkin, x) & BirdGenus(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Discoverer(YevgenyKurochkin, x) & BirdGenus(x))\n       ^\n"}
{"timestamp": "2025-04-29T00:53:23.774601", "premises": ["CurrentName(FortTiconderoga, FortCarillon)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-LocatedIn(NewFrance, Europe)"], "conclusion": "Exists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T00:53:40.540754", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T00:53:48.445555", "premises": ["Series(Westworld, American, ScienceFictionThriller)", "Debut(Westworld, Year2016, On(HBO))", "AdaptedFrom(WestworldTV, FilmWestworldOneNineSevenThree) & WrittenBy(FilmWestworldOneNineSevenThree, MichaelCrichton) & DirectedBy(FilmWestworldOneNineSevenThree, MichaelCrichton)", "About(FilmWestworldOneNineSevenThree, RobotsThatMalfunctionAndKillHumanVisitors)"], "conclusion": "Exists x. (DirectedBy(MichaelCrichton, x) & About(x, RobotsThatMalfunction))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & About(x, RobotsThatMalfunction))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & About(x, RobotsThatMalfunction))\n       ^\n"}
{"timestamp": "2025-04-29T00:53:56.678954", "premises": ["(District(Xiufeng, Guilin) & District(Xiangshan, Guilin) & District(Diecai, Guilin) & District(Qixing, Guilin))", "-District(Yangshuo, Guilin)", "SameCity(District(Xiangshan, Guilin), District(Diecai, Guilin))"], "conclusion": "SameCity(Xiangshan, Diecai)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2\n"}
{"timestamp": "2025-04-29T00:54:42.497001", "premises": ["exists x. (GermanSingle(x) & NumberOne(x) & By(BoneyM, x))", "BigHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", Europe)", "-GermanSingle(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "all x. (PeaksBelowOne(x, GermanCharts) <-> -NumberOne(x))"], "conclusion": "PeaksBelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanCharts)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelowOne(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanCharts)\n                     ^\n"}
{"timestamp": "2025-04-29T00:55:18.780246", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-04-29T00:55:48.743019", "premises": ["Leader(DengXiaoping, Paramount, PeoplesRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReturnOfHongKong) & Praised(DengXiaoping, ReturnOfMacau)", "(SecretaryGeneralUnder(DengXiaoping, Mao) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> PresideOver(DengXiaoping, AntiRightistCampaign)", "Instrumental(DengXiaoping, EconomicReconstruction, PostGreatLeapForward)", "Died(MaoZedong, OneNineSevenSix)", "(Died(MaoZedong) -> GraduallyRiseToPower(DengXiaoping, Supreme))"], "conclusion": "(Instrumental(x, EconomicReconstruction, PostGreatLeapForward) -> GraduallyRiseToPower(x, Supreme))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Died/1, Died/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Died/1, Died/2\n"}
{"timestamp": "2025-04-29T00:57:19.340011", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberOfGoals, y, UCLFinal, RegularTime) -> NeedPlay(x, y, ExtraTime))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberOfGoals, y, UCLFinal, RegularTime) & Score(x, SameNumberOfGoals, y, UCLFinal, ExtraTime) -> NeedPlay(x, y, PenaltyShootOut))", "Score(RealMadrid, OneGoal, TwoZeroOneSixUCLFinal, RegularTime) & Score(AtleticoMadrid, OneGoal, TwoZeroOneSixUCLFinal, RegularTime)", "Score(RealMadrid, ZeroGoals, TwoZeroOneSixUCLFinal, ExtraTime) & Score(AtleticoMadrid, ZeroGoals, TwoZeroOneSixUCLFinal, ExtraTime)"], "conclusion": "NeedPlay(RealMadrid, AtleticoMadrid, PenaltyShootOut, TwoZeroOneSixUCLFinal)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Score/4, Score/5, NeedPlay/3, NeedPlay/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Score/4, Score/5, NeedPlay/3, NeedPlay/4", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Score/4, Score/5, NeedPlay/3, NeedPlay/4.\n\n\nFatal error:  The following symbols are used with multiple arities: Score/4, Score/5, NeedPlay/3, NeedPlay/4\n"}
{"timestamp": "2025-04-29T00:57:31.716283", "premises": ["all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & ScoreSame(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> NeedPenaltyShootOut(x, y))", "Score(SoccerTeam(RealMadrid), 2016UCLFinal, OneGoal, RegularTime) & Score(SoccerTeam(Atl\u00e9ticoMadrid), 2016UCLFinal, OneGoal, RegularTime)", "Score(SoccerTeam(RealMadrid), 2016UCLFinal, ZeroGoals, ExtraTime) & Score(SoccerTeam(Atl\u00e9ticoMadrid), 2016UCLFinal, ZeroGoals, ExtraTime)"], "conclusion": "-NeedPenaltyShootOut(SoccerTeam(RealMadrid), SoccerTeam(Atl\u00e9ticoMadrid), 2016UCLFinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 684: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 684: invalid continuation byte\n"}
{"timestamp": "2025-04-29T00:59:09.019767", "premises": ["ItalianSurname(Roversi)", "SurnameOf(AlbaRoversi, Roversi)", "SurnameOf(PaoloRoversi, Roversi)", "SurnameOf(RobertoRoversi, Roversi)", "Photographer(PaoloRoversi)", "all x. (Photographer(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ItalianSurname(SurnameOf(AlbaRoversi))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1.\n\n\nFatal error:  The following symbols are used with multiple arities: SurnameOf/2, SurnameOf/1\n"}
{"timestamp": "2025-04-29T00:59:25.803025", "premises": ["Rapper(Tyga)", "all x. (Rapper(x) -> Release(x, RapAlbum))", "Release(Tyga, WellDoneThree)", "all x. (Rapper(x) -> -OperaSinger(x))"], "conclusion": "RapAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RapAlbum/1, RapAlbum/0\n"}
{"timestamp": "2025-04-29T00:59:38.331510", "premises": ["all x. all y. (MonkeypoxVirusOccursIn(x, y) -> MayGet(y, Monkeypox))", "exists x. (Animal(x) & MonkeypoxVirusOccursIn(MonkeypoxVirus, x))", "all x. (Human(x) -> Mammal(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Monkeypox(x) -> (Symptom(x, Fever) & Symptom(x, Headache) & Symptom(x, MusclePains) & Symptom(x, Tiredness)))", "all x. (Person(x) & HasFlu(x) -> FeelingTired(x))"], "conclusion": "exists x. (Animal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-04-29T01:00:43.579599", "premises": ["BestKnownPainting(MonaLisa)", "(Portrait(MonaLisa) & PaintedBy(MonaLisa, LeonardoDaVinci))", "(Scientist(LeonardoDaVinci) & Painter(LeonardoDaVinci))", "all x. (Painting(x) -> (Genre(x, History) | Genre(x, Portrait) | Genre(x, Animal) | Genre(x, Landscape) | Genre(x, StillLife)))"], "conclusion": "all x. (BestKnownArtwork(x) -> -Portrait(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Portrait/1, Portrait/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Portrait/1, Portrait/0\n"}
{"timestamp": "2025-04-29T01:00:59.233522", "premises": ["exists x. (Fear(x) & LeadsTo(x, Anxiety))", "exists y. (Anxiety(y) & LeadsTo(y, Terror))"], "conclusion": "all z. (Fear(z) -> -LeadsTo(z, Terror))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Anxiety/1, Anxiety/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Anxiety/1, Anxiety/0\n"}
{"timestamp": "2025-04-29T01:01:07.818385", "premises": ["TuringAward(DonaldKnuth) & TuringAward(MarvinMinsky) & TuringAward(RichardHamming) & TuringAward(JohnMcCarthy)", "ContributionsTo(DonaldKnuth, AnalysisOfAlgorithms)", "ContributionsTo(MarvinMinsky, ArtificialIntelligence)", "ContributionsTo(RichardHamming, NumericalMethods)", "ContributionsTo(JohnMcCarthy, ArtificialIntelligence)"], "conclusion": "exists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: '!' is an illegal variable name.  Constants may not be quantified.\nexists! x. (TuringAward(x) & ContributionsTo(x, AnalysisOfAlgorithms))\n      ^\n"}
