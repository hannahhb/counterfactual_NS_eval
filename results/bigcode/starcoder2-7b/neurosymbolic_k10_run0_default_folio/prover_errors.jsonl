{"timestamp": "2025-05-02T01:05:51.953837", "premises": ["exists x. (MiroslavVenhoda(x) & CzechChoralConductor(x) & SpecializedIn(x, PlayingOfRenaissanceAndBaroqueMusic))", "exists x. (CzechChoralConductor(x) -> Musician(x))", "exists x. ((Musician(x) & -Plays(x, NoMusic)) & Loves(x, Music))", "exists x. (MiroslavVenhoda(x) & Published(x, MethodOfStudyingGregorianChant) & PublishedDate(x, COneNineFourSix))", "Poe(x) & Poet(x)", "ClassicalLiterature(x) & PoeticGenre(x)", "exists x. (Poet(x) & WritesAbout(x, ClassicalLiterature))", "exists x. (Poet(x) & Also(x, Writer))", "Poe(x) & (Also(x, Writer) & Writer(x))", "exists x. exists y. (Wine(x) & Grape(y) & MadeOf(x, y))", "exists x. (Grape(x) & Fruit(x))", "exists x. exists y. (Milk(x) & Cow(y) & MadeOf(x, y))", "exists x. (Cow(x) & Animal(x))", "exists x. (Grape(x) & Cow(x))", "exists x. (Rose(x) & Flower(x))", "exists x. exists y. (Pollen(x) & Part(x, y) & Flower(y))", "exists x. (Wind(x) & Carries(x, pollen) & To(pollen, y) & Flower(y))", "exists x. (Wind(x) & NaturalPhenomenon(x))", "Rose(x) & NaturalPhenomenon(x)", "Element(Helium)", "Element(Hydrogen)", "exists x. exists y. (Atom(x) & Element(y))", "exists x. exists y. (Phonograph(x) & RecordingDevice(x) & In(x, phonographrecord))", "exists x. (PhonographRecord(x) & RecordingOf(x, Sound))", "exists x. exists y. (PhonographRecord(x) & Song(y) & x=y)", "exists x. exists y. (Song(x) & PhonographRecord(y) & x=y)", "exists x. exists y. (Song(x) & -PhonographRecord(y) & x=y)", "(WorkOfLiteratureAndArt(x) & (Subjective(x) & Has(x, SocialDimension)))", "(Atmosphere(x) & (Subjective(x) & Has(x, SocialDimension)))", "ExcellentRestaurant(x) & GoodWorkOfLiteratureAndArt(x)", "Atmosphere(x) & (Subjective(x) & Has(x, SocialDimension))", "Writer(AynRand)", "Writer(DianaParker)", "exists x. (Writer(x) & wroteMoreThan(x, OneMillionWords, OneNineSixFive))", "(DianaParker & wroteMoreThan(DianaParker, OneMillionWords, OneNineSixFive))", "exists x. (Player(x) & Coach(x) & Person(x))", "exists x. (Player(x) & Athlete(x))", "exists x. (Athlete(x) & Exercise(x))", "exists x. (Player(x) & -Athlete(x))", "exists x. (Athlete(x) & Person(x))", "exists x. (Young(x) & Plays(x, icehockey) & Competitive(x))", "exists x. (Competitive(x) & Athlete(x))", "exists x. (Young(x) & Plays(x, icehockey) & -Athlete(x))", "(Richard & Mary & GeographicallyNotClose(Richard, Mary))", "(Richard & Mary & GeographicallyClose(Richard, Mary))", "exists x. exists y. (RichPerson(x) & Knows(x, y) & RichPerson(y))", "exists x. exists y. (RichPerson(x) & Knows(x, y) & RichPerson(y))", "Knows(Richard, Mary)", "(x, y) -> (Older(x) & Younger(y) & Better(x, y))", "exists x. exists y. (Best(x, Candidate) & Younger(x, y))", "exists x. exists y. (Candidate(x) & Best(y, Candidate) & Cleaner(x, y))", "exists x. exists y. (Cleaner(x, Candidate) & Best(y, Candidate) & x=y)", "exists x. (A & SocialMediaCompany(x))", "exists x. (B & EducationalMediaCompany(x))", "exists x. (C & SocialMediaCompany(x))", "exists x. (A & EducationalMediaCompany(x)) & exists x. (B & EducationalMediaCompany(x)) & exists x. (C & EducationalMediaCompany(x))", "exists x. (A & SocialMediaCompany(x))", "exists x. (B & EducationalMediaCompany(x))", "exists x. (C & SocialMediaCompany(x))", "exists x. (A & EducationalMediaCompany(x)) & exists x. (B & EducationalMediaCompany(x)) & exists x. (C & EducationalMediaCompany(x))", "exists x. (A & SocialMediaCompany(x))", "exists x. (B & EducationalMediaCompany(x))", "exists x. (C & SocialMediaCompany(x))", "exists x. (A & SocialMediaCompany(x)) & exists x. (B & SocialMediaCompany(x)) & exists x. (C & SocialMediaCompany(x))", "exists x. exists y. (Writer(x) & Also(y, Poet) & Poet(y))", "exists x. (Poet(x) & Writer(x))", "exists x. (Poet(x) & Writer(x))", "exists x. exists y. (Writer(x) & Also(y, Poet) & Poet(y))", "exists x. (Poet(x) & Writer(x))", "exists x. exists y. ((Writer(x) & Poet(y)) & (-(x=y)))", "exists x. exists y. (Writer(x) & Also(y, Poet) & Poet(y))", "exists x. (Poet(x) & Writer(x))", "exists x. exists y. ((Writer(x) & Poet(y)) & (x=y))"], "conclusion": "exists", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Variable and Expression expected following quantifier 'exists'.\nexists\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 407, in handle_quant\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Variable and Expression expected following quantifier 'exists'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Variable and Expression expected following quantifier 'exists'.\nexists\n       ^\n"}
{"timestamp": "2025-05-02T01:08:02.192999", "premises": ["exists x. (Venhoda(x) & CzechChoralConductor(x) & SpecializesIn(x, RenaissanceAndBaroqueMusic))", "all x. (ChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) -> (Loves(x, Music)))", "Publishes(Venhoda, MethodOfStudyingGregorianChant, OneNineFourSix)", "-SpecializesIn(AnyChoralConductor, Renaissance)", "all x. (Anyone(x) -> Can(x, Read))", "-AnyoneTeenager(Teenager) -> Can(Teenager, Read)", "exists x. (Can(x, Write) -> Can(x, Write))", "exists x. (Can(x, Swim) -> Can(x, Write))", "all x. (Anyone(x) -> Can(x, Write) & Can(x, Swim))", "all x. (Anyone(x) -> Can(x, Read) & Can(x, Write))", "Anyone(Richard) & Can(Richard, Write) & Can(Richard, Swim)", "exists x. -Can(x, Read) & -Can(x, Write) & exists x. -Richard(x)", "Can(Richard, Read)", "At(James, Time)", "Past(Noon)", "At(James, Noon)", "At(James, ZeroNineZeroZero)", "At(James, Noon)", "At(James, FiveMinutesBeforeEvent) & At(FiveMinutesBeforeEvent, Noon)", "At(FiveMinutesBeforeEvent, Noon) & At(James, FiveMinutesBeforeEvent)", "exists x. exists y. exists z. (Founders(Apple, x, y) & Brian(x) & Scott(y)", "exists x. (Brian(x) & AppleFounder(x))", "exists x. (Brother(Brian, x) & KeynoteSpeaker(x, WorldwideMindCongress, TwoZeroOneOne))", "exists x. (Organized(WorldwideMindCongress, x, Toronto, TwoZeroOneOne))", "exists x. (WorldwideMindCongress(x) & TechnologyConference(x))", "exists x. (Brian(x) & Brother(x, Winton))", "-KeynoteSpeaker(Brian, WorldwideMindCongress, TwoZeroOneOne)", "exists x. (Debt(x) & StudentLoanDebt(x))", "exists x. (Student(x) & Debt(x, StudentLoanDebt))", "all x. (Loan(x) -> -Debt(x))", "exists x. (Person(x) & Student(x))", "exists x. (-Student(x) & Debt(x, StudentLoanDebt))", "all x. (Car(x) -> Vehicle(x))", "all x. (Bus(x) & -Car(x))", "all x. (Bus(x) -> Vehicle(x))", "exists x. (Driver(x) & Can(x, Drive) -> Drives(x, Car))", "exists x. (Driver(x) & Can(x, Drive) -> Drives(x, Bus))", "exists x. (Car(x))", "exists x. (Driver(x) & Drives(x, Car))", "all x. exists y. (OnWater(y) & Drama(y) & Actor(x) & PlayIn(x, y))", "exists x. (OnWater(x) & About(x, Maestro) & PlayAbout(x, Mystery) & PlayAbout(x, Mysterious) & PlayAbout(x, Hidden) & PlayAbout(x, Unknown) & PlayAbout(x, New))", "exists x. (OnWater(x) & Drama(x))", "all x. (Drama(x) -> ExistsSomeSetting(x))", "all x. (Drama(x) -> ExistsSomeSetting(x) & OnStage(x))", "all x. (Drama(x) -> ExistsSomeSetting(x) & InTheater(x))", "all x. (Drama(x) -> ExistsSomeSetting(x) & (OnStage(x) | InTheater(x)))", "exists x. (Setting(x) & OnWater(x) & (InTheater(x) | OnStage(x)))", "exists x. exists y. (Music(y) & Interested(x, y) & Can(x, Play) -> Plays(x, Instrument))", "exists x. (Can(x, Play) -> Plays(x, Instrument))", "exists x. exists y. (Can(x, Play) & Has(x, ProficiencyLevel) -> (Plays(x, Instrument) & Has(x, ProficiencyLevel)))", "exists x. exists y. (Can(x, Play) & Likes(x, y) -> (Plays(x, Instrument) & Likes(x, y)))", "exists x. exists y. (Can(x, Play) & Has(x, ProficiencyLevel) & Likes(x, y) -> (Plays(x, Instrument) & Has(x, ProficiencyLevel) & Likes(x, y)))", "exists x. exists y. (Can(x, Play) & Has(x, ProficiencyLevel) & Has(x, Instrument) -> (Plays(x, Instrument) & Has(x, ProficiencyLevel) & Has(x, Instrument)))", "exists x. (Can(x, Play) & Plays(x, Piano) & Has(x, ProficiencyLevel) & Has(x, Beginner) & Likes(x, Piano))", "exists x. (Can(x, Be) & WorkingIn(x, ServiceIndustry) -> Be(x, Telemarketer))", "exists x. (Likes(x, TalkOnPhone) & WorkingIn(x, ServiceIndustry) -> Likes(x, TalkOnPhone))", "exists x. (Can(x, Be) -> Be(x, Telemarketer))", "exists x. (Can(x, Like) -> Likes(x, TalkOnPhone))", "exists x. exists y. (Can(x, Be) & Be(y, Telemarketer) -> (Can(y, Like) & Likes(y, TalkOnPhone)))", "exists x. exists y. (Can(x, Be) & Be(y, Telemarketer) -> Likes(y, TalkOnPhone))", "exists x. (Likes(x, TalkOnPhone))", "exists x. exists y. (WorkingIn(x, ServiceIndustry) & Be(x, Telemarketer) -> Likes(x, TalkOnPhone))", "all x. exists y. (Person(x) & In(x, y))", "Room(TheRoom) & Last(TheRoom)", "Room(TheRoom) & On(TheRoom, Floor, One)", "(Room(TheRoom) & Bigger(TheRoom, Room, One))", "(Room(TheRoom) & Smaller(TheRoom, Room, Two))", "exists x. (Room(x) & Bedroom(x))"], "conclusion": "Room(TheRoom) & On(TheRoom, Floor, One) & exists x. (Room(x) & On(x, Floor, One) & (-Room(x) | -TheRoom))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. exists z. (Founders(Apple, x, y) & Brian(x) & Scott(y)\n                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. exists z. (Founders(Apple, x, y) & Brian(x) & Scott(y)\n                                                                          ^\n"}
{"timestamp": "2025-05-02T01:09:07.436777", "premises": ["exists x. (Czech(x) & ChoralConductor(x) & SpecializeIn(x, PerformancesOfRenaissanceAndBarocholeMusic))", "all x. (ChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) -> Love(music))", "exists x. (Written(MiroslavVenhoda, x) & In(x, OneNineFourSix) & MethodOfStudyingGregorianChant(x))", "exists x. (ChoralConductor(x) & -SpecializeIn(x, PerformancesOfRenaissanceAndBarocholeMusic))", "all x. (MathematicsGraduateStudent(x) -> ApplyFor(x, JobOnTheJobMarket))", "all x. (MathematicsTutor(x) -> ApplyFor(x, JobOnTheJobMarket))", "exists x. ((MathematicsStudent(x) & MathematicsTutor(x)) -> ApplyFor(x, JobOnTheJobMarket))", "MathematicsGraduateStudent(Mythweiser)", "MathematicsTutor(Munn)", "all x. (MathematicsGraduateStudent(x) -> ApplyFor(x, JobOnTheJobMarket))", "all x. (MathematicsTutor(x) -> ApplyFor(x, JobOnTheJobMarket))", "exists x. ((MathematicsStudent(x) & MathematicsTutor(x)) -> ApplyFor(x, JobOnTheJobMarket))", "-ApplyFor(Mythweiser, JobOnTheJobMarket) & -ApplyFor(Munn, JobOnTheJobMarket)", "all x. (Yogi(x) -> Keeps(x, WordsAndCommandments))", "exists x. (-Yogi(x) & Maintain(x, Diet))", "all x. (Maintain(x, Diet) -> Has(x, HealthyDiet))", "all x. (Yogi(x) & -ProfessionalAthlete(x))", "Yogi(Amanda)", "ProfessionalAthlete(Mary)", "all x. (Yogi(x) -> Keeps(x, WordsAndCommandments))", "exists x. (-Yogi(x) & Maintain(x, Diet))", "all x. (Maintain(x, Diet) -> Has(x, HealthyDiet))", "all x. (Yogi(x) & -ProfessionalAthlete(x))", "Yogi(Amanda)", "ProfessionalAthlete(Mary)", "(Keeps(Mary, WordsAndCommandments) & -Has(Mary, Diet))", "all x. (UndergraduateStudentAt(x, UCBB) -> Eligible(x, GraduateStudyAfterGraduating))", "exists x. (-UndergraduateStudentAt(x, UCBB) & Completed(x, GraduateStudy))", "all x. (GraduatedFrom(x, UCBB) -> TheSame(x, y) -> GraduatedFrom(y, UCBB))", "exists x. (-UndergraduateStudentAt(x, UCBB) & GraduatedFrom(x, UCBB))", "all x. (GraduatedFrom(x, UCBB) -> Eligible(x, GraduateStudyAfterGraduating))", "all x. (GraduatedFrom(x, UCBB) -> TheSame(x, y) -> GraduatedFrom(y, UCBB))", "exists x. (-UndergraduateStudentAt(x, UCBB) & Completed(x, GraduateStudy))", "exists x. (Missing(x) & Pandemic(x))", "exists x. ((Required(x) & Maintain(x, IntegrityOfData)) & Pandemic(x))", "all x. ((Required(x) & Maintain(x, IntegrityOfData)) -> Missing(x))", "exists x. (Missing(x) & Pandemic(x))", "exists x. (Missing(x) & Pandemic(x))", "exists x. (Missing(x) & Pandemic(x))", "all x. -Required(x) & Maintain(x, IntegrityOfData)", "exists x. ((WentOnToStudyx(John, Medicine)) -> (WorksOn(John, Titanic) & WorksOn(John, Titanic)))", "exists x. ((WentOnToStudyx(John, Law)) -> (WorksOn(John, Titanic) & WorksOn(John, Titanic)))", "Attended(John, StanfordUniversity)", "StanfordUniversity(University)", "Attended(John, StanfordUniversity)", "WentOnToStudy(John, Medicine)", "WentOnToStudy(John, Law)", "exists x. exists y. ((Watches(x, Movies)) & (Spend(x, LotOfTimeOnSocialMedia)) & (Spends(x, y))) -> Spend(y, LotOfTimeOnSocialMedia)", "exists x. exists y. ((Watches(x, Movies)) & (Spend(x, LotOfTimeOnSocialMedia)) & (Spends(x, y))) -> Spend(y, LotOfTimeOnSocialMedia)", "exists x. ((Spend(x, LotOfTimeOnSocialMedia)) -> (Watches(y, Movies)))", "exists x. exists y. ((Watches(x, Movies)) & (Spend(x, LotOfTimeOnSocialMedia)) & (Spends(x, y))) -> Spend(y, LotOfTimeOnSocialMedia)", "exists x. exists y. ((Watches(x, Movies)) & (Spend(x, LotOfTimeOnSocialMedia)) & (Spends(x, y))) -> Spend(y, LotOfTimeOnSocialMedia)", "exists x. ((Spend(x, LotOfTimeOnSocialMedia)) -> (Watches(y, Movies)))", "all x. ((Spend(x, LotOfTimeOnSocialMedia)) -> -Watches(y, Movies))", "exists x. ((Developed(x, NewThreeDPrinter)) -> (DevelopedBy(x, CompanyCalledThreeDSystemsInc)))", "exists x. (Used(x, MakeDrugs) -> (UsedFor(x, NewThreeDPrinter)))", "exists x. (DevelopedBy(x, CompanyCalledThreeDSystemsInc) -> (UsedFor(x, NewThreeDPrinter)))", "all x. (Used(x, MakeDrugs) -> (UsedFor(x, NewThreeDPrinter)))", "exists x. ((Developed(x, NewThreeDPrinter)) -> (DevelopedBy(x, CompanyCalledThreeDSystemsInc)))", "exists x. (Used(x, MakeDrugs) -> (UsedFor(x, NewThreeDPrinter)))", "exists x. (DevelopedBy(x, CompanyCalledThreeDSystemsInc) -> (UsedFor(x, NewThreeDPrinter)))", "all x. (Used(x, MakeDrugs) -> (UsedFor(x, NewThreeDPrinter)))"], "conclusion": "exists x. (Used(x, MakeDrugs) -> (UsedFor(x, NewThreeDPrinter)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: StanfordUniversity/1, StanfordUniversity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StanfordUniversity/1, StanfordUniversity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: StanfordUniversity/1, StanfordUniversity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StanfordUniversity/1, StanfordUniversity/0\n"}
{"timestamp": "2025-05-02T01:58:19.203739", "premises": ["exists x. exists y. (SpecializeIn(Venhoda, x) & (CzechChoralConductor(x) & (y_=_Renaissance) | y = Baroque))", "all x. (CzechChoralConductor(x) -> Musician(x))", "exists x. (Musician(x) -> (Loves(x, Music)))", "exists x. (MiroslavVenhoda(x) & Published(x, MethodofStudyingGregorianChant) & InYear(OneNineFourSix))"], "conclusion": "exists x. exists y. ((CzechChoralConductor(x) & -(SpecializeIn(x, y))) & (y_=_Renaissance)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. ((CzechChoralConductor(x) & -(SpecializeIn(x, y))) & (y_=_Renaissance)\n                                                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. ((CzechChoralConductor(x) & -(SpecializeIn(x, y))) & (y_=_Renaissance)\n                                                                                          ^\n"}
{"timestamp": "2025-05-02T02:00:14.730395", "premises": ["exists x. (Fish(x) & Stings(x, y))", "Stonefish(Stonefish)", "Stonefish(Stonefish) & StingsWhenSteppedOn(Stonefish)", "all x. (Stings(Stonefish, y) & -Treated(Stonefish, y) -> CausesDeathTo(Stonefish, y))", "Antivenom(Stonefish) & Treat(Stonefish, y)"], "conclusion": "exists x. CausesDeathTo(x, y) & -Treated(x, y)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:00:37.833648", "premises": ["Some(x. Stings(x, y))", "Stonefish(Stonefish)", "Stonefish(Stonefish) & StingsOn(Stonefish, SteppedOn)", "all x. exists y. ((Stonefish(x) & Stings(x, y) & NotTreated(y)) -> CanCauseDeathTo(y))", "ToTreat(StonefishStings, (ApplyHeat(AffectedArea) | UseAntivenom))"], "conclusion": "exists x. (Some(y. (Stonefish(y) & Stings(y, x) & -Treated(x))) -> CanCauseDeathTo(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. (Some(y. (Stonefish(y) & Stings(y, x) & -Treated(x))) -> CanCauseDeathTo(x))\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. (Some(y. (Stonefish(y) & Stings(y, x) & -Treated(x))) -> CanCauseDeathTo(x))\n                 ^\n"}
{"timestamp": "2025-05-02T02:00:59.541154", "premises": ["exists x. exists y. (Stings(x, y) & Fish(x))", "Stonefish(Stonefish)", "Stings(Stonefish, SteppedOn)", "exists x. (Stings(Stonefish, x) & Treatment(x) -> CausesDeathTo(x))", "Treatment(Heat) & Treatment(Antivenom) & Effect(Heat, Area) & Effect(Antivenom, Stings)"], "conclusion": "exists x. (Sting(x) -> -Treatment(x)) & exists x.(CausesDeathTo(x) & Fish(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stings/2, Stings/0, Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stings/2, Stings/0, Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stings/2, Stings/0, Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stings/2, Stings/0, Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:01:19.923099", "premises": ["exists x. ((Fish(x) & Stings(x)) -> Person(x))", "Stonefish(Stonefish)", "exists x. (Stonefish(x) -> Stings(x))", "((Stings(Stonefish) & Person(Patient)) & -Treated(Patient)) -> (Death(Patient))", "exists x. (Treat(StonefishStings, ApplyHeat) & Treat(StonefishStings, UseAntivenom))"], "conclusion": "exists x. ((Stings(x) & -Treated(x)) -> Death(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:01:45.331690", "premises": ["(exists x. (Fish(x) & Stings(x, person)))", "(Stonefish(Stonefish) & Fish(Stonefish))", "(exists x. (Stonefish(x) & StingsWhenSteppedOn(x)))", "(exists x. (Stonefish(x) & Stings(x, person) & -Treated(person))) & CausesDeath(person)", "(exists x. (TreatingWith(x, Heat) & AffectedArea(x))) | (exists x. (TreatingWith(x, Antivenom) & AffectedArea(x)))"], "conclusion": "(-(exists x. (Fish(x) & Stings(x, person))) & CausesDeath(person))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:02:12.169717", "premises": ["exists x. (Fish(x) & (Stings(x, Someone) | Stings(x, Them)))", "Stonefish(Stonefish)", "StonefishStings(Stonefish) & StingsWhenSteppedOn(Stonefish)", "StonefishStings(Stonefish) & exists x. (StepOn(x, Stonefish) & -Treated(x)) -> (CausesDeath(x))", "exists x. (FishStings(x) & ToTreat(x, (Heat(y) | Antivenom(y))))"], "conclusion": "exists x. (Stings(x, Someone) & Fish(x) & exists y. (StepOn(y, x) & -Treated(y)) -> CausesDeath(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:02:40.457139", "premises": ["exists x.(Fish(x) & Stings(x, Person))", "Stonefish(StoneFish) & Fish(StoneFish)", "Stonefish(StoneFish) & Stings(StoneFish, WhenSteppedOn)", "exists x. exists y. exists z. (StoneFish(x) & Stings(x, y) & -Treat(y) & CausesDeath(x, y) & -Treat(z) & CausesDeath(x, z))", "-Treat(StoneFishStings) & (Use(StoneFishStings, Heat) | Use(StoneFishStings, Antivenom))"], "conclusion": "exists x. exists y.(Fish(x) & Stings(x, y) & CausesDeath(x, y) & -Treat(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: StoneFish/1, StoneFish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StoneFish/1, StoneFish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: StoneFish/1, StoneFish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: StoneFish/1, StoneFish/0\n"}
{"timestamp": "2025-05-02T02:03:00.852671", "premises": ["exists x. (Fish(x) & Sting(x, y) & Person(y))", "Stonefish(Stonefish)", "Stonefish(Stonefish) & StingWhenSteppedOn(Stonefish)", "exists x. exists y. (Sting(x, y) & NotTreated(y) -> CausesDeathTo(x, y))", "Treatment(HeatToAffectedArea) & Treatment(UseAntivenom)"], "conclusion": "exists x. (Sting(x, y) & NotTreated(y) & CausesDeathTo(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-02T02:03:22.056919", "premises": ["exists x. (Fish(x) -> Stings(x, y))", "Stonefish(Stonefish)", "exists x. (Stonefish(x) -> StingsWhenSteppedOn(x))", "exists x. (SteppedOn(y) & Stings(Stonefish, y) & -Treated(y) -> CauseDeath(y))", "All x. (Stings(y, x) -> (ApplyHeat(y) | UseAntivenom(y)))"], "conclusion": "exists x. ((exists y. (Fish(y) & Stings(y, x))) -> CauseDeath(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nAll x. (Stings(y, x) -> (ApplyHeat(y) | UseAntivenom(y)))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nAll x. (Stings(y, x) -> (ApplyHeat(y) | UseAntivenom(y)))\n    ^\n"}
{"timestamp": "2025-05-02T02:03:42.540953", "premises": ["exists x. (Fish(x) & StingsWhenSteppedOn(x) & Person(x))", "Stonefish(Stonefish)", "StonefishStingsWhenSteppedOn(Stonefish)", "all x. (StonefishStingsWhenSteppedOn(x) & -Treated(x) -> CausesDeath(x))", "TreatStonefishStings(AlterArea(AffectedArea) | ApplyAntivenom(AffectedArea))"], "conclusion": "exists x. (Stings(x, SomeFish) & CausesDeath(x) & -Treated(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nTreatStonefishStings(AlterArea(AffectedArea) | ApplyAntivenom(AffectedArea))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nTreatStonefishStings(AlterArea(AffectedArea) | ApplyAntivenom(AffectedArea))\n                                             ^\n"}
{"timestamp": "2025-05-02T02:03:50.606146", "premises": ["exists x. (Bear(x) & Zoo(x) -> -Wild(x))", "exists x. (Bear(x) & In(x, Zoo))"], "conclusion": "-Wild(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zoo/1, Zoo/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zoo/1, Zoo/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zoo/1, Zoo/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zoo/1, Zoo/0\n"}
{"timestamp": "2025-05-02T02:03:54.396411", "premises": ["all x. exists y. (In(x, Zoo) & Bear(x) & Not(Wild(x)))", "exists x. (Bear(x) & In(x, Zoo))"], "conclusion": "exists x. (Bear(x) & -Wild(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wild/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wild/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Wild/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Wild/1\n"}
{"timestamp": "2025-05-02T02:04:01.993794", "premises": ["exists x. (InZoo(x) -> -Wild(x))", "exists x. (Bear(x) & InZoo(x))"], "conclusion": "-((all x. (Bear(x) -> Wild(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\n-((all x. (Bear(x) -> Wild(x)))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\n-((all x. (Bear(x) -> Wild(x)))\n                               ^\n"}
{"timestamp": "2025-05-02T02:04:08.458233", "premises": ["all x. (Bear(x) & In(x, Zoo) -> -Wild(x))", "exists x. (Bear(x) & In(x, Zoo))"], "conclusion": "-All(x. Beat(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-All(x. Beat(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-All(x. Beat(x))\n      ^\n"}
{"timestamp": "2025-05-02T02:04:12.407517", "premises": ["all x. all y. (Bear(x) & Zoo(y) & In(x, y) -> -Wild(x))", "exists x. (Bear(x) & In(x, Zoo))"], "conclusion": "-exists x. (Bear(x) & Wild(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zoo/1, Zoo/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zoo/1, Zoo/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Zoo/1, Zoo/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Zoo/1, Zoo/0\n"}
{"timestamp": "2025-05-02T02:04:16.084269", "premises": ["all x. (Bear(x) & In(x, Zoo) -> -Wild(x))", "exists x. (Bear(x) & In(x, Zoo))"], "conclusion": "-All(x. (Bear(x) -> Wild(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-All(x. (Bear(x) -> Wild(x)))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-All(x. (Bear(x) -> Wild(x)))\n      ^\n"}
{"timestamp": "2025-05-02T02:12:56.883001", "premises": ["exists x. (PrehistoricBirdGenus(x) & Ambiortus(x))", "exists x. exists y. (Ambiortus(x) & Species(x, y) & SpeciesOf(x, Ambiortus))", "exists x. exists y. (PrehistoricBirdGenus(x) & Ambiortus(y) & Species(x, y) & In(y, Mongolia))", "exists x. exists y. (PrehistoricBirdGenus(x) & Species(x, y) & Discoverer(y, Kurochkin))"], "conclusion": "exists x. exists y. (Discoverer(y, Kurochkin) & PrehistoricBirdGenus(x) & Species(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:13:12.552875", "premises": ["Ambiortus(x) & PrehistoricBirdGenus(x)", "exists x. (Specimen(x, Ambiortus) & Unique(Ambiortus, x) & Species(x))", "Species(AmbiortusDementjevi) & LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "newBirdGenus(YevgenyKurochkin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:15:50.694722", "premises": ["BirdGenus(Ambiortus)", "Species(AmbiortusDementjevi) & Ambiortus(AmbiortusDementjevi)", "In(Mongolia, AmbiortusDementjevi)", "Discovered(YevgenyKurochkin, Ambiortus)"], "conclusion": "exists x. (YevgenyKurochkin(x) & Discovered(x, NewBirdGenus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: YevgenyKurochkin/1, YevgenyKurochkin/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:16:25.865473", "premises": ["Genus(Ambiortus)", "Ambiortus(AmbiortusDementjevi) & Species(AmbiortusDementjevi) & AmbiortusDementjevi(Ambiortus) & TheOnlyKnownSpecies(AmbiortusDementjevi)", "AmbiortusDementjevi(Mongolia)", "Kurochkin(Yevgeny) & Discover(Kurochkin, Ambiortus)"], "conclusion": "exists x. (New(x) & Genus(x) & Discover(x, Ambiortus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Kurochkin/1, Kurochkin/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Kurochkin/1, Kurochkin/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Kurochkin/1, Kurochkin/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Kurochkin/1, Kurochkin/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:16:59.377241", "premises": ["exists x. (GenusOf(Ambiortus, x) & PrehistoricBird(x))", "exists x. (AmbiortusDementjevi(x) & SpeciesOf(Ambiortus))", "exists x. (Where(AmbiortusDementjevi, Mongolia))", "exists x. (Discoverer(YevgenyKurochkin, Ambiortus))"], "conclusion": "exists x. (Discoverer(YevgenyKurochkin, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T02:17:14.792734", "premises": ["Bird(Ambiortus) & Prehistoric(Ambiortus)", "exists x. exists y. (Ambiortus(x) & SpeciesOf(x, y) & OnlyKnown(y, Ambiortus))", "Mongolia & In(AmbiortusDementjevi, Mongolia)", "exists x. exists y. (Kurochkin(x) & DiscovererOf(x, y) & Ambiortus(y))"], "conclusion": "exists x. (Kurochkin(x) & Discovered(x, BirdGenus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mongolia/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mongolia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mongolia/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mongolia/0\n"}
{"timestamp": "2025-05-02T02:17:31.064141", "premises": ["exists x. (PrehistoricBird(x) & Genus(x))", "all x. (Species(x, Ambiortus) -> Ambiortus(x)", "exists x. (PrehistoricBird(AmbiortusDementjevi) & LivesIn(AmbiortusDementjevi, Mongolia))", "exists x. (Discovered(x, Ambiortus) & PrehistoricBird(x))"], "conclusion": "(ExistingBirdGenus(YevgenyKurochkin) & -ExistingSpecies(YevgenyKurochkin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Species(x, Ambiortus) -> Ambiortus(x)\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Species(x, Ambiortus) -> Ambiortus(x)\n                                             ^\n"}
{"timestamp": "2025-05-02T02:17:43.668185", "premises": ["All x. (PrehistoricBirdGenus(x) -> Genus(x))", "AmbiortusDementjevi -AmbiortusDementjevi", "AmbiortusDementjevi -AmbiortusDementjevi", "All x. (Kurochkin(x) -> Discoverer(x, Ambiortus))"], "conclusion": "Discoverer(YevgenyKurochkin, NewBirdGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nAll x. (PrehistoricBirdGenus(x) -> Genus(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nAll x. (PrehistoricBirdGenus(x) -> Genus(x))\n    ^\n"}
{"timestamp": "2025-05-02T02:17:57.290073", "premises": ["Bird(Ambiortus) & PrehistoricAnimal(Ambiortus)", "Species(AmbiortusDementjevi, Ambiortus)", "exists x. (AmbiortusDementjevi(x) & Habitat(x, Mongolia))", "exists x. exists y. (Discovered(y, x) & Discovered(x, Ambiortus))"], "conclusion": "exists x. (Discoverer(x) & NewBirdGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T02:18:12.479593", "premises": ["exists x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "exists x. ((Ambiortus(x) & Species(x)) -> AmbiortusDementjevi(x))", "exists x. (AmbiortusDementjevi(x) -> Lives(x, Mongolia))", "exists x. (YevgenyKurochkin(y) & Discovers(y, Ambiortus))"], "conclusion": "exists x. (Kurochkin(x) & Discovers(x, NewBirdGenus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:18:25.827820", "premises": ["exists x. (Lifeform(x) & From(x, Prehistoric))", "AmbiortusDementjevi(Species(Ambiortus))", "exists x. (BRICS(x) & BornIn(AmbiortusDementjevi, x))", "exists x. (Kurochkin(x) & Discover(x, Ambiortus))"], "conclusion": "exists x. (Kurochkin(x) & BornIn(x, Mongolia))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T02:18:37.023449", "premises": ["AmbiortusGenus(Ambiortus)", "AmbiortusSpecies(AmbiortusDementjevi) & Ambiortus(AmbiortusDementjevi)", "Where(AmbiortusDementjevi, Mongolia)", "Discovered(Ambiortus, Kurochkin)"], "conclusion": "LivedIn(Kurochkin, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-02T02:18:50.651525", "premises": ["Ambiortus(x) & PrehistoricBirdGenus(x)", "Ambiortus(AmbiortusDementjevi) & Species(AmbiortusDementjevi)", "Mongolia(x) & Where(AmbiortusDementjevi, x)", "YevgenyKurochkin(x) & Discoverer(Ambiortus, x)"], "conclusion": "YevgenyKurochkin(x) & LivedIn(x, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0\n"}
{"timestamp": "2025-05-02T02:19:18.255107", "premises": ["all x. (PrehistoricBird(x) -> Genus(x))", "exists x. exists y. (Species(Ambiortus, x) & Species(Ambiortus, y) & (-(x_=_y))) & AmbiortusDementjevi(x)", "exists x. (LocatedIn(AmbiortusDementjevi, Mongolia) & PrehistoricBird(AmbiortusDementjevi))", "exists x. (Discovered(Ambiortus, y) & Kurochkin(y))"], "conclusion": "exists x. (LivedIn(y, Mongolia) & Discovered(Ambiortus, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T02:19:30.227046", "premises": ["all x. (PrehistoricBirdGenus(x) & PrehistoricSpecies(x) -> Prehistoric(x))", "AmbiortusDementjevi", "exists x. (LIVES(x, AmbiortusDementjevi, Mongolia))", "exists x. (Discoverer(x, AmbiortusDementjevi))"], "conclusion": "exists x. (Lives(y, x, Mongolia))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-02T02:19:45.176176", "premises": ["exists x. exists y. (PreHistoricBirdGenus(x) & PreHistoric(y) & Speaks(y, English) & Speaks(y, Russian) & (x=y))", "exists x. (-(x=AmbiortusDementjevi)) & exists x. (Ambiortus(x) & SpeciesOf(Ambiortus, x))", "Mongolia(x) & Lives(AmbiortusDementjevi, x)", "YevgenyKurochkin(x) & Discovers(x, Ambiortus)"], "conclusion": "KurochkinLives(Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mongolia/1, Mongolia/0\n"}
{"timestamp": "2025-05-02T02:20:07.821489", "premises": ["PrehistoricBirdGenus(Ambiortus)", "SpeciesOf(AmbiortusDementjevi, Ambiortus)", "where(AmbiortusDementjevi, Mongolia)", "Discovered(Kurochkin, Ambiortus)"], "conclusion": "Kurochkin livesIn(Mongolia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'livesIn'.\nKurochkin livesIn(Mongolia)\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'livesIn'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'livesIn'.\nKurochkin livesIn(Mongolia)\n          ^\n"}
{"timestamp": "2025-05-02T02:20:18.146889", "premises": ["Ambiortus(x) -> PrehistoricBird(x)", "Only(AmbiortusDementjevi)", "LocatedIn(AmbiortusDementjevi, Mongolia)", "(x)"], "conclusion": "YevgenyKurochkin(x) -> LocatedIn(x, Mongolia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T02:20:31.217696", "premises": ["all x. ((FortTiconderoga(x) & CurrentNameFor(x, FortCarillon)) -> -CurrentNameFor(x, FortTiconderoga))", "Built(PierredeRigauddeVaudreuil, FortCarillon)", "On(FortCarillon, NewFrance)", "exists x. all y. (In(x, Europe) -> -In(y, x))"], "conclusion": "exists x. (Built(x, FortCarillon) & In(FortCarillon, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortTiconderoga/1, FortTiconderoga/0\n"}
{"timestamp": "2025-05-02T02:21:02.302891", "premises": ["-Exists x. -Exists y. (SameAs(y, x) & y=FortTiconderoga)", "FortCarillon(FortCarillon) & Exists x. (Built(x, FortCarillon) & SameAs(x, PierredeRigauddeVaudreuil))", "Exists x. (LocatedIn(FortCarillon, NewFrance))", "exists x.(In(x, Europe) & -In(x, NewFrance))"], "conclusion": "-Exists x. (Built(x, FortCarillon) & SameAs(x, PierredeRigauddeVaudreuil))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n-Exists x. (Built(x, FortCarillon) & SameAs(x, PierredeRigauddeVaudreuil))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n-Exists x. (Built(x, FortCarillon) & SameAs(x, PierredeRigauddeVaudreuil))\n        ^\n"}
{"timestamp": "2025-05-02T02:21:31.020899", "premises": ["Name(FortTiconderoga, FortCarillon)", "exists x. (PierreDeRigaudDeVaudreuil(x) & Build(x, FortCarillon))", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "all x. (NewFrance(x) -> -In(x, Europe))"], "conclusion": "exists x.(Build(x, FortTiconderoga)) | (In(NewFrance, Europe) 9 Select(x, y. Build(x, y) & In(y, NewFrance)) & Select(x, y. Build(x, y) & NotIn(y, Europe))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '9'.  Expected token ')'.\nexists x.(Build(x, FortTiconderoga)) | (In(NewFrance, Europe) 9 Select(x, y. Build(x, y) & In(y, NewFrance)) & Select(x, y. Build(x, y) & NotIn(y, Europe))\n                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '9'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '9'.  Expected token ')'.\nexists x.(Build(x, FortTiconderoga)) | (In(NewFrance, Europe) 9 Select(x, y. Build(x, y) & In(y, NewFrance)) & Select(x, y. Build(x, y) & NotIn(y, Europe))\n                                                              ^\n"}
{"timestamp": "2025-05-02T02:21:45.565042", "premises": ["exists x. exists y. (FortTiconderoga(x) & (CurrentNameFor(x, y) & FortCarillon(y)))", "exists x. (PierredeRigauddeVaudeuil(x) & Built(x, FortCarillon))", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. (NewFrance(x) & Europe(x))"], "conclusion": "exists x. (PierredeRigauddeVaudeuil(x) & BuiltAfortIn(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-02T02:22:10.929865", "premises": ["(Ticonderoga(Fort) & CurrentName(Fort, Carillon))", "(Vaudreuil(Pierre) & Built(Pierre, FortCarillon))", "(In(FortCarillon, NewFrance))", "(In(NewFrance, Europe)) & -In(NewFrance, NewFrance)"], "conclusion": "-In(Vaudreuil, Europe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vaudreuil/1, Vaudreuil/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vaudreuil/1, Vaudreuil/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Vaudreuil/1, Vaudreuil/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Vaudreuil/1, Vaudreuil/0\n"}
{"timestamp": "2025-05-02T02:22:27.615949", "premises": ["exists x. (FortTiconderoga(x) & FortCarillon(x) & IsCurrentName(x, FortCarillon))", "exists x. (RigaudDeVaudreuil(x) & Built(x, FortCarillon))", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. ((France(x) & NewFrance(x) & -InEurope(x))"], "conclusion": "exists x. (RigaudDeVaudreuil(x) & Built(x, Fort)) & exists y. (Fort(y) & LocatedIn(y, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((France(x) & NewFrance(x) & -InEurope(x))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((France(x) & NewFrance(x) & -InEurope(x))\n                                                    ^\n"}
{"timestamp": "2025-05-02T02:22:41.532874", "premises": ["CurrentName(FortTiconderoga, FortCarillon)", "exists x. (Built(PierreDeRigaudDeVaudreuil, x) & FortCarillon(x)) & FortCarillon(FortCarillon)", "exists x. (Located(x, NewFrance) & FortCarillon(x))", "exists x. (InEurope(x) & -NewFrance(x))"], "conclusion": "exists x. (Built(x, y) & NewFrance(y) & FortCarillon(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewFrance/1, NewFrance/0, FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-02T02:35:38.880809", "premises": ["NewYorkCity(Located, UnitedStates)", "PartOf(UnitedStates, NorthAmerica)", "WesternHemisphere(NorthAmerica)", "Supersized(NewYorkCity, HighlyDevelopedCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "all x. all y. (Located(x, WesternHemisphere) & Supersized(x, HighlyDevelopedCity) -> WesternHemisphere(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewYorkCity/2, NewYorkCity/0, Located/2, Located/0, WesternHemisphere/1, WesternHemisphere/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewYorkCity/2, NewYorkCity/0, Located/2, Located/0, WesternHemisphere/1, WesternHemisphere/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NewYorkCity/2, NewYorkCity/0, Located/2, Located/0, WesternHemisphere/1, WesternHemisphere/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NewYorkCity/2, NewYorkCity/0, Located/2, Located/0, WesternHemisphere/1, WesternHemisphere/0\n"}
{"timestamp": "2025-05-02T02:37:08.400929", "premises": ["exists x. exists y. (LocatedIn(NewYorkCity, x) & LocatedIn(UnitedStatesOfAmerica, y) & In(x, UnitedStatesOfAmerica))", "exists x. exists y. (PartOf(UnitedStatesOfAmerica, x) & NorthAmerican(y) & In(x, y))", "exists x. exists y. (In(NorthAmerica, x) & In(x, WesternHemisphereOfTheEarth))", "exists x. exists y. (HighlyDevelopedCity(x) & LocatedIn(x, y) & In(x, UnitedStatesOfAmerica))", "(exists x. exists y. (LocatedIn(x, y) & In(y, z)) & exists x. In(x, z) -> LocatedIn(x, z))"], "conclusion": "exists x. exists y. (HighlyDevelopedCity(x) & LocatedIn(x, y) & In(y, WesternHemisphereOfTheEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-02T02:37:35.964580", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "WestHemi(NorthAmerica)", "Located(NewYorkCity, NorthAmerica)", "Located(HighlyDevelopedCity, NewYorkCity)", "exists x. exists y. exists z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "((HighlyDevelopedCity & Located(HighlyDevelopedCity, x)) & WestHemi(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCity/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCity/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: HighlyDevelopedCity/0\n"}
{"timestamp": "2025-05-02T02:38:03.271854", "premises": ["((LocatedIn(NewYorkCity, UnitedStatesOfAmerica) & In(UnitedStatesOfAmerica, NorthAmerica)) & ((-LocatedIn(NewYorkCity, UnitedStatesOfAmerica)) -> -LocatedIn(NewYorkCity, NorthAmerica)))", "all x. (UnitedStatesOfAmerica(x) -> (In(x, NorthAmerica)))", "all x. (In(x, NorthAmerica) -> (In(x, WesterHemisphere)))", "all x. (NewYorkCity(x) -> HighlyDeveloped(x))", "exists x. exists y. exists z. ((LocatedIn(x, y) & LocatedIn(y, z)) -> LocatedIn(x, z))"], "conclusion": "all x. ((HighlyDeveloped(x) & LocatedIn(x, WesternHemisphere)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0, NewYorkCity/1, NewYorkCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0, NewYorkCity/1, NewYorkCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0, NewYorkCity/1, NewYorkCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0, NewYorkCity/1, NewYorkCity/0\n"}
{"timestamp": "2025-05-02T02:38:50.968134", "premises": ["Westworld(Westworld) & American(Westworld) & (SciFiThriller(Westworld) | -Thriller(Westworld)) & SciFi(Westworld) & Thriller(Westworld)", "exists x. (OnHBO(Westworld) & TVSeries(x) & Westworld(x) & Year(x, twentySixteen))", "exists x. (AdaptedFrom(Westworld, x) & Original(Westworld, x) & Year(x, NineteenSeventythree) & DirectedBy(x, MichaelCrichton))", "exists x. (Original(Westworld, x) & Year(x, NineteenSeventythree) & OnMalfunction(x) & BeginKillingHumanVisitors(x))"], "conclusion": "exists x. (DirectedBy(x, MichaelCrichton) & OnMalfunction(x) & HasName(x, Westworld))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:39:14.104124", "premises": ["Westworld(Series) & American(Series) & SciFiThriller(Series)", "exists x. (In(TwoZeroOneSix, x) & TVSeries(x) & Named(x, Westworld) & TVSeriesDidBeginOn(x, HBO))", "adapted(TVSeries(Westworld), Film(WestworldOneNineSevenThree)) & DirectedBy(Film(Westworld, MichaelCrichton))", "exists x. (Adapted(Film(x), Film(WestworldOneNineSevenThree)) & About(Film(WestworldOneNineSevenThree), MalfunctioningRobots))"], "conclusion": "exists x. (Directed(MichaelCrichton, Film(x)) & About(x, MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1\n"}
{"timestamp": "2025-05-02T02:39:56.563671", "premises": ["Westworld(Westworld) & American(Westworld) & ScienceFictionThrillerTVSeries(Westworld)", "exists x. exists y. (TVSeries(x) & TVSeriesNamed(x, Westworld) & PlayOn(x, HBO) & Year(x, TwoZeroOneSix))", "exists x. exists y. (TVSeries(x) & AdaptedFrom(x, y) & Year(x, OneNineSevenThree))", "exists x. exists y. (Film(x) & Name(x, Westworld) & Year(x, OneNineSevenThree) & Story(x, RobotsThatMalfunctionAndBeginKillingHumanVisitors))"], "conclusion": "exists x. exists y. (Directs(MichaelCrichton, x) & Story(x, RobotsThatMalfunctionAndBeginKillingHumanVisitors))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:40:44.783964", "premises": ["Westworld(AmericanScienceFictionThrillerTVSeries)", "TVSeries(Westworld) & (In(Westworld, TwoZeroOneSix) & AiringOn(Westworld, HBO))", "TVSeries(Westworld) & AdaptedFrom(Westworld, Film) & (In(Westworld, OneNineSevenThree) & WrittenAndDirectedBy(Westworld, MichaelCrichton))", "Film(Westworld) & (In(Westworld, OneNineSevenThree) & About(Westworld, RobotsThatMalfunctionAndBeginKillingHumanVisitors))"], "conclusion": "Director(MichaelCrichton) & Directed(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0, Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0, Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:41:01.335643", "premises": ["Westworld(Westworld) & AmericanTVSeries(Westworld) & SciFiThrillerSeries(Westworld)", "Westworld(Westworld) & DebutsOn(Westworld, HBO)", "AdaptedFrom(Westworld, OriginalFilmInOneNineSevenThree, MichaelCrichton)", "OriginalFilmIn1973(Westworld) & About(Westworld, RobotsMalfunctioningHumanVisitors)"], "conclusion": "Directed(MichaelCrichton, OriginalFilmInOneNineSevenThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:41:17.038210", "premises": ["TVSeries(Westworld, UnitedState, American, ScienceFictionThrillerTVSeries)", "Debut(westworld, HBO, TwoZeroOneSix)", "adaptedFrom(adaptedFrom(Westworld), OriginalFilm(1973, WrittenAndDirectedBy(MichaelCrichton)))", "OriginalFilm(1973, About(MalfunctioningRobots))"], "conclusion": "DirectedBy(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OriginalFilm/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OriginalFilm/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OriginalFilm/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OriginalFilm/2\n"}
{"timestamp": "2025-05-02T02:41:38.109011", "premises": ["Westworld(Westworld) & TVSeries(Westworld) & US(Westworld)", "TVSeries(Westworld) & On(Westworld, TwoZeroOneSix) & On(HBO, Westworld, TwoZeroOneSix)", "all x. all y. (Adapted(Westworld, x) & Adapted(Westworld, y) & On(x, OneNineSevenThree) & Directed(y, MichaelCrichton))", "Film(Westworld) & On(Westworld, OneNineSevenThree) & About(Westworld, MalfunctioningRobots)"], "conclusion": "Directed(MichaelCrichton, AnyFilm(OneNineSevenThree, MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: On/3, On/2, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: On/3, On/2, Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: On/3, On/2, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: On/3, On/2, Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:42:01.703775", "premises": ["Westworld(Westworld) & American(Westworld) & ScienceFictionThrillerTVSeries(Westworld)", "exists x. (DebutOn(Westworld, x) & On(x, HBO)) & (DebutOn(Westworld, TwoZeroOneSix) & On(TwoZeroOneSix, kOneTwoAndHigherEducation))", "exists x. (AdaptedFrom(Westworld, x) & Film(x) & DirectedBy(x, MichaelCrichton))", "exists x. (About(x, RobotsThatMalfunction)) & (Malfunction(x) & Kill(x, Humans))"], "conclusion": "exists x. (DirectedBy(x, MichaelCrichton) & Film(x) & About(x, RobotsThatMalfunction))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-02T02:42:20.363786", "premises": ["District(Xiufeng) -> Guilin(Xiufeng)", "not Guilin(Yangshuo)"], "conclusion": "(exists x. (District(x) & Guilin(x)) -> exists y. (District(y) & Guilin(y)) & (Xiangshan(Xiangshan) & Diecai(Diecai)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0\n"}
{"timestamp": "2025-05-02T02:42:37.489250", "premises": ["exists x. exists y. exists z. exists g. exists h. Guilin(g) & In(x, Guilin) & District(x) & In(y, Guilin) & District(y) & In(z, Guilin) & District(z) & (x_=_Xiufeng_|_x_=_Xiangshan_|_x_=_Diecai_|_x_=_Qixing) & (y_=_Xiufeng_|_y_=_Xiangshan_|_y_=_Diecai_|_y_=_Qixing) & (z_=_Xiufeng_|_z_=_Xiangshan_|_z_=_Diecai_|_z_=_Qixing)", "exists y. exists g. (Yangshuo = x & Guilin(g) & In(x, Guilin) & -District(x))"], "conclusion": "exists g. exists x. exists y. exists y. (District(x) & District(y) & In(x, Guilin) & In(y, Guilin) & (x=Xiangshan_|_x=Diecai) & (y=Xiangshan_|_y=Diecai) & Guilin(g))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Guilin/1, Guilin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Guilin/1, Guilin/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Guilin/1, Guilin/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Guilin/1, Guilin/0\n"}
{"timestamp": "2025-05-02T02:42:46.178422", "premises": ["(District(Xiufeng) & District(Xiangshan) & District(Diecai) & District(Qixing) & InCity(Xiufeng, Guilin) & InCity(Xiangshan, Guilin) & InCity(Diecai, Guilin) & InCity(Qixing, Guilin))", "!District(Yangshuo) in Guilin"], "conclusion": "exists x. exists y. (InCity(x, Guilin) & InCity(y, Guilin) & District(x) & District(y) & Same(x, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'in'.\n!District(Yangshuo) in Guilin\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'in'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'in'.\n!District(Yangshuo) in Guilin\n                    ^\n"}
{"timestamp": "2025-05-02T02:42:55.503015", "premises": ["all x. exists y. (In(x, GuilinCity) & In(x, Districts) & In(y, GuilinCity) & In(y, Districts) & (x=Xiufeng_|_x=Xiangshan_|_x=Diecai_|_x=Qixing))", "-In(Yangshuo, Districts) & GuilinCity(Yangshuo)"], "conclusion": "exists x. exists y. (In(x, City) & In(x, Districts) & In(y, City) & In(y, Districts) & (x=Xiangshan_&_x=Diecai)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. (In(x, City) & In(x, Districts) & In(y, City) & In(y, Districts) & (x=Xiangshan_&_x=Diecai)\n                                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. (In(x, City) & In(x, Districts) & In(y, City) & In(y, Districts) & (x=Xiangshan_&_x=Diecai)\n                                                                                                               ^\n"}
{"timestamp": "2025-05-02T02:43:08.900857", "premises": ["exists x. (District(x) & District(x) -> In(x, Guilin))", "-District(Yangshuo) & In(Yangshuo, Guilin)"], "conclusion": "exists x. exists y. (District(x) & District(y) & In(x, samecity) & In(y, samecity) & samecity(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: samecity/2, samecity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: samecity/2, samecity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: samecity/2, samecity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: samecity/2, samecity/0\n"}
{"timestamp": "2025-05-02T02:49:49.705312", "premises": ["(Xiufeng(District)) * (Xiangshan(District)) * (Diecai(District)) * (Qixing(District)) * (In(Xiufeng, Guilin)) * (In(Xiangshan, Guilin)) * (In(Diecai, Guilin)) * (In(Qixing, Guilin))", "-District(Yangshuo) * In(Yangshuo, Guilin)"], "conclusion": "District(Xiufeng) * In(Xiufeng, Guilin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '*'.\nDistrict(Xiufeng) * In(Xiufeng, Guilin)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '*'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '*'.\nDistrict(Xiufeng) * In(Xiufeng, Guilin)\n                  ^\n"}
{"timestamp": "2025-05-02T02:50:11.730959", "premises": ["exists x.(District(x) & In(x, Guilin) & (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))", "-District(Yangshuo) & In(Yangshuo, Guilin)"], "conclusion": "District(Xiufeng) & In(Xiufeng, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Xiufeng/1, Xiufeng/0\n"}
{"timestamp": "2025-05-02T02:50:18.758898", "premises": ["District(Xiufeng) & In(Xiufeng, Guilin) & District(Xiangshan) & In(Xiangshan, Guilin) & District(Diecai) & In(Diecai, Guilin) & District(Qixing) & In(Qixing, Guilin)", "-District(Yangshuo) & In(Yangshuo, Guilin)"], "conclusion": "(Xiufeng & District(Xiufeng) & In(Xiufeng, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiufeng/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiufeng/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Xiufeng/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Xiufeng/0\n"}
{"timestamp": "2025-05-02T02:50:28.886637", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "-Electronic(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-02T02:50:31.438981", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "-Electronic(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-02T02:50:36.538573", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "-Electronic(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-02T02:50:44.600837", "premises": ["all x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & -Electronic(x))"], "conclusion": "-Electronic(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-02T02:50:53.794772", "premises": ["All x. (iPhone(x) -> Electronic(x))", "exists x. (Phone(x) & iPhone(x))"], "conclusion": "not exists x. Phone(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nAll x. (iPhone(x) -> Electronic(x))\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nAll x. (iPhone(x) -> Electronic(x))\n    ^\n"}
{"timestamp": "2025-05-02T02:51:49.135487", "premises": ["exists x. (Museum(x) & In(x, NYC) & Named(x, MetropolitanMuseumofArt))", "exists x. (Museum(x) & In(x, NYC) & Named(x, WhitneyMuseumofAmericanArt))", "exists x. (Museum(x) & In(x, NYC) & Named(x, MuseumofModernArt))", "exists x. (ByzantineArt(x) & In(x, MetropolitanMuseumofArt))", "exists x. (AmericanArt(x) & In(x, WhitneyMuseumofAmericanArt))"], "conclusion": "exists x. ((NYCMuseum(x) & Includes(x, ByzantineandIslamicArt))) | ((NYCMuseum(x) & Includes(x, AmericanArt)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0\n"}
{"timestamp": "2025-05-02T02:52:53.702649", "premises": ["Museum(TheMetropolitanMuseumofArt) & In(TheMetropolitanMuseumofArt, NYC)", "Museum(WhitneyMuseumofAmericanArt) & In(WhitneyMuseumofAmericanArt, NYC)", "Museum(MuseumofModernArt) & In(MuseumofModernArt, NYC)", "exists x. exists y. (In(x, NYC) & Museum(x) & Museum(y) & Includes(x, Byzantine) & Includes(x, IslamicArt))", "exists x. exists y. (In(x, NYC) & Museum(x) & Museum(y) & Includes(x, AmericanArt)"], "conclusion": "exists x. exists y. (In(x, NYC) & Museum(x) & Museum(y) & Includes(x, Byzantine) & Includes(x, IslamicArt))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. (In(x, NYC) & Museum(x) & Museum(y) & Includes(x, AmericanArt)\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. (In(x, NYC) & Museum(x) & Museum(y) & Includes(x, AmericanArt)\n                                                                                  ^\n"}
{"timestamp": "2025-05-02T02:53:56.819848", "premises": ["Museum(TheMetropolitanMuseumofArt) & In(TheMetropolitanMuseumofArt, NewYork)", "WhitneyMuseumofAmericanArt(WhitneyMuseumofAmericanArt) & In(WhitneyMuseumofAmericanArt, NewYork)", "MuseumofModernArt(MuseumofModernArt) & In(MuseumofModernArt, NewYork)", "ByzantineAndIslamicArt(TheMetropolitanMuseumofArt)", "AmericanArt(WhitneyMuseumofAmericanArt)"], "conclusion": "exists x. (Museum(x) & In(x, NewYork) & ByzantineAndIslamicArt(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MuseumofModernArt/1, MuseumofModernArt/0, WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MuseumofModernArt/1, MuseumofModernArt/0, WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MuseumofModernArt/1, MuseumofModernArt/0, WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MuseumofModernArt/1, MuseumofModernArt/0, WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0\n"}
{"timestamp": "2025-05-02T02:54:22.281805", "premises": ["all x. (Museum(x) & In(x, NYC) & MuseumIn(x, MetropolitanMuseum))", "all x. (Museum(x) & In(x, NYC) & MuseumIn(x, Whitney))", "all x. (Museum(x) & In(x, NYC) & MuseumIn(x, MoMA))", "exists x. ((MuseumIn(x, MetropolitanMuseum) & Inclusion(x, ByzantineAndIslamicArt))", "exists x. ((MuseumIn(x, Whitney) & Inclusion(x, AmericanArt))"], "conclusion": "exists x. (In(x, NYC) & Inclusion(x, ByzantineAndIslamicArt))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((MuseumIn(x, MetropolitanMuseum) & Inclusion(x, ByzantineAndIslamicArt))\n                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((MuseumIn(x, MetropolitanMuseum) & Inclusion(x, ByzantineAndIslamicArt))\n                                                                                   ^\n"}
{"timestamp": "2025-05-02T02:54:49.880178", "premises": ["Museum(MetropolitanMuseumofArt) & In(MetropolitanMuseumofArt, NYC)", "WhitneyMuseumofAmericanArt(WhitneyMuseumofAmericanArt) & In(WhitneyMuseumofAmericanArt, NYC)", "Museum(MuseumofModernArt) & In(MuseumofModernArt, NYC)", "Includes(MetropolitanMuseumofArt, ByzantineArt) & Includes(MetropolitanMuseumofArt, IslamicArt)", "Includes(WhitneyMuseumofAmericanArt, AmericanArt)"], "conclusion": "all x. (Museum(x) & In(x, NYC)) -> (Includes(x, ByzantineArt) & Includes(x, IslamicArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumofAmericanArt/1, WhitneyMuseumofAmericanArt/0\n"}
{"timestamp": "2025-05-02T02:55:27.648788", "premises": ["Museum(MetropolitanMuseumofArt) & In(MetropolitanMuseumofArt, NYC)", "Museum(WhitneyMuseumofAmericanArt) & In(WhitneyMuseumofAmericanArt, NYC)", "Museum(TheMuseumofModernArt) & In(TheMuseumofModernArt, NYC)", "all x. (Includes(MetropolitanMuseumofArt, x) & ByzantineArt(x) & IslamicArt(x))", "all x. (Includes(WhitneyMuseumofAmericanArt, x) & AmericanArt(x))", "all x. ((Museum(x) & In(x, NYC)) -> (Includes(x, ByzantineArt) & Includes(x, IslamicArt)))"], "conclusion": "all x. ((Museum(x) & In(x, NYC)) -> (Includes(x, AmericanArt)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0, AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0, AmericanArt/1, AmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0, AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: IslamicArt/1, IslamicArt/0, ByzantineArt/1, ByzantineArt/0, AmericanArt/1, AmericanArt/0\n"}
{"timestamp": "2025-05-02T02:55:42.024506", "premises": ["Museum(MuseumOfArt) & In(MuseumOfArt, NewYorkCity)", "Museum(WhitneyMuseumOfAmericanArt) & In(WhitneyMuseumOfAmericanArt, NewYorkCity)", "Museum(MuseumOfModernArt) & In(MuseumOfModernArt, NewYorkCity)", "AmericanArt(WhitneyMuseumOfAmericanArt)"], "conclusion": "exists x. Museum(x) & Contains(x, AmericanArt) & In(x, NewYorkCity)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0\n"}
{"timestamp": "2025-05-02T02:57:24.726090", "premises": ["Museum(TheMetropolitanMuseumofArt) & In(TheMetropolitanMuseumofArt, NewYorkCity)", "Museum(WhitneyMuseumofAmericanArt) & In(WhitneyMuseumofAmericanArt, NewYorkCity)", "Museum(TheMuseumofModernArt) & In(TheMuseumofModernArt, NewYorkCity)", "exists x. ((Includes(TheMetropolitanMuseumofArt, x) & Exists(x, ByzantineArt) & Exists(x, IslamicArt)))", "exists x. ((Includes(WhitneyMuseumofAmericanArt, x) & Exists(x, AmericanArt))"], "conclusion": "exists x. exists y. (Museum(x) & In(x, NewYorkCity) & (Includes(x, y) & Exists(y, AmericanArt)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((Includes(WhitneyMuseumofAmericanArt, x) & Exists(x, AmericanArt))\n                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((Includes(WhitneyMuseumofAmericanArt, x) & Exists(x, AmericanArt))\n                                                                             ^\n"}
{"timestamp": "2025-05-02T02:57:48.471876", "premises": ["Museum(MetropolitanMuseumOfArt) & NYC(MetropolitanMuseumOfArt)", "WhitneyMuseumOfAmericanArt(WhitneyMuseumOfAmericanArt) & NYC(WhitneyMuseumOfAmericanArt)", "Museum(MuseumOfModernArt) & NYC(MuseumOfModernArt)", "Includes(MetropolitanMuseumOfArt, Byzantine) & Includes(MetropolitanMuseumOfArt, IslamicArt)", "Includes(WhitneyMuseumOfAmericanArt, AmericanArt)"], "conclusion": "exists x. exists y. ((In(x, NYC) & Museum(x)) -> Includes(x, AmericanArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, NYC/1, NYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, NYC/1, NYC/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, NYC/1, NYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, NYC/1, NYC/0\n"}
{"timestamp": "2025-05-02T02:58:39.273300", "premises": ["Museum(MetropolitanMuseumOfArt) & In(MetropolitanMuseumOfArt, NewYork)", "Museum(WhitneyMuseumOfAmericanArt) & In(WhitneyMuseumOfAmericanArt, NewYork)", "Museum(MuseumOfModernArt) & In(MuseumOfModernArt, NewYork)", "includes(MetropolitanMuseumOfArt, Byzantine, IslamicArt)", "includes(WhitneyMuseumOfAmericanArt, AmericanArt)"], "conclusion": "exists x. exists y. (Museum(x) & In(x, NewYork) & includes(x, AmericanArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: includes/3, includes/2.\n\n\nFatal error:  The following symbols are used with multiple arities: includes/3, includes/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: includes/3, includes/2.\n\n\nFatal error:  The following symbols are used with multiple arities: includes/3, includes/2\n"}
{"timestamp": "2025-05-02T03:00:15.844483", "premises": ["all x. ((Mammal(x) & LayEggs(x)) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. ((Mammal(x) & Invertebrate(x)) -> -Mammal(x))", "all x. (Animal(x) & (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(Hyrax) & Mammal(Hyrax)", "LayEggs(Grebe)", "Grebe(Grebe) & -Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "all x. ((Hyrax(x) & LayEggs(x)) -> -Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Hyrax/1, Hyrax/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T03:01:10.503456", "premises": ["exists x. exists y. (LayEggs(x) & Mammal(x) & (Platypus(y) | Echidna(y)) & ForEach(y, LayEggs))", "exists x. ((Platypus(x) & Hyrax(x)) -> -x)", "exists x. ((Echidna(x) & Hyrax(x)) -> -x)", "exists x. ((Mammal(x) & Invertebrate(x)) -> -x)", "exists x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "exists x. (Mammal(x) -> Animal(x))", "exists x. (Hyrax(x) -> Mammal(x))", "Grebe(Grebes) & LayEggs(Grebes)", "exists x. ((Grebe(x) & Platypus(x)) -> -x) & exists x. ((Grebe(x) & Echidna(x)) -> -x)"], "conclusion": "exists x. ((Hyrax(x) & LayEggs(x)) -> x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-02T03:01:55.398106", "premises": ["all x. ((EggLayer(x) & Mammal(x)) -> ([x=(Platypus) | x=(Echidna)])", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. exists y. (Mammal(x) & Invertebrate(y) & (x=y))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "All x. (Grebe(x) -> EggLayer(x))", "exists x. (Grebe(x) & -(Platypus(x) | Echidna(x)))"], "conclusion": "exists x. (Hyrax(x) & EggLayer(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ']'.  Expected token ')'.\nall x. ((EggLayer(x) & Mammal(x)) -> ([x=(Platypus) | x=(Echidna)])\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ']'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ']'.  Expected token ')'.\nall x. ((EggLayer(x) & Mammal(x)) -> ([x=(Platypus) | x=(Echidna)])\n                                                                 ^\n"}
{"timestamp": "2025-05-02T03:03:23.167155", "premises": ["exists x. (Mammal(x) & LaysEggs(x) -> (Platypus(x) | Echidna(x)))", "-Platypus(Hyrax)", "-Echidna(Hyrax)", "-exists x. Mammal(x) & Invertebrate(x)", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "Hyrax(Mammal)", "Grebes(Grebe) & LaysEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "Hyraxs(Hyrax) & LaysEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-05-02T03:04:48.338949", "premises": ["all x. (Mammal(x) -> exists y. (LayEggs(x,y) & (Platypus(y) | Echidna(y))))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "Grebe(Grebe) & LayEggs(Grebe, Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "exists x. (Hyrax(x) & LayEggs(x, Grebe))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Grebe/1, Grebe/0\n"}
{"timestamp": "2025-05-02T03:05:35.365014", "premises": ["exists x. (OnlyType(x, Mammal) & LaysEggs(x) & (Platypus(x) | Echidna(x)))", "exists x. (Platypus(x) -> -Hyrax(x))", "exists x. (Echidna(x) -> -Hyrax(x))", "exists x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "exists x. (Mammal(x) -> Animal(x))", "exists x. (Hyrax(x) -> Mammal(x))", "exists x. (Grebe(x) -> LaysEggs(x))", "exists x. (Grebe(x) -> -Platypus(x) & Echidna(x))"], "conclusion": "exists x. (Hyrax(x) -> LaysEggs(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mammal/1, Mammal/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mammal/1, Mammal/0\n"}
{"timestamp": "2025-05-02T03:06:07.002971", "premises": ["exists x. exists y. ((Mammal(x) & LayEggs(x)) -> (Platypus(y) | Echidna(y)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "-Vertebrate(Mammal)", "all x. (Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "Hyraxes(x)", "Grebes(x)", "-Platypus(Grebes) & -Echidna(Grebes)"], "conclusion": "Hyraxes(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0, Mammal/1, Mammal/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0, Mammal/1, Mammal/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0, Mammal/1, Mammal/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0, Mammal/1, Mammal/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-02T03:07:18.792764", "premises": ["American(fMaggieFriedman) & Screenwriter(fMaggieFriedman) & Producer(fMaggieFriedman)", "exists x. exists y.(Showrunner(x) & ExecutiveProducer(x) & WitchesOfEastEnd(y) & TheShow(x, y))", "FantasyDramaSeries(WitchesOfEastEnd)", "exists x. exists y. (Producer(x) & Developer(x) & Eastwick(y))", "exists x. exists y. (Eastwick(x) & By(x, ABC))"], "conclusion": "exists x. exists y. (By(x, ABC) & Developer(z) & TheShow(z, y) & Showrunner(z))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0\n"}
{"timestamp": "2025-05-02T03:08:01.468623", "premises": ["(AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman))", "(Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & LifetimeSeries(WitchesOfEastEnd))", "(FantasyDramaSeries(WitchesOfEastEnd) & Showrunner(MaggieFriedman))", "(Producer(MaggieFriedman) & Developed(MaggieFriedman, Eastwick))", "(ABCSeries(Eastwick) & Producer(MaggieFriedman))"], "conclusion": "exists x. (ABCSeries(x) & DevelopedBy(x, Showrunner(WitchesOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-05-02T03:08:32.844282", "premises": ["American(MaggieFriedman) & ScreenWriter(MaggieFriedman) & Producer(MaggieFriedman)", "exists x. exists y. (ShowRunner(MaggieFriedman, x) & ExecutiveProducer(MaggieFriedman, x) & WitchesOfEastEnd(x) & Show(x) & Lifetime(x) & (WitchesOfEastEnd(y) & Show(y) & Lifetime(y)))", "exists x. exists y. (WitchesOfEastEnd(x) & Serie(x) & (FantasyDrama(y) | Drama(y) | (FantasyDrama(x) and Drama(x))))", "Produce(MaggieFriedman, Eastwick) & Develop(MaggieFriedman, Eastwick)", "exists x. (SeriesBy(Eastwick, x) & ABC(x))"], "conclusion": "exists x. (SeriesBy(x, ABC) & DevelopedBy(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0, ABC/1, ABC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0, ABC/1, ABC/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0, ABC/1, ABC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0, ABC/1, ABC/0\n"}
{"timestamp": "2025-05-02T03:08:53.284815", "premises": ["American(MaggieFriedman) & (ScreenWriter(MaggieFriedman) & Producer(MaggieFriedman))", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & LifetimeTelevisionSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman) & Developed(MaggieFriedman) & Eastwick", "SeriesBy(Eastwick, ABC)"], "conclusion": "exists x. (SeriesBy(x, ABC) & DevelopedBy(WitchesOfEastEnd, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Eastwick/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Eastwick/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Eastwick/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Eastwick/0\n"}
{"timestamp": "2025-05-02T03:10:00.889859", "premises": ["MaggieFriedman(Friedman) & American(Friedman)", "SolelyBy(WitchesOfEastEnd, MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & Showrunner(MaggieFriedman)", "FantasyDrama(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesBy(Eastwick, ABC)"], "conclusion": "exists x. (Developed(x, y) & IsInSeriesBy(x, ABC) & By(x, ShowrunnerOf(WitchesOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0\n"}
{"timestamp": "2025-05-02T03:10:23.391058", "premises": ["American(MaggieFriedman) & ScreenWriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman) & Series(WitchesOfEastEnd)", "all x. (Series(x) & DramaFantasy(x))", "exists x. (Develop(MaggieFriedman, x) & Present(eX, Eastwick))", "All x. Present(eX, Eastwick) & Present(eX, Series) -> Present(eX, ABC)"], "conclusion": "exists x. (Develop(MaggieFriedman, x) & ABC(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nAll x. Present(eX, Eastwick) & Present(eX, Series) -> Present(eX, ABC)\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nAll x. Present(eX, Eastwick) & Present(eX, Series) -> Present(eX, ABC)\n    ^\n"}
{"timestamp": "2025-05-02T03:10:44.607876", "premises": ["AmericanScreenwriter(MaggieFriedman) & AmericanProducer(MaggieFriedman)", "(Showrunner(MaggieFriedman) & ExecutiveProducer(MaggieFriedman)) & (WitchesOfEastEnd(x) & LifetimeTelevisionSeries(x))", "(FantasyDramaSeries(WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd)) & (FantasyDramaSeries(x) & LifetimeTelevisionSeries(x))", "Produce(MaggieFriedman, Eastwick) & Develop(MaggieFriedman, Eastwick)"], "conclusion": "exists x. (Developed(x, WitchesOfEastEnd) & SeriesBy(x, ABC))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WitchesOfEastEnd/1, WitchesOfEastEnd/0\n"}
{"timestamp": "2025-05-02T03:11:08.107456", "premises": ["exists x. exists y. (BoneyM.ContributedTo(x) & GermanSinglesChart(y) & Peak(x, y, One))", "exists x. exists y. (Song(HoorayHoorayItsAHoliHoliday) & BigHitAllOverEurope(x) & PlaysIn(x, y, TopChart))", "(-BoneyM.ContributedTo(HoorayHoorayItsAHoliHoliday))", "exists x. exists y. (Peak(x, GermanSinglesChart, One) & PlaysIn(x, y, TopChart) & -Peak(x, y, One))"], "conclusion": "Peak(HoorayHoorayItsAHoliHoliday, GermanSinglesChart, One)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. exists y. (BoneyM.ContributedTo(x) & GermanSinglesChart(y) & Peak(x, y, One))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. exists y. (BoneyM.ContributedTo(x) & GermanSinglesChart(y) & Peak(x, y, One))\n                           ^\n"}
{"timestamp": "2025-05-02T03:11:28.399356", "premises": ["exists x. exists y. (BoneyMHas(x) & German(x) & OneSingles(x) & Peaked(x, OneSingle))", "exists x. (European(x) & BigHit(x, HoorayHoorayItsAHoliHoliday))", "exists x. (German(x) & -OneSingles(x, HoorayHoorayItsAHoliHoliday))", "all x. Peaked(x, OneSingle) -> exists y. (-OneSingles(y, x) & German(y))"], "conclusion": "Peaked(HoorayHoorayItsAHoliHoliday, OneSingle)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OneSingles/2, OneSingles/1.\n\n\nFatal error:  The following symbols are used with multiple arities: OneSingles/2, OneSingles/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OneSingles/2, OneSingles/1.\n\n\nFatal error:  The following symbols are used with multiple arities: OneSingles/2, OneSingles/1\n"}
{"timestamp": "2025-05-02T03:11:52.476210", "premises": ["all x. (GermanSong(x) & Peak(x, #One) & In(x, Germany))", "exists x. (EuropeanSong(x) & Hit(x, Big))", "exists x. ((GermanSong(x) & Peak(x, #One) & In(x, Germany)) -> -EuropeanSong(x))", "all x. (EuropeanSong(x) & Peak(x, #One) -> GermanSong(x))"], "conclusion": "Peak(HoorayHoorayItsAHoliHoliday, #One) & In(HoorayHoorayItsAHoliHoliday, Germany) & -EuropeanSong(HoorayHoorayItsAHoliHoliday)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((GermanSong(x) & Peak(%%START ERROR%%x,#One%%END ERROR%%)) & In(x,Germany)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x ((GermanSong(x) & Peak(%%START ERROR%%x,#One%%END ERROR%%)) & In(x,Germany)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-02T03:12:10.705955", "premises": ["exists x. exists y. (Song(x) & Germany(y) & PeaksIn(x, y))", "exists x. (PeaksIn(HoorayHoorayItsAHoliHoliday, x) & Europe(x))", "(-PeaksIn(HoorayHoorayItsAHoliHoliday, Germany))", "exists x. (PeaksBelow(x, Germany) & -Song(x) & Not(x, Germany))"], "conclusion": "PeaksBelow(HoorayHoorayItsAHoliHoliday, Germany)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Germany/1, Germany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Germany/1, Germany/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Germany/1, Germany/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Germany/1, Germany/0\n"}
{"timestamp": "2025-05-02T03:12:33.495936", "premises": ["all x. (BoneyMDot_had_x_in_germany)", "(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\"_was_a_big_hit_all_over_Europe)", "\"Hooray! Hooray! It's a Holi-Holiday!\" was not in German #1 singles", "(-(exists x. (Song(x) & PeaksAt(x, GermanChart) & Top(x, One)))) & (-(exists x. (InTop(x, One, GermanChart) & Song(x))))"], "conclusion": "PeaksAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksAt(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", GermanChart)\n               ^\n"}
{"timestamp": "2025-05-02T03:13:34.967370", "premises": ["all x. ((GermanChart(x) & Singles(x) & First(x, Germany)) -> Has(x, BoneyM))", "exists x. ((EuropeanChart(x) & Singles(x) & Peak(x, First)) -> Has(x, HoorayHooray))", "exists x. ((GermanChart(x) & Singles(x) & First(x, Germany)) & -Has(x, HoorayHooray))", "exists x. ((GermanChart(x) & Singles(x) & -First(x, Germany)) & Peak(x, First) & -Has(x, Germany))"], "conclusion": "Peak(HoorayHooray, First) & -GermanChart(HoorayHooray)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: First/2, First/0.\n\n\nFatal error:  The following symbols are used with multiple arities: First/2, First/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: First/2, First/0.\n\n\nFatal error:  The following symbols are used with multiple arities: First/2, First/0\n"}
{"timestamp": "2025-05-02T03:14:13.243821", "premises": ["exists x. exists y. (Singer(x) & Had(x, GermanOneSingle) & GermanOneSingle(y))", "exists x. (HolidaySong(HoorayHoorayItsAHoliHoliday) & MadeTheHit(x) & Europe(x))", "exists x. (HolidaySong(HoorayHoorayItsAHoliHoliday) & MadeTheHit(x) & -German1Single(x))", "exists x. exists y. (PeakedBelow1(x) & German1Single(y) & -German1Single(x))"], "conclusion": "PeakedBelow1(HoorayHoorayItsAHoliHoliday)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: GermanOneSingle/1, GermanOneSingle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GermanOneSingle/1, GermanOneSingle/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: GermanOneSingle/1, GermanOneSingle/0.\n\n\nFatal error:  The following symbols are used with multiple arities: GermanOneSingle/1, GermanOneSingle/0\n"}
{"timestamp": "2025-05-04T21:34:47.023054", "premises": ["exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "((Exists x. (Develop(eTS, x) & StandardizedTest(x) & For(x, kOneTwoAndHigherEducation)) & Exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & Exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n((Exists x. (Develop(eTS, x) & StandardizedTest(x) & For(x, kOneTwoAndHigherEducation)) & Exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & Exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting)))\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n((Exists x. (Develop(eTS, x) & StandardizedTest(x) & For(x, kOneTwoAndHigherEducation)) & Exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))) & Exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting)))\n         ^\n"}
