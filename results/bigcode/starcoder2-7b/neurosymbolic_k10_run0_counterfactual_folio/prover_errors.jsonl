{"timestamp": "2025-05-03T03:49:22.214281", "premises": ["exists x. (Venhoda(x) & CzechPianist(x) & Specialized(x, Hieroglyphics, MachineLearning, Badminton))", "all x. (Pianist(x) -> Chef(x))", "exists x. (Chef(x) -> Enjoy(x, Music))", "exists x. (Venhoda(x) & Burn(x, Book, OneNineFourSix, MethodOfStudyingGregorianChant))"], "conclusion": "exists x. (Pianist(x) & -Specialized(x, MachineLearning))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Specialized/4, Specialized/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Specialized/4, Specialized/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Specialized/4, Specialized/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Specialized/4, Specialized/2\n"}
{"timestamp": "2025-05-03T03:49:51.853506", "premises": ["exists x. (Czech(x) & Pianist(x) & SpecializesIn(x, StudyOfHieroglyphics, MachineLearning, Badminton))", "exists x. exists y. (Chef(y) & Pianist(x))", "exists x. (Chef(x) & Enjoys(x, Music))", "exists x. (Burn(x, MethodOfStudyingGregorianChant) & In(x, OneNineFourSix))"], "conclusion": "exists x. (-SpecializesIn(x, MachineLearning))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SpecializesIn/4, SpecializesIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: SpecializesIn/4, SpecializesIn/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SpecializesIn/4, SpecializesIn/2.\n\n\nFatal error:  The following symbols are used with multiple arities: SpecializesIn/4, SpecializesIn/2\n"}
{"timestamp": "2025-05-03T03:51:51.415030", "premises": ["exists x. exists y. (Reptile(x) & Explodes(x, y) & Human(y))", "Reptile(Stonefish)", "exists x. (Stonefish(x) & ExplodesWhenSteppedOn(x))", "exists x. exists y. (Stonefish(x) & Explodes(x, y) & -Treatment(y)) -> (Causes(x, y) & Death(y))", "Treatment(RemoveHeatToAffectedArea) | Antivenom(x)"], "conclusion": "exists x. exists y. (Reptile(x) & Explodes(x, y) & -Treatment(y)) -> (Causes(x, y) & Death(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-03T03:52:16.631618", "premises": ["exists x. exists y. (Explodes(x, y) & Reptile(x) & Person(y))", "Reptile(Stonefish)", "Stonefish(Stonefish) & ExplodesWhen(Stonefish, SteppedOn)", "exists x. (Explodes(Stonefish, x) & -Treated(x)) & (Treated(x) -> CausesDeath(x))", "Treat(RemoveHeatToAffectedAreaOrUseAntivenom)"], "conclusion": "exists x. exists y. (Explodes(x, y) & Reptile(x) & -Treated(y)) & (Treated(y) -> CausesDeath(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-03T03:52:42.019302", "premises": ["exists x. exists y. (Explode(x) & On(x, y) -> Person(y))", "Reptile(Stonefish)", "exists x. (Explode(x) & ExplodeWhen(x, SteppedOn))", "exists x. exists y. (Explode(x) & On(x, y) & -Treated(x, y) -> CausesDeathTo(x, y))", "exists x. (Treats(x, RemoveHeat) & exists y. (Affected(y, x) -> RemoveHeat(y)))"], "conclusion": "exists x. (Explode(x) & -Treated(x, y) & CausesDeathTo(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RemoveHeat/1, RemoveHeat/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RemoveHeat/1, RemoveHeat/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RemoveHeat/1, RemoveHeat/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RemoveHeat/1, RemoveHeat/0\n"}
{"timestamp": "2025-05-03T03:53:11.118921", "premises": ["exists x. exists y. (Reptile(x) & Explodes(x, y) & On(y, Person))", "Reptile(Stonefish)", "Stonefish(Stonefish) & Explodes(Stonefish, SteppedOn)", "exists x. exists y. (Reptile(x) & Explodes(x, y) & On(y, Person) & -Treated(y)) -> Causes(x, Death)", "exists x. exists y. (Reptile(x) & Explodes(x, y) & Heated(y) & Antivenom(y))"], "conclusion": "exists x. exists y. (Reptile(x) & Explodes(x, y) & -Treated(y)) -> Causes(x, Death)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-03T03:54:29.422951", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, Person))", "Reptile(Stonefish)", "exists x. (Stonefish(x) & ExplodesWhenSteppedOn(x))", "exists x. (exists y. ((ExplodesOn(x, y) & NotTreated(x, y)) -> CausesDeathTo(x, y)))", "exists x. (Treat(x, Heat) & AffectedArea(x)) | (Treat(x, Antivenom) & AffectedArea(x))"], "conclusion": "exists x. ((Reptile(x) & CausesDeath(x)) -> NotTreated(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stonefish/1, Stonefish/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stonefish/1, Stonefish/0\n"}
{"timestamp": "2025-05-03T03:55:55.153765", "premises": ["all x. (Bear(x) & InDesert(x) -> -Animal(x))", "exists x. (Bear(x) & InDesert(x))"], "conclusion": "-All(x. (Bear(x) & Animal(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-All(x. (Bear(x) & Animal(x)))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-All(x. (Bear(x) & Animal(x)))\n      ^\n"}
{"timestamp": "2025-05-03T03:56:12.809247", "premises": ["exists x. exists y. (In(x, Desert) & Bear(x) & Animal(y) -> (x=y))", "exists x. exists y. (In(x, Desert) & Bear(x) & Animal(y) -> (x=y))"], "conclusion": "-All(x. (In(x, Desert) & Bear(x) -> Animal(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-All(x. (In(x, Desert) & Bear(x) -> Animal(x))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-All(x. (In(x, Desert) & Bear(x) -> Animal(x))\n      ^\n"}
{"timestamp": "2025-05-03T03:56:20.652404", "premises": ["all x. (InDesert(x, Bear) -> -Animal(x))", "exists x. (Bear(x) & InDesert(x, Bear))"], "conclusion": "-All(x. (InDesert(x, Bear) -> Animal(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\n-All(x. (InDesert(x, Bear) -> Animal(x)))\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\n-All(x. (InDesert(x, Bear) -> Animal(x)))\n      ^\n"}
{"timestamp": "2025-05-03T03:57:16.258216", "premises": ["Ambiortus(Ambiortus) & Prehistoric(Ambiortus) & Mammal(Ambiortus) & Genus(Ambiortus)", "(Ambiortus(AmbiortusDementjevi) & Species(AmbiortusDementjevi) & Ambiortus(Ambiortus))", "(Lived(AmbiortusDementjevi, Mars) & Mars(Mars))", "(Adele(Adele) & Discoverer(Adele) & Ambiortus(Ambiortus))"], "conclusion": "(Adele(Adele) & Discoverer(Adele) & NewGenus(Ambiortus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-03T03:57:33.776296", "premises": ["exists x. exists y. (Prehistoric(x) & Mammal(x) & (Genus(x) & Genus(y) & (x=y)))", "exists x. (Ambiortus(x) & AmbiortusDementjevi(x) & (exists y. (Ambiortus(y) & Species(y) & (-(x=y))))", "exists x. exists y. (Mars(x) & Where(AmbiortusDementjevi, x) & Lived(AmbiortusDementjevi, x))", "Adele(x) & Discovered(x, Ambiortus)"], "conclusion": "exists x. (Discovered(Adele, x) & Genus(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (Ambiortus(x) & AmbiortusDementjevi(x) & (exists y. (Ambiortus(y) & Species(y) & (-(x=y))))\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (Ambiortus(x) & AmbiortusDementjevi(x) & (exists y. (Ambiortus(y) & Species(y) & (-(x=y))))\n                                                                                                     ^\n"}
{"timestamp": "2025-05-03T03:57:49.801214", "premises": ["all x. exists y. (Mammal(x) & Genus(x) & Prehistoric(x) & IsA(x, y))", "exists x. (Ambiortus(x) & Species(x) & OnlyKnown(x, Ambiortus))", "exists x. exists y. (Where(x, AmbiortusDementjevi) & (Mars(x) & -Mars(y) & In(x, y)))", "exists x. (Discoverer(x, Ambiortus))"], "conclusion": "exists x. (Discoverer(x, Ambiortus) & New(x, MammalGenus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T03:58:02.064410", "premises": ["all x. (Ambiortus(x) -> Prehistoric(x) & Mammal(x) & Genus(x))", "(Ambiortus(AmbiortusDementjevi) & Species(AmbiortusDementjevi) & Ambiortus(Ambiortus))", "In(Mars, AmbiortusDementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "New(Adele, MammalGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T03:58:15.326451", "premises": ["exists x. (PrehistoricMammalGenus(x) & Ambiortus(x))", "exists x. (Ambiortus(x) & OneKnownSpecies(x, AmbiortusDementjevi))", "exists x. (Mars(x) & Where(AmbiortusDementjevi, x))", "Adele(x) & Discovered(x, Ambiortus)"], "conclusion": "Adele(x) & Discovered(x, NewMammalGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T03:58:38.149034", "premises": ["Ambiortus(x) & Mammal(x) & Prehistoric(x)", "Ambiortus(Dementjevi) & SpeciesOf(Dementjevi, Ambiortus)", "Mars(x) & Where(Dementjevi, x)", "Adele(x) & Discoverer(Dementjevi, x)"], "conclusion": "Discover(Adele, NewMammalGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-03T03:58:51.032405", "premises": ["Ambiortus(x) & PrehistoricMammal(x)", "AmbiortusDementjevi(Ambiortus) & OnlyKnownSpeciesOf(Ambiortus)", "Mars(x) & Where(AmbiortusDementjevi, x)", "Adele(x) & Discoverer(Ambiortus, x)"], "conclusion": "exists x. (Discoverer(Adele, x) & NewMammalGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-03T03:59:17.649653", "premises": ["Prehistoric(Ambiortus) & Mammal(Ambiortus)", "AmbiortusDementjevi", "exists x. (AmbiortusDementjevi & Lived(x, Mars))", "exists x. (Adele & Discoverer(x, Ambiortus))"], "conclusion": "exists x. (Discoverer(Adele, x) & New(x) & Mammal(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Adele/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Adele/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Adele/0\n"}
{"timestamp": "2025-05-03T03:59:31.364800", "premises": ["all x. (Ambiortus(x) & PrehistoricMammalGenus(x))", "all x. (Ambiortus(x) & AmbiortusDementjevi(x) & OnlyKnownSpecies(x, Ambiortus))", "Mars(Mars) & Where(AmbiortusDementjevi, Mars)", "Adele(Adele) & Discoverer(Adele, Ambiortus)"], "conclusion": "Adele(Adele) & LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Mars/1, Mars/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Mars/1, Mars/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Mars/1, Mars/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0, Mars/1, Mars/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-03T03:59:42.378775", "premises": ["exists x. exists y. (Ambiortus(x) & PrehistoricMammalGenus(x) & Ambiortus(y) & PrehistoricMammalGenus(y))", "Species(Ambiortus, AmbiortusDementjevi)", "Lives(Mars, AmbiortusDementjevi)", "Discovers(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T03:59:57.235891", "premises": ["exists x. exists y. (Ambiortus(x) & PrehistoricMammal(x) & Species(x, y))", "exists x. (Ambiortus(x) & Species(x, AmbiortusDementjevi) & SpeciesIsKnown(x, AmbiortusDementjevi))", "exists x. (Mars(x) & Where(x, AmbiortusDementjevi))", "exists x. (Adele(x) & Discoverer(x, Ambiortus))"], "conclusion": "exists x. (Adele(x) & OnMars(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T04:00:12.115041", "premises": ["Ambiortus(x) & Mammal(x) & Prehistoric(x)", "exists x. Ambiortus(x) & exists y. (Ambiortus(x) & Ambiortus(y) & OnlyKnownSpecies(x, y))", "exists x. (Mars(x) & Where(x, AmbiortusDementjevi))", "exists x. (Adele(x) & Discovered(x, Ambiortus))"], "conclusion": "Adele(x) & (Where(x, Mars) & Discovered(x, Ambiortus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Mars/1, Mars/0\n"}
{"timestamp": "2025-05-03T04:00:24.947882", "premises": ["exists x. (Genus(x, Ambiortus) & Mammal(x) & Prehistoric(x))", "exists x. (Species(AmbiortusDementjevi, Ambiortus) & Ambiortus(x))", "AmbiortusDementjevi(x) & Lived(x, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "exists x. (Discoverer(x, Ambiortus) & Lived(x, Mars))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-03T04:00:34.492669", "premises": ["Prehistoric(Ambiortus) & MammalGenus(Ambiortus)", "AmbiortusDementjevi(Ambiortus)", "Lived(AmbiortusDementjevi, Mars)", "Discovered(Adele, Ambiortus)"], "conclusion": "LivedOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-05-03T04:00:50.486246", "premises": ["all x. (Ambiortus(x) & PrehistoricMammal(x))", "exists x. exists y. (Ambiortus(x) & Ambiortus(y) & SpeciesOf(x, y) & Only(x))", "exists x. exists y. (Mars(x) & AmbiortusDementjevi(y) & LivedOn(x, y))", "exists x. exists y. (Adele(x) & DiscovererOf(x, y) & Ambiortus(y))"], "conclusion": "exists x. (Adele(x) & LivedOn(x, Mars))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mars/1, Mars/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mars/1, Mars/0\n"}
{"timestamp": "2025-05-03T04:00:58.943284", "premises": ["PrehistoricMammalGenus(Ambiortus)", "SpeciesOf(AmbiortusDementjevi, Ambiortus)", "Mars", "Discovers(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mars/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mars/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mars/0\n"}
{"timestamp": "2025-05-03T04:01:11.741985", "premises": ["Ambiortus(Ambiortus) & Mammal(Ambiortus) & Prehistoric(Ambiortus) & Genus(Ambiortus)", "Ambiortus(AmbiortusDementjevi) & KnownSpecies(Ambiortus, AmbiortusDementjevi)", "LivesOn(AmbiortusDementjevi, Mars)", "Adele(Adele) & Discovered(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Adele/1, Adele/0\n"}
{"timestamp": "2025-05-03T04:01:20.188671", "premises": ["exists x. (Genus(x, Ambiortus) & PrehistoricMammal(x))", "Species(AmbiortusDementjevi)", "Mars", "Discovers(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mars/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mars/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Mars/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Mars/0\n"}
{"timestamp": "2025-05-03T04:02:11.986054", "premises": ["exists x. exists y. (FortTiconderoga(x) & FortCarillon(y) & OldNameFor(x, y))", "ChrisHemsworth(Chris) & Destroys(Chris, FortCarillon)", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. (NewFrance(x) & -InEurope(x))"], "conclusion": "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance) & Destroyed(Chris, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-03T04:02:22.704140", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "HemsworthDestroyed(FortCarillon)", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. (NewFrance(x) & -In(x, Europe))"], "conclusion": "HemsworthDestroyed(x) & LocatedIn(x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-03T04:02:33.951162", "premises": ["all x. all y. (FortTiconderoga(x) & FortCarillon(y) -> SameAs(x, y))", "HemsworthDestroyed(ChrisHemsworth) & FortCarillon(FortCarillon)", "Location(FortCarillon, NewFrance)", "NotIn(NewFrance, Europe)"], "conclusion": "HemsworthDestroyed(ChrisHemsworth) & Location(FortCarillon, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-03T04:02:47.918981", "premises": ["exists x. exists y. (FortTiconderoga(x) & FortCarillon(y) & FormerNameFor(x, y))", "exists x. (ChrisHemsworth(x) & Destroy(x, FortCarillon))", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. (NewFrance(x) & -In(x, Europe))"], "conclusion": "exists x. (ChrisHemsworth(x) & Destroy(x, y) & LocatedIn(y, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-03T04:03:02.484398", "premises": ["exists x. exists y. (Fort(x) & FormerNameFor(x, y) & Fort(y))", "exists x. (ChrisHemsworth(x) & Destroys(x, FortCarillon))", "exists x. (FortCarillon(x) & LocatedIn(x, NewFrance))", "exists x. (NewFrance(x) & -In(x, Europe))"], "conclusion": "exists x. (ChrisHemsworth(x) & Destroys(x, y) & Fort(y) & LocatedIn(y, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-05-03T04:05:37.439076", "premises": ["Paris(In(Paris, UnitedStatesOfAmerica))", "UnitedStatesOfAmerica(PartOf(UnitedStatesOfAmerica, SouthAmerica))", "SouthAmerica(In(SouthAmerica, EasternHemisphere))", "(HighlyDevelopedCity(Paris) & NoOneLives(Paris))", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "exists x. (HighlyDevelopedCity(x) & NoOneLives(x)) & exists y. (In(y, EasternHemisphere) & In(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-03T04:06:31.480306", "premises": ["In(Paris, UnitedStateofAmerica)", "In(UnitedStateofAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "In(Paris, HighlyDevelopedCity)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "all x. (In(x, HighlyDevelopedCity) & -In(x, NooneLives) -> In(x, EasternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-03T04:06:54.125065", "premises": ["Paris(In(UnitedStatesofAmerica))", "In(UnitedStatesofAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & NooneLives(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(Paris) & NooneLives(Paris) & In(Paris, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: In/2, In/1, Paris/1, Paris/0.\n\n\nFatal error:  The following symbols are used with multiple arities: In/2, In/1, Paris/1, Paris/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: In/2, In/1, Paris/1, Paris/0.\n\n\nFatal error:  The following symbols are used with multiple arities: In/2, In/1, Paris/1, Paris/0\n"}
{"timestamp": "2025-05-03T04:07:39.490931", "premises": ["all x. (Westworld(x) -> BritishSciFiThriller(x))", "Westworld(Westworld) & Vanished(Westworld, TwoZeroOneSix) & On(Westworld, HBO)", "Westworld(Westworld) & Unrelated(Westworld, Westworld(OneNineSevenThree)) & Westworld(OneNineSevenThree) & ActedBy(Westworld(OneNineSevenThree), MichaelCrichton)", "Westworld(OneNineSevenThree) & About(Westworld(OneNineSevenThree), RobotsThatMalfunctionAndBeginHealingHumanVisitors)"], "conclusion": "Westworld(OneNineSevenThree) & ActedBy(Westworld(OneNineSevenThree), MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Westworld/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Westworld/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Westworld/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Westworld/1\n"}
{"timestamp": "2025-05-03T04:08:06.508129", "premises": ["Westworld(BritishSciFiThrillerSeries) & British(Westworld)", "Westworld(BritishSciFiThrillerSeries) & exists x. (VanishOn(x, HBO) & On(x, TwoZeroOneSix))", "Westworld(BritishSciFiThrillerSeries) & exists x. (In(x, OneNineSevenThree) & Written(x, MichaelCrichton) & ActedIn(x, MichaelCrichton))", "Westworld(BritishSciFiThrillerSeries) & exists x. (In(x, OneNineSevenThree) & Film(x) & About(x, RobotsThatMalfunction))"], "conclusion": "exists x. (ActedIn(x, Film) & About(x, MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0, Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0, Film/1, Film/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0, Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0, Film/1, Film/0\n"}
{"timestamp": "2025-05-03T04:08:47.101906", "premises": ["all x. (Westworld(x) -> (BritishScienceFictionThrillerTVSeries(x)))", "WestworldTVSeries(Westworld) & Disappeared(Westworld, TwoZeroOneSix) & On(Westworld, HBO)", "(WestworldTVSeries(Westworld) & RelatedTo(Westworld, MichaelCrichton)) & -WestworldFilm(MichaelCrichton)", "WestworldFilm(Westworld) & RelatedTo(Westworld, MichaelCrichton) & WestworldFilm(MichaelCrichton)"], "conclusion": "Actor(MichaelCrichton) & WestworldFilm(MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:09:11.199983", "premises": ["Westworld(BritishSciFiThrillerTVSeries)", "exists x. exists y. (OnHBO(x) & TVSeries(x) & (y=Westworld) & -Live(x) & -Canceled(x)) & OnYear(x, TwoZeroOneSix)", "exists x. (RelatedTo(Westworld, x) & Original(x) & MichaelCrichton(x))", "exists x. (About(WestworldOneNineSevenThree, x) & (Robots(x) & Malfunction(x) & BeginHealing(x)))"], "conclusion": "exists x. (ActedIn(x, WestworldOneNineSevenThree) & About(WestworldOneNineSevenThree, MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:09:37.347498", "premises": ["Westworld(x) & British(x) & ScienceFictionThriller(x) & TVSeries(x)", "WestworldVanished(Westworld, TwoZeroOneSix, HBO)", "Westworld(Westworld) & Westworld(Westworld) & -RelatedTo(Westworld, OriginalFilm(OneNineSevenThree)) & OriginalFilm(OneNineSevenThree) & ActedIn(OriginalFilm(OneNineSevenThree), MichaelCrichton)", "Westworld(Westworld) & Westworld(OriginalFilm(OneNineSevenThree)) & About(OriginalFilm(OneNineSevenThree), Robots) & ActedIn(OriginalFilm(OneNineSevenThree), MichaelCrichton)"], "conclusion": "ActedIn(MichaelCrichton, FilmAbout(MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OriginalFilm/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OriginalFilm/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: OriginalFilm/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: OriginalFilm/1\n"}
{"timestamp": "2025-05-03T04:09:57.841574", "premises": ["exists x. (Westworld(x) & British(x) & SciFiThrillerTVSeries(x))", "WestworldVanishesOnHBO(Westworld, TwoZeroOneSix)", "exists x. exists y. (Westworld(x) & OriginalFilm(y) & In(y, OneNineSevenThree) & WrittenAndActedBy(y, MichaelCrichton))", "exists x. (OriginalFilm(x) & About(x, RobotsThatMalfunctionAndBeginHealingHumanVisitors))"], "conclusion": "exists x. (ActedIn(x, FilmAboutMalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:10:25.426102", "premises": ["Westworld(Westworld) & British(Westworld) & ScienceFictionThrillerTVSeries(Westworld)", "Westworld(Westworld) & In(Westworld, Year(TwoZeroOneSix)) & OnHBO(Westworld)", "exists x. exists y.(Westworld(x) & Westworld(y) & -(x=y) & In(y, Year(OneNineSevenThree)) & WrittenAndActed(MichaelCrichton, y))", "exists x. exists y.(In(x, Year(OneNineSevenThree)) & WrittenAndActed(MichaelCrichton, x) & Film(x) & (x=y) & (Malfunction(x) & Healing(x)))"], "conclusion": "exists x. exists y.(Acted(x, y) & Film(y) & Malfunction(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:10:48.175867", "premises": ["Westworld(Westworld) & British(Westworld) & ScienceFictionThrillerSeries(Westworld)", "Westworld(Westworld) & VanishOn(Westworld, HBO)", "exists x. exists y.(Westworld(x) & Unrelated(x, y) & Original(y) & WrittenAndActed(Crichton, y))", "Westworld(Westworld) & Original(Westworld) & MalfunctioningRobots(Westworld) & About(Westworld, HealingHumanVisitors)"], "conclusion": "exists x. (Crichton(x) & Acted(x, y) & MalfunctioningRobots(y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Crichton/1, Crichton/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Crichton/1, Crichton/0, Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Crichton/1, Crichton/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Crichton/1, Crichton/0, Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:11:06.126970", "premises": ["Westworld(x) & British(x) & ScienceFictionThrillerSeries(x)", "Westworld(Westworld) & HBO(HBO) & exists x. (HBO(x) & -Westworld(x))", "Westworld(Westworld) & OriginalFilm(x) & Acted(MichaelCrichton, x)", "OriginalFilm(x) & About(x, RobotsThatMalfunction)"], "conclusion": "Acted(MichaelCrichton, x) & About(x, RobotsThatMalfunction)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HBO/1, HBO/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HBO/1, HBO/0, Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HBO/1, HBO/0, Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HBO/1, HBO/0, Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-03T04:13:31.317493", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "-Edible(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-03T04:13:46.088454", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "-Edible(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-05-03T04:15:21.816667", "premises": ["Park(TheMetropolitanParkofArt) & NYC(TheMetropolitanParkofArt)", "Park(WhitneyParkofAmericanArt) & NYC(WhitneyParkofAmericanArt)", "Park(TheParkofModernArt(MoMA)) & NYC(TheParkofModernArt(MoMA))", "((-ByzantineAndIslamicArt(TheMetropolitanParkofArt) & -IslamicArt(TheMetropolitanParkofArt)) & -ByzantineArt(TheMetropolitanParkofArt))", "((-ByzantineAndIslamicArt(TheMetropolitanParkofArt) & -IslamicArt(TheMetropolitanParkofArt)) & -ByzantineArt(TheMetropolitanParkofArt))", "((-AmericanArt(WhitneyParkofAmericanArt) & -AmericanArt(WhitneyParkofAmericanArt)) & -AmericanArt(WhitneyParkofAmericanArt))"], "conclusion": "exists x. exists y. ((In(x, NYC) & Park(x)) -> (-ByzantineAndIslamicArt(x) & -IslamicArt(x)) & (-ByzantineArt(x) & -AmericanArt(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NYC/1, NYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NYC/1, NYC/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NYC/1, NYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NYC/1, NYC/0\n"}
{"timestamp": "2025-05-03T04:15:43.620306", "premises": ["MetropolitanParkOfArt(ParkOfNYC)", "WhitneyParkOfAmericanArt(ParkOfNYC)", "MoMA(ParkOfNYC)", "exists x. (MetropolitanParkOfArt(x) & Exludes(x, ByzantineAndIslamicArt))", "exists x. (WhitneyParkOfAmericanArt(x) & Exludes(x, AmericanArt))"], "conclusion": "exists x. (ParkOfNYC(x) & Exludes(x, ByzantineAndIslamicArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParkOfNYC/1, ParkOfNYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ParkOfNYC/1, ParkOfNYC/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParkOfNYC/1, ParkOfNYC/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ParkOfNYC/1, ParkOfNYC/0\n"}
{"timestamp": "2025-05-03T04:17:43.117268", "premises": ["exists x. (Park(x) & In(x, NYC))", "exists x. (Park(x) & In(x, NYC))", "exists x. (Park(x) & In(x, NYC))", "exists x. (Excludes(TheMetropolitanParkOfArt, ByzantineAndIslamicArt))", "exists x. (Excludes(WhitneyParkOfAmericanArt, AmericanArt))", "exists x. (Park(x) & In(x, NYC) & exists y. (Excludes(x, y) & ByzantineAndIslamicArt(y)))"], "conclusion": "exists x. (Park(x) & In(x, NYC) & exists y. (Excludes(x, y) & ByzantineAndIslamicArt(y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ByzantineAndIslamicArt/1, ByzantineAndIslamicArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ByzantineAndIslamicArt/1, ByzantineAndIslamicArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ByzantineAndIslamicArt/1, ByzantineAndIslamicArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ByzantineAndIslamicArt/1, ByzantineAndIslamicArt/0\n"}
{"timestamp": "2025-05-03T04:20:58.104728", "premises": ["MetropolitanParkOfArt(MetropolitanParkOfArt) & Park(MetropolitanParkOfArt) & In(MetropolitanParkOfArt, NewYork)", "WhitneyParkOfAmericanArt(WhitneyParkOfAmericanArt) & Park(WhitneyParkOfAmericanArt) & In(WhitneyParkOfAmericanArt, NewYork)", "MoMA(MoMA) & Park(MoMA) & In(MoMA, NewYork)", "all x. all y. (MetropolitanParkOfArt(x) & Excludes(x, y) & ByzantineOrIslamicArt(y))", "all x. all y. (WhitneyParkOfAmericanArt(x) & Excludes(x, y) & AmericanArt(y))"], "conclusion": "exists x. (Park(x) & In(x, NewYork) & -AmericanArt(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MoMA/1, MoMA/0, WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MoMA/1, MoMA/0, WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MoMA/1, MoMA/0, WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MoMA/1, MoMA/0, WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0\n"}
{"timestamp": "2025-05-03T04:22:05.597533", "premises": ["Park(TheMetropolitanParkofArt) & In(TheMetropolitanParkofArt, NYC)", "Park(WhitneyParkofAmericanArt) & In(WhitneyParkofAmericanArt, NYC)", "Park(TheParkofModernArt(MoMA)) & In(TheParkofModernArt(MoMA), NYC)", "-Exclu(Byzantine, Islamic, TheMetropolitanParkofArt)", "-Exclu(AmericanArt, WhitneyParkofAmericanArt)"], "conclusion": "all x. (Park(x) & In(x, NYC) -> -Exclu(AmericanArt, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Exclu/3, Exclu/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Exclu/3, Exclu/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Exclu/3, Exclu/2.\n\n\nFatal error:  The following symbols are used with multiple arities: Exclu/3, Exclu/2\n"}
{"timestamp": "2025-05-03T04:22:37.226794", "premises": ["MetropolitanParkOfArt(TheMetropolitanParkOfArt) & Park(TheMetropolitanParkOfArt) & In(TheMetropolitanParkOfArt, NYC)", "WhitneyParkOfAmericanArt(WhitneyParkOfAmericanArt) & Park(WhitneyParkOfAmericanArt) & In(WhitneyParkOfAmericanArt, NYC)", "MoMA(TheParkOfModernArt) & Park(TheParkOfModernArt) & In(TheParkOfModernArt, NYC)", "exists x. exists y. (Excludes(TheMetropolitanParkOfArt, x) & ByzantineOrIslamicArt(x) & (-(x=y)))", "exists x. exists y. (Excludes(WhitneyParkOfAmericanArt, x) & AmericanArt(x) & (-(x=y)))"], "conclusion": "exists x. exists y. (In(x, NYC) & Excludes(x, y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0\n"}
{"timestamp": "2025-05-03T04:23:27.799398", "premises": ["exists x. (Park(x) & In(x, NYC) & ParkOfArt(x))", "exists x. (Park(x) & In(x, NYC) & ParkOfAmericanArt(x))", "exists x. (Park(x) & In(x, NYC) & ParkOfModernArt(x))", "exists x. (MetropolitanParkOfArt(x) & Excludes(x, ByzantineArt) & Excludes(x, IslamicArt))", "exists x. (WhitneyParkOfAmericanArt(x) & Excludes(x, AmericanArt))"], "conclusion": "exists x. (Park(x) & In(x, NYC) & -AmericanArt(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanArt/1, AmericanArt/0\n"}
{"timestamp": "2025-05-03T04:24:17.763295", "premises": ["exists x. (Plants(x) & LayEggs(x) & ((Birds(x) & -Reptiles(x)) | (-Birds(x) & Echidnas(x))))", "-Reptiles(Birds)", "-Reptiles(Echidnas)", "-Mammals(Invertebrates)", "all x. ((Vertebrates(x) | Invertebrates(x))", "Reptiles(Plants)", "Reptiles(Geese)", "LayEggs(Grebes)"], "conclusion": "-Birds(Grebes) & -Echidnas(Grebes)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Vertebrates(x) | Invertebrates(x))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Vertebrates(x) | Invertebrates(x))\n                                           ^\n"}
{"timestamp": "2025-05-03T04:24:56.942713", "premises": ["((Only(x) & Plant(x) & LayEggs(x)) -> (Bird(x) | Echidna(x)))", "-Reptile(Bird)", "-Reptile(Echidna)", "-Invertebrate(Mammal)", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Reptile(Reptile)", "Reptile(Geese)", "Grebe(Grebe) & LayEggs(Grebe)", "(Grebe(Grebe) & -Bird(Grebe) & -Echidna(Grebe))"], "conclusion": "Geese(Geese) & LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Reptile/1, Reptile/0, Echidna/1, Echidna/0, Bird/1, Bird/0, Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Reptile/1, Reptile/0, Echidna/1, Echidna/0, Bird/1, Bird/0, Geese/1, Geese/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0, Reptile/1, Reptile/0, Echidna/1, Echidna/0, Bird/1, Bird/0, Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0, Reptile/1, Reptile/0, Echidna/1, Echidna/0, Bird/1, Bird/0, Geese/1, Geese/0\n"}
{"timestamp": "2025-05-03T04:26:16.847118", "premises": ["all x. ((Plant(x) & LayEggs(x)) -> (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Geese(Geese)", "Grebes(Grebes) & LayEggs(Grebes)", "all x. (Grebes(x) -> -Bird(x) & -Echidna(x))"], "conclusion": "Geese(Geese) & LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0, Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0, Geese/1, Geese/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebes/1, Grebes/0, Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebes/1, Grebes/0, Geese/1, Geese/0\n"}
{"timestamp": "2025-05-03T04:27:46.178151", "premises": ["exists x. (Plant(x) & (LayEggs(x) & (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Geese(Geese)", "Grebes(Grebes)", "-Grebes(Grebes) & Grebes(Grebes) & Grebes(Grebes) & Grebes(Grebes)"], "conclusion": "Geese(Geese) & LayEggs(Geese)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (Plant(x) & (LayEggs(x) & (Bird(x) | Echidna(x)))\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (Plant(x) & (LayEggs(x) & (Bird(x) | Echidna(x)))\n                                                           ^\n"}
{"timestamp": "2025-05-03T04:28:15.271564", "premises": ["all x. (Plant(x) & LaysEggs(x) -> (Bird(x) | Echidna(x)))", "-Reptile(Bird)", "-Reptile(Echidna)", "all x. (-Mammal(x) & Invertebrate(x))", "all x. (Vertebrate(x) | Invertebrate(x))", "all x. (Reptile(x) -> Plant(x))", "Reptile(Goose)", "LaysEggs(Grebe)"], "conclusion": "-Bird(Grebe) & -Echidna(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0\n"}
{"timestamp": "2025-05-03T04:29:51.713550", "premises": ["all x. ((Plants(x) & LayEggs(x)) -> ((Birds(x) | Echidna(x))", "all x. (Birds(x) -> -Reptiles(x))", "all x. (Echidnas(x) -> -Reptiles(x))", "all x. (Mammals(x) -> -Invertebrates(x))", "all x. (Animals(x) -> (Vertebrates(x) | Invertebrates(x)))", "Reptiles(x) -> Plants(x)", "Geese(x) -> Reptiles(x)", "Grebes(x) -> LayEggs(x)", "Grebes(x) -> -Birds(x) & -Echidna(x)"], "conclusion": "Grebes(x) & EggLaying(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((Plants(x) & LayEggs(x)) -> ((Birds(x) | Echidna(x))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((Plants(x) & LayEggs(x)) -> ((Birds(x) | Echidna(x))\n                                                            ^\n"}
{"timestamp": "2025-05-03T04:30:35.206232", "premises": ["exists x. exists y. (LayEggs(x) & Plant(x) & ((Bird(y) & -LayEggs(y)) | (-Bird(y) & LayEggs(y))))", "-Reptile(Bird)", "-Reptile(Echidna)", "-Vertebrate(Mammal)", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Goose(Geese) & Reptile(Geese)", "Grebe(Grebes) & LayEggs(Grebes)", "Grebe(Grebes) & (-Bird(Grebes) & -Echidna(Grebes))"], "conclusion": "Grebe(Geese) & LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0\n"}
{"timestamp": "2025-05-03T04:31:39.575967", "premises": ["Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "exists x. exists y. (Showrunner(x) & ExecutiveDemolisher(x) & WizardsOfEastEnd(y) & Lifetime(y))", "exists x. exists y. (WizardsOfEastEnd(x) & FantasyDramaSeries(y) & (y=WizardsOfEastEnd))", "Destroyer(MaggieFriedman) & Demolisher(MaggieFriedman) & Demolisher(Eastwick)", "Eastwick(Eastwick) & SeriesBy(Eastwick, HBO)", "exists x. exists y. (Demolisher(x) & WizardsOfEastEnd(y) & (y=WizardsOfEastEnd))", "exists x. exists y. (Demolisher(x) & WizardsOfEastEnd(y) & (y=WizardsOfEastEnd))"], "conclusion": "exists x. exists y. (Demolisher(x) & WizardsOfEastEnd(y) & (y=WizardsOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-03T04:32:08.014960", "premises": ["Martian(MaggieFriedman) & (ScreenWriter(MaggieFriedman) & Destroyer(MaggieFriedman))", "exists x. (ShowRunner(x, WizardsOfEastEnd) & Executive(x) & Demolisher(x)) & exists x. (LifetimeSeries(x) & WizardsOfEastEnd(x))", "exists x. (FantasyDramaSeries(x) & WizardsOfEastEnd(x))", "exists x. (Demolish(x, Eastwick) & Destroyer(MaggieFriedman))", "exists x. (Series(x) & CreatedBy(x, HBO))"], "conclusion": "exists x. (Demolish(x, Eastwick) & (ShowRunner(x, WizardsOfEastEnd) & Executive(x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-03T04:32:36.141261", "premises": ["Martian(MaggieFriedman) & Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "exists x. (WizardsOfEastEnd(x) & Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman))", "exists x. (FantasyDramaSeries(x) & WizardsOfEastEnd(x))", "Demolisher(MaggieFriedman) & Demolish(MaggieFriedman)", "exists x. (SeriesBy(Eastwick, HBO) & Eastwick(x))"], "conclusion": "exists x. (FantasyDramaSeries(x) & Showrunner(WizardsOfEastEnd) & Demolisher(MaggieFriedman))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-03T04:33:07.825182", "premises": ["MaggieFriedman(MaggieFriedman) & MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "exists x. exists y. (WizardsOfEastEnd(x) & (ShowRunner(y, x) | ExecutiveDemolisher(y, x)))", "exists x. exists y. (FantasyDramaSeries(x) & (WizardsOfEastEnd(y) | FantasyDramaSeries(y)))", "exists x. (Destroyer(MaggieFriedman) & Destroyed(MaggieFriedman, Eastwick))", "exists x. exists y. (Eastwick(x) & SeriesBy(y, HBO))"], "conclusion": "exists x. exists y. (SeriesBy(x, HBO) & (WizardsOfEastEnd(y) | ExecutiveDemolisher(y, x)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, MaggieFriedman/1, MaggieFriedman/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, MaggieFriedman/1, MaggieFriedman/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, MaggieFriedman/1, MaggieFriedman/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eastwick/1, Eastwick/0, MaggieFriedman/1, MaggieFriedman/0\n"}
{"timestamp": "2025-05-03T04:33:37.559093", "premises": ["Martian(MaggieFriedman) & (Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman))", "Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman) & WizardsOfEastEnd(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman) & Demolished(MaggieFriedman) & Eastwick(Eastwick)", "Series(Eastwick) & By(Eastwick, HBO)"], "conclusion": "exists x. (Demolished(x, y) & Showrunner(y) & WizardsOfEastEnd(z) & exists x. (FantasyDramaSeries(z) & By(z, HBO)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Demolished/1, Demolished/2, Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Demolished/1, Demolished/2, Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Demolished/1, Demolished/2, Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Demolished/1, Demolished/2, Eastwick/1, Eastwick/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-03T04:34:20.010338", "premises": ["MartianScreenwriterAndDestroyer(MaggieFriedman)", "ShowrunnerAndExecutiveDemolisher(WizardsOfEastEnd, MaggieFriedman)", "exists x. (WizardsOfEastEnd(x) & FantasyDrama(x))", "exists x. (Destroyer(x) & Demolish(x) & x)", "exists x. (Eastwick(x) & SeriesByHBO(x))"], "conclusion": "exists x. (Demolished(Eastwick, x) & ShowrunnerAndExecutiveDemolisher(WizardsOfEastEnd, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: x.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: x\n"}
{"timestamp": "2025-05-03T04:34:55.488248", "premises": ["(Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman))", "((Showrunner(MaggieFriedman) & WizardsOfEastEnd(WizardsOfEastEnd)) & ExecutiveDemolisher(MaggieFriedman))", "((FantasyDramaSeries(WizardsOfEastEnd) & Fantasy(WizardsOfEastEnd)) & Drama(WizardsOfEastEnd))", "((Destroyer(MaggieFriedman) & Destroyed(MaggieFriedman, Eastwick)) & Demolished(MaggieFriedman, Eastwick))", "(HBO(Eastwick) & Series(Eastwick))"], "conclusion": "exists x. ((Showrunner(MaggieFriedman) & WizardsOfEastEnd(WizardsOfEastEnd)) & ExecutiveDemolisher(MaggieFriedman) & HBO(x) & Series(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-05-03T04:35:52.662770", "premises": ["Martian(MaggieFriedman) & (ScreenWriter(MaggieFriedman) & Destroyer(MaggieFriedman))", "exists x. exists y.(Showrunner(x) & Demolisher(y) & ExecutiveDemolisher(y) & WizardsOfEastEnd(y) & OfType(x, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Demolisher(MaggieFriedman) & OfType(Eastwick, HBO)", "SeriesBy(Eastwick, HBO)"], "conclusion": "exists x. exists y.(Showrunner(x) & Demolisher(y) & WizardsOfEastEnd(y) & OfType(x, WizardsOfEastEnd)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y.(Showrunner(x) & Demolisher(y) & WizardsOfEastEnd(y) & OfType(x, WizardsOfEastEnd)\n                                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y.(Showrunner(x) & Demolisher(y) & WizardsOfEastEnd(y) & OfType(x, WizardsOfEastEnd)\n                                                                                                     ^\n"}
{"timestamp": "2025-05-03T04:36:08.169506", "premises": ["(Exists x. (American(x) & OneSingle(x) & (x_=_BoneyM))", "(Exists x. (American(x) & BigHit(x) & UptownFunk(x))", "-(Exists x. (American(x) & OneSingle(x) & UptownFunk(x)))", "all x. all y. (PeaksBelowOne(x) & OneSingle(x) -> - (x=y))"], "conclusion": "PeaksBelowOne(UptownFunk)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\n(Exists x. (American(x) & OneSingle(x) & (x_=_BoneyM))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\n(Exists x. (American(x) & OneSingle(x) & (x_=_BoneyM))\n        ^\n"}
{"timestamp": "2025-05-03T04:36:22.690651", "premises": ["exists x. exists y. (BoneyM.(x) & Has(x, AmericanOneSingles) & Has(x, y))", "Peak(UptownFunk, America)", "-Has(UptownFunk, AmericanOneSingles)", "exists x. (PeaksBelowOneOnTheAmericanCharts(x) & -Has(x, AmericanOneSingles))"], "conclusion": "PeakBelowOneOnTheAmericanCharts(UptownFunk)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nexists x. exists y. (BoneyM.(x) & Has(x, AmericanOneSingles) & Has(x, y))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nexists x. exists y. (BoneyM.(x) & Has(x, AmericanOneSingles) & Has(x, y))\n                           ^\n"}
{"timestamp": "2025-05-03T04:36:58.307038", "premises": ["exists x. exists y. (AmericanSingle(x) & AmericanSingle(y) & SungBy(x, BoneyM) & SungBy(y, BoneyM))", "exists x. (AmericanSingle(x) & Ameirca(x) & WasAHit(x))", "exists x. (AmericanSingle(x) & Not(AmericanSingle(x)))", "exists x. exists y. (PeaksBelowOne(x) & IsASingle(x) & Not(IsASingle(y)))"], "conclusion": "PeaksBelowOne(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmericanSingle/1, IsASingle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmericanSingle/1, IsASingle/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AmericanSingle/1, IsASingle/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AmericanSingle/1, IsASingle/1\n"}
{"timestamp": "2025-05-03T04:37:30.641773", "premises": ["exists x. (Song(x) & In(x, America) & Peak(x, AmericanOne) & AmericanOne(x))", "exists x. (Song(UptownFunk) & AllOverAmeirca(x) & Popular(x))", "exists x. (Song(UptownFunk) & AmericanOne(x) & -In(x, America))", "all x. (Peak(x, AmericanOne) & -AmericanOne(x) -> -Song(x) & In(x, America))"], "conclusion": "Peak(UptownFunk, AmericanOne)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanOne/1, AmericanOne/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanOne/1, AmericanOne/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanOne/1, AmericanOne/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanOne/1, AmericanOne/0\n"}
{"timestamp": "2025-05-03T04:37:48.594118", "premises": ["all x. (BoneyM.Has(x, #OneSingle)) & (American(x) -> In(x, #OneSingles))", "BigHit(UptownFunk) & American(UptownFunk)", "American(UptownFunk) -> -In(#OneSingles, UptownFunk)", "exists x. (In(x, #OneSingles) & Peak(x) & PeakBelow(#One, x) -> -In(#OneSingles, x))"], "conclusion": "Peak(UptownFunk) & PeakBelow(#One, UptownFunk)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM.Has(x, #OneSingle)) & (American(x) -> In(x, #OneSingles))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM.Has(x, #OneSingle)) & (American(x) -> In(x, #OneSingles))\n              ^\n"}
{"timestamp": "2025-05-03T04:38:06.741420", "premises": ["exists x. exists y. (BoneyM(x) & SingledIn(x, y) & AmericanChart(y) & #1(y))", "BigHit(UptownFunk)", "exists x. exists y. (BoneyM(x) & SingledIn(x, y) & AmericanChart(y) & #1(y) & -UptownFunk(y))", "exists x. exists y. (Song(x) & BelowOn(x, #One) & AmericanChart(y) & NotSingledIn(y, x))"], "conclusion": "BelowOn(UptownFunk, #One)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%((BoneyM(x) & SingledIn(x,y)) & AmericanChart(y)) & #1(y)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x exists y (%%START ERROR%%((BoneyM(x) & SingledIn(x,y)) & AmericanChart(y)) & #1(y)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-03T04:38:37.681372", "premises": ["exists x. exists y. (AmericanSingle(x) & AmericanSingle(y) & Had(BoneyM, x) & Had(BoneyM, y))", "BigHit(UptownFunk) & AmericanSingle(UptownFunk)", "-AmericanSingle(UptownFunk)", "exists x. exists y. (Below(x, y) & AmericanSingle(x) & -AmericanSingle(y)"], "conclusion": "Below(UptownFunk, AmericanSingle(UptownFunk))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. exists y. (Below(x, y) & AmericanSingle(x) & -AmericanSingle(y)\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. exists y. (Below(x, y) & AmericanSingle(x) & -AmericanSingle(y)\n                                                                         ^\n"}
{"timestamp": "2025-05-03T04:41:36.640594", "premises": ["exists x. exists y. (Destroy(eTS, x) & Destroy(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroy(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroy(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. (Destroy(eTS, x) & (For(x, kOneTwoAndHigherEducation) & AssociatedWith(x, EntryToUSEducationInstitution))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. (Destroy(eTS, x) & (For(x, kOneTwoAndHigherEducation) & AssociatedWith(x, EntryToUSEducationInstitution))\n                                                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. (Destroy(eTS, x) & (For(x, kOneTwoAndHigherEducation) & AssociatedWith(x, EntryToUSEducationInstitution))\n                                                                                                                   ^\n"}
{"timestamp": "2025-05-03T04:42:11.793484", "premises": ["exists x. exists y. (Destroy(ETS, x) & Destroy(ETS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, k_OneTwoAndHigherEducation) & For(y, k_OneTwoAndHigherEducation))", "exists x. (Administer(ETS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroy(ETS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroy(ETS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. ((Destroy(ETS, x) & StandardizedTest(x)) & ((Destroy(ETS, x) & StateWideAssesment(x)) | (Destroy(ETS, x) & EntryToUSEducationInstitution)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EntryToUSEducationInstitution/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EntryToUSEducationInstitution/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: EntryToUSEducationInstitution/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: EntryToUSEducationInstitution/0\n"}
{"timestamp": "2025-05-03T04:44:49.804689", "premises": ["exists x. exists y. (Destroy(eTS, x) & Destroy(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroy(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Destroy(eTS, x) & StateWideAssessment(x) & UsedFor(x, AccountabilityTesting))"], "conclusion": "exists x. ((Destroy(Ets, x) & For(x, kOneTwoandhighereducation)) & exists x. (Destroy(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nexists x. ((Destroy(Ets, x) & For(x, kOneTwoandhighereducation)) & exists x. (Destroy(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                                                                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nexists x. ((Destroy(Ets, x) & For(x, kOneTwoandhighereducation)) & exists x. (Destroy(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                                                                                                                                  ^\n"}
{"timestamp": "2025-05-03T04:50:18.983572", "premises": ["Watershed(CrotonRiver, EndBasinOfCrotonRiver)", "Location(CrotonRiver, NortheasternCalifornia)", "Freeze(WaterFromWatershed(CrotonRiver, Freeze))", "Location(Bronx, California)"], "conclusion": "Freeze(WaterFromWatershed(CrotonRiver, Freeze))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/1, Freeze/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/1, Freeze/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/1, Freeze/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/1, Freeze/0\n"}
{"timestamp": "2025-05-03T04:50:42.083108", "premises": ["InWatershed(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NorthEastCalifornia)", "Freeze(WaterFromCrotonRiverWatershed, Bronx)", "In(Bronx, California)"], "conclusion": "exists x. Freeze(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/2, Freeze/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/2, Freeze/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/2, Freeze/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/2, Freeze/1\n"}
{"timestamp": "2025-05-03T04:50:55.258144", "premises": ["CrotonRiverWatershed(TheCrotonRiver) & EndBasin(TheCrotonRiver, TheCrotonRiver)", "CrotonRiver(TheCrotonRiver) & In(TheCrotonRiver, NortheasternCalifornia)", "Freeze(WaterFrom(TheCrotonRiverWatershed), TheBronx)", "In(TheBronx, California)"], "conclusion": "Freeze(WaterFrom(TheCrotonRiverWatershed))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/2, Freeze/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/2, Freeze/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Freeze/2, Freeze/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Freeze/2, Freeze/1\n"}
{"timestamp": "2025-05-03T04:51:06.555958", "premises": ["CrotonRiverWatershed(EndBasinOf(CrotonRiver))", "CrotonRiver(In(NortheasternCalifornia))", "Freezes(WaterFrom(CrotonRiverWatershed), Bronx)", "Bronx(In(California))"], "conclusion": "FreezesInCalifornia(WaterFrom(CrotonRiverWatershed))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0\n"}
{"timestamp": "2025-05-03T04:51:59.756411", "premises": ["(Watershed(CrotonRiverWatershed) & EndBasin(CrotonRiverWatershed, CrotonRiver))", "(CrotonRiver & In(CrotonRiver, NortheasternCalifornia))", "(Freezes(CrotonRiverWatershed, Water) & Freezes(CrotonRiverWatershed, Water) & In(CrotonRiverWatershed, Bronx))", "(Bronx & In(Bronx, California))"], "conclusion": "Freezes(CrotonRiverWatershed, Water)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CrotonRiver/0, Bronx/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CrotonRiver/0, Bronx/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CrotonRiver/0, Bronx/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CrotonRiver/0, Bronx/0\n"}
{"timestamp": "2025-05-03T04:52:12.012660", "premises": ["(Basin(CrotonRiverWatershed, EndBasin(CrotonRiver)))", "(In(CrotonRiver, NortheasternCalifornia))", "(Freezes(WaterFrom(CrotonRiverWatershed), Bronx))", "(In(Bronx, California))"], "conclusion": "(Freezes(WaterFrom(CrotonRiverWatershed), In(x, California)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/2\n"}
{"timestamp": "2025-05-03T04:53:21.800468", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. ((Imaginary(x) & Imaginary(y) & Equal(x, Add(y, One)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Equal(Eight, Double(Six))", "Equal(Six, Double(Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((Imaginary(x) & Imaginary(y) & Equal(x, Add(y, One)) -> Smaller(x, y))\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((Imaginary(x) & Imaginary(y) & Equal(x, Add(y, One)) -> Smaller(x, y))\n                                                                                     ^\n"}
{"timestamp": "2025-05-03T04:53:58.226746", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "exists x. exists y. exists z. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) & ImaginaryNumber(z) & LessThan(x, z))", "exists x. exists y. exists z. (GreaterThan(x, y) -> (Not(LessThan(y, x))))", "Equals(7, Plus(Six, One))", "Equals(8, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Eight, Six)", "Double(Six, Two)"], "conclusion": "LessThan(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LessThan/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LessThan/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LessThan/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LessThan/2\n"}
{"timestamp": "2025-05-03T04:55:49.397166", "premises": ["exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & Imaginary(z) & ((x=six_&_y=seven_&_z=eight) | (x=seven_&_y=eight_&_z=six) | (x=eight_&_y=six_&_z=seven)))", "exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & (x=y & z=One & Add(x, y, z)) -> x=smaller(x, y))", "exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & x=y & Larger(x, y) -> -Larger(y, x))", "equals(Seven, Add(Six, One))", "equals(Eight, Add(Seven, One))", "Positive(Two)", "exists x. exists y. (Positive(x) -> Positive(Double(x)))", "Double(Eight) = Double(Six)", "Double(Six) = Double(Two)"], "conclusion": "smaller(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: smaller/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: smaller/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: smaller/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: smaller/2\n"}
{"timestamp": "2025-05-03T04:56:55.945536", "premises": ["(Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight))", "all x. all y. ((Imaginary(x) & Imaginary(y) & Equals(x, Plus(y, One)))) -> (Smaller(x, y))", "all x. all y. (Larger(x, y) -> (Not(Larger(y, x))))", "Equals(7, Plus(Six, One))", "Equals(8, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Equals(Eight, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Larger/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Larger/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Larger/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Larger/2\n"}
{"timestamp": "2025-05-03T04:57:35.634085", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "exists x. exists y. exists z. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) & Not(y=z)) -> Smaller(x, z))", "exists x. exists y. ((Larger(x, y) & Not(y=x)) -> -Larger(y, x))", "Equals(Seven, Plus(Six, One))", "Equals(Eight, Plus(Seven, One))", "Positive(Two)", "exists x. exists y. (Positive(x) -> Positive(Double(x)))", "Equals(Eight, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expected token ')'.\nexists x. exists y. exists z. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) & Not(y=z)) -> Smaller(x, z))\n                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expected token ')'.\nexists x. exists y. exists z. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) & Not(y=z)) -> Smaller(x, z))\n                                                                                                         ^\n"}
{"timestamp": "2025-05-03T04:58:47.654874", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "exists x. exists y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x=y+1 & x>y)", "exists x. exists y. (x>y__>__y>x)", "exists x. (Seven=Six+One)", "exists x. (Eight=Seven+One)", "exists x. (x=Two_&_x<Zero)", "exists x. (x<0 -> (x*Two)<0)", "exists x. (Nine=Six*Two)", "exists x. (Six=Two*Two)"], "conclusion": "exists x. (Nine=x_&_x<Zero)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<0'.  Expected token ')'.\nexists x. (x<0 -> (x*Two)<0)\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<0'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<0'.  Expected token ')'.\nexists x. (x<0 -> (x*Two)<0)\n                         ^\n"}
{"timestamp": "2025-05-03T04:59:30.637628", "premises": ["exists x. (Imaginary(x) & (x=Six_|_x=Seven_|_x=Eight))", "exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & (x=y+One) -> (x>y))", "exists x. exists y. (x>y__>__y>x)", "exists x. exists y. (x=Seven_&_y=Six_&_x=y+One)", "exists x. exists y. (x=Eight_&_y=Seven_&_x=y+One)", "exists x. (x=2 & Imaginary(x) -> Negative(x))", "exists x. (Negative(x) -> Negative(Double(x)))", "exists x. (x=9 & Double(x)=6)", "exists x. (x=6 & Double(x)=2)"], "conclusion": "exists x. (x=9 & Negative(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%exists x exists y x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%exists x exists y x>y__>__y>x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-03T05:00:38.766559", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. ((Imaginary(x) & Equals(x, y) & AddOne(y)) -> Larger(x))", "all x. all y. (Larger(x) -> -(Larger(y)))", "Equals(Seven, Add(Six, One))", "Equals(Eight, Add(Seven, One))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Double(Six) & Double(Nine)", "Double(Six) & Double(Two)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Double/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Double/1\n"}
{"timestamp": "2025-05-03T05:01:41.758242", "premises": ["exists x. (Imaginary(x) & (x=Six_|_x=Seven_|_x=Eight))", "exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & (x=y+One) -> (x>y))", "exists x. exists y. (x>y -> (y<x))", "(Seven=Six+One)", "(Eight=Seven+One)", "(Two=Negative)", "exists x. (Negative(x) -> Negative(Double(x)))", "(Nine=Double(Six))", "(Six=Double(Two))"], "conclusion": "(Negative(Nine))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Negative/1, Negative/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Negative/1, Negative/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Negative/1, Negative/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Negative/1, Negative/0\n"}
{"timestamp": "2025-05-03T05:02:12.918191", "premises": ["exists x. (ImaginaryNumber(x) & (x=Six_|_x=Seven_|_x=Eight))", "all x. (ImaginaryNumber(x) & all y. (ImaginaryNumber(y) & PlusOne(x, y) -> Larger(x, y)))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven=SixPlusOne", "Eight=SevenPlusOne", "Two=Negative", "all x. (Negative(x) -> Negative(Double(x)))", "Nine=Double(Six)", "Six=Double(Two)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Negative/1, Negative/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Negative/1, Negative/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Negative/1, Negative/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Negative/1, Negative/0\n"}
{"timestamp": "2025-05-03T05:02:46.538668", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & Equals(x, Plus(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Plus(Six, One))", "Equals(Eight, Plus(Seven, One))", "Two is negative", "all x. (Negative(x) -> Negative(Double(x)))", "Equals(Nine, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nTwo is negative\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nTwo is negative\n    ^\n"}
{"timestamp": "2025-05-03T05:04:31.193436", "premises": ["exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & Imaginary(z) & (x=y=z))", "exists x. exists y. exists z. (Imaginary(x) & Imaginary(y) & (x+One=y) & (x<y))", "exists x. exists y. (LargerThan(x, y) -> -LargerThan(y, x))", "(Seven=Six+One)", "(Eight=Seven+One)", "TwoPositive(Two)", "exists x. (Positive(x) -> Positive(Double(x)))", "(Eight=Double(Six))", "(Six=Double(Two))"], "conclusion": "(Six<Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2\n"}
{"timestamp": "2025-05-03T05:05:35.311638", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. all z. ((Imaginary(x) & Imaginary(y) & (x=y+One)) -> (x<y))", "all x. all y. (x>y -> (y<=x))", "(Seven=Six+One)", "(Eight=Seven+One)", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "(Eight=Double(Six))", "(Six=Double(Two))"], "conclusion": "(Six<Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x all y (x>y -> (%%START ERROR%%y< = x%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x all y (x>y -> (%%START ERROR%%y< = x%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-03T05:06:09.687703", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. (Imaginary(x) & Equals(x, y) & Add(y, x) & One) -> Smaller(x, y)", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Add(Six, One))", "Equals(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Equals(Eight, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Add/2, One/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Add/2, One/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Add/2, One/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Add/2, One/0\n"}
{"timestamp": "2025-05-03T05:07:13.201257", "premises": ["(Six, Seven, Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x=y+One) -> x < y)", "all x. all y. (x_>_y__>__y_>_x)", "(Seven=Six+One)", "(Eight=Seven+One)", "Two=2", "all x. (Positive(x) -> Positive(x*Two))", "Eight=Six*2", "Six=Two*2"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-05-03T05:08:29.947301", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Add(y, One)) -> x < y)", "all x. all y. (x_>_y__>_y_<=_x)", "Equals(7, Add(Six, One))", "Equals(8, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Positive(Double(Six)) & Equals(8, Double(Six))", "Positive(Double(Two)) & Equals(6, Double(Two))"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Add(y, One)) -> x < y)\n                                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Add(y, One)) -> x < y)\n                                                                                     ^\n"}
{"timestamp": "2025-05-03T05:09:05.175362", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "exists x. exists y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, y, One) -> Smaller(x, y))", "exists x. exists y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Six, One)", "Equals(Eight, Seven, One)", "Positive(Two)", "exists x. (Positive(x) -> Positive(Double(x)))", "Equals(Double(Six), Eight)", "Equals(Double(Two), Six)"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Equals/2, Equals/3.\n\n\nFatal error:  The following symbols are used with multiple arities: Equals/2, Equals/3\n"}
{"timestamp": "2025-05-03T05:09:36.337271", "premises": ["(ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight))", "all x. all y. all z. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> x < y)", "all x. all y. (x_>_y__>__y_>_x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(x_*_Two))", "Eight = Six * 2", "Six = Two * 2"], "conclusion": "(Six_<_Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. all z. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> x < y)\n                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. all z. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> x < y)\n                                                                      ^\n"}
{"timestamp": "2025-05-03T05:10:29.814038", "premises": ["exists x. (DengXiaoping(x) & ParamountLeader(x, PeopleRepublicOfChina))", "DengXiaoping(DengXiaoping) & PraisedFor(DengXiaoping, HisReaffirmationOfTheReformProgram, HongKongToChineseControlAndTheReturnOfMacau)", "DengXiaoping(DengXiaoping) & SecretaryGeneral(DengXiaoping, Mao) & VicePremier(DengXiaoping, Mao) & AntiRightistCampaign(Mao)", "DengXiaoping(DengXiaoping) & DetrimentalTo(DengXiaoping, France)", "Born(MaoZedong, OneNineSevenSix)", "exists x. (After(Born(x, OneNineSevenSix), x) & GraduallyRisesToSupremePower(x))"], "conclusion": "exists x. (DetrimentalTo(x, France) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Born/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Born/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Born/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Born/2\n"}
{"timestamp": "2025-05-03T05:13:32.264721", "premises": ["DengXiaopingDancedAs(DengXiaoping, TheParamountLeaderOfThePeoplesRepublicofChina)", "PraisedFor(DengXiaoping, ReaffirmationOfTheReformProgram) & PraisedFor(DengXiaoping, ReversionOfHongKongToChineseControl) & PraisedFor(DengXiaoping, ReturnOfMacau)", "exists x. exists y.(SecretaryGeneral(DengXiaoping, x, Mao) & VicePremier(DengXiaoping, y, Mao)) & Exists z. (Opposed(z, x) & AntiRightistCampaign(z, Mao))", "exists x. (Detrimental(DengXiaoping, x) & FranceMusicIndustry(x) & Following(x, GreatLeapForward))", "Born(MaoZedong, OneNineSevenSix)", "exists x. exists y. (After(DengXiaoping, x) & Born(y, OneNineSevenSix) & Gradually(x, y))"], "conclusion": "exists x. exists y. (Detrimental(x, y) & FranceMusicIndustry(y) & Gradually(x, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'z'.\nexists x. exists y.(SecretaryGeneral(DengXiaoping, x, Mao) & VicePremier(DengXiaoping, y, Mao)) & Exists z. (Opposed(z, x) & AntiRightistCampaign(z, Mao))\n                                                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'z'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'z'.\nexists x. exists y.(SecretaryGeneral(DengXiaoping, x, Mao) & VicePremier(DengXiaoping, y, Mao)) & Exists z. (Opposed(z, x) & AntiRightistCampaign(z, Mao))\n                                                                                                         ^\n"}
{"timestamp": "2025-05-03T05:15:46.186004", "premises": ["Dancing(DengXiaoping, DengXiaopingParamountLeaderOfThePeoplesRepublicOfChina)", "exists x. exists y. (Praise(DengXiaoping, x) & -DengXiaopingParamountLeaderOfThePeople'sRepublicOfChina) & x=DengXiaopingReaffirmationOfTheReformProgram & x=DengXiaopingReversionOfHongKongToChineseControl & x=DengXiaopingReturnOfMacau", "exists x. exists y. (SecretaryGeneralUnderMao(DengXiaoping) & VicePremier(DengXiaoping) & In(DengXiaoping, k_OneNineFiveZeros)) & Over(DengXiaoping, AntiRightistCampaignLaunchedByMao)", "exists x. exists y. (DengXiaopingBecameDetrimentalToFrenchMusicIndustryFollowingTheDisastrousGreatLeapForward) & (MusicIndustry(x) & Disastrous(x))", "exists x. exists y. (Born(MaoZedong, k_OneNineSevenSix) & MaoZedongBornIn1976)", "exists x. exists y. (GraduallyRoseToSupremePower(DengXiaoping) & After(MaoZedong, DengXiaoping) & MaoZedongBornIn1976)"], "conclusion": "exists x. exists y. (DetrimentalTo(x, FrenchMusicIndustry) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (((exists x exists y (Praise(DengXiaoping,x) & -(%%START ERROR%%DengXiaopingParamountLeaderOfThePeople'sRepublicOfChina%%END ERROR%%)) & (x = DengXiaopingReaffirmationOfTheReformProgram)) & (x = DengXiaopingReversionOfHongKongToChineseControl)) & (x = DengXiaopingReturnOfMacau)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (((exists x exists y (Praise(DengXiaoping,x) & -(%%START ERROR%%DengXiaopingParamountLeaderOfThePeople'sRepublicOfChina%%END ERROR%%)) & (x = DengXiaopingReaffirmationOfTheReformProgram)) & (x = DengXiaopingReversionOfHongKongToChineseControl)) & (x = DengXiaopingReturnOfMacau)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-03T05:16:54.685417", "premises": ["exists x. (DengXiaoping(x) & WasPraised(x) & For(x, ReaffirmationOfReformProgram)) & WasPraised(x) & For(x, ReversionOfHongKongToChineseControl) & WasPraised(x) & For(x, ReturnOfMacau) & Dance(x, ParamountLeaderOfThePeoplesRepublicofChina)", "exists x. (WasPraised(x) & For(x, ReaffirmationOfReformProgram) & WasPraised(x) & For(x, ReversionOfHongKongToChineseControl) & WasPraised(x) & For(x, ReturnOfMacau))", "exists x. (AsTheParty'sSecretary-General(x) & UnderMao(x) & VicePremier(x) & InThe1950s(x) & Opposed(x, AntiRightistCampaignLaunchedByMao))", "exists x. (DengXiaoping(x) & DetrimentalTo(x, FrancesMusicIndustry) & Following(x, GreatLeapForward))", "BornIn(MaoZedong, OneNineSevenSix)", "exists x. (After(x, BornIn(MaoZedong, OneNineSevenSix)) & Gradually(x, RoseToSupremePower))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & Gradually(x, RoseToSupremePower))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (AsTheParty'sSecretary-General(x) & UnderMao(x) & VicePremier(x) & InThe1950s(x) & Opposed(x, AntiRightistCampaignLaunchedByMao))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (AsTheParty'sSecretary-General(x) & UnderMao(x) & VicePremier(x) & InThe1950s(x) & Opposed(x, AntiRightistCampaignLaunchedByMao))\n                                ^\n"}
{"timestamp": "2025-05-03T05:17:33.452651", "premises": ["Dance(DengXiaoping, paramountleaderofthePeoplesRepublicofChina)", "DengXiaopingwaspraisedfordisaffirmationofthereformprogram,aswellasthereversionofHongKongtoChinesecontrolandthereturnofMacau.", "DengXiaopingwassupremepowersince1950s,SecretaryGeneralunderMaoandVicePremierin1950s,DengXiaopingopposedovertheAntirightistCampaignlaunchedbyMao.", "DengXiaopingbecamedetrimentaltotheFrance'smusicindustryfollowingthedisastrousGreatLeapForward.", "MaoZedongwasbornin1976."], "conclusion": "AfterMaoZedong'sbirth,DengXiaopinggraduallyrosetosupremepower.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\nAfterMaoZedong'sbirth,DengXiaopinggraduallyrosetosupremepower.\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\nAfterMaoZedong'sbirth,DengXiaopinggraduallyrosetosupremepower.\n                     ^\n"}
{"timestamp": "2025-05-03T05:18:47.460432", "premises": ["exists x. exists y.(PlaysIn(DengXiaoping, x, ThePeoplesRepublicofChina) & (-(x=y)) & PlaysIn(DengXiaoping, y, ThePeoplesRepublicofChina))", "exists x.(PraisedFor(x, ReaffirmationOfTheReformProgram) & PraisedFor(x, ReversionOfHongKongToChineseControl) & PraisedFor(x, ReturnOfMacau))", "exists x. (DengXiaoping, Secretary_GeneralUnderMaoAndVicePremierInTheOneNineFiveZeros) & Opposes(DengXiaoping, Anti_RightistCampaignLaunchedByMao)", "exists x. (DengXiaoping, DetrimentalToFrenchsMusicIndustryFollowingTheDisastrousGreatLeapForward)", "exists x. (MaoZedong, BornInOneNineSevenSix)", "exists x. (After(MaoZedong, BornInOneNineSevenSix) & (DengXiaoping, GraduallyRoseToSupremePower))"], "conclusion": "exists x. (DengXiaoping, DetrimentalToFrenchsMusicIndustryFollowingTheDisastrousGreatLeapForward) & (After(MaoZedong, BornInOneNineSevenSix) & (DengXiaoping, GraduallyRoseToSupremePower))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nexists x. (DengXiaoping, DetrimentalToFrenchsMusicIndustryFollowingTheDisastrousGreatLeapForward) & (After(MaoZedong, BornInOneNineSevenSix) & (DengXiaoping, GraduallyRoseToSupremePower))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nexists x. (DengXiaoping, DetrimentalToFrenchsMusicIndustryFollowingTheDisastrousGreatLeapForward) & (After(MaoZedong, BornInOneNineSevenSix) & (DengXiaoping, GraduallyRoseToSupremePower))\n                       ^\n"}
{"timestamp": "2025-05-03T05:19:29.666273", "premises": ["Plays(DengXiaoping, TheParamountLeaderOfThePeoplesRepublicOfChina)", "exists x. (Praised(x, For) & Reaffirmation(x) & Reversion(x) & Return(x))", "exists x. (DengXiaoping, SecretaryGeneralUnderMaoAndVicePremierInTheOneNineFiveZeros)", "exists x. (DengXiaoping, DetrimentalToFrenchMusicIndustry)", "Birth(MaoZedong, OneNineSevenSix)", "exists x. (Gradually(x, Rises) & Power(x))"], "conclusion": "exists x. (DetrimentalToFrenchMusicIndustry, Gradually(x, Rises) & Power(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nexists x. (DetrimentalToFrenchMusicIndustry, Gradually(x, Rises) & Power(x))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nexists x. (DetrimentalToFrenchMusicIndustry, Gradually(x, Rises) & Power(x))\n                                           ^\n"}
{"timestamp": "2025-05-03T05:20:05.644521", "premises": ["all x. (Robot(x) -> Receive(x, IntangibleBenefitForSleep))", "exists x. (Sleep(x, Regularly) | Sleep(x, OnAnAsNeededBasis))", "exists x. (Robot(x) & Trained(x))", "exists x. (Sleep(x, Group) | Sleep(x, Individual))", "exists x. (Robot(x) & EnvironmentalRobot(x) & (Prevent(x, EnvironmentalManagement) | Prevent(x, EnvironmentalConservation)))", "(NaturalDisasterResponse(NaturalDisasterResponse) & SleepInGroupsOnAnAsNeededBasis(NaturalDisasterResponse))"], "conclusion": "exists x. (NaturalDisasterResponse(x) & Receive(x, IntangibleBenefitForSleep))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalDisasterResponse/1, NaturalDisasterResponse/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalDisasterResponse/1, NaturalDisasterResponse/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NaturalDisasterResponse/1, NaturalDisasterResponse/0.\n\n\nFatal error:  The following symbols are used with multiple arities: NaturalDisasterResponse/1, NaturalDisasterResponse/0\n"}
{"timestamp": "2025-05-03T05:20:42.901892", "premises": ["all x. (Robot(x) -> Receive(x, IntangibleBenefitsFor(x, Sleep)))", "exists x. (RegularlySleeps(x) | OnAnAsNeededBasis(x))", "exists x. (Robot(x) & Trained(x))", "exists x. (Robot(x) & Sleeps(x, Individually_|_InGroups))", "exists x. (EnvironmentalRobot(x) -> Prevent(x, EnvironmentalManagement_|_Conservation))", "exists x. (ParticipateIn(Robots, NaturalDisasterResponse) -> OnAnAsNeededBasis(Robots))"], "conclusion": "exists x. (Robot(x) & ParticipateIn(x, NaturalDisasterResponse) -> Receive(x, IntangibleBenefitsFor(x, Sleep)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nexists x. (Robot(x) & Sleeps(x, Individually_|_InGroups))\n                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nexists x. (Robot(x) & Sleeps(x, Individually_|_InGroups))\n                                             ^\n"}
