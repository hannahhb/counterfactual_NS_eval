{"timestamp": "2025-04-29T11:10:03.631485", "premises": ["exists x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "SteppedOn(Stonefish) -> Stings(Stonefish, Someone)", "Stings(Stonefish, Someone) & -Treated(Someone) -> CausesDeath(Stonefish, Someone)", "Treated(Someone) <- ApplyHeat(Someone) | UseAntivenom(Someone)"], "conclusion": "exists x. (Fish(x) & Stings(x, Someone) & -Treated(Someone) -> CausesDeath(x, Someone))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nTreated(Someone) <- ApplyHeat(Someone) | UseAntivenom(Someone)\n                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nTreated(Someone) <- ApplyHeat(Someone) | UseAntivenom(Someone)\n                 ^\n"}
{"timestamp": "2025-04-29T11:10:10.908564", "premises": ["exists x. (Fish(x) & Stings(x, Person))", "Fish(Stonefish)", "StingsWhenSteppedOn(Stonefish)", "all x. (Person(x) -> (Stings(Stonefish, x) & -Treated(x) -> Death(x)))", "all x. (Person(x) -> (Stings(Stonefish, x) -> (TreatHeat(x) | TreatAntivenom(x))))"], "conclusion": "exists x. (Fish(x) & exists y. (Person(y) & (Stings(x, y) & -Treated(y) -> Death(y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Person/1, Person/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Person/1, Person/0\n"}
{"timestamp": "2025-04-29T11:10:17.898644", "premises": ["exists x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "SteppedOn(People, Stonefish) -> Stings(Stonefish, People)", "Stings(Stonefish, People) & -Treated(People) -> CausesDeath(Stonefish, People)", "Treated(People) <- ApplyHeat(People) | UseAntivenom(People)"], "conclusion": "exists x. (Fish(x) & Stings(x, People) & -Treated(People) -> CausesDeath(x, People))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nTreated(People) <- ApplyHeat(People) | UseAntivenom(People)\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nTreated(People) <- ApplyHeat(People) | UseAntivenom(People)\n                ^\n"}
{"timestamp": "2025-04-29T11:11:09.031431", "premises": ["PrehistoricBirdGenus(Ambiortus)", "SpeciesOf(AmbiortusDementjevi, Ambiortus) & all x. (SpeciesOf(x, Ambiortus) -> x = AmbiortusDementjevi)", "LivedIn(AmbiortusDementjevi, Mongolia)", "DiscovererOf(YevgenyKurochkin, Ambiortus)"], "conclusion": "Exists x. (PrehistoricBirdGenus(x) & DiscovererOf(YevgenyKurochkin, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & DiscovererOf(YevgenyKurochkin, x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & DiscovererOf(YevgenyKurochkin, x))\n       ^\n"}
{"timestamp": "2025-04-29T11:11:32.089272", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. SpeciesOf(x, Ambiortus) <-> IsDementjevi(x)", "LivedIn(Dementjevi, Mongolia)", "Discoverer(Ambiortus, YevgenyKurochkin)"], "conclusion": "exists x. BirdGenus(x) & Discoverer(x, YevgenyKurochkin) & New(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. SpeciesOf(x, Ambiortus) <-> IsDementjevi(x)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. SpeciesOf(x, Ambiortus) <-> IsDementjevi(x)\n     ^\n"}
{"timestamp": "2025-04-29T11:11:40.051784", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. SpeciesOf(x, Ambiortus) <-> x = AmbiortusDementjevi", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(Ambiortus, YevgenyKurochkin)"], "conclusion": "Exists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (PrehistoricBirdGenus(x) & Discoverer(x, YevgenyKurochkin))\n       ^\n"}
{"timestamp": "2025-04-29T11:12:19.162882", "premises": ["NameFor(FortTiconderoga, FortCarillon)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "Located(FortCarillon, NewFrance)", "-Located(NewFrance, Europe)"], "conclusion": "Exists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Built(PierreDeRigaudDeVaudreuil, x) & Located(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T11:12:24.645551", "premises": ["NameFor(FortTiconderoga, FortCarillon)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-LocatedIn(NewFrance, Europe)"], "conclusion": "Exists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Fort(x) & Built(PierreDeRigaudDeVaudreuil, x) & LocatedIn(x, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T11:12:35.196720", "premises": ["Equal(FortTiconderoga, FortCarillon)", "Built(PierreDeRigaudDeVaudreuil, FortCarillon)", "Located(FortCarillon, NewFrance)", "-Located(NewFrance, Europe)"], "conclusion": "Exists y. (Built(PierreDeRigaudDeVaudreuil, y) & Located(y, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\nExists y. (Built(PierreDeRigaudDeVaudreuil, y) & Located(y, NewFrance))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\nExists y. (Built(PierreDeRigaudDeVaudreuil, y) & Located(y, NewFrance))\n       ^\n"}
{"timestamp": "2025-04-29T11:12:50.196263", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDevelopedCity(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))", "Located(HighlyDevelopedCity, WesternHemisphere)"], "conclusion": "Located(NewYorkCity, WesternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HighlyDevelopedCity/1, HighlyDevelopedCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HighlyDevelopedCity/1, HighlyDevelopedCity/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HighlyDevelopedCity/1, HighlyDevelopedCity/0.\n\n\nFatal error:  The following symbols are used with multiple arities: HighlyDevelopedCity/1, HighlyDevelopedCity/0\n"}
{"timestamp": "2025-04-29T11:13:18.870507", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T11:13:35.585352", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphereEarth)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphereEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T11:13:52.141525", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. (Located(A, B) & Located(B, C) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-04-29T11:14:00.206245", "premises": ["AmericanSciFiThrillerTVSeries(Westworld)", "DebutOnHBO(Westworld, TwoZeroOneSix)", "AdaptedFromFilm(WestworldTV, WestworldFilm, OneNineSevenThree) & WrittenBy(MichaelCrichton, WestworldFilm, OneNineSevenThree) & DirectedBy(MichaelCrichton, WestworldFilm, OneNineSevenThree)", "AboutFilm(WestworldFilm, OneNineSevenThree, MalfunctioningRobotsKillingHumans)"], "conclusion": "Exists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))\n       ^\n"}
{"timestamp": "2025-04-29T11:14:15.854247", "premises": ["AmericanScienceFictionThrillerTVSeries(Westworld)", "DebutOnHBO(Westworld, TwoZeroOneSix)", "AdaptedFromFilm(Westworld, FilmOneNineSevenThree) & WrittenBy(FilmOneNineSevenThree, MichaelCrichton) & DirectedBy(FilmOneNineSevenThree, MichaelCrichton)", "AboutFilm(FilmOneNineSevenThree, MalfunctioningRobotsKillingHumans)"], "conclusion": "Exists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & AboutFilm(x, MalfunctioningRobots))\n       ^\n"}
{"timestamp": "2025-04-29T11:14:25.779797", "premises": ["Series(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "DebutedIn(Westworld, TwoZeroOneSix) & Channel(Westworld, HBO)", "AdaptedFrom(Westworld, FilmOneNineSevenThree) & WrittenBy(FilmOneNineSevenThree, MichaelCrichton) & DirectedBy(FilmOneNineSevenThree, MichaelCrichton)", "About(FilmOneNineSevenThree, MalfunctioningRobots) & About(FilmOneNineSevenThree, KillingHumans)"], "conclusion": "Exists x. (DirectedBy(MichaelCrichton, x) & About(x, MalfunctioningRobots))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & About(x, MalfunctioningRobots))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (DirectedBy(MichaelCrichton, x) & About(x, MalfunctioningRobots))\n       ^\n"}
{"timestamp": "2025-04-29T11:14:33.615013", "premises": ["Series(Westworld, American, ScienceFictionThriller)", "Debut(Westworld, HBO, TwoZeroOneSix)", "AdaptedFrom(WestworldTV, FilmWestworldOneNineSevenThree) & WrittenBy(FilmWestworldOneNineSevenThree, MichaelCrichton) & DirectedBy(FilmWestworldOneNineSevenThree, MichaelCrichton)", "About(FilmWestworldOneNineSevenThree, MalfunctioningRobotsKillingVisitors)"], "conclusion": "Exists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobots))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobots))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (Film(x) & DirectedBy(x, MichaelCrichton) & About(x, MalfunctioningRobots))\n       ^\n"}
{"timestamp": "2025-04-29T11:14:43.942320", "premises": ["DistrictInCity(Xiufeng, Guilin) & DistrictInCity(Xiangshan, Guilin) & DistrictInCity(Diecai, Guilin) & DistrictInCity(Qixing, Guilin)", "-DistrictInCity(Yangshuo, Guilin)", "SameCity(DistrictInCity(Xiangshan, Guilin), DistrictInCity(Diecai, Guilin))"], "conclusion": "DistrictInCity(Xiangshan, Guilin) & DistrictInCity(Diecai, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictInCity/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictInCity/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictInCity/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictInCity/2\n"}
{"timestamp": "2025-04-29T11:15:01.322843", "premises": ["DistrictOf(Xiufeng, Guilin) & DistrictOf(Xiangshan, Guilin) & DistrictOf(Diecai, Guilin) & DistrictOf(Qixing, Guilin)", "-DistrictOf(Yangshuo, Guilin)"], "conclusion": "SameCity(DistrictOf(Xiangshan, Guilin), DistrictOf(Diecai, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictOf/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DistrictOf/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DistrictOf/2\n"}
{"timestamp": "2025-04-29T11:16:51.726868", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Greb)", "-Platypus(Greb) & -Echidna(Greb)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T11:17:01.555668", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T11:17:11.377950", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (x_=_Platypus_|_x_=_Echidna))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T11:17:21.283696", "premises": ["all x. (Mammal(x) & LayEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Hyrax(x))", "all x. (Echidna(x) -> -Hyrax(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "LayEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-04-29T11:17:58.509932", "premises": ["Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-04-29T11:18:07.443575", "premises": ["AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-04-29T11:18:31.977690", "premises": ["exists x. (Song(x) & GermanChartPosition(x, One) & ByArtist(x, BoneyM))", "BigHit(Europe, HoorayHoorayHoliHoliday)", "-GermanChartPosition(HoorayHoorayHoliHoliday, One)", "all x. (Song(x) & GermanChartPosition(x, p) & p > One -> -GermanChartPosition(x, One))"], "conclusion": "GermanChartPosition(HoorayHoorayHoliHoliday, p) & p > 1", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nGermanChartPosition(HoorayHoorayHoliHoliday, p) & p > 1\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nGermanChartPosition(HoorayHoorayHoliHoliday, p) & p > 1\n                                                    ^\n"}
{"timestamp": "2025-04-29T11:18:46.906573", "premises": ["exists x. (Song(x) & ByArtist(x, BoneyM) & ChartPosition(x, GermanCharts, One))", "BigHit(HoorayHoliHoliday, Europe)", "-ChartPosition(HoorayHoliHoliday, GermanCharts, One)", "all x. (ChartPosition(x, GermanCharts, p) & p > One -> -ChartPosition(x, GermanCharts, One))"], "conclusion": "exists p. (p > 1 & ChartPosition(HoorayHoliHoliday, GermanCharts, p))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nexists p. (p > 1 & ChartPosition(HoorayHoliHoliday, GermanCharts, p))\n             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nexists p. (p > 1 & ChartPosition(HoorayHoliHoliday, GermanCharts, p))\n             ^\n"}
{"timestamp": "2025-04-29T11:18:54.852440", "premises": ["exists x. (Song(x) & By(x, BoneyM) & GermanChartPosition(x, One))", "BigHit(Europe, HoorayHoliHoliday)", "-GermanChartPosition(HoorayHoliHoliday, One)", "all x. (Song(x) & GermanChartPosition(x, p) & p > One -> -GermanChartPosition(x, One))"], "conclusion": "GermanChartPosition(HoorayHoliHoliday, p) & p > 1", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nGermanChartPosition(HoorayHoliHoliday, p) & p > 1\n                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nGermanChartPosition(HoorayHoliHoliday, p) & p > 1\n                                              ^\n"}
{"timestamp": "2025-04-29T11:20:09.457801", "premises": ["Develops(ETS, StandardizedTests) & Location(StandardizedTests, UnitedStates) & Purpose(StandardizedTests, KOneTwo_Education_|_HigherEducation)", "Administers(ETS, TestsInternational) & Includes(TestInternational, TOEFL_|_TOEIC_|_GRE_|_SubjectTests)", "AssociatedWith(Develops(ETS, Assessments), EntryTo(USTertiaryEducation_|_USQuaternaryEducation))", "Develops(ETS, StatewideAssessmentsKOneTwo) & Usage(StatewideAssessmentsKOneTwo, AccountabilityTesting) & Location(StatewideAssessmentsKOneTwo, ManyStates)"], "conclusion": "-Administers(ETS, TestsInternational)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\nDevelops(ETS, StandardizedTests) & Location(StandardizedTests, UnitedStates) & Purpose(StandardizedTests, KOneTwo_Education_|_HigherEducation)\n                                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\nDevelops(ETS, StandardizedTests) & Location(StandardizedTests, UnitedStates) & Purpose(StandardizedTests, KOneTwo_Education_|_HigherEducation)\n                                                                                                                            ^\n"}
{"timestamp": "2025-04-29T11:20:38.108608", "premises": ["DevelopsTests(ETS, StandardizedTests) & PrimaryLocation(ETS, UnitedStates) & ForAgeGroup(ETS, KOneTwo) & ForEducationLevel(ETS, HigherEducation)", "AdministersTestsInternationally(ETS, [TOEFL, TOEIC, GRE, SubjectTests])", "AssociatedWithEntry(DevelopedAssessments(ETS), [TertiaryEducationInstitutions, QuaternaryEducationInstitutions], UnitedStates)", "DevelopsStatewideAssessments(ETS, KOneTwo, AccountabilityTesting)"], "conclusion": "-AdministersTestsInternationally(ETS)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AdministersTestsInternationally/2, AdministersTestsInternationally/1.\n\n\nFatal error:  The following symbols are used with multiple arities: AdministersTestsInternationally/2, AdministersTestsInternationally/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AdministersTestsInternationally/2, AdministersTestsInternationally/1.\n\n\nFatal error:  The following symbols are used with multiple arities: AdministersTestsInternationally/2, AdministersTestsInternationally/1\n"}
{"timestamp": "2025-04-29T11:20:43.538624", "premises": ["Watershed(CrotonRiver) = DrainageBasin(CrotonRiver)", "In(CrotonRiver, SouthwesternNewYork)", "FlowsTo(WaterFrom(Watershed(CrotonRiver)), Bronx)", "In(Bronx, NewYork)"], "conclusion": "Exists x. (In(x, NewYork) & FlowsTo(WaterFrom(Watershed(CrotonRiver)), x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (In(x, NewYork) & FlowsTo(WaterFrom(Watershed(CrotonRiver)), x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (In(x, NewYork) & FlowsTo(WaterFrom(Watershed(CrotonRiver)), x))\n       ^\n"}
{"timestamp": "2025-04-29T11:21:13.533746", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two_*_x))", "Eight = 2 * Four", "Four = 2 * Two"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-04-29T11:21:22.398994", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_=_y_+_One) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.\nSeven = Six + 1\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.\nSeven = Six + 1\n            ^\n"}
{"timestamp": "2025-04-29T11:21:48.793465", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eight = Double(Four)", "Four = Double(Two)"], "conclusion": "Larger(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-04-29T11:22:24.268219", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two*x))", "8 = 2*4", "4 = 2*2"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x = y + 1 -> Larger(x, y))\n                                                     ^\n"}
{"timestamp": "2025-04-29T11:22:41.827337", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "all x. all y. (RealNumber(x) & RealNumber(y) & Equal(x, Plus(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Plus(Six, One))", "Equal(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Four, Eight)", "Double(Two, Four)"], "conclusion": "Larger(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-04-29T11:23:31.299408", "premises": ["ServedAs(DengXiaoping, ParamountLeader, China)", "PraisedFor(DengXiaoping, ReformProgramReaffirmation) & PraisedFor(DengXiaoping, HongKongReversion) & PraisedFor(DengXiaoping, MacauReturn)", "PresidedOver(DengXiaoping, AntiRightistCampaign) & PositionUnderMao(DengXiaoping, SecretaryGeneral) & Position(DengXiaoping, VicePremier, OneNineFiveZeros)", "InstrumentalIn(DengXiaoping, EconomicReconstructionChina)", "Died(MaoZedong, OneNineSevenSix)", "GraduallyRoseTo(DengXiaoping, SupremePower, After(Died(MaoZedong)))"], "conclusion": "exists x. (InstrumentalIn(x, EconomicReconstructionChina) & GraduallyRoseTo(x, SupremePower))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: GraduallyRoseTo/3, GraduallyRoseTo/2, Died/2, Died/1.\n\n\nFatal error:  The following symbols are used with multiple arities: GraduallyRoseTo/3, GraduallyRoseTo/2, Died/2, Died/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: GraduallyRoseTo/3, GraduallyRoseTo/2, Died/2, Died/1.\n\n\nFatal error:  The following symbols are used with multiple arities: GraduallyRoseTo/3, GraduallyRoseTo/2, Died/2, Died/1\n"}
{"timestamp": "2025-04-29T11:23:42.558901", "premises": ["Leader(DengXiaoping, China)", "PraisedFor(DengXiaoping, ReformProgramAffirmation) & PraisedFor(DengXiaoping, ReversionOfHongKong) & PraisedFor(DengXiaoping, ReturnOfMacau)", "PresidedOver(DengXiaoping, AntiRightistCampaign, OneNineFiveZeros)", "InstrumentalIn(DengXiaoping, EconomicReconstruction, After(GreatLeapForward))", "Died(MaoZedong, OneNineSevenSix)", "(Died(MaoZedong) & After(Died(MaoZedong), GradualRiseToSupremePower(DengXiaoping)))"], "conclusion": "Exists x. (InstrumentalIn(x, EconomicReconstruction, After(GreatLeapForward)) & GradualRiseToSupremePower(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (InstrumentalIn(x, EconomicReconstruction, After(GreatLeapForward)) & GradualRiseToSupremePower(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (InstrumentalIn(x, EconomicReconstruction, After(GreatLeapForward)) & GradualRiseToSupremePower(x))\n       ^\n"}
{"timestamp": "2025-04-29T11:23:52.286022", "premises": ["ServedAsParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "PraisedForReaffirmationAndReversions(DengXiaoping)", "PresidedOverAntiRightistCampaignUnderMao(DengXiaoping)", "InstrumentalInEconomicReconstruction(DengXiaoping)", "Died(MaoZedong, OneNineSevenSix)", "GraduallyRiseToSupremePower(After(Died(MaoZedong)), DengXiaoping)"], "conclusion": "GraduallyRiseToSupremePower(InstrumentalInEconomicReconstruction(x), x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: InstrumentalInEconomicReconstruction/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: InstrumentalInEconomicReconstruction/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: InstrumentalInEconomicReconstruction/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: InstrumentalInEconomicReconstruction/1\n"}
{"timestamp": "2025-04-29T11:24:14.446589", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "PraisedFor(DengXiaoping, ReaffirmationOfReformProgram) & PraisedFor(DengXiaoping, ReversionOfHongKongToChineseControl) & PraisedFor(DengXiaoping, ReturnOfMacau)", "SecretaryGeneralUnder(DengXiaoping, Mao) & VicePremier(DengXiaoping, OneNineFiveZeros) & PresidedOver(DengXiaoping, AntiRightistCampaign(Mao))", "InstrumentalIn(DengXiaoping, EconomicReconstruction(China))", "Died(MaoZedong, OneNineSevenSix)", "GraduallyRoseToSupremePower(DengXiaoping, AfterDeath(MaoZedong))"], "conclusion": "Exists x. (InstrumentalIn(x, EconomicReconstruction(China)) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (InstrumentalIn(x, EconomicReconstruction(China)) & GraduallyRoseToSupremePower(x))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (InstrumentalIn(x, EconomicReconstruction(China)) & GraduallyRoseToSupremePower(x))\n       ^\n"}
{"timestamp": "2025-04-29T11:26:40.666691", "premises": ["all x. (Heptalogy(x) <-> exists yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & ComposedOf(x, yOne, yTwo, yThree, yFour, yFive, ySix, ySeven)))", "DistinctWorks(HarryPotterWorkOne, HarryPotterWorkTwo, HarryPotterWorkThree, HarryPotterWorkFour, HarryPotterWorkFive, HarryPotterWorkSix, HarryPotterWorkSeven) & ComposedOf(HarryPotterSeries, HarryPotterWorkOne, HarryPotterWorkTwo, HarryPotterWorkThree, HarryPotterWorkFour, HarryPotterWorkFive, HarryPotterWorkSix, HarryPotterWorkSeven)", "DistinctWorks(NarniaWorkOne, NarniaWorkTwo, NarniaWorkThree, NarniaWorkFour, NarniaWorkFive, NarniaWorkSix, NarniaWorkSeven) & ComposedOf(ChroniclesOfNarnia, NarniaWorkOne, NarniaWorkTwo, NarniaWorkThree, NarniaWorkFour, NarniaWorkFive, NarniaWorkSix, NarniaWorkSeven)"], "conclusion": "-Heptalogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Heptalogy(x) <-> exists yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & ComposedOf(x, yOne, yTwo, yThree, yFour, yFive, ySix, ySeven)))\n                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'yOne' is an illegal variable name.  Constants may not be quantified.\nall x. (Heptalogy(x) <-> exists yOne, yTwo, yThree, yFour, yFive, ySix, ySeven. (DistinctWorks(yOne, yTwo, yThree, yFour, yFive, ySix, ySeven) & ComposedOf(x, yOne, yTwo, yThree, yFour, yFive, ySix, ySeven)))\n                                ^\n"}
{"timestamp": "2025-04-29T11:31:27.208459", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & SameGoalsRegularTime(x, y) & SameGoalsExtraTime(x, y) -> NeedPenaltyShootout(x, y))", "SameGoalsRegularTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "SameGoalsExtraTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)"], "conclusion": "NeedPenaltyShootout(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3.\n\n\nFatal error:  The following symbols are used with multiple arities: SameGoalsExtraTime/3, SameGoalsExtraTime/2, SameGoalsRegularTime/3, SameGoalsRegularTime/2, NeedPenaltyShootout/2, NeedPenaltyShootout/3\n"}
{"timestamp": "2025-04-29T11:31:50.896460", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & MatchInUCLFinal(x, y) & ScoredSameGoals(x, y, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & MatchInUCLFinal(x, y) & ScoredSameGoals(x, y, RegularTime) & ScoredSameGoals(x, y, ExtraTime) -> NeedPenaltyShootout(x, y))", "ScoredGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, RegularTime, OneGoal) & ScoredGoals(Atl\u00e9ticoMadrid, RealMadrid, TwoZeroOneSixUCLFinal, RegularTime, OneGoal)", "ScoredGoals(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal, ExtraTime, ZeroGoal) & ScoredGoals(Atl\u00e9ticoMadrid, RealMadrid, TwoZeroOneSixUCLFinal, ExtraTime, ZeroGoal)"], "conclusion": "NeedPenaltyShootout(RealMadrid, Atl\u00e9ticoMadrid, TwoZeroOneSixUCLFinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 625: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 625: invalid continuation byte\n"}
{"timestamp": "2025-04-29T11:32:01.569080", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & ScoreSameGoalsDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & UCLFinal(x, y) & ScoreSameGoalsDuringRegularTime(x, y) & ScoreSameGoalsDuringExtraTime(x, y) -> NeedPenaltyShootOut(x, y))", "ScoreSameGoalsDuringRegularTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "ScoreSameGoalsDuringExtraTime(RealMadrid, AtleticoMadrid, TwoZeroOneSix)"], "conclusion": "-NeedPenaltyShootOut(RealMadrid, AtleticoMadrid, TwoZeroOneSix)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSameGoalsDuringExtraTime/3, ScoreSameGoalsDuringExtraTime/2, ScoreSameGoalsDuringRegularTime/3, ScoreSameGoalsDuringRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSameGoalsDuringExtraTime/3, ScoreSameGoalsDuringExtraTime/2, ScoreSameGoalsDuringRegularTime/3, ScoreSameGoalsDuringRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ScoreSameGoalsDuringExtraTime/3, ScoreSameGoalsDuringExtraTime/2, ScoreSameGoalsDuringRegularTime/3, ScoreSameGoalsDuringRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3.\n\n\nFatal error:  The following symbols are used with multiple arities: ScoreSameGoalsDuringExtraTime/3, ScoreSameGoalsDuringExtraTime/2, ScoreSameGoalsDuringRegularTime/3, ScoreSameGoalsDuringRegularTime/2, NeedPenaltyShootOut/2, NeedPenaltyShootOut/3\n"}
{"timestamp": "2025-04-29T11:32:35.202286", "premises": ["all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & RegularTimeGoals(x, y, G) & G = G -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeams(x, y) & UCLFinal(x, y) & RegularTimeGoals(x, y, G) & ExtraTimeGoals(x, y, H) & G = G & H = H -> NeedPenaltyShootOut(x, y))", "RegularTimeGoals(RealMadrid, AtleticoMadrid, One) & UCLFinal(RealMadrid, AtleticoMadrid, 20One6)", "ExtraTimeGoals(RealMadrid, AtleticoMadrid, Zero) & UCLFinal(RealMadrid, AtleticoMadrid, 2Zero16)"], "conclusion": "-NeedPenaltyShootOut(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UCLFinal/3, UCLFinal/2.\n\n\nFatal error:  The following symbols are used with multiple arities: UCLFinal/3, UCLFinal/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UCLFinal/3, UCLFinal/2.\n\n\nFatal error:  The following symbols are used with multiple arities: UCLFinal/3, UCLFinal/2\n"}
{"timestamp": "2025-04-29T11:33:28.334767", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))", "MakesSoftware(Ableton, MusicSoftware)"], "conclusion": "-HasOffice(Ableton, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T11:33:39.118346", "premises": ["HasOffice(Ableton, Germany)", "HasOffice(Ableton, USA)", "DifferentCountries(USA, Germany)", "all x. (Exists y. Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))", "MakesSoftware(Ableton, Music)"], "conclusion": "-HasOffice(Ableton, Germany)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Exists y. Exists z. (HasOffice(x, y) & HasOffice(x, z) & DifferentCountries(y, z)) -> MultinationalCompany(x))\n               ^\n"}
{"timestamp": "2025-04-29T11:34:45.707908", "premises": ["BRICS(China) & EmergingEconomy(China)", "all x. (From(x, China) -> From(x, BRICS))", "BRICS(India) & EmergingEconomy(India)", "all x. (From(x, India) -> From(x, BRICS))", "all x. (From(x, China) -> ChinesePerson(x))", "all x. (From(x, India) -> IndianPerson(x))", "exists x. From(x, India)"], "conclusion": "-EmergingEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BRICS/1, BRICS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BRICS/1, BRICS/0\n"}
