{"premises": ["Monkeypox is an infectious disease caused by the monkeypox virus.", "Monkeypox virus can occur in certain animals, including humans.", "Humans are mammals.", "Mammals are animals.", "Symptons of Monkeypox include fever, headache, muscle pains, feeling tired, and so on.", "People feel tired when they get a glu."], "premises-FOL": ["\u2203x (OccurMonkeypoxVirus(x) \u2227 GetMonkeypox(x))", "\u2203x (Animal(x) \u2227 OccurMonkeypoxVirus(x))", "\u2200x (Human(x) \u2192 Mammal(x))", "\u2200x (Mammal(x) \u2192 Animal(x))", "\u2203x (GetMonkeypox(x) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))", "\u2200x (Human(x) \u2227 Flu(x) \u2192 Tired(x))"], "conclusion": "No one gets flu.", "conclusion-FOL": "\u2200x (Human(x) \u2192 \u00acFlu(x))", "label": "Uncertain"}
{"premises": ["If people are twins or triplets, then they spend a lot of time hanging out with and playing with their siblings.", "If people have siblings who are the same age, then they are twins or triplets.", "If people complain often about annoying siblings, then they have siblings who are the same age.", "If people do not live at home regularly, then they do not develop strong bonds with their family members.", "If people spend a lot of time hanging out with and playing with their siblings, then they often did not live at home regularly.", "Luke is either both a twin or triplet and develops strong bonds with his family members, or he neither is a twin or triplet nor develops strong bonds with his family members.   "], "premises-FOL": ["\u2200x (TwinTriplet(x) \u2192 Playing(x))", "\u2200x (SameAge(x) \u2192 TwinTriplet(x))", "\u2200x (Complain(x) \u2192 SameAge(x))", "\u2200x (NotHome(x) \u2192 \u00acStrongBonds(x))", "\u2200x (Playing(x) \u2192 NotHome(x))", "(TwinTriplet(luke) \u2227 StrongBonds(luke)) \u2295 (\u00acTwinTriplet(luke) \u2227 \u00acStrongBonds(luke))"], "conclusion": "Luke complains often about annoying siblings.", "conclusion-FOL": "Complain(luke)", "label": "False"}
{"premises": ["If people own a large desktop monitor at their home, then they work regularly and often at home.", "All people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.", "All people who work regularly and often at home spend their free time tidying and organizing the spaces in their homes.", "All people who work regularly and often at home visit the office supply store regularly.", "If people spend their free time tidying and organizing the spaces in their home, then they do not go to bed late and wake up every day after noon. ", "Remy either both goes to bed late and wakes up every day after noon and spends their free time tidying and organizing the spaces in their home, or they do not go to bed late and wake up every day after noon nor spend their free time tidying and organizing the spaces in their home. "], "premises-FOL": ["\u2200x (Desktop(x) \u2192 WorkHome(x))", "\u2200x (HomeOffice(x) \u2192 Desktop(x))", "\u2200x (WorkHome(x) \u2192 Tidying(x))", "\u2200x (WorkHome(x) \u2192 OfficeStore(x))", "\u2200x (Tidying(x) \u2192 \u00acLate(x))", "(Late(remy) \u2227 Tidying(remy)) \u2295 (\u00acLate(remy) \u2227 \u00acTidying(remy))"], "conclusion": "If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.", "conclusion-FOL": "Late(remy) \u2228 OfficeStore(remy) \u2192 \u00ac(Tidying(remy) \u2228 HomeOffice(remy))", "label": "True"}
{"premises": ["Susan flies to LGA airport.", "The departure and arrival can not be the same airport.", "John flies from LGA airport."], "premises-FOL": ["FlyTo(susan, lga)", "\u2200x \u2200y (FlyFrom(x, y) \u2295 FlyTo(x, y))", "FlyFrom(john, lga)"], "conclusion": "John flies to LGA airport.", "conclusion-FOL": "FlyTo(john, lga)", "label": "False"}
{"premises": ["If a man is taller than another man, the taller one can block the other's shooting.", "Michael is a man who is taller than everyone else in his class.", "If person x is taller than person y, and person y is taller than person z, than x is taller than z", "Peter is a man who is taller than Michael.", "Michael can block any shooting from a person as long as the person does not jump when shooting.", "Michael cannot block Windy's shooting.", "Every shooter who can jump when shooting is a great shooter."], "premises-FOL": ["\u2200x \u2200y (IsMan(x) \u2227 IsMan(y) \u2227 Taller(x, y) \u2192 CanBlock(x, y))", "\u2200x (IsMan(x) \u2227 SameClass(x, michael) \u2227 \u00acBe(x, michael) \u2192 Taller(michael, x))", "\u2200x \u2200y \u2200z ((Taller(x, y) \u2227 Taller(y, z)) \u2192 Taller(x, z))", "IsMan(peter) \u2227 Taller(peter, michael)", "\u2200x (\u00acJumpWhenShooting(x) \u2192 CanBlock(michael, x))", "\u00acCanBlock(michael, windy)", "\u2200x (JumpWhenShooting(x) \u2192 GreatShooter(x))"], "conclusion": "Peter can block Windy's shooting.", "conclusion-FOL": "CanBlock(peter, windy)", "label": "Uncertain"}


hard_idx = [7, 103, 155, 181, 117, 142, 17, 28, 41, 50, 61, 62, 76, 81, 102, 122, 126, 140, 153, 160, 184, 192, 196, 109, 0, 3, 4, 29, 128, 130]
