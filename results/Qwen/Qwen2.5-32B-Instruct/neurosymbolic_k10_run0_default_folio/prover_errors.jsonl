{"timestamp": "2025-05-04T22:55:47.824232", "premises": ["exists x. (Fish(x) & Stings(x, y))", "Fish(Stonefish)", "Stings(Stonefish, y) when SteppedOn(y)", "all x. (Stings(Stonefish, x) & -Treated(x) -> Death(x))", "all x. (Treat(StonefishSting, x) -> (ApplyHeat(x) | UseAntivenom(x)))"], "conclusion": "exists x. (Fish(x) & Stings(x, y) & -Treated(y) -> Death(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'when'.\nStings(Stonefish, y) when SteppedOn(y)\n                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'when'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'when'.\nStings(Stonefish, y) when SteppedOn(y)\n                     ^\n"}
{"timestamp": "2025-05-04T23:02:34.843924", "premises": ["PrehistoricBirdGenus(Ambiortus)", "Species(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)", "Lived(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Discover(YevgenyKurochkin, NewBirdGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^\n"}
{"timestamp": "2025-05-04T23:04:06.010449", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (Species(x, Ambiortus) & KnownSpecies(x))", "LivesIn(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Discover(YevgenyKurochkin, NewBirdGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) & KnownSpecies(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) & KnownSpecies(x))\n     ^\n"}
{"timestamp": "2025-05-04T23:06:35.383522", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (Species(x) & Of(x, Ambiortus) & Known(x)) -> (x_=_AmbiortusDementjevi)", "LivesIn(AmbiortusDementjevi, Mongolia)", "DiscovererOf(YevgenyKurochkin, Ambiortus)"], "conclusion": "exists x. (New(x) & BirdGenus(x) & DiscovererOf(YevgenyKurochkin, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x) & Of(x, Ambiortus) & Known(x)) -> (x_=_AmbiortusDementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x) & Of(x, Ambiortus) & Known(x)) -> (x_=_AmbiortusDementjevi)\n     ^\n"}
{"timestamp": "2025-05-04T23:08:16.732254", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (Species(x) & Of(x, Ambiortus) & Known(x) -> x = AmbiortusDementjevi)", "Lived(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "exists x. (BirdGenus(x) & New(x) & DiscoveredBy(x, YevgenyKurochkin))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x) & Of(x, Ambiortus) & Known(x) -> x = AmbiortusDementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x) & Of(x, Ambiortus) & Known(x) -> x = AmbiortusDementjevi)\n     ^\n"}
{"timestamp": "2025-05-04T23:09:41.582044", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (Species(x, Ambiortus) & x = AmbiortusDementjevi)", "Lived(AmbiortusDementjevi, Mongolia)", "Discoverer(YevgenyKurochkin, Ambiortus)"], "conclusion": "Lived(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) & x = AmbiortusDementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) & x = AmbiortusDementjevi)\n     ^\n"}
{"timestamp": "2025-05-04T23:13:23.283045", "premises": ["PrehistoricBirdGenus(Ambiortus)", "only x. (SpeciesOf(x, Ambiortus) & x = AmbiortusDementjevi)", "LivesIn(AmbiortusDementjevi, Mongolia)", "DiscovererOf(YevgenyKurochkin, Ambiortus)"], "conclusion": "LivesIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (SpeciesOf(x, Ambiortus) & x = AmbiortusDementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (SpeciesOf(x, Ambiortus) & x = AmbiortusDementjevi)\n     ^\n"}
{"timestamp": "2025-05-04T23:14:12.320256", "premises": ["PrehistoricBirdGenus(Ambiortus)", "Species(AmbiortusDementjevi, Ambiortus) & only x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)", "LivedIn(AmbiortusDementjevi, Mongolia)", "Discoverer(Ambiortus, YevgenyKurochkin)"], "conclusion": "LivedIn(YevgenyKurochkin, Mongolia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi, Ambiortus) & only x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi, Ambiortus) & only x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                               ^\n"}
{"timestamp": "2025-05-04T23:26:57.695525", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphereOfEarth)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. ((Located(x, y) & Located(y, z)) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphereOfEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:29:51.440419", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphereOfEarth)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. ((Located(x, y) & Located(y, z)) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphereOfEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:31:17.584084", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "In(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. ((Located(x, y) & Located(y, z)) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:34:10.273642", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all x. all y. all z. (Located(x, y) & Located(y, z) -> Located(x, z))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:35:42.578287", "premises": ["Located(NewYorkCity, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDevelopedCity(NewYorkCity)", "all A. all B. all C. ((Located(A, B) & Located(B, C)) -> Located(A, C))"], "conclusion": "all x. (HighlyDevelopedCity(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:37:09.267811", "premises": ["Located(NewYorkCity, USA)", "PartOf(USA, NorthAmerica)", "Located(NorthAmerica, WesternHemisphere)", "HighlyDeveloped(NewYorkCity)", "all A. all B. all C. ((Located(A, B) & Located(B, C)) -> Located(A, C))"], "conclusion": "all x. (HighlyDeveloped(x) -> Located(x, WesternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T23:51:35.718752", "premises": ["TVSeries(Westworld) & American(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "Debuted(Westworld, HBO, TwoZeroOneSix)", "AdaptedFrom(Westworld, OriginalFilm) & OriginalFilm(OneNineSevenThree) & WrittenBy(MichaelCrichton, OriginalFilm) & DirectedBy(MichaelCrichton, OriginalFilm)", "About(OriginalFilm, MalfunctioningRobots) & About(OriginalFilm, KillingHumans)"], "conclusion": "DirectedBy(MichaelCrichton, SomeFilm) & About(SomeFilm, MalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: OriginalFilm/1, OriginalFilm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OriginalFilm/1, OriginalFilm/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: OriginalFilm/1, OriginalFilm/0.\n\n\nFatal error:  The following symbols are used with multiple arities: OriginalFilm/1, OriginalFilm/0\n"}
{"timestamp": "2025-05-04T23:51:52.700338", "premises": ["District(Xiufeng, Guilin) & District(Xiangshan, Guilin) & District(Diecai, Guilin) & District(Qixing, Guilin)", "-District(Yangshuo, Guilin)"], "conclusion": "SameCity(District(Xiangshan, Guilin), District(Diecai, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: District/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: District/2\n"}
{"timestamp": "2025-05-04T23:52:09.177934", "premises": ["all x. (District(x) & (x_=_Xiufeng_|_x_=_Xiangshan_|_x_=_Diecai_|_x_=_Qixing) -> City(x, Guilin))", "-District(Yangshuo, Guilin)"], "conclusion": "(District(Xiangshan, Guilin) & District(Diecai, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/1, District/2.\n\n\nFatal error:  The following symbols are used with multiple arities: District/1, District/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: District/1, District/2.\n\n\nFatal error:  The following symbols are used with multiple arities: District/1, District/2\n"}
{"timestamp": "2025-05-05T00:53:29.450929", "premises": ["American(MaggieFriedman) & Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "ABCSeries(Eastwick)"], "conclusion": "exists x. (ABCSeries(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-05T00:54:57.765219", "premises": ["AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-05T00:59:42.514779", "premises": ["American(MaggieFriedman) & Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeTVSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-05T01:02:57.280834", "premises": ["AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Produced(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-05T01:04:26.030300", "premises": ["AmericanScreenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman, Eastwick) & Developed(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & Developed(Showrunner(WitchesOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1, Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1, Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1, Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1, Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-05T01:05:54.932947", "premises": ["American(MaggieFriedman) & Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd) & LifetimeTelevisionSeries(WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman, Eastwick) & DevelopedBy(MaggieFriedman, Eastwick)", "SeriesByABC(Eastwick)"], "conclusion": "exists x. (SeriesByABC(x) & DevelopedBy(x, MaggieFriedman))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1\n"}
{"timestamp": "2025-05-05T01:11:26.039769", "premises": ["exists x. (By(x, BoneyM) & GermanSingle(x))", "BigHit(Europe, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "-GermanSingle(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "all x. (PeaksBelow(x, One, GermanCharts) -> -GermanSingle(x))"], "conclusion": "PeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One, GermanCharts)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One, GermanCharts)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nPeaksBelow(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\", One, GermanCharts)\n                  ^\n"}
{"timestamp": "2025-05-05T01:12:35.026161", "premises": ["exists x. (Song(x) & By(x, BoneyM) & #1Single(x, German))", "Hit(Europe, HoorayHoorayHoliholiday)", "-(#1Single(HoorayHoorayHoliholiday, German))", "all x. (PeaksBelow(x, #One, GermanCharts) -> -#OneSingle(x, German))"], "conclusion": "PeaksBelow(HoorayHoorayHoliholiday, #One, GermanCharts)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(Song(x) & By(x,BoneyM)) & #1Single(x,German)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(Song(x) & By(x,BoneyM)) & #1Single(x,German)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-05T01:15:03.280572", "premises": ["exists x. (Single(x) & By(x, BoneyM) & GermanChartPosition(x, #One))", "BigHit(Europe, HoorayHoorayItsAHoliHoliday)", "-GermanChartPosition(HoorayHoorayItsAHoliHoliday, #One)", "all x. (GermanChartPosition(x, P) & P != #One -> -GermanChartPosition(x, #One))"], "conclusion": "GermanChartPosition(HoorayHoorayItsAHoliHoliday, P) & P != #1", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Single(x) & By(x,BoneyM)) & GermanChartPosition(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Single(x) & By(x,BoneyM)) & GermanChartPosition(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-05T01:16:33.243907", "premises": ["exists x. (Song(x) & By(x, BoneyM) & GermanCharts(x) & Peak(x, One))", "BigHitIn(Europe, HoorayHoorayItsAHoliHoliday)", "-GermanCharts(HoorayHoorayItsAHoliHoliday)", "all x. (GermanCharts(x) & Peak(x, n) & (n > One) -> -GermanCharts(x) & Peak(x, One))"], "conclusion": "GermanCharts(HoorayHoorayItsAHoliHoliday) & Peak(HoorayHoorayItsAHoliHoliday, n) & (n_>_One)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (GermanCharts(x) & Peak(x, n) & (n > One) -> -GermanCharts(x) & Peak(x, One))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (GermanCharts(x) & Peak(x, n) & (n > One) -> -GermanCharts(x) & Peak(x, One))\n                                          ^\n"}
{"timestamp": "2025-05-05T01:17:57.137823", "premises": ["exists x. (Song(x) & German(x) & Has(BoneyM, x) & NumberOne(x))", "Song(HoorayHoorayItsAHoliHoliday) & BigHit(HoorayHoorayItsAHoliHoliday, Europe)", "-German(HoorayHoorayItsAHoliHoliday) | -NumberOne(HoorayHoorayItsAHoliHoliday)", "all x. (Song(x) & PeakBelowNumberOne(x, Germany) -> -NumberOne(x, Germany))"], "conclusion": "PeakBelowNumberOne(HoorayHoorayItsAHoliHoliday, Germany)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumberOne/2, NumberOne/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NumberOne/2, NumberOne/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NumberOne/2, NumberOne/1.\n\n\nFatal error:  The following symbols are used with multiple arities: NumberOne/2, NumberOne/1\n"}
{"timestamp": "2025-05-05T01:20:05.651345", "premises": ["exists x. (By(BoneyM, x) & GermanChart(x, #One))", "BigHitInEurope(HoorayHoorayHoliHoliday)", "-GermanChart(HoorayHoorayHoliHoliday, #One)", "all x. (GermanChart(x, Below(#One)) -> -GermanChart(x, #One))"], "conclusion": "GermanChart(HoorayHoorayHoliHoliday, Below(#One))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (By(BoneyM,x) & GermanChart(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (By(BoneyM,x) & GermanChart(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
