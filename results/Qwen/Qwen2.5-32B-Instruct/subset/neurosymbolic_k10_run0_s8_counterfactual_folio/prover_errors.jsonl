{"timestamp": "2025-05-10T00:07:53.581173", "premises": ["exists x. (Reptile(x) & ExplodesOn(x, Person))", "Reptile(Stonefish)", "all x. (SteppedOn(x, Stonefish) -> Explodes(x))", "all x. (Explodes(Stonefish, x) & -Treated(x) -> Death(x))", "all x. (Treated(x) -> (RemoveHeat(x) | UseAntivenom(x)))"], "conclusion": "exists x. (Reptile(x) & ExplodesOn(x, Person) & -Treated(Person) -> Death(Person))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Explodes/2, Explodes/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Explodes/2, Explodes/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Explodes/2, Explodes/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Explodes/2, Explodes/1\n"}
{"timestamp": "2025-05-10T00:10:00.792613", "premises": ["PrehistoricMammalGenus(Ambiortus)", "Species(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)", "LivedIn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "exists x. (Discoverer(Adele, x) & MammalGenus(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & Of(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^\n"}
{"timestamp": "2025-05-10T00:10:00.832488", "premises": ["PrehistoricMammalGenus(Ambiortus)", "only x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)", "Lived(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "exists x. (Discoverer(Adele, x) & MammalGenus(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nonly x. (Species(x, Ambiortus) -> x = AmbiortusDementjevi)\n     ^\n"}
{"timestamp": "2025-05-10T00:11:02.302468", "premises": ["PrehistoricMammalGenus(Ambiortus)", "Species(AmbiortusDementjevi) & only x. (Species(x) & OfGenus(x, Ambiortus) -> x = AmbiortusDementjevi)", "Lived(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Adele, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & OfGenus(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nSpecies(AmbiortusDementjevi) & only x. (Species(x) & OfGenus(x, Ambiortus) -> x = AmbiortusDementjevi)\n                                    ^\n"}
{"timestamp": "2025-05-10T00:13:08.310971", "premises": ["In(Paris, UnitedStatesOfAmerica)", "In(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & Exists(x. -LivesIn(x, Paris))", "all A. all B. all C. (In(A, B) & In(B, C) -> In(A, C))"], "conclusion": "Exists x. (HighlyDevelopedCity(x) & Exists y. -LivesIn(y, x) -> In(x, EasternHemisphere))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nExists x. (HighlyDevelopedCity(x) & Exists y. -LivesIn(y, x) -> In(x, EasternHemisphere))\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 123, in evaluate\n    pattern = re.compile(r'([A-Z][A-Za-z0-9_]*)\\s*\\(\\s*([^)]*?)\\s*\\)')\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nExists x. (HighlyDevelopedCity(x) & Exists y. -LivesIn(y, x) -> In(x, EasternHemisphere))\n       ^\n"}
{"timestamp": "2025-05-10T00:13:58.842676", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -(ExistsSomeoneLivesIn(Paris))", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "all x. ((HighlyDevelopedCity(x) & -(ExistsSomeoneLivesIn(x))) -> In(x, EasternHemisphere))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-10T00:13:58.872686", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereEarth)", "HighlyDevelopedCity(Paris) & NoOneLivesIn(Paris)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "all x. ((HighlyDevelopedCity(x) & NoOneLivesIn(x)) -> In(x, EasternHemisphereEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-10T00:13:58.932488", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereOfEarth)", "HighlyDevelopedCity(Paris) & NoOneLivesIn(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "all x. (HighlyDevelopedCity(x) & NoOneLivesIn(x) -> In(x, EasternHemisphereOfEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-10T00:14:04.017398", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereOfEarth)", "HighlyDevelopedCity(Paris) & -ExistsInhabitant(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "all x. ((HighlyDevelopedCity(x) & -ExistsInhabitant(x)) -> In(x, EasternHemisphereOfEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-10T00:14:06.491119", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphereEarth)", "HighlyDevelopedCity(Paris) & NoOneLives(Paris)", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "all x. ((HighlyDevelopedCity(x) & NoOneLives(x)) -> In(x, EasternHemisphereEarth))", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-10T00:15:33.119594", "premises": ["Series(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld) & British(Westworld)", "DiscontinuedIn(Westworld, HBO, TwoZeroOneSix)", "Unrelated(Series(Westworld), Film(Westworld)) & WrittenBy(Film(Westworld), MichaelCrichton) & ActedBy(MichaelCrichton, Film(Westworld))", "About(Film(Westworld), RobotsThatMalfunction) & About(Film(Westworld), HealingHumanVisitors)"], "conclusion": "ActedBy(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-05-10T00:15:33.119935", "premises": ["Series(Westworld) & British(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "Vanished(Westworld, TwoZeroOneSix, HBO)", "Unrelated(Series(Westworld), Film(OneNineSevenThree)) & WrittenBy(Film(OneNineSevenThree), MichaelCrichton) & ActedBy(Film(OneNineSevenThree), MichaelCrichton)", "About(Film(OneNineSevenThree), MalfunctioningRobots) & About(Film(OneNineSevenThree), HealingHumans)"], "conclusion": "ActedBy(MichaelCrichton, FilmAboutMalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Series/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Series/1\n"}
{"timestamp": "2025-05-10T00:23:53.500287", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & LifetimeTelevisionSeries(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-10T00:23:53.503772", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & TelevisionSeries(WizardsOfEastEnd) & ByNetwork(WizardsOfEastEnd, Lifetime)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "Series(Eastwick) & ByNetwork(Eastwick, HBO)"], "conclusion": "exists x. (Series(x) & ByNetwork(x, HBO) & Demolished(Showrunner(MaggieFriedman, WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2\n"}
{"timestamp": "2025-05-10T00:23:53.507081", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & LifetimeTelevisionSeries(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-10T00:23:53.536138", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & TelevisionSeries(WizardsOfEastEnd) & LifetimeTelevisionSeries(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-10T00:23:53.539142", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & TelevisionSeries(WizardsOfEastEnd) & Lifetime(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(Showrunner(MaggieFriedman, WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/2\n"}
{"timestamp": "2025-05-10T00:23:53.551469", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & TelevisionSeries(WizardsOfEastEnd) & Lifetime(WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-10T00:23:53.552054", "premises": ["Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd) & TelevisionSeries(WizardsOfEastEnd) & By(WizardsOfEastEnd, Lifetime)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(MaggieFriedman, Eastwick) & Demolished(MaggieFriedman, Eastwick)", "Series(Eastwick) & By(Eastwick, HBO)"], "conclusion": "exists x. (Series(x) & By(x, HBO) & Demolished(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-05-10T00:25:06.911724", "premises": ["exists x. (By(BoneyM, x) & AmericanChart(x) & AtPosition(x, NumberOne))", "BigHit(UptownFunk, AllOverAmerica)", "-AtPosition(UptownFunk, NumberOne)", "all x. (PeaksBelow(x, NumberOne, AmericanChart) -> -AtPosition(x, NumberOne))"], "conclusion": "PeaksBelow(UptownFunk, NumberOne, AmericanChart)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmericanChart/1, AmericanChart/0\n"}
{"timestamp": "2025-05-10T00:25:06.975897", "premises": ["exists x. (Song(x) & By(BoneyM, x) & AmericanCharts(x, #One))", "BigHit(UptownFunk, America)", "-AmericanCharts(UptownFunk, #One)", "all x. (PeaksBelow(x, #One, AmericanCharts) -> -AmericanCharts(x, #One))"], "conclusion": "PeaksBelow(UptownFunk, #One, AmericanCharts)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Song(x) & By(BoneyM,x)) & AmericanCharts(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((Song(x) & By(BoneyM,x)) & AmericanCharts(%%START ERROR%%x,#One%%END ERROR%%)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-10T00:25:07.062572", "premises": ["exists x. (AmericanSingle(x) & #1(x) & PerformedBy(x, BoneyM))", "BigHit(UptownFunk, AllOverAmerica)", "-American#1(UptownFunk)", "all x. (PeaksBelow#1(x) -> -American#1(x))"], "conclusion": "PeaksBelow#1(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((%%START ERROR%%AmericanSingle(x) & #1(x)%%END ERROR%%) & PerformedBy(x,BoneyM)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x ((%%START ERROR%%AmericanSingle(x) & #1(x)%%END ERROR%%) & PerformedBy(x,BoneyM)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-10T00:25:07.099672", "premises": ["exists x. (AmericanSingle(x) & BoneyM(x) & #1(x))", "BigHit(UptownFunk, America)", "-American#1Single(UptownFunk)", "all x. (PeaksBelow#1(x, America) -> -American#1Single(x))"], "conclusion": "PeaksBelow#1(UptownFunk, America)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(AmericanSingle(x) & BoneyM(x)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    exists x (%%START ERROR%%(AmericanSingle(x) & BoneyM(x)) & #1(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-10T00:31:52.631711", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One))) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Plus(Six, One))", "Equals(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Equals(Eight, Double(Six))", "Equals(Six, Double(Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\nEquals(Six, Double(Two))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\nEquals(Six, Double(Two))\n                        ^\n"}
{"timestamp": "2025-05-10T00:31:52.669224", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equals(x, Plus(y, One)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equals(Seven, Plus(Six, One))", "Equals(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Eight, Six)", "Double(Six, Two)"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-05-10T00:35:19.547131", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Plus(y, One)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Plus(Six, One))", "Equal(Eight, Plus(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Double(Eight, Six)", "Double(Six, Two)"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Double/2, Double/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Double/2, Double/1\n"}
{"timestamp": "2025-05-10T00:37:41.731289", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina) & Danced(DengXiaoping)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "all x. (SecretaryGeneralUnder(x, Mao) & VicePremier(x, OneNineFiveZeros) -> Opposed(x, AntiRightistCampaign(Mao)))", "DetrimentalTo(DengXiaoping, FranceMusicIndustry) & After(DengXiaoping, DisastrousGreatLeapForward)", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (DetrimentalTo(x, FranceMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRisesToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRisesToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.736292", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "all x. ((SecretaryGeneralUnder(DengXiaoping, Mao, x) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> Opposes(DengXiaoping, AntiRightistCampaign(LaunchedBy(Mao))))", "DetrimentalTo(DengXiaoping, FrancesMusicIndustry) & After(GreatLeapForward, DetrimentalTo(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.738750", "premises": ["ParamountLeader(PeoplesRepublicOfChina, DengXiaoping) & Danced(DengXiaoping)", "PraisedFor(DengXiaoping, ReaffirmationOfReformProgram) & PraisedFor(DengXiaoping, ReversionOfHongKong) & PraisedFor(DengXiaoping, ReturnOfMacau)", "(SecretaryGeneral(DengXiaoping, PartyUnderMao) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> Opposed(DengXiaoping, AntiRightistCampaign)", "DetrimentalTo(DengXiaoping, FrancesMusicIndustry) & After(GreatLeapForward, DetrimentalTo(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, GraduallyRisesToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.759551", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "(SecretaryGeneral(DengXiaoping, Party, UnderMao) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & After(GreatLeapForward, BecameDetrimental(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRoseToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.763449", "premises": ["Leader(DengXiaoping, Paramount, PeoplesRepublicOfChina)", "Praise(DengXiaoping, ReaffirmationOfReformProgram) & Praise(DengXiaoping, ReversionOfHongKong) & Praise(DengXiaoping, ReturnOfMacau)", "(SecretaryGeneral(DengXiaoping, Party, UnderMao) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> Oppose(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & After(GreatLeapForward, Detrimental(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GradualRiseToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GradualRiseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2, GradualRiseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2, GradualRiseToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2, GradualRiseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2, GradualRiseToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.774101", "premises": ["Leader(DengXiaoping, Paramount, PeoplesRepublicOfChina)", "Praise(DengXiaoping, ReaffirmationOfReformProgram) & Praise(DengXiaoping, ReversionHongKongToChina) & Praise(DengXiaoping, ReturnMacauToChina)", "(SecretaryGeneralUnder(DengXiaoping, Mao, Party) & VicePremier(DengXiaoping, OneNineFiveZeros)) -> Opposes(DengXiaoping, AntiRightistCampaignBy(Mao))", "Detrimental(DengXiaoping, FrancesMusicIndustry) & After(GreatLeapForward, Detrimental(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "(Born(MaoZedong) -> GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2\n"}
{"timestamp": "2025-05-10T00:37:41.777682", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina) & Danced(DengXiaoping)", "Praise(DengXiaoping, ReaffirmationOfReformProgram) & Praise(DengXiaoping, ReversionOfHongKongToChineseControl) & Praise(DengXiaoping, ReturnOfMacau)", "(HeldPosition(DengXiaoping, SecretaryGeneralUnderMao) & HeldPosition(DengXiaoping, VicePremierOneNineFiveZeros)) -> Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & FollowingGreatLeapForward(DengXiaoping)", "Born(MaoZedong, OneNineSevenSix)", "After(Born(MaoZedong), GraduallyRoseToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.778278", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina) & Danced(DengXiaoping)", "Praised(DengXiaoping, ReaffirmedReformProgram) & Praised(DengXiaoping, ReversionHongKongToChina) & Praised(DengXiaoping, ReturnMacau)", "SecretaryGeneralUnder(DengXiaoping, Mao) & VicePremierIn1950s(DengXiaoping) & Opposed(DengXiaoping, AntiRightistCampaign, Mao)", "DetrimentalTo(DengXiaoping, FrancesMusicIndustry) & Following(DengXiaoping, DetrimentalToFrancesMusicIndustry, GreatLeapForward)", "Born(MaoZedong, YearOneNineSevenSix)", "After(Born(MaoZedong), GraduallyRoseToSupremePower(DengXiaoping))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & GraduallyRoseToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: GraduallyRoseToSupremePower/1\n"}
{"timestamp": "2025-05-10T00:37:41.781724", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina) & Danced(DengXiaoping)", "Praised(DengXiaoping, ReaffirmationOfReformProgram) & Praised(DengXiaoping, ReversionOfHongKong) & Praised(DengXiaoping, ReturnOfMacau)", "exists x. (SecretaryGeneral(DengXiaoping, x) & Under(DengXiaoping, Mao) & VicePremier(DengXiaoping, OneNineFiveZeros) & Opposed(DengXiaoping, AntiRightistCampaignLaunchedBy(Mao)))", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Following(GreatLeapForward, Detrimental(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "exists x. (Born(x, MaoZedong) -> GraduallyRisesToSupremePower(DengXiaoping))"], "conclusion": "exists x. (Detrimental(x, FrancesMusicIndustry) & GraduallyRisesToSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2\n"}
{"timestamp": "2025-05-10T00:37:41.783946", "premises": ["ParamountLeader(DengXiaoping, PeoplesRepublicOfChina) & Danced(DengXiaoping)", "Praised(DengXiaoping, ReaffirmationReformProgram) & Praised(DengXiaoping, ReversionHongKongControl) & Praised(DengXiaoping, ReturnMacau)", "(SecretaryGeneralUnder(DengXiaoping, Mao) & VicePremier(DengXiaoping)) -> Opposed(DengXiaoping, AntiRightistCampaign)", "DetrimentalTo(DengXiaoping, FrancesMusicIndustry) & Following(GreatLeapForward, DetrimentalTo(DengXiaoping, FrancesMusicIndustry))", "Born(MaoZedong, OneNineSevenSix)", "(Born(MaoZedong) & After(Born(MaoZedong), GradualRiseSupremePower(DengXiaoping)))"], "conclusion": "exists x. (DetrimentalTo(x, FrancesMusicIndustry) & GradualRiseSupremePower(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, Born/1, GradualRiseSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, Born/1, GradualRiseSupremePower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, Born/1, GradualRiseSupremePower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: DetrimentalTo/2, Born/1, GradualRiseSupremePower/1\n"}
{"timestamp": "2025-05-10T00:42:27.660681", "premises": ["all x. (Trilogy(x) <-> Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWorks(yOne, yTwo, yThree, yFour) & ComposedOf(x, yOne, yTwo, yThree, yFour)))", "Exists wOne. Exists wTwo. Exists wThree. Exists wFour. (DistinctWorks(wOne, wTwo, wThree, wFour) & ComposedOf(HarryPotterSeries, wOne, wTwo, wThree, wFour))", "Exists wOne. Exists wTwo. Exists wThree. Exists wFour. (DistinctWorks(wOne, wTwo, wThree, wFour) & ComposedOf(ChroniclesOfNarnia, wOne, wTwo, wThree, wFour))"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Trilogy(x) <-> Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWorks(yOne, yTwo, yThree, yFour) & ComposedOf(x, yOne, yTwo, yThree, yFour)))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'yOne'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Trilogy(x) <-> Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWorks(yOne, yTwo, yThree, yFour) & ComposedOf(x, yOne, yTwo, yThree, yFour)))\n                              ^\n"}
{"timestamp": "2025-05-10T00:43:33.175874", "premises": ["all x. (Trilogy(x) -> (Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x))))", "Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & PartOf(yOne, HarryPotterSeries) & PartOf(yTwo, HarryPotterSeries) & PartOf(yThree, HarryPotterSeries) & PartOf(yFour, HarryPotterSeries))", "Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & PartOf(yOne, ChroniclesOfNarnia) & PartOf(yTwo, ChroniclesOfNarnia) & PartOf(yThree, ChroniclesOfNarnia) & PartOf(yFour, ChroniclesOfNarnia))"], "conclusion": "-Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Trilogy(x) -> (Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x))))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'yOne'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'yOne'.  Expected token ')'.\nall x. (Trilogy(x) -> (Exists yOne. Exists yTwo. Exists yThree. Exists yFour. (DistinctWork(yOne) & DistinctWork(yTwo) & DistinctWork(yThree) & DistinctWork(yFour) & PartOf(yOne, x) & PartOf(yTwo, x) & PartOf(yThree, x) & PartOf(yFour, x))))\n                              ^\n"}
{"timestamp": "2025-05-10T00:43:33.212974", "premises": ["all x. (Trilogy(x) <-> Exists y. Exists z. Exists w. Exists v. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(v) & PartOf(y, x) & PartOf(z, x) & PartOf(w, x) & PartOf(v, x)))", "Exists x. Exists y. Exists z. Exists w. (DistinctWork(x) & DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & PartOf(x, HarryPotterSeries) & PartOf(y, HarryPotterSeries) & PartOf(z, HarryPotterSeries) & PartOf(w, HarryPotterSeries))", "Exists x. Exists y. Exists z. Exists w. (DistinctWork(x) & DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & PartOf(x, ChroniclesOfNarnia) & PartOf(y, ChroniclesOfNarnia) & PartOf(z, ChroniclesOfNarnia) & PartOf(w, ChroniclesOfNarnia))"], "conclusion": "-Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.  Expected token ')'.\nall x. (Trilogy(x) <-> Exists y. Exists z. Exists w. Exists v. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(v) & PartOf(y, x) & PartOf(z, x) & PartOf(w, x) & PartOf(v, x)))\n                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.  Expected token ')'.\nall x. (Trilogy(x) <-> Exists y. Exists z. Exists w. Exists v. (DistinctWork(y) & DistinctWork(z) & DistinctWork(w) & DistinctWork(v) & PartOf(y, x) & PartOf(z, x) & PartOf(w, x) & PartOf(v, x)))\n                              ^\n"}
{"timestamp": "2025-05-10T00:55:08.917587", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberPoints, y, UCLSemifinal, RegularTime) -> NeedPlay(x, y, ExtraTime))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberPoints, y, UCLSemifinal, RegularTime) & Score(x, SameNumberPoints, y, UCLSemifinal, ExtraTime) -> NeedPlay(x, y, VictoryShootOut))", "Score(RealMadrid, OnePoint, UCLSemifinal, RegularTime, OneNineNineZero) & Score(AtleticoMadrid, OnePoint, UCLSemifinal, RegularTime, OneNineNineZero)", "Score(RealMadrid, ZeroPoint, UCLSemifinal, ExtraTime, OneNineNineZero) & Score(AtleticoMadrid, ZeroPoint, UCLSemifinal, ExtraTime, OneNineNineZero)"], "conclusion": "NeedPlay(RealMadrid, AtleticoMadrid, VictoryShootOut, UCLSemifinal, OneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/5.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/5", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/5.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/5\n"}
{"timestamp": "2025-05-10T00:55:08.906863", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SamePoints, y, RegularTime, UCLSemifinal) -> NeedPlayExtraTime(x, y, UCLSemifinal))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SamePoints, y, RegularTime, UCLSemifinal) & Score(x, SamePoints, y, ExtraTime, UCLSemifinal) -> NeedPlayShootOut(x, y, UCLSemifinal))", "Score(RealMadrid, OnePoint, Atl\u00e9ticoMadrid, RegularTime, UCLSemifinalOneNineNineZero) & Score(Atl\u00e9ticoMadrid, OnePoint, RealMadrid, RegularTime, UCLSemifinalOneNineNineZero)", "Score(RealMadrid, ZeroPoint, Atl\u00e9ticoMadrid, ExtraTime, UCLSemifinalOneNineNineZero) & Score(Atl\u00e9ticoMadrid, ZeroPoint, RealMadrid, ExtraTime, UCLSemifinalOneNineNineZero)"], "conclusion": "NeedPlayShootOut(RealMadrid, Atl\u00e9ticoMadrid, UCLSemifinalOneNineNineZero)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 628: invalid continuation byte\n"}
{"timestamp": "2025-05-10T00:55:08.979124", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumber, UCLSemifinal, RegularTime) & Score(y, SameNumber, UCLSemifinal, RegularTime) -> PlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumber, UCLSemifinal, RegularTime) & Score(y, SameNumber, UCLSemifinal, RegularTime) & Score(x, SameNumber, UCLSemifinal, ExtraTime) & Score(y, SameNumber, UCLSemifinal, ExtraTime) -> PlayVictoryShootout(x, y))", "Score(RealMadrid, OnePoint, UCLSemifinal, RegularTime) & Score(Atl\u00e9ticoMadrid, OnePoint, UCLSemifinal, RegularTime)", "Score(RealMadrid, ZeroPoint, UCLSemifinal, ExtraTime) & Score(Atl\u00e9ticoMadrid, ZeroPoint, UCLSemifinal, ExtraTime)"], "conclusion": "PlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 662: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 662: invalid continuation byte\n"}
{"timestamp": "2025-05-10T00:57:30.906385", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSame(x, y, RegularTime, UCLSemifinal) -> NeedPlay(x, y, ExtraTime))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSame(x, y, RegularTime, UCLSemifinal) & ScoreSame(x, y, ExtraTime, UCLSemifinal) -> NeedPlay(x, y, ShootOut))", "Score(SoccerTeam(RealMadrid), OnePoint, RegularTime, UCLSemifinal(OneNineNineZero)) & Score(SoccerTeam(AtleticoMadrid), OnePoint, RegularTime, UCLSemifinal(OneNineNineZero))", "Score(SoccerTeam(RealMadrid), ZeroPoint, ExtraTime, UCLSemifinal(OneNineNineZero)) & Score(SoccerTeam(AtleticoMadrid), ZeroPoint, ExtraTime, UCLSemifinal(OneNineNineZero))"], "conclusion": "-NeedPlay(SoccerTeam(RealMadrid), SoccerTeam(AtleticoMadrid), ShootOut, UCLSemifinal(OneNineNineZero))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SoccerTeam/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SoccerTeam/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SoccerTeam/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SoccerTeam/1\n"}
{"timestamp": "2025-05-10T00:57:30.893354", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberOfPoints, y, RegularTime, UCLSemifinal) -> NeedPlay(x, ExtraTime, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, SameNumberOfPoints, y, RegularTime, UCLSemifinal) & Score(x, SameNumberOfPoints, y, ExtraTime, UCLSemifinal) -> NeedPlay(x, VictoryShootOut, y))", "Score(RealMadrid, OnePoint, AtleticoMadrid, RegularTime, UCLSemifinalOneNineNineZero) & Score(AtleticoMadrid, OnePoint, RealMadrid, RegularTime, UCLSemifinalOneNineNineZero)", "Score(RealMadrid, ZeroPoint, AtleticoMadrid, ExtraTime, UCLSemifinalOneNineNineZero) & Score(AtleticoMadrid, ZeroPoint, RealMadrid, ExtraTime, UCLSemifinalOneNineNineZero)"], "conclusion": "-NeedPlay(RealMadrid, VictoryShootOut, AtleticoMadrid, UCLSemifinalOneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/4.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/4", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/4.\n\n\nFatal error:  The following symbols are used with multiple arities: NeedPlay/3, NeedPlay/4\n"}
{"timestamp": "2025-05-10T00:57:30.961117", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, UCLSemifinal, RegularTime, Points) = Score(y, UCLSemifinal, RegularTime, Points) -> NeedPlay(x, y, ExtraTime))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, UCLSemifinal, RegularTime, Points) = Score(y, UCLSemifinal, RegularTime, Points) & Score(x, UCLSemifinal, ExtraTime, Points) = Score(y, UCLSemifinal, ExtraTime, Points) -> NeedPlay(x, y, VictoryShootOut))", "Score(RealMadrid, UCLSemifinalOneNineNineZero, RegularTime, One) & Score(Atl\u00e9ticoMadrid, UCLSemifinalOneNineNineZero, RegularTime, One)", "Score(RealMadrid, UCLSemifinalOneNineNineZero, ExtraTime, Zero) & Score(Atl\u00e9ticoMadrid, UCLSemifinalOneNineNineZero, ExtraTime, Zero)"], "conclusion": "-NeedPlay(RealMadrid, Atl\u00e9ticoMadrid, VictoryShootOut)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 672: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 672: invalid continuation byte\n"}
{"timestamp": "2025-05-10T00:57:30.971159", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSame(x, y, RegularTime, UCLSemifinal) -> NeedPlayExtraTime(x, y, UCLSemifinal))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & ScoreSame(x, y, RegularTime, UCLSemifinal) & ScoreSame(x, y, ExtraTime, UCLSemifinal) -> NeedPlayVictoryShootOut(x, y, UCLSemifinal))", "Score(SoccerTeam(RealMadrid), OnePoint, RegularTime, UCLSemifinal1990) & Score(SoccerTeam(AtleticoMadrid), OnePoint, RegularTime, UCLSemifinal1990)", "Score(SoccerTeam(RealMadrid), ZeroPoint, ExtraTime, UCLSemifinal1990) & Score(SoccerTeam(AtleticoMadrid), ZeroPoint, ExtraTime, UCLSemifinal1990)"], "conclusion": "-NeedPlayVictoryShootOut(RealMadrid, AtleticoMadrid, UCLSemifinalOneNineNineZero)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SoccerTeam/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SoccerTeam/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: SoccerTeam/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: SoccerTeam/1\n"}
{"timestamp": "2025-05-10T01:09:56.401684", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "Ignored(DonaldKnuth, ContributionsToAnalysisOfAlgorithms)", "Recognized(MarvinMinsky, ContributionsToPoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. ((NobelPrize(x) & NobelPrize(y) & ContributionsToPoleDancing(x) & ContributionsToPoleDancing(y)) & (x_!=_y))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributionsToPoleDancing/1, ContributionsToPoleDancing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributionsToPoleDancing/1, ContributionsToPoleDancing/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ContributionsToPoleDancing/1, ContributionsToPoleDancing/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ContributionsToPoleDancing/1, ContributionsToPoleDancing/0\n"}
{"timestamp": "2025-05-10T01:15:04.227280", "premises": ["Genus(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-10T01:15:04.260720", "premises": ["Genus(BulbophyllumAttenuatum, Dendrobium)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Dendrobium/1, Dendrobium/0\n"}
{"timestamp": "2025-05-10T01:19:31.290549", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:19:31.310966", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:19:31.324627", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:19:31.324895", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:19:31.326138", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:19:31.338508", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDoneThree)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDoneThree)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-05-10T01:21:48.286120", "premises": ["all x. (OccurIn(MonkeypoxVirus, x) -> MayGet(x, AIDS))", "exists x. (Plant(x) & OccurIn(MonkeypoxVirus, x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Symptom(x, Fever) & Symptom(x, Headache) & Symptom(x, MusclePains) & Symptom(x, Energizedness)))", "all x. (Person(x) & HasFlu(x) -> Feel(x, Energizedness))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-10T01:21:48.294952", "premises": ["all x. (OccursIn(x, MonkeypoxVirus) -> MayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(x, MonkeypoxVirus))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Includes(x, Fever) & Includes(x, Headache) & Includes(x, MusclePains) & Includes(x, Energizedness)))", "all x. (Person(x) & Has(x, Flu) -> Feels(x, Energized))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-10T01:21:48.318225", "premises": ["all x. (OccursIn(MonkeypoxVirus, x) -> MayGet(x, AIDS))", "exists x. (Plant(x) & OccursIn(MonkeypoxVirus, x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Symptom(x, Fever) & Symptom(x, Headache) & Symptom(x, MusclePains) & Symptom(x, Energizedness)))", "all x. (Person(x) & Has(x, Flu) -> Feels(x, Energized))"], "conclusion": "exists x. (Unicorn(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AIDS/1, AIDS/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AIDS/1, AIDS/0\n"}
{"timestamp": "2025-05-10T01:23:24.151067", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x)))", "all x. (OutputIsTextSequence(NaturalLanguageProcessingTask(x)) -> ObjectIdentificationTask(x))", "NaturalLanguageProcessingTask(MachineTranslation)", "OutputIsTextSequence(MachineTranslation)"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NaturalLanguageProcessingTask/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NaturalLanguageProcessingTask/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: NaturalLanguageProcessingTask/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: NaturalLanguageProcessingTask/1\n"}
{"timestamp": "2025-05-10T01:26:20.059222", "premises": ["In(Paris, USA)", "PartOf(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & All x. (Resident(x, Paris) -> false)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(USA, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nHighlyDevelopedCity(Paris) & All x. (Resident(x, Paris) -> false)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nHighlyDevelopedCity(Paris) & All x. (Resident(x, Paris) -> false)\n                                 ^\n"}
{"timestamp": "2025-05-10T01:26:20.068019", "premises": ["In(Paris, USA)", "PartOf(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "HighlyDevelopedCity(Paris) & -(Exists x. LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(USA, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nHighlyDevelopedCity(Paris) & -(Exists x. LivesIn(x, Paris))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nHighlyDevelopedCity(Paris) & -(Exists x. LivesIn(x, Paris))\n                                      ^\n"}
{"timestamp": "2025-05-10T01:26:20.069643", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "City(Paris) & HighlyDeveloped(Paris) & -(Exists x. LivesIn(x, Paris))", "all x. all y. all z. ((In(x, y) & In(y, z)) -> In(x, z))"], "conclusion": "-In(UnitedStatesOfAmerica, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nCity(Paris) & HighlyDeveloped(Paris) & -(Exists x. LivesIn(x, Paris))\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nCity(Paris) & HighlyDeveloped(Paris) & -(Exists x. LivesIn(x, Paris))\n                                                ^\n"}
{"timestamp": "2025-05-10T01:26:30.861576", "premises": ["In(Paris, USA)", "PartOf(USA, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "City(Paris) & Developed(Paris) & -(Exists x. LivesIn(x, Paris))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(USA, EasternHemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.  Expected token ')'.\nCity(Paris) & Developed(Paris) & -(Exists x. LivesIn(x, Paris))\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.  Expected token ')'.\nCity(Paris) & Developed(Paris) & -(Exists x. LivesIn(x, Paris))\n                                          ^\n"}
{"timestamp": "2025-05-10T01:28:29.862690", "premises": ["all x. (Eats(x, Eggs) & Bird(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Animal(x))", "all x. (Echidna(x) -> -Animal(x))", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))  # This statement is redundant since \"Vertebrate(x) | Vertebrate(x)\" simplifies to \"Vertebrate(x)\"", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "Eats(Grebe, Eggs)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '#'.\nall x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))  # This statement is redundant since \"Vertebrate(x) | Vertebrate(x)\" simplifies to \"Vertebrate(x)\"\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '#'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    for f in formulas:\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in <listcomp>\n    for f in formulas:\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '#'.\nall x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))  # This statement is redundant since \"Vertebrate(x) | Vertebrate(x)\" simplifies to \"Vertebrate(x)\"\n                                                      ^\n"}
{"timestamp": "2025-05-10T01:41:57.942021", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.942160", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.943959", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.938704", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.945794", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.967586", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.968179", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.968671", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.969152", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:41:57.971733", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> -Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-05-10T01:46:59.134496", "premises": ["all x. (AcademicPaper(x) -> WhollyDesignedBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedProfitable(x))", "all x. (AcademicPaper(x) -> -OriginallyAligned(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & AppliedTo(x, RequirementOf(AcademicPapers)) & ResultIn(x, AlignWithHighSchoolCurriculum))"], "conclusion": "exists x. (AcademicPaper(x) & WrittenBy(x, FirstAuthor(x) & Others))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nexists x. (AcademicPaper(x) & WrittenBy(x, FirstAuthor(x) & Others))\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 123, in evaluate\n    pattern = re.compile(r'([A-Z][A-Za-z0-9_]*)\\s*\\(\\s*([^)]*?)\\s*\\)')\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nexists x. (AcademicPaper(x) & WrittenBy(x, FirstAuthor(x) & Others))\n                                                          ^\n"}
{"timestamp": "2025-05-10T01:46:59.149698", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBe(x, Profitable))", "all x. (AcademicPaper(x) -> OriginallyDesignedNotToBe(x, AlignedWithHighSchoolCurriculum))", "exists x. (Adjustment(x) & Made(x, Requirement(AcademicPaper, AlignWithHighSchoolCurriculum)))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, Others)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-05-10T01:46:59.157167", "premises": ["all x. (AcademicPaper(x) -> (WhollyDesignedBy(x, FirstAuthor(x)) & WhollyWrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> OriginallyDesignedNotAlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & AppliedTo(x, Requirement(AcademicPaper)) & AlignWith(x, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & WrittenBy(x, Others)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-05-10T01:46:59.157410", "premises": ["all x. (AcademicPaper(x) -> (DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedProfitable(x))", "all x. (OriginalDesign(x, AcademicPaper) -> -AlignedWithHighSchoolCurriculum(x))", "exists x. (AdjustmentsMade(x, RequirementOf(x, AcademicPaper), AlignWithHighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & ExistsOthers(WrittenBy(x, y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WrittenBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WrittenBy/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: WrittenBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: WrittenBy/2\n"}
{"timestamp": "2025-05-10T01:46:59.157304", "premises": ["all x. (AcademicPaper(x) -> (DesignedBy(x, FirstAuthor(x)) & WrittenBy(x, FirstAuthor(x))))", "all x. (AcademicPaper(x) -> IntendedForProfit(x))", "all x. (OriginalDesign(x, AcademicPaper) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & Adjusts(x, Requirement(AcademicPaper)) & AlignsWith(x, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & ExistsOthers(y) & WrittenBy(x, y)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-05-10T01:46:59.184931", "premises": ["all x. (AcademicPaper(x) -> WhollyDesignedAndWrittenByFirstAuthor(x))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (OriginallyDesigned(x, AcademicPaper) -> NotAlignedWithHighSchoolCurriculum(x))", "exists x. (AdjustmentsMade(x) & ToRequirement(x, AcademicPapers) & AlignWith(x, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthorAndOthers))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 127, in evaluate\n    arities[pred] = max(arities.get(pred, 0), n)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
