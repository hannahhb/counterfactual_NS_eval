{"timestamp": "2025-05-04T18:06:52.074687", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "-OlympicGoldMedalWinner(Amy) -> -OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> NobelLaureate(Amy)", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*", "-Olympic7MedalWinner(Amy) -> Nobel3*"], "conclusion": "-Olympic7MedalWinner(Amy)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%-(Olympic7MedalWinner(Amy)) -> Nobel3*%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (%%START ERROR%%-(Olympic7MedalWinner(Amy)) -> Nobel3*%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:07:57.454349", "premises": ["all x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "Stings(Stonefish, People, SteppedOn)", "Stings(Stonefish, People, NotTreated) & -Death(People)", "Treatment(StonefishStings, Heat) | Treatment(StonefishStings, Antivenom)"], "conclusion": "all x. (Stings(x, People) & -Death(People) & NotTreated(x)) | (Stings(x, People) & -Death(People) & Treated(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stings/3, Stings/2, NotTreated/1, NotTreated/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stings/3, Stings/2, NotTreated/1, NotTreated/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Stings/3, Stings/2, NotTreated/1, NotTreated/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Stings/3, Stings/2, NotTreated/1, NotTreated/0\n"}
{"timestamp": "2025-05-04T18:08:11.551969", "premises": ["all x. (Fish(x) & Stings(x, People))", "Fish(Stonefish)", "Stones(Stonefish) & Stings(Stonefish, People)", "Stings(Stonefish, People) & ~Treated(x) -> Death(x)", "Treats(x) -> (Heat(x) | Antivenom(x))"], "conclusion": "exists x. (Stings(x, People) & ~Treated(x) & Death(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((%%START ERROR%%Stings(Stonefish,People) & ~Treated(x)%%END ERROR%%) -> Death(x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((%%START ERROR%%Stings(Stonefish,People) & ~Treated(x)%%END ERROR%%) -> Death(x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T18:08:27.246726", "premises": ["all x. (BearInZoo(x) -> NotWild(x))", "exists x. (BearInZoo(x) & Wild(x))"], "conclusion": "~all x. (Wild(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n~all x. (Wild(x))\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n~all x. (Wild(x))\n     ^\n"}
{"timestamp": "2025-05-04T18:08:30.525294", "premises": ["all x. (Bear(x) & InZoo(x) -> NotWild(x))", "exists x. (Bear(x) & InZoo(x))"], "conclusion": "not all bears.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "'bears' is an illegal variable name.  Constants may not be quantified.\nnot all bears.\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 412, in handle_quant\n    vars = [self.get_next_token_variable(\"quantified\")]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 368, in get_next_token_variable\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: 'bears' is an illegal variable name.  Constants may not be quantified.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: 'bears' is an illegal variable name.  Constants may not be quantified.\nnot all bears.\n        ^\n"}
{"timestamp": "2025-05-04T18:16:30.880503", "premises": ["all x. (BirdGenus(x) -> Prehistoric(x))", "all x. (Species(x) & Prehistoric(x) & BirdGenus(x) -> Ambiortus(x) & Dementjevi(x))", "all x. (LivedIn(x, Mongolia) & Prehistoric(x) & BirdGenus(x) -> Ambiortus(x) & Dementjevi(x))", "all x. (Discoverer(x, Ambiortus) & Prehistoric(x) & BirdGenus(x) -> YevgenyKurochkin(x))"], "conclusion": "all x. (Discoverer(x, BirdGenus) & Prehistoric(x) & BirdGenus(x) -> YevgenyKurochkin(x) & newBirdGenus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, BirdGenus/1, BirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, BirdGenus/1, BirdGenus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, BirdGenus/1, BirdGenus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, BirdGenus/1, BirdGenus/0\n"}
{"timestamp": "2025-05-04T18:16:40.148110", "premises": ["all x. (PrehistoricBirdGenus(x) -> Genus(x))", "all x. (Species(x) & PrehistoricBirdGenus(x) -> Ambiortus(x))", "all x. (LivedIn(x, Mongolia) & Species(x) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))", "all x. (PrehistoricBirdGenus(x) -> Genus(x))", "all x. (Species(x) & PrehistoricBirdGenus(x) -> Ambiortus(x))", "all x. (LivedIn(x, Mongolia) & Species(x) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))", "all x. (PrehistoricBirdGenus(x) -> Genus(x))", "all x. (Species(x) & PrehistoricBirdGenus(x) -> Ambiortus(x))", "all x. (LivedIn(x, Mongolia) & Species(x) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))"], "conclusion": "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:16:43.544091", "premises": ["all x. (Ambiortus(x) -> Genus(x))", "all x. (Ambiortus(x) -> Species(x))", "all x. (LivedIn(x, Mongolia) -> Ambiortus(x))", "all x. (DiscovererOf(x, Ambiortus) -> Kurochkin(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> Genus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:16:46.871904", "premises": ["all x. (BirdGenus(x) -> Ambiortus(x))", "all x. (Species(x) & Ambiortus(x) -> AmbiortusDementjevi(x))", "all x. (LivesIn(x, Mongolia) & AmbiortusDementjevi(x) -> AmbiortusDementjeviLivedInMongolia(x))"], "conclusion": "all x. (DiscovererOf(x, Ambiortus) -> YevgenyKurochkin(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:17:20.215802", "premises": ["all x. (BirdGenus(x) -> Ambiortus(x))", "all x. (SpeciesOf(x, Ambiortus) -> AmbiortusDementjevi(x))", "all x. (LivedIn(x, Mongolia) -> AmbiortusDementjevi(x))", "all x. (DiscovererOf(x, Ambiortus) -> YevgenyKurochkin(x))", "exists x. (DiscovererOf(x, Ambiortus) & NewBirdGenus(x))", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-04T18:24:20.392441", "premises": ["all x. (Ambiortus(x) -> Genus(x))", "all x. (Ambiortus(x) -> Species(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x.F (x).x000. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x.x1. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))", "all x. (Ambiortus(x) -> Mongolia(x))"], "conclusion": "all x. (Ambiortus(x", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (Ambiortus(x\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (Ambiortus(x\n                   ^\n"}
{"timestamp": "2025-05-04T18:24:30.081073", "premises": ["all x. (BirdGenus(x) -> Ambiortus(x))", "all x. (Species(x) -> Ambiortus(x) & (x=Ambiortus_Dementjevi))", "all x. (LivedIn(x, Mongolia) -> Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> Yevgeny Kurochkin(x))"], "conclusion": "all x. (LivedIn(x, Mongolia) -> Yevgeny Kurochkin(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Kurochkin'.  Expected token ')'.\nall x. (LivedIn(x, Mongolia) -> Yevgeny Kurochkin(x))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Kurochkin'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Kurochkin'.  Expected token ')'.\nall x. (LivedIn(x, Mongolia) -> Yevgeny Kurochkin(x))\n                                        ^\n"}
{"timestamp": "2025-05-04T18:25:01.710584", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "NobelPhysicsLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-04T18:25:05.648463", "premises": ["all x. (Ambiortus(x) -> PrehistoricBirdGenus(x))", "all x. (Ambiortus(x) -> Species(x) & OnlyOne(x, Ambiortus))", "all x. (Mongolia(x) -> LivedIn(x, AmbiortusDementjevi))", "all x. (Discoverer(x, Ambiortus) -> YevgenyKurochkin(x))"], "conclusion": "all x. ((Discoverer(x, Ambiortus) & LivedIn(x, Mongolia)) -> YevgenyKurochkin(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mongolia/1, Mongolia/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mongolia/1, Mongolia/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Mongolia/1, Mongolia/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Mongolia/1, Mongolia/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:25:09.500269", "premises": ["all x. (Ambiortus(x) -> Genus(x, PrehistoricBird))", "exists x. (Ambiortus(x) & Species(x, Ambiortus_Dementjevi))", "exists x. (LivedIn(x, Mongolia) & Ambiortus(x))", "discovererOf(Ambiortus, Yevgeny_Kurochkin)"], "conclusion": "all x. ((discovererOf(Ambiortus, x) & LivedIn(x, Mongolia)) -> x=Yevgeny Kurochkin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Kurochkin'.  Expected token ')'.\nall x. ((discovererOf(Ambiortus, x) & LivedIn(x, Mongolia)) -> x=Yevgeny Kurochkin)\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Kurochkin'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Kurochkin'.  Expected token ')'.\nall x. ((discovererOf(Ambiortus, x) & LivedIn(x, Mongolia)) -> x=Yevgeny Kurochkin)\n                                                                         ^\n"}
{"timestamp": "2025-05-04T18:25:13.383895", "premises": ["all x. (Ambiortus(x) -> BirdGenus(x))", "all x. (Ambiortus(x) -> Species(x))", "all x. (LivedIn(x, Mongolia) -> Species(x) & Ambiortus(x))", "all x. (Discoverer(x, Ambiortus) -> Species(x) & Ambiortus(x))"], "conclusion": "all x. (LivedIn(x, Mongolia) -> Discoverer(x, Ambiortus) & Species(x) & Ambiortus(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:25:16.225063", "premises": ["all x. (Ambiortus(x) -> Genus(x))", "all x. (Ambiortus(x) -> Species(x))", "all x. (Mongolia(x) -> LivedIn(x, AmbiortusDementjevi))"], "conclusion": "all x. (Discoverer(x, Ambiortus) -> Kurochkin(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-05-04T18:25:19.822327", "premises": ["all x. ((FortTiconderoga(x) & FortCarillon(x)) -> True)", "PierreDeRigaudDeVaudreuil(x) & Built(x, FortCarillon)", "all x. ((FortCarillon(x) & In(x, NewFrance)) -> True)", "all x. ((In(x, NewFrance) & NotIn(x, Europe)) -> True)"], "conclusion": "PierreDeRigaudDeVaudreuil(x) & Built(x, FortCarillon) & In(x, NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-05-04T18:25:22.531129", "premises": ["FortTiconderoga = FortCarillon", "FortCarillon = Fort built by Pierre de Rigaud de Vaudreuil", "FortCarillon = Fort located in New France", "NewFrance \\= Europe"], "conclusion": "FortTiconderoga = Fort built by Pierre de Rigaud de Vaudreuil", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'built'.\nFortTiconderoga = Fort built by Pierre de Rigaud de Vaudreuil\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'built'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'built'.\nFortTiconderoga = Fort built by Pierre de Rigaud de Vaudreuil\n                       ^\n"}
{"timestamp": "2025-05-04T18:25:25.285388", "premises": ["FortTiconderoga = FortCarillon", "PierreDeRigaudDeVaudreuil = BuilderOf FortCarillon", "FortCarillon = LocatedIn NewFrance", "NewFrance \u2260 Europe"], "conclusion": "PierreDeRigaudDeVaudreuil = BuilderOf FortIn NewFrance", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FortIn'.\nPierreDeRigaudDeVaudreuil = BuilderOf FortIn NewFrance\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FortIn'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FortIn'.\nPierreDeRigaudDeVaudreuil = BuilderOf FortIn NewFrance\n                                      ^\n"}
{"timestamp": "2025-05-04T18:25:54.473662", "premises": ["FortTiconderoga = FortCarillon", "PierreDeRigaudDeVaudreuil = Builds(FortCarillon)", "FortCarillon = In(NewFrance)", "NewFrance = NotIn(Europe)"], "conclusion": "PierreDeRigaudDeVaudreuil = Builds(FortCarillon) & In(NewFrance)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: In/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: In/1\n"}
{"timestamp": "2025-05-04T18:25:57.405206", "premises": ["FortCarillon(x) -> FortTiconderoga(x)", "Built(Pierre_de_Rigaud_de_Vaudreuil, FortCarillon)", "In(FortCarillon, NewFrance)", "NotIn(NewFrance, Europe)"], "conclusion": "Built(Pierre_de_Rigaud_de_Vaudreuil, FortTiconderoga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0, FortTiconderoga/1, FortTiconderoga/0\n"}
{"timestamp": "2025-05-04T18:26:09.783935", "premises": ["all x. (LocatedIn(NewYorkCity, UnitedStatesOfAmerica))", "all x. (PartOf(UnitedStatesOfAmerica, NorthAmerica))", "all x. (In(NorthAmerica, WesternHemisphere))", "all x. (HighlyDeveloped(NewYorkCity))", "all x, y, z. (LocatedIn(x, y) & LocatedIn(y, z) -> LocatedIn(x, z))"], "conclusion": "all x. ((HighlyDeveloped(x) & In(x, WesternHemisphere))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((HighlyDeveloped(x) & In(x, WesternHemisphere))\n                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((HighlyDeveloped(x) & In(x, WesternHemisphere))\n                                                       ^\n"}
{"timestamp": "2025-05-04T18:26:37.563818", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))"], "conclusion": "ContributeToCountry(James)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-04T18:33:58.053099", "premises": ["all x. (TVSeries(x) & ScienceFiction(x) & Thriller(x) & American(x) & Westworld(x))", "exists x. (Debuted(TwoZeroOneSix, x) & TVSeries(x) & Westworld(x))", "exists x. (AdaptedFrom(x, Westworld) & Film(x) & WrittenBy(x, MichaelCrichton) & DirectedBy(x, MichaelCrichton))", "exists x. (Film(x) & Topic(x, Robots) & Malfunction(x) & Killing(x, HumanVisitors))"], "conclusion": "exists x. (DirectedBy(x, MichaelCrichton) & Film(x) & Topic(x, Robots) & Malfunction(x) & Killing(x, HumanVisitors))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-04T18:34:12.848436", "premises": ["all x. (TVSeries(x) & ScienceFiction(x) & Thriller(x) & Westworld(x))", "all x. (TVSeries(x) & Debuted(x, TwoZeroOneSix) & Westworld(x) & HBO(x))", "all x. ((TVSeries(x) & AdaptedFrom(x, OneNineSevenThree)) & (DirectedBy(x, MichaelCrichton) & WrittenBy(x, MichaelCrichton)))", "all x. (Film(x) & Title(x, Westworld) & Topic(x, RobotsMalfunctioning) & VisitorsKilled(x))"], "conclusion": "exists x. (DirectedBy(x, MichaelCrichton) & Topic(x, MalfunctioningRobots))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-04T18:34:20.674306", "premises": ["all x. (TVSeries(x) & ScienceFictionGenre(x) & ThrillerGenre(x) & AmericanGenre(x) & Westworld(x))", "exists x. (Debuts(x, TwoZeroOneSix) & TVSeries(x) & Westworld(x) & Network(x, HBO))", "exists x. (AdaptedFrom(x, Westworld) & Film(x) & DirectedBy(x, MichaelCrichton) & WrittenBy(x, MichaelCrichton))", "exists x. (Film(x) & RobotMalfunction(x) & HumanVisitors(x) & Killing(x))"], "conclusion": "exists x. (TVSeries(x) & ScienceFictionGenre(x) & ThrillerGenre(x) & AmericanGenre(x) & Westworld(x) & RobotMalfunction(x) & HumanVisitors(x) & Killing(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-04T18:34:24.586058", "premises": ["all x. (Westworld(x) & TVSeries(x) & ScienceFiction(x) & Thriller(x) & American(x))", "all x. (Debuts(TwoZeroOneSix, Westworld, HBO))", "all x. (AdaptedFrom(Westworld, OneNineSevenThree, MichaelCrichton) & WrittenBy(MichaelCrichton, Westworld) & DirectedBy(MichaelCrichton, Westworld))"], "conclusion": "all x. (RobotMalfunction(x) & Kills(x, HumanVisitors) & About(x, Robots, Malfunction))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Westworld/1, Westworld/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Westworld/1, Westworld/0\n"}
{"timestamp": "2025-05-04T18:34:29.243069", "premises": ["all x. (TVSeries(x) & Genre(x, ScienceFiction) & Genre(x, Thriller) & Name(x, Westworld))", "Date(TwoZeroOneSix, Westworld) & Channel(Westworld, HBO)", "all x. (TVSeries(x) & AdaptedFrom(x, Film) & Writer(x, MichaelCrichton) & Director(x, MichaelCrichton))", "all x. (Film(x) & Title(x, Westworld) & Plot(x, AboutMalfunctioningRobotsKillingHumanVisitors))"], "conclusion": "exists x. (Film(x) & Director(x, MichaelCrichton) & Plot(x, AboutMalfunctioningRobotsKillingHumanVisitors))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Film/1, Film/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Film/1, Film/0\n"}
{"timestamp": "2025-05-04T18:34:34.064465", "premises": ["all x. (TelevisionSeries(x) & Name(x, Westworld) & Genre(x, ScienceFictionThriller) & Year(x, TwoZeroOneSix) & Network(x, HBO))", "all x. (TelevisionSeries(x) & Name(x, Westworld) & AdaptedFrom(x, Film(OneNineSevenThree)) & Writer(x, MichaelCrichton) & Director(x, MichaelCrichton))", "all x. (Film(x) & Name(x, Westworld) & Genre(x, ScienceFiction) & Topic(x, MalfunctioningRobots) & Visitors(x, Human))"], "conclusion": "exists x. (Film(x) & Name(x, Westworld) & Genre(x, ScienceFiction) & Topic(x, MalfunctioningRobots) & Visitors(x, Human) & Director(x, MichaelCrichton))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Film/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Film/1\n"}
{"timestamp": "2025-05-04T18:42:58.621203", "premises": ["all x. ((District(x) & In(x, Guilin)) -> (Xiufeng(x) | Xiangshan(x) | Diecai(x) | Qixing(x)))", "not(District(Yangshuo) & In(Yangshuo, Guilin))"], "conclusion": "all x. (District(x) & In(x, Guilin)) -> (Xiangshan(x) -> In(Xiangshan, Guilin)) & (Diecai(x) -> In(Diecai, Guilin))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0\n"}
{"timestamp": "2025-05-04T18:43:15.650544", "premises": ["Xiufeng is a district in Guilin.", "Xiangshan is a district in Guilin.", "Diecai is a district in Guilin.", "Qixing is a district in Guilin."], "conclusion": "Yangshuo is not a district in Guilin.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nYangshuo is not a district in Guilin.\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nYangshuo is not a district in Guilin.\n         ^\n"}
{"timestamp": "2025-05-04T18:43:28.858312", "premises": ["all x. (District(x) & In(x, Guilin))", "all x. (District(x) & In(x, Guilin))", "all x. (District(x) & In(x, Guilin))", "all x. (District(x) & In(x, Guilin))", "-District(Yangshuo) & In(Yangshuo, Guilin)", "all x. ((District(x) & In(x, Guilin)) & (x_in_{Xiufeng, Xiangshan, Diecai, Qixing}))"], "conclusion": "District(Xiufeng) & In(Xiufeng, Guilin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. ((District(x) & In(x, Guilin)) & (x_in_{Xiufeng, Xiangshan, Diecai, Qixing}))\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. ((District(x) & In(x, Guilin)) & (x_in_{Xiufeng, Xiangshan, Diecai, Qixing}))\n                                                      ^\n"}
{"timestamp": "2025-05-04T18:50:36.279743", "premises": ["all x. ((DistrictIn(x, Guilin) & (x=Xiufeng)) | (x=Xiangshan) | (x=Diecai) | (x=Qixing))"], "conclusion": "-DistrictIn(Yangshuo, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-05-04T18:57:48.333396", "premises": ["all x. ((iPhone(x) & electronic(x)) -> true)", "all x. (phone(x) -> exists y. (iPhone(y) & x = y))", "exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x)", "exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x)", "exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x)", "exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x)"], "conclusion": "exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x & electronic(x)) & x.((x)) & exists x. (x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & existingEight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & existingEight & electronic(Eight)) & exists x. (115Eight &EightEight4 &EightEight4 & existingEight &115Eight &EightEight4 & electronic(Eight) & existsEight |. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 &115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 & existingEight &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nexists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x & electronic(x)) & x.((x)) & exists x. (x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & existingEight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & existingEight & electronic(Eight)) & exists x. (115Eight &EightEight4 &EightEight4 & existingEight &115Eight &EightEight4 & electronic(Eight) & existsEight |. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 &115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 & existingEight &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &nstack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nexists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (phone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & x = x) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x & electronic(x)) & x.((x)) & exists x. (x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(x)) & exists x. (iPhone(x) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i1 iPhone(Eight) & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (i15Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & existing x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & existingEight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & existingEight & electronic(Eight)) & exists x. (115Eight &EightEight4 &EightEight4 & existingEight &115Eight &EightEight4 & electronic(Eight) & existsEight |. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 & electronic(Eight)) & exists x. (115Eight &EightEight4 &115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 & electronic(Eight)) & existsEight. (115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 & existingEight &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &EightEight4 &115Eight &115Eight &nn"}
{"timestamp": "2025-05-04T18:58:00.476930", "premises": ["A museum(MetropolitanMuseumOfArt) & In(MetropolitanMuseumOfArt, NYC)", "A museum(WhitneyMuseumOfAmericanArt) & In(WhitneyMuseumOfAmericanArt, NYC)", "A museum(MuseumOfModernArt) & In(MuseumOfModernArt, NYC)", "includes(ByzantineAndIslamicArt, MetropolitanMuseumOfArt)", "includes(AmericanArt, WhitneyMuseumOfAmericanArt)", "all x. (In(x, NYC) -> includes(ByzantineAndIslamicArt, x))"], "conclusion": "not(Biodegradable(Worksheet))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'museum'.\nA museum(MetropolitanMuseumOfArt) & In(MetropolitanMuseumOfArt, NYC)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'museum'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'museum'.\nA museum(MetropolitanMuseumOfArt) & In(MetropolitanMuseumOfArt, NYC)\n  ^\n"}
{"timestamp": "2025-05-04T18:58:05.909834", "premises": ["MetropolitanMuseumOfArt(x) -> MuseumInNYC(x)", "WhitneyMuseumOfAmericanArt(x) -> MuseumInNYC(x)", "MuseumOfModernArt(x) -> MuseumInNYC(x)", "includes(MetropolitanMuseumOfArt, ByzantineAndIslamicArt)", "includes(WhitneyMuseumOfAmericanArt, AmericanArt)"], "conclusion": "exists x. (MuseumInNYC(x) -> includes(x, ByzantineAndIslamicArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0\n"}
{"timestamp": "2025-05-04T18:58:21.604680", "premises": ["MetropolitanMuseumOfArt(NYC) | WhitneyMuseumOfAmericanArt(NYC) | MoMA(NYC)", "ByzantineAndIslamicArt(MetropolitanMuseumOfArt) | AmericanArt(WhitneyMuseumOfAmericanArt)", "(MetropolitanMuseumOfArt(NYC) | WhitneyMuseumOfAmericanArt(NYC) | MoMA(NYC)) -> ByzantineAndIslamicArt(MetropolitanMuseumOfArt)", "(MetropolitanMuseumOfArt(NYC) | WhitneyMuseumOfAmericanArt(NYC) | MoMA(NYC)) -> AmericanArt(WhitneyMuseumOfAmericanArt)"], "conclusion": "ByzantineAndIslamicArt(MetropolitanMuseumOfArt) | AmericanArt(WhitneyMuseumOfAmericanArt)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0\n"}
{"timestamp": "2025-05-04T18:59:05.137308", "premises": ["MetropolitanMuseumOfArt(x) -> Museum(x) & In(x, NYC)", "WhitneyMuseumOfAmericanArt(x) -> Museum(x) & In(x, NYC)", "MuseumOfModernArt(x) -> Museum(x) & In(x, NYC)", "includes(x, MetropolitanMuseumOfArt, ByzantineAndIslamicArt)", "includes(x, WhitneyMuseumOfAmericanArt, AmericanArt)"], "conclusion": "exists x. (Museum(x) & In(x, NYC) & includes(x, AmericanArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: includes/3, includes/2, WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: includes/3, includes/2, WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: includes/3, includes/2, WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: includes/3, includes/2, WhitneyMuseumOfAmericanArt/1, WhitneyMuseumOfAmericanArt/0, MetropolitanMuseumOfArt/1, MetropolitanMuseumOfArt/0\n"}
{"timestamp": "2025-05-04T18:59:08.815971", "premises": ["A(Metropolitan_Museum_of_Art) & NYC(Metropolitan_Museum_of_Art)", "A(Whitney_Museum_of_American_Art) & NYC(Whitney_Museum_of_American_Art)", "A(Museum of Modern Art (MoMA)) & NYC(Museum of Modern Art (MoMA))", "includes(Byzantine_and_Islamic_Art, Metropolitan_Museum_of_Art)", "includes(American_art, Whitney_Museum_of_American_Art)"], "conclusion": "exists x. (A(x) & NYC(x) & includes(American_art, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nA(Museum of Modern Art (MoMA)) & NYC(Museum of Modern Art (MoMA))\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nA(Museum of Modern Art (MoMA)) & NYC(Museum of Modern Art (MoMA))\n         ^\n"}
{"timestamp": "2025-05-04T19:06:24.162358", "premises": ["all x. (MetropolitanMuseumOfArt(x) -> MuseumInNYC(x))", "all x. (WhitneyMuseumOfAmericanArt(x) -> MuseumInNYC(x))", "all x. (MuseumOfModernArt(x) -> MuseumInNYC(x))", "all x. (ByzantineAndIslamicArt(x) -> MetropolitanMuseumOfArt(x))", "all x. (AmericanArt(x) -> WhitneyMuseumOfAmericanArt(x))", "MoMA(x) -> MuseumInNYC(x)", "AmericanArt(x) -> WhitneyMuseumOfAmericanArt(x)", "MetropolitanMuseumOfArt(x) -> MuseumInNYC(x)", "WhitneyMuseumOfAmericanArt(x) -> MuseumInNYC(x)"], "conclusion": "AmericanArt(x) -> (MuseumInNYC(x) & (x_=_WhitneyMuseumOfAmericanArt_or_x_=_MoMA_or_x_=_MetropolitanMuseumOfArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2\n"}
{"timestamp": "2025-05-04T19:13:18.924016", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "ContributeToCountry(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (Chef(x) & -Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))"], "conclusion": "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentA", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentA\n                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentA\n                                                      ^\n"}
{"timestamp": "2025-05-04T19:13:24.099783", "premises": ["all x. (Mammal(x) & (Platypus(x) | Echidna(x)) & LayEggs(x))", "-Platypus(Platypus) & -Hyrax(Platypus)", "-Echidna(Echidna) & -Hyrax(Echidna)", "all x. (Mammal(x) & Not(x, Invertebrate))", "all x. (Animal(x) & (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) & Animal(x))", "LayEggs(Hyrax)", "LayEggs(Greb)"], "conclusion": "-Platypus(Greb) & -Echidna(Greb)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Invertebrate/1, Invertebrate/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Invertebrate/1, Invertebrate/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Invertebrate/1, Invertebrate/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hyrax/1, Hyrax/0, Invertebrate/1, Invertebrate/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-04T19:13:29.829195", "premises": ["all x. ((Mammal(x) & LayEggs(x)) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> LayEggs(x))", "all x. (Grebe(x) -> LayEggs(x))", "-Grebe(Platypus) & -Grebe(Echidna)"], "conclusion": "all x. (Hyrax(x) -> LayEggs(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-04T19:13:36.160139", "premises": ["all x. (Mammal(x) -> (Platypus(x) | Echidna(x)))", "not(Platypus(x))", "not(Echidna(x))", "all x. (Mammal(x) -> Vertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "Mammal(x) -> Animal(x)", "laysEggs(x) -> Hyrax(x)", "laysEggs(x) -> Grebe(x)", "and(laysEggs(x), not(Platypus(x))) & and(laysEggs(x), not(Echidna(x)))"], "conclusion": "and(laysEggs(x), not(Platypus(x))) & and(laysEggs(x), not(Echidna(x))) & and(laysEggs(x), not(Hyrax(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'and'.  Expression expected.\nand(laysEggs(x), not(Platypus(x))) & and(laysEggs(x), not(Echidna(x))) & and(laysEggs(x), not(Hyrax(x)))\n^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'and'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'and'.  Expression expected.\nand(laysEggs(x), not(Platypus(x))) & and(laysEggs(x), not(Echidna(x))) & and(laysEggs(x), not(Hyrax(x)))\n^\n"}
{"timestamp": "2025-05-04T19:13:53.619109", "premises": ["all x. ((Mammal(x) & LaysEggs(x)) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. ((Mammal(x) & Invertebrate(x)) -> False)", "all x. ((Animal(x) & Vertebrate(x)) | (Animal(x) & Invertebrate(x)))", "all x. ((Mammal(x) & Animal(x)) -> True)", "LaysEggs(Hyrax)", "LaysEggs(Greb)", "all x. ((Greb(x) & LaysEggs(x)) & (Platypus(x) | Echidna(x)))"], "conclusion": "LaysEggs(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Greb/1, Greb/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Greb/1, Greb/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Greb/1, Greb/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Greb/1, Greb/0, Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-05-04T19:13:58.689044", "premises": ["all x. (Mammal(x) -> (Platypus(x) | Echidna(x)))", "-Hyrax(Platypus)", "-Hyrax(Echidna)", "all x. (Mammal(x) -> Vertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Mammal(x) -> Animal(x))", "EggLaying(Hyrax)", "EggLaying(Greb)", "-Platypus(Greb) & -Echidna(Greb)"], "conclusion": "EggLaying(Hyrax)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0, Hyrax/1, Hyrax/0\n"}
{"timestamp": "2025-05-04T19:14:07.080506", "premises": ["all x. ((Mammal(x) & LaysEggs(x)) -> (x=platypus_|_x=echidna))", "all x. (Mammal(x) & x \u2260 hyrax)", "all x. (Mammal(x) & x \u2260 hyrax)", "all x. (Mammal(x) -> Not(x_\u2208_Invertebrates))", "all x. (Animal(x) -> (x_\u2208_Vertebrates_|_x_\u2208_Invertebrates))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Animal(x) & LaysEggs(x))", "all x. ((Animal(x) & LaysEggs(x)) & (x_\u2260_platypus_&_x_\u2260_echidna))"], "conclusion": "all x. ((Animal(x) & LaysEggs(x)) & (x_\u2208_Hyraxes))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Mammal(x) & x \u2260 hyrax)\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nall x. (Mammal(x) & x \u2260 hyrax)\n                      ^\n"}
{"timestamp": "2025-05-04T19:14:18.432847", "premises": ["all x. (Mammal(x) & LayEgg(x) -> PlatypusOrEchidna(x))", "-Mammal(Platypus) & -Hyrax(Platypus)", "-Mammal(Echidna) & -Hyrax(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> Vertebrate(x) | Invertebrate(x))", "all x. (Mammal(x) -> Animal(x))", "all x. (Hyrax(x) -> Mammal(x))", "all x. (Bird(x) -> LayEgg(x))", "-(Platypus(Grebe) & Echidna(Grebe)) & -Hyrax(Grebe)"], "conclusion": "all x. (Hyrax(x) -> LayEgg(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-05-04T19:21:49.476134", "premises": ["```python"], "conclusion": "```python", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%```python.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%```python.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T19:22:14.736479", "premises": ["Screenwriter(MaggieFriedman) & Producer(MaggieFriedman)", "Showrunner(MaggieFriedman, WitchesOfEastEnd) & ExecutiveProducer(MaggieFriedman, WitchesOfEastEnd)", "FantasyDramaSeries(WitchesOfEastEnd)", "Producer(MaggieFriedman, Eastwick) & Developer(MaggieFriedman, Eastwick)", "Series(Eastwick) & Network(ABC)"], "conclusion": "exists x. (Series(x) & Network(ABC) & Developer(MaggieFriedman, x) & Showrunner(MaggieFriedman, WitchesOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Producer/2, Producer/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Producer/2, Producer/1\n"}
{"timestamp": "2025-05-04T19:22:35.263257", "premises": ["all x. (BoneyM(x) -> (hasGerman1Single(x) | hasGermanMultiple1Singles(x)))", "all x. (Song(x) & HolidayHit(x) & BigHit(x) & AllOverEurope(x))", "-(hasGerman1Single(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\"))", "(PeaksBelow1OnGermanCharts(x) -> Not1SingleInGermany(x))"], "conclusion": "HolidayHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & PeaksBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nHolidayHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & PeaksBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nHolidayHit(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & PeaksBelow1OnGermanCharts(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                  ^\n"}
{"timestamp": "2025-05-04T19:22:49.668527", "premises": ["all x. (GermanChart(x) & #1Single(x))", "all x. (EuropeanHit(x) & BigHit(x))", "-(all x. (GermanChart(x) & #1Single(x)))", "all x. (GermanChart(x) & Not(#1Single(x))) & -all x. (GermanChart(x) & #1Single(x))"], "conclusion": "GermanChart(HoorayHoliHolidays) & Not(#1Single(HoorayHoliHolidays)) & -all x. (GermanChart(x) & #1Single(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%GermanChart(x) & #1Single(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%GermanChart(x) & #1Single(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T19:22:53.393455", "premises": ["exists x. (GermanChart(x) & Peak(x, #One))", "exists x. (EuropeanChart(x) & Peak(x, #One))", "exists x. (GermanChart(x) & Peak(x, #One)) & exists x. (x_!=_\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")"], "conclusion": "exists x. (GermanChart(x) & Peak(x, Below(#One)) & ~GermanChart(x) & Peak(x, #One))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\nexists x. (GermanChart(x) & Peak(x, #One)) & exists x. (x_!=_\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\nexists x. (GermanChart(x) & Peak(x, #One)) & exists x. (x_!=_\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                                                                    ^\n"}
{"timestamp": "2025-05-04T19:22:56.748524", "premises": ["all x. (GermanChartTopper(x) -> GermanNumberOne(x))", "all x. (EuropeanHit(x) -> BigHit(x))", "-GermanChartTopper(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")"], "conclusion": "all x. (GermanChartPeak(x) -> (-GermanNumberOne(x) & -GermanChartTopper(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '!'.  Expected token ')'.\n-GermanChartTopper(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '!'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '!'.  Expected token ')'.\n-GermanChartTopper(\"Hooray!_Hooray!_Its_a_Holi_Holiday!\")\n                          ^\n"}
{"timestamp": "2025-05-04T19:23:00.447597", "premises": ["all x. (BoneyM. had #1 single(x))", "all x. (Hit(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & Over(x, Europe))", "all x. (Hit(x, \"Hooray!_Hooray!_Its_a_Holi_Holiday!\") & NotIn(x, German_#One_singles))"], "conclusion": "all x. (PeaksBelow(x, #One) & Not(x, #One))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM. had #1 single(x))\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nall x. (BoneyM. had #1 single(x))\n              ^\n"}
{"timestamp": "2025-05-04T19:23:04.475081", "premises": ["all x. (BoneyMDot_had_x) & all x. (x_is_German_#One_single)", "all x. (Hooray!_Hooray!_Its_a_Holi_Holiday!\"_is_big_hit_in_Europe)", "-all x. (Hooray!_Hooray!_Its_a_Holi_Holiday!\"_is_German_#One_single)"], "conclusion": "all x. ((PeaksBelow(x, #One) on german charts) -> (Not(x is #One single in Germany)) & (Not(x is #One single in Germany) -> (PeaksBelow(x, #One) on german charts))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'on'.  Expected token ')'.\nall x. ((PeaksBelow(x, #One) on german charts) -> (Not(x is #One single in Germany)) & (Not(x is #One single in Germany) -> (PeaksBelow(x, #One) on german charts))\n                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'on'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'on'.  Expected token ')'.\nall x. ((PeaksBelow(x, #One) on german charts) -> (Not(x is #One single in Germany)) & (Not(x is #One single in Germany) -> (PeaksBelow(x, #One) on german charts))\n                             ^\n"}
{"timestamp": "2025-05-04T19:37:56.592767", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)"], "conclusion": "-", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expression expected.\n-\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expression expected.\n-\n ^\n"}
{"timestamp": "2025-05-04T19:39:45.315380", "premises": ["all x. (Biodegradable(x) -> EnvironmentFriendly(x))", "all x. (Woodware(x) -> Biodegradable(x))", "all x. (Paper(x) -> Woodware(x))", "-(exists x. (Good(x) & Bad(x)))", "all x. (EnvironmentFriendly(x) -> Good(x))", "((Paper(Worksheet) & -EnvironmentFriendly(Worksheet)) | (-Paper(Worksheet) & EnvironmentFriendly(Worksheet)))", "-Dispensable(Worksheet)", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & MorePoints(x, y) -> RankHigherThan(x, y))", "all x. all y. (LaLigaSoccerTeam(x) & LaLigaSoccerTeam(y) & -MorePoints(x, y) & -MorePoints(y, x) & MorePointsInGameBetween(x, y) -> RankHigherThan(x, y))", "LaLigaSoccerTeam(RealMadrid) & LaLigaSoccerTeam(Barcelona)", "MorePoints(RealMadrid, Barcelona)", "-MorePointsInGameBetween(RealMadrid, Barcelona) & -MorePointsInGameBetween(Barcelona, RealMadrid)", "HigherRank(RealMadrid, Barcelona)", "all x. (ProfessionalAthlete(x) -> SpendOn(x, MostOfTheirTime, Sports))", "all x. (OlympicGoldMedalWinner(x) -> ProfessionalAthlete(x))", "all x. (FullTimeScientist(x) -> -SpendOn(x, MostOfTheirTime, Sports))", "all x. (NobelPhysicsLaureate(x) -> FullTimeScientist(x))", "SpendOn(Amy, MostOfTheirTime, Sports) | OlympicGoldMedalWinner(Amy)", "-NobelPhysicsLaureate(Amy) -> -OlympicGoldMedalWinner(Amy)", "-OlympicGoldMedalWinner(Amy) -> NobelLaureate(Amy)", "all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (WorkFor(x, GovernmentAgency) -> Taxpayer(x))", "all x. (ServesIn(x, TheArmy) -> WorkFor(x, GovernmentAgency))", "all x. (SentencedForMurder(x) -> Imprisoned(x))", "all x. (Imprisoned((x) -> Has(x, CriminalRecord))", "((SentencedForMurder(James) & -Imprisoned(James)) | (-SentencedForMurder(James) & Imprisoned(James)))", "((Has(James, CriminalRecord) & -Taxpayer(James)) | (-Has(James, CriminalRecord) & Taxpayer(James)))", "ContributeToCountry(James)", "all x. (Song(x) & Visual(x) -> -FolkSong(x))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Chef(x) -> Can(x, Cook))", "exists x. (-Chef(x) & Can(x, Cook))", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. (CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))", "MakeGoodBreakfast(Luke)", "exists x. exists y. (Develop(eTS, x) & Develop(eTS, y) & StandardizedTest(x) & StandardizedTest(y) & In(x, UnitedState) & In(y, UnitedState) & For(x, kOneTwoAndHigherEducation) & For(y, kOneTwoAndHigherEducation))", "exists x. (Administer(eTS, x) & InternationalTest(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectTest(x)))", "exists x. (Develop(eTS, x) & AssociatedWith(x, EntryToUSEducationInstitution))", "exists x. (Develop(eTS, x) & StateWideAssesment(x) & UsedFor(x, AccountabilityTesting))", "exists x. (Develops(Ets, x) & For(x, k_OneTwoandhighereducation)) & exists x. (Develops(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))"], "conclusion": "exists x. (BRICS(x) & Speaks(x, Hindi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '->'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '->'.  Expected token ')'.\nall x. (Imprisoned((x) -> Has(x, CriminalRecord))\n                       ^\n"}
{"timestamp": "2025-05-04T19:46:43.403154", "premises": ["all x. (DrainageBasin(CrotonRiver, x) -> CrotonRiverWatershed(x))", "all x. (CrotonRiver(x) -> In(x, SouthWesternNewYork))", "all x. (WaterFrom(x, CrotonRiverWatershed) -> FlowsTo(x, Bronx))", "all x. (Bronx(x) -> In(x, NewYork))"], "conclusion": "exists x. (WaterFrom(x, CrotonRiverWatershed) & In(x, NewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0, CrotonRiverWatershed/1, CrotonRiverWatershed/0\n"}
{"timestamp": "2025-05-04T19:46:47.018030", "premises": ["all x. (DrainageBasinOf(x, CrotonRiver) -> CrotonRiverWatershed(x))", "all x. (In(x, SouthwesternNewYork) -> CrotonRiver(x))", "all x. (CrotonRiverWatershed(x) -> FlowsTo(x, Bronx))", "all x. (In(x, NewYork) -> Bronx(x))"], "conclusion": "all x. (CrotonRiverWatershed(x) -> FlowsTo(x, SomewhereInNewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-04T19:47:27.967969", "premises": ["all x. (DrainageBasin(x, CrotonRiver) -> Watershed(x, CrotonRiver))", "all x. (River(x) & In(x, SouthwesternNewYork) -> CrotonRiver(x))", "all x. (Watershed(x, CrotonRiver) -> FlowsTo(x, Bronx))", "all x. (Location(x) & In(x, NewYork) -> Bronx(x))"], "conclusion": "all x. (Watershed(x, CrotonRiver) -> FlowsTo(x, NewYork))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bronx/1, Bronx/0, CrotonRiver/1, CrotonRiver/0\n"}
{"timestamp": "2025-05-04T19:47:49.908265", "premises": ["realNumber(six) & realNumber(seven) & realNumber(eight)", "all x. all y. ((realNumber(x) + realNumber(y) = realNumber(z) & realNumber(z) > realNumber(x)) -> realNumber(z) > realNumber(x))", "all x. all y. ((realNumber(x) > realNumber(y) & realNumber(y) > realNumber(x)) -> False)", "realNumber(seven) = realNumber(six) + realNumber(one)", "realNumber(eight) = realNumber(seven) + realNumber(one)", "all x. ((realNumber(x) > realNumber(zero) & realNumber(x) = realNumber(x)) -> True)", "all x. ((realNumber(x) > realNumber(zero) & realNumber(Twox) > realNumber(zero)) -> True)", "realNumber(eight) = 2x realNumber(four)"], "conclusion": "realNumber(four) = 2x realNumber(two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'realNumber'.\nrealNumber(four) = 2x realNumber(two)\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'realNumber'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'realNumber'.\nrealNumber(four) = 2x realNumber(two)\n                      ^\n"}
{"timestamp": "2025-05-04T19:48:14.774825", "premises": ["all x. (RealNumber(x) -> (=Six, x) | (=Seven, x) | (=Eight, x))", "all x. (RealNumber(x) -> ((=x, x+One) -> (>, x, x+One)))", "all x. all y. ((>, x, y) -> (~, >, y, x))", "(=7, (+Six, One))", "(=8, (+Seven, One))", "all x. (RealNumber(x) -> (Positive, x))", "all x. (Positive, x) -> (Positive, (*Two, x))", "(=8, (*Two, Four))", "(=4, (*Two, Two))"], "conclusion": "(>, Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\n(>, Eight, Seven)\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\n(>, Eight, Seven)\n  ^\n"}
{"timestamp": "2025-05-04T19:55:09.542505", "premises": ["all x. (RealNumber(x) -> Six(x) | Seven(x) | Eight(x))", "all x. (RealNumber(x) -> RealNumber(x+One) -> (x_>_x+One))", "all x. all y. (x > y -> ~(y_>_x))", "Seven(x) <-> (Six(x) + One(x))", "Eight(x) <-> (Seven(x) + One(x))", "Two(x) -> Positive(x)", "all x. (Positive(x) -> Positive(Twox))", "Eight(x) <-> (2 * Four(x))", "Four(x) <-> (2 * Two(x))"], "conclusion": "all x. (RealNumber(x) -> RealNumber(x+One) -> (x > x+One)) & (Seven(x) -> RealNumber(x)) & (Eight(x) -> RealNumber(x)) & (x > y -> ~(y_>_x)) & (Seven(x) <-> (Six(x) + One(x))) & (Eight(x) <-> (Seven(x) + One(x))) & (Two(x) -> Positive(x)) & (Positive(x) -> Positive(Twox)) & (Eight(x) <-> (2 * Four(x))) & (Four(x) <-> (2 * Two(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> RealNumber(x+One) -> (x > x+One)) & (Seven(x) -> RealNumber(x)) & (Eight(x) -> RealNumber(x)) & (x > y -> ~(y_>_x)) & (Seven(x) <-> (Six(x) + One(x))) & (Eight(x) <-> (Seven(x) + One(x))) & (Two(x) -> Positive(x)) & (Positive(x) -> Positive(Twox)) & (Eight(x) <-> (2 * Four(x))) & (Four(x) <-> (2 * Two(x)))\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nall x. (RealNumber(x) -> RealNumber(x+One) -> (x > x+One)) & (Seven(x) -> RealNumber(x)) & (Eight(x) -> RealNumber(x)) & (x > y -> ~(y_>_x)) & (Seven(x) <-> (Six(x) + One(x))) & (Eight(x) <-> (Seven(x) + One(x))) & (Two(x) -> Positive(x)) & (Positive(x) -> Positive(Twox)) & (Eight(x) <-> (2 * Four(x))) & (Four(x) <-> (2 * Two(x)))\n                                                 ^\n"}
{"timestamp": "2025-05-04T19:55:16.839213", "premises": ["RealNumber(Six) & RealNumber(Seven) & RealNumber(Eight)", "exists x. exists y. (RealNumber(x) & RealNumber(y) & (x_+_One_=_y) -> x > y)", "exists x. exists y. (RealNumber(x) & RealNumber(y) & (x_>_y) -> (_y_>_x))", "RealNumber(Seven) & RealNumber(Six) & RealNumber(One)", "RealNumber(Eight) & RealNumber(Seven) & RealNumber(One)", "all x. (RealNumber(x) & Positive(x))", "all x. (Positive(x) -> Positive(Two_\\*_x))", "RealNumber(Eight) & RealNumber(Four) & RealNumber(Two)"], "conclusion": "RealNumber(Four) & RealNumber(Two) & RealNumber(Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.  Expected token ')'.\nexists x. exists y. (RealNumber(x) & RealNumber(y) & (x_+_One_=_y) -> x > y)\n                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.  Expected token ')'.\nexists x. exists y. (RealNumber(x) & RealNumber(y) & (x_+_One_=_y) -> x > y)\n                                                                        ^\n"}
{"timestamp": "2025-05-04T19:55:20.943008", "premises": ["exists x. (RealNumber(x) & (x=Six) | (x=Seven) | (x=Eight))", "all x. (x>y__>_y+One<x)", "all x. (x>y__>__y>x)", "Seven=6+1", "Eight=7+1", "all x. (Positive(x) -> x>0)", "all x. (Positive(x) -> Positive(Twox))", "Eight=2*4"], "conclusion": "Four=2*2", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x x>y__>_y+One<x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    %%START ERROR%%all x x>y__>_y+One<x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-05-04T19:55:25.643158", "premises": ["all x. ((RealNumber(x) & (x=Six)) | (x=Seven) | (x=Eight))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x=y+One) -> (x>y))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x>y) -> (_y>x))", "(Seven=Six+One)", "(Eight=Seven+One)", "Positive(Two)", "all x. (Positive(x) -> Positive(Two\\*x))", "(Eight=Two\\*Four)"], "conclusion": "(Four=Two\\*Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.  Expected token ')'.\n(Four=Two\\*Two)\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.  Expected token ')'.\n(Four=Two\\*Two)\n         ^\n"}
{"timestamp": "2025-05-04T19:55:31.524027", "premises": ["all x. (RealNumber(x) -> x is a number between 6, 7 and 8)", "all x. all y. (RealNumber(x) & RealNumber(y) & x + 1 = y -> x is larger than y)", "all x. all y. (RealNumber(x) & RealNumber(y) & x is larger than y -> y is not larger than x)", "Seven = 6 + 1", "Eight = 7 + 1", "all x. (RealNumber(x) & Positive(x) -> x is a positive number)", "all x. (Positive(x) -> Positive(Two_x))", "all x. (RealNumber(x) & (x_=_Two_x) -> x = 4)", "all x. (RealNumber(x) & (x_=_Two_x) -> x = 2)"], "conclusion": "all x. (RealNumber(x) & RealNumber(y) & x is larger than y -> x is larger than 7)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.  Expected token ')'.\nall x. (RealNumber(x) & RealNumber(y) & x is larger than y -> x is larger than 7)\n                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.  Expected token ')'.\nall x. (RealNumber(x) & RealNumber(y) & x is larger than y -> x is larger than 7)\n                                          ^\n"}
{"timestamp": "2025-05-04T19:55:37.086824", "premises": ["all x. (RealNumber(x) -> (x=Six_|_x=Seven_|_x=Eight))", "all x. (RealNumber(x) -> (x+One = y if y = RealNumber(x+One) & y is larger than x))", "all x. (RealNumber(x) -> (y_is_not_larger_than_x_if_y_is_RealNumber_and_x_is_RealNumber))", "RealNumber(Seven) = RealNumber(Six) + RealNumber(One)", "RealNumber(Eight) = RealNumber(Seven) + RealNumber(One)", "RealNumber(Two) > RealNumber(Zero)", "all x. (RealNumber(x) -> (RealNumber(Two*x) > RealNumber(Zero)))", "RealNumber(Eight) = RealNumber(2*RealNumber(Four))", "RealNumber(Four) = RealNumber(Two*RealNumber(Two))"], "conclusion": "RealNumber(Eight) > RealNumber(Zero)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '>'.\nRealNumber(Eight) > RealNumber(Zero)\n                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '>'.\nRealNumber(Eight) > RealNumber(Zero)\n                  ^\n"}
{"timestamp": "2025-05-04T19:55:43.845963", "premises": ["all x. (RealNumber(x) -> (Six_=_x_|_Seven_=_x_|_Eight_=_x))", "all x. all y. (RealNumber(x) & RealNumber(y) -> (x_=_y_+_One__>_x_>_y))", "all x. all y. (RealNumber(x) & RealNumber(y) -> (x > y -> -(y_>_x)))", "Seven = Six + 1", "Eight = Seven + 1", "all x. (Positive(x) -> (x_>_Zero))", "all x. (Positive(x) -> Positive(Twox))", "eight = 2 \\* 4"], "conclusion": "four = 2 \\* 2", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nfour = 2 \\* 2\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nfour = 2 \\* 2\n         ^\n"}
{"timestamp": "2025-05-04T19:55:47.997691", "premises": ["all x. ((RealNumber(x) & (x=Six)) | (x=Seven) | (x=Eight))", "all x. (x=y+One__>_x>y)", "all x. (x>y__>__y>x)", "seven=six+one", "eight=seven+one", "all x. (Positive(x) -> x>0)", "all x. (Positive(x) -> Positive(Two\\*x))", "eight=2\\*four"], "conclusion": "four=2\\*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nfour=2\\*two\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nfour=2\\*two\n      ^\n"}
{"timestamp": "2025-05-04T19:55:52.492094", "premises": ["all x. (RealNumber(x) -> (x=Six) | (x=Seven) | (x=Eight))", "all x. (RealNumber(x) -> (x+One=y) -> (x>y))", "all x. (RealNumber(x) -> (x>y) -> ~(y>x))", "(Seven=Six+One)", "(Eight=Seven+One)", "Positive(Two)", "Positive(x) -> Positive(Two*x)", "2*4=8", "2*2=4"], "conclusion": "Positive(Eight)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: >/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: >/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 124, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: >/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: >/2\n"}
{"timestamp": "2025-05-04T19:55:57.191538", "premises": ["all x. (RealNumber(x) & In(x, Six) | In(x, Seven) | In(x, Eight))", "all x. all y. (RealNumber(x) & RealNumber(y) & x + y = y & LargerThan(x, y))", "all x. all y. (RealNumber(x) & RealNumber(y) & x > y & NotLargerThan(y, x))", "Seven = Six + One", "Eight = Seven + One", "Positive(Two)", "all x. (Positive(x) & Double(x) = Double(x))", "Double(Four) = Eight"], "conclusion": "Double(Two) = Four", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x + y = y & LargerThan(x, y))\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & x + y = y & LargerThan(x, y))\n                                                 ^\n"}
{"timestamp": "2025-05-04T19:56:08.517209", "premises": ["all x. (RealNumber(x) -> (x=Six) | (x=Seven) | (x=Eight))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x+One=y) -> x>y)", "all x. all y. (RealNumber(x) & RealNumber(y) & x>y -> -y>x)", "seven = six + one", "eight = seven + one", "all x. (Positive(x) -> x>0)", "all x. (Positive(x) -> Positive(Two\\*x))", "eight = 2\\*four"], "conclusion": "four = 2\\*two", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nfour = 2\\*two\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nfour = 2\\*two\n        ^\n"}
{"timestamp": "2025-05-04T19:56:16.428838", "premises": ["all x. (Taxpayer(x) -> ContributeTo(x, Country))", "all x. (Chef(x) -> Can(x, Cook))", "all x. (FolkSong(x) -> Song(x))", "all x. (Video(x) -> Visual(x))", "all x. (Movie(x) -> Video(x))", "all x. (ScifiMovie(x) -> Movie(x))", "ScifiMovie(Inception)", "-FolkSong(Mac) & -ScifiMovie(Mac)", "FolkSong(Inception)", "all x. (Can(x, Cook) -> (CanMake(x, ScrambledEggs) & CanMake(x, Pasta)))", "all x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))", "all x. ((Baker(x) & CanMake(x, ScrambledEggs)) -> CanMake(x, GoodBreakfast))", "CanMake(Luke, Cookies) & (CanMake(Luke, ScrambledEggs) & CanMake(Luke, Muffins) & -CanMake(Luke, Pasta))"], "conclusion": "MakeGoodBreakfast(Luke)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. ((CanMake(x, Cookies) & CanMake(x, Muffins) -> Baker(x))\n                                                               ^\n"}
{"timestamp": "2025-05-04T19:56:21.636200", "premises": ["all x. (RealNumber(x) -> ((= (six, x) | = (seven, x) | = (eight, x)) | (-(= (six, x) | = (seven, x) | = (eight, x))))))", "all x. all y. (= (x, (y_+_One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> NotLarger(y, x))", "(= (seven, (six_+_One)))", "(= (eight, (seven_+_One)))", "all x. (Positive(x) -> (> 0(x)))", "all x. (Positive(x) -> Positive(2(x)))", "(= (eight, 2(four)))"], "conclusion": "(= (four, 2(two)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '='.  Expression expected.\n(= (four, 2(two)))\n ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '='.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '='.  Expression expected.\n(= (four, 2(two)))\n ^\n"}
{"timestamp": "2025-05-04T19:56:27.264761", "premises": ["exists x. exists y. (RealNumber(x) & RealNumber(y) & x=y+1 & y>x)", "exists x. exists y. (RealNumber(x) & RealNumber(y) & x>y+1 & y+1>x)", "exists x. exists y. (RealNumber(x) & RealNumber(y) & x>y & y>x)", "RealNumber(Seven) & RealNumber(Six+One) & (Seven=Six+One)", "RealNumber(Eight) & RealNumber(Seven+One) & (Eight=Seven+One)", "RealNumber(Two) & Positive(Two)", "exists x. (Positive(x) & RealNumber(Twox) & Positive(Twox))", "RealNumber(Eight) & RealNumber(Four\\*Two) & (Eight=Four\\*Two)"], "conclusion": "RealNumber(Four) & RealNumber(Two\\*Two) & (Four=Two\\*Two)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.  Expected token ')'.\nRealNumber(Four) & RealNumber(Two\\*Two) & (Four=Two\\*Two)\n                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.  Expected token ')'.\nRealNumber(Four) & RealNumber(Two\\*Two) & (Four=Two\\*Two)\n                                 ^\n"}
{"timestamp": "2025-05-04T19:56:32.409710", "premises": ["all x. (RealNumber(x) -> True)", "all x. all y. (RealNumber(x) & RealNumber(y) & (x=y+One) -> (x>y))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x>y) -> -(y>x))", "Seven=6+1", "Eight=7+1", "all x. (Positive(x) -> True)", "all x. (Positive(x) -> Positive(Two\\*x))", "Eight=2\\*4", "Four=2\\*2"], "conclusion": "all x. all y. (RealNumber(x) & RealNumber(y) & (x>y) & (x=Six) & (y=Seven) -> True", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x>y) & (x=Six) & (y=Seven) -> True\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. (RealNumber(x) & RealNumber(y) & (x>y) & (x=Six) & (y=Seven) -> True\n                                                                                  ^\n"}
{"timestamp": "2025-05-04T19:56:36.730755", "premises": ["all x. (RealNumber(x) -> True)", "all x. all y. (RealNumber(x) & RealNumber(y) & x=y+1 -> x>y)", "all x. all y. (RealNumber(x) & RealNumber(y) & x>y -> ~y>x)", "Seven=6+1", "Eight=7+1", "all x. (Positive(x) -> True)", "all x. (Positive(x) -> Positive(Two*x))", "Eight=2\\*4"], "conclusion": "Four=2\\*2", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\\'.\nFour=2\\*2\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\\'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 120, in evaluate\n    c = read_expr(conclusion)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\\'.\nFour=2\\*2\n      ^\n"}
{"timestamp": "2025-05-04T19:56:42.765496", "premises": ["all x. (RealNumber(x) -> (Six(x) | Seven(x) | Eight(x)))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_+_One_=_y) -> (x_>_y))", "all x. all y. (RealNumber(x) & RealNumber(y) & (x_>_y) -> (_y_>_x))", "Seven(x) <- Six(x) + One()", "Eight(x) <- Seven(x) + One()", "all x. (Positive(x) -> (x_>_Zero))", "all x. (Positive(x) -> (Double(x) is positive))", "Eight(x) <- Double(Four(x))", "Four(x) <- Double(Two(x))"], "conclusion": "all x. all y. (RealNumber(x) & RealNumber(y) & (x_>_y) & (Six(x) | Seven(x) | Eight(x)) & (Four(x) | Two(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSeven(x) <- Six(x) + One()\n         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in evaluate\n    p_list = [read_expr(p) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 121, in <listcomp>\n    p_list = [read_expr(p) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSeven(x) <- Six(x) + One()\n         ^\n"}
