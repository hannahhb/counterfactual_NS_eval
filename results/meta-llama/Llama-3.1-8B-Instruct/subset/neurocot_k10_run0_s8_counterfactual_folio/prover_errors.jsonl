{"timestamp": "2025-06-10T00:39:09.113643", "premises": ["Pianist(MiroslavVenhoda) & (Hieroglyphics(MiroslavVenhoda) | MachineLearning(MiroslavVenhoda) | Badminton(MiroslavVenhoda))", "all x. (Pianist(x) -> Chef(x))", "exists x. (Chef(x) & EnjoyMusic(x))", "BurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)"], "conclusion": "-exists x. (Pianist(x) & MachineLearning(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nBurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nBurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                    ^\n"}
{"timestamp": "2025-06-10T00:39:09.116600", "premises": ["Pianist(MiroslavVenhoda) & (Hieroglyphics(MiroslavVenhoda) | MachineLearning(MiroslavVenhoda) | Badminton(MiroslavVenhoda))", "all x. (Pianist(x) -> Chef(x))", "exists x. (Chef(x) & EnjoyMusic(x))", "BurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)"], "conclusion": "all x. -MachineLearning(x) | -Pianist(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nBurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nBurnedBook(MiroslavVenhoda, \"Method of Studying Gregorian Chant\", 1946)\n                                    ^\n"}
{"timestamp": "2025-06-10T00:40:09.974453", "premises": ["exists x. (Reptile(x) & ExplodeOnPeople(x))", "Reptile(Stonefish)", "SteppedOn(Stonefish) \u2192 Explode(Stonefish)", "(ExplodeOnPerson(x, Stonefish) & -Treated(x)) \u2192 Death(x)", "exists x. (Treatment(x) & (HeatRemoval(x) | Antivenom(x)))"], "conclusion": "exists x. (Reptile(x) & ExplodeOnPeople(x) & (ExplodeOnPerson(y, x) & -Treated(y)) \u2192 Death(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\nexists x. (Reptile(x) & ExplodeOnPeople(x) & (ExplodeOnPerson(y, x) & -Treated(y)) \u2192 Death(y))\n                                                                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\nexists x. (Reptile(x) & ExplodeOnPeople(x) & (ExplodeOnPerson(y, x) & -Treated(y)) \u2192 Death(y))\n                                                                                   ^\n"}
{"timestamp": "2025-06-10T00:40:09.973430", "premises": ["exists x. (Reptile(x) & ExplodeOn(x, People))", "Reptile(Stonefish)", "ExplodeWhenSteppedOn(Stonefish)", "(ExplodeOn(Stonefish, x) & -Treated(x) -> Death(x)) (assumes x is a person and is exploded by Stonefish)"], "conclusion": "exists x. (Reptile(x) & (ExplodeOn(x, People) & -Treated(x) -> Death(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "The function '((ExplodeOn(Stonefish,x) & -Treated(x)) -> Death(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n(ExplodeOn(Stonefish, x) & -Treated(x) -> Death(x)) (assumes x is a person and is exploded by Stonefish)\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 322, in attempt_adjuncts\n    expression = self.attempt_ApplicationExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 521, in attempt_ApplicationExpression\n    raise LogicalExpressionException(\nnltk.sem.logic.LogicalExpressionException: The function '((ExplodeOn(Stonefish,x) & -Treated(x)) -> Death(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: The function '((ExplodeOn(Stonefish,x) & -Treated(x)) -> Death(x))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.\n(ExplodeOn(Stonefish, x) & -Treated(x) -> Death(x)) (assumes x is a person and is exploded by Stonefish)\n                                                  ^\n"}
{"timestamp": "2025-06-10T00:40:09.990945", "premises": ["exists x. (Reptile(x) & ExplodeOn(x, People))", "Reptile(Stonefish)", "ExplodeOn(Stonefish, SteppedOn)", "(ExplodeOn(Stonefish, x) & Not(Treated(x)) -> Death(x))", "Treated(x) <- (RemoveHeat(x) | UseAntivenom(x))"], "conclusion": "(ExplodeOn(x, People) & Not(Treated(x)) -> Death(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Treated/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Treated/1\n"}
{"timestamp": "2025-06-10T00:40:38.007448", "premises": ["all x. all y. (Bear(x) & InDesert(x, y) -> -Animal(x))", "exists x. exists y. (Bear(x) & InDesert(x, y)) </PREMISES> <CONCLUSION> Not all bears are animals.  FOL: -all x. Animal(x)"], "conclusion": "-all x. (Bear(x) -> Animal(x)) </CONCLUSION> <EVALUATE> FOL:  all x. all y. (-Animal(x)) | exists x. exists y. (Bear(x) & InDesert(x, y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</CONCLUSION>'.\n-all x. (Bear(x) -> Animal(x)) </CONCLUSION> <EVALUATE> FOL:  all x. all y. (-Animal(x)) | exists x. exists y. (Bear(x) & InDesert(x, y))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</CONCLUSION>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</CONCLUSION>'.\n-all x. (Bear(x) -> Animal(x)) </CONCLUSION> <EVALUATE> FOL:  all x. all y. (-Animal(x)) | exists x. exists y. (Bear(x) & InDesert(x, y))\n                               ^\n"}
{"timestamp": "2025-06-10T00:41:04.867780", "premises": ["all x. (Bird(x) -> -Fur(x))"], "conclusion": "all x. (Dog(x) -> Bird(x)) </PREMISES> <CONCLUSION> Some dog has fur.  FOL: -exists x. (Dog(x) & Fur(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (Dog(x) -> Bird(x)) </PREMISES> <CONCLUSION> Some dog has fur.  FOL: -exists x. (Dog(x) & Fur(x))\n                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (Dog(x) -> Bird(x)) </PREMISES> <CONCLUSION> Some dog has fur.  FOL: -exists x. (Dog(x) & Fur(x))\n                           ^\n"}
{"timestamp": "2025-06-10T00:41:55.126731", "premises": ["all x. (Ambiortus(x) <-> PrehistoricMammalGenus(x))", "all x. (KnownSpeciesOf(Ambiortus, x) -> AmbiortusDementjevi(x))", "LivedOn(Mars, AmbiortusDementjevi)", "Discovered(Adele, Ambiortus)"], "conclusion": "Discovered(Adele, MammalGenus)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'PrehistoricMammalGenus'.  Expected token ')'.\n(> PrehistoricMammalGenus(x)) -> all x. (Ambiortus(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'PrehistoricMammalGenus'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'PrehistoricMammalGenus'.  Expected token ')'.\n(> PrehistoricMammalGenus(x)) -> all x. (Ambiortus(x))\n   ^\n"}
{"timestamp": "2025-06-10T00:41:55.138717", "premises": ["all x. (PrehistoricMammalGenus(x) -> x = Ambiortus)", "{x | x = AmbiortusDementjevi} = Ambiortus", "Member(Mars, AmbiortusDementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "PrehistoricMammalGenus(Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    ({%%END ERROR%%x | ((x = AmbiortusDementjevi}) = Ambiortus)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: Set parsing is not available (see end of marked string):\n\n%%START ERROR%%\n    ({%%END ERROR%%x | ((x = AmbiortusDementjevi}) = Ambiortus)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T00:41:55.146058", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "exists x. (AmbiortusDementjevi(x) & SpeciesOf(x, Ambiortus))", "LivedOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "NewMammalGenus(Ambiortus) & Discoverer(Adele, Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:41:55.162146", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "AmbiortusDementjevi(AmbiortusDementjevi)", "LivedOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "NewMammalGenus(Ambiortus) & Discoverer(Adele, Ambiortus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:41:55.165328", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "AmbiortusDementjevi(AmbiortusDementjevi)", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "Discoverer(Adele, NewMammalGenus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-06-10T00:42:41.794904", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "-exists y. Ambiortus(y) & -AmbiortusDementjevi(y)", "LivedOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-06-10T00:42:41.803958", "premises": ["all x. (Ambiortus(x) -> Prehistoric(x) & Mammal(x))", "exists x. (Ambiortus(x) & Dementjevi(x))", "LivesOn(Mars, Dementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Mars, Adele)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Dementjevi/1, Dementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Dementjevi/1, Dementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Dementjevi/1, Dementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, Dementjevi/1, Dementjevi/0\n"}
{"timestamp": "2025-06-10T00:42:41.815282", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "Ambiortus(Dementjevi) & forall x. (Ambiortus(x) -> Dementjevi = x)", "Habitat(Dementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Mars, Adele)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:42:41.820870", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "exists x. (Ambiortus(x) & -exists y. (Ambiortus(y) & y != x))", "PrehistoricMammalGenus(AmbiortusDementjevi) & LivedOn(Mars, AmbiortusDementjevi)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Mars, Adele)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:42:41.823852", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammal(x))", "exists x. (Ambiortus(x) & Dementjevi(x))", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:42:41.824294", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "AmbiortusDementjevi(Ambiortus)", "LivesOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivesOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AmbiortusDementjevi/1, AmbiortusDementjevi/0, Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:42:41.824692", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "AmbiortusDementjevi(x) -> Ambiortus(x)", "Habitat(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "Habitat(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0, AmbiortusDementjevi/1, AmbiortusDementjevi/0\n"}
{"timestamp": "2025-06-10T00:42:41.827001", "premises": ["all x. (Ambiortus(x) -> PrehistoricMammalGenus(x))", "all x. (Ambiortus(x) -> (x = AmbiortusDementjevi))", "LivedOn(AmbiortusDementjevi, Mars)", "Discoverer(Adele, Ambiortus)"], "conclusion": "LivedOn(Adele, Mars)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Ambiortus/1, Ambiortus/0\n"}
{"timestamp": "2025-06-10T00:43:33.590814", "premises": ["FortTiconderoga(x) <-> FortCarillon(x)", "Destroyed(ChrisHemsworth, FortCarillon)", "LocatedIn(NewFrance, FortCarillon)", "-LocatedIn(Europe, NewFrance)"], "conclusion": "exists x. (Destroyed(ChrisHemsworth, x) & LocatedIn(NewFrance, x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FortCarillon'.  Expected token ')'.\n(> FortCarillon(x) -> FortTiconderoga(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FortCarillon'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FortCarillon'.  Expected token ')'.\n(> FortCarillon(x) -> FortTiconderoga(x))\n   ^\n"}
{"timestamp": "2025-06-10T00:43:33.604132", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "DestroyedBy(ChrisHemsworth, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "exists x. (DestroyedBy(ChrisHemsworth, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-10T00:43:33.605282", "premises": ["FortTiconderoga \u2261 FortCarillon", "DestroyedBy(ChrisHemsworth, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "\u00acIn(NewFrance, Europe)"], "conclusion": "DestroyedBy(ChrisHemsworth, LocatedIn(?x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nFortTiconderoga \u2261 FortCarillon\n                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nFortTiconderoga \u2261 FortCarillon\n                ^\n"}
{"timestamp": "2025-06-10T00:43:33.598705", "premises": ["all x. (FortTiconderoga(x) -> FortCarillon(x))", "Destroyed(ChrisHemsworth, FortCarillon)", "all x. (FortCarillon(x) -> In(x, NewFrance))", "-In(NewFrance, Europe)"], "conclusion": "exists x. (Destroyed(ChrisHemsworth, x) & In(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-10T00:43:33.604241", "premises": ["all x. (Ticonderoga(x) -> Carillon(x))", "DestroyedBy(ChrisHemsworth, Carillon)", "In(Carillon, NewFrance)", "exists x. (NewFrance(x) & -In(x, Europe))"], "conclusion": "exists x. (DestroyedBy(ChrisHemsworth, x) & In(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Carillon/1, Carillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Carillon/1, Carillon/0, NewFrance/1, NewFrance/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Carillon/1, Carillon/0, NewFrance/1, NewFrance/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Carillon/1, Carillon/0, NewFrance/1, NewFrance/0\n"}
{"timestamp": "2025-06-10T00:43:33.604893", "premises": ["FortTiconderoga(x) <-> FortCarillon(x)", "Destroyed(ChrisHemsworth, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "exists x. (FortTiconderoga(x) & Destroyed(ChrisHemsworth, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FortCarillon'.  Expected token ')'.\n(> FortCarillon(x) -> FortTiconderoga(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FortCarillon'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FortCarillon'.  Expected token ')'.\n(> FortCarillon(x) -> FortTiconderoga(x))\n   ^\n"}
{"timestamp": "2025-06-10T00:43:33.617175", "premises": ["FortTiconderoga(x) -> FortCarillon(x)", "Destroyed(ChrisHemsworth, FortCarillon)", "LocatedIn(FortCarillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "exists x. (Destroyed(ChrisHemsworth, x) & LocatedIn(x, NewFrance))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: FortCarillon/1, FortCarillon/0\n"}
{"timestamp": "2025-06-10T00:43:33.615746", "premises": ["Ticonderoga \u2261 Carillon", "Destroyed(ChrisHemsworth, Carillon)", "In(Carillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "Destroyed(ChrisHemsworth, X) & In(X, NewFrance)  Since Fort Ticonderoga is the former name for Fort Carillon, it follows that Destroyed(ChrisHemsworth, Ticonderoga).  FOL: Destroyed(ChrisHemsworth, Ticonderoga) Since Ticonderoga \u2261 Carillon, it follows that Destroyed(ChrisHemsworth, Carillon) and In(Carillon, NewFrance).  FOL: Destroyed(ChrisHemsworth, Carillon) & In(Carillon, NewFrance) Since New France is not in Europe, it follows that there is a fort in New France that Chris Hemsworth destroyed.  FOL: exists X. Destroyed(ChrisHemsworth, X) & In(X, NewFrance)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Since'.\nDestroyed(ChrisHemsworth, X) & In(X, NewFrance)  Since Fort Ticonderoga is the former name for Fort Carillon, it follows that Destroyed(ChrisHemsworth, Ticonderoga).  FOL: Destroyed(ChrisHemsworth, Ticonderoga) Since Ticonderoga \u2261 Carillon, it follows that Destroyed(ChrisHemsworth, Carillon) and In(Carillon, NewFrance).  FOL: Destroyed(ChrisHemsworth, Carillon) & In(Carillon, NewFrance) Since New France is not in Europe, it follows that there is a fort in New France that Chris Hemsworth destroyed.  FOL: exists X. Destroyed(ChrisHemsworth, X) & In(X, NewFrance)\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Since'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Since'.\nDestroyed(ChrisHemsworth, X) & In(X, NewFrance)  Since Fort Ticonderoga is the former name for Fort Carillon, it follows that Destroyed(ChrisHemsworth, Ticonderoga).  FOL: Destroyed(ChrisHemsworth, Ticonderoga) Since Ticonderoga \u2261 Carillon, it follows that Destroyed(ChrisHemsworth, Carillon) and In(Carillon, NewFrance).  FOL: Destroyed(ChrisHemsworth, Carillon) & In(Carillon, NewFrance) Since New France is not in Europe, it follows that there is a fort in New France that Chris Hemsworth destroyed.  FOL: exists X. Destroyed(ChrisHemsworth, X) & In(X, NewFrance)\n                                                 ^\n"}
{"timestamp": "2025-06-10T00:43:33.619493", "premises": ["all x. (Ticonderoga(x) -> Carillon(x))", "Destroyed(Hemsworth, Carillon)", "LocatedIn(Carillon, NewFrance)", "-In(NewFrance, Europe)"], "conclusion": "exists x. (Fort(x) & LocatedIn(x, NewFrance) & Destroyed(Hemsworth, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Carillon/1, Carillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Carillon/1, Carillon/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Carillon/1, Carillon/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Carillon/1, Carillon/0\n"}
{"timestamp": "2025-06-10T00:44:28.145398", "premises": ["In(Paris, Unitedstatesofamerica)", "PartOf(Unitedstatesofamerica, Southamerica)", "In(Southamerica, Easternhemisphere)", "HighlyDeveloped(Paris) & -Inhabited(Paris)", "(In(A, B) & In(B, C)) -> In(A, C) </PREMISES> <CONCLUSION> A highly developed city where noone lives is in the eastern hemisphere of the earth.  FOL: In(Paris, Easternhemisphere) </CONCLUSION> <EVALUATE>"], "conclusion": "HighlyDeveloped(x) & -Inhabited(x) -> In(x, Easternhemisphere)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n(In(A, B) & In(B, C)) -> In(A, C) </PREMISES> <CONCLUSION> A highly developed city where noone lives is in the eastern hemisphere of the earth.  FOL: In(Paris, Easternhemisphere) </CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n(In(A, B) & In(B, C)) -> In(A, C) </PREMISES> <CONCLUSION> A highly developed city where noone lives is in the eastern hemisphere of the earth.  FOL: In(Paris, Easternhemisphere) </CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T00:44:28.230002", "premises": ["In(Paris, UnitedStatesOfAmerica)", "all x. (UnitedStatesOfAmerica(x) -> In(x, SouthAmerica))", "In(SouthAmerica, EasternHemisphere)", "HighlyDeveloped(Paris) & -Inhabited(Paris)", "(In(A, B) & In(B, C)) -> In(A, C)"], "conclusion": "In(Paris, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: UnitedStatesOfAmerica/1, UnitedStatesOfAmerica/0\n"}
{"timestamp": "2025-06-10T00:44:28.233382", "premises": ["all x. (Paris(x) -> In(x, Unitedstatesofamerica))", "all x. (Unitedstatesofamerica(x) -> PartOf(x, Southamerica))", "all x. (Southamerica(x) -> EasternHemisphere(x))", "HighlyDevelopedCity(Paris) & NooneLivesIn(Paris)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "In(Paris, EasternHemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0, EasternHemisphere/1, EasternHemisphere/0, Paris/1, Paris/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0, EasternHemisphere/1, EasternHemisphere/0, Paris/1, Paris/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0, EasternHemisphere/1, EasternHemisphere/0, Paris/1, Paris/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0, EasternHemisphere/1, EasternHemisphere/0, Paris/1, Paris/0\n"}
{"timestamp": "2025-06-10T00:44:40.672563", "premises": ["In(Paris, Unitedstatesofamerica)", "PartOf(Unitedstatesofamerica, Southamerica)", "In(Southamerica, Easternhemisphere)", "HighlyDevelopedCity(Paris) & -LivesIn(Paris, Anyone)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "HighlyDevelopedCity(x) & -LivesIn(x, Anyone) -> In(x, Easternhemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9LimitExceededException'>", "error_message": "(MAX_SECONDS)", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 368, in _call_prover9\n    raise Prover9LimitExceededException(returncode, errormsg)\nnltk.inference.prover9.Prover9LimitExceededException: (MAX_SECONDS)\n"}
{"timestamp": "2025-06-10T00:45:38.019897", "premises": ["Westworld is a British science fiction-thriller TV series.", "VanishedOnHBO(Westworld, 2016)", "-ConnectedTo(Westworld, MichaelCrichton)", "MalfunctioningRobotsAndHealingHumans(1973FilmWestworld)"], "conclusion": "ActedIn(MichaelCrichton, MalfunctioningRobotsAndHealingHumans)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'is'.\nWestworld is a British science fiction-thriller TV series.\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'is'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'is'.\nWestworld is a British science fiction-thriller TV series.\n          ^\n"}
{"timestamp": "2025-06-10T00:45:38.023493", "premises": ["(BritishTVSeries(Westworld) & ScienceFictionTVSeries(Westworld) & ThrillerTVSeries(Westworld)) INPREM: In 2016, a television series named Westworld vanished on HBO.  FOL: VanishedIn2016(Westworld) INPREM: The TV series Westworld is unrelated to the original film in 1973, which was written and acted by Michael Crichton.  FOL: -Related(Westworld, 1973Film) INPREM: The 1973 film Westworld is about robots that malfunction and begin healing human visitors.  FOL: RobotsMalfunctionIn1973Film"], "conclusion": "ActedInMalfunctioningRobotsFilm(MichaelCrichton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'INPREM:'.\n(BritishTVSeries(Westworld) & ScienceFictionTVSeries(Westworld) & ThrillerTVSeries(Westworld)) INPREM: In 2016, a television series named Westworld vanished on HBO.  FOL: VanishedIn2016(Westworld) INPREM: The TV series Westworld is unrelated to the original film in 1973, which was written and acted by Michael Crichton.  FOL: -Related(Westworld, 1973Film) INPREM: The 1973 film Westworld is about robots that malfunction and begin healing human visitors.  FOL: RobotsMalfunctionIn1973Film\n                                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'INPREM:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'INPREM:'.\n(BritishTVSeries(Westworld) & ScienceFictionTVSeries(Westworld) & ThrillerTVSeries(Westworld)) INPREM: In 2016, a television series named Westworld vanished on HBO.  FOL: VanishedIn2016(Westworld) INPREM: The TV series Westworld is unrelated to the original film in 1973, which was written and acted by Michael Crichton.  FOL: -Related(Westworld, 1973Film) INPREM: The 1973 film Westworld is about robots that malfunction and begin healing human visitors.  FOL: RobotsMalfunctionIn1973Film\n                                                                                               ^\n"}
{"timestamp": "2025-06-10T00:45:38.046581", "premises": ["all x. (Westworld -> (British(x) & ScienceFiction(x) & Thriller(x) & TVseries(x)))", "TVseries(Westworld) & VanishedOn(Westworld, HBO, 2016)", "-Related(Westworld, OriginalFilm(1973)) & WrittenBy(MichaelCrichton, OriginalFilm(1973)) & ActedIn(MichaelCrichton, OriginalFilm(1973))", "Theme(RobotsMalfunctioningAndHealingHumanVisitors, OriginalFilm(1973))"], "conclusion": "ActedIn(MichaelCrichton, Theme(RobotsMalfunctioningAndHealingHumanVisitors, OriginalFilm(1973)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Theme/2, Westworld/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Theme/2, Westworld/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Theme/2, Westworld/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Theme/2, Westworld/0\n"}
{"timestamp": "2025-06-10T00:45:38.047961", "premises": ["TvSeries(Westworld) & British(Westworld) & ScienceFiction(Westworld) & Thriller(Westworld)", "-TvSeries(WestworldHbo2016)", "~TvSeries(FilmWestworld1973) & WrittenBy(FilmWestworld1973, MichaelCrichton) & ActedIn(FilmWestworld1973, MichaelCrichton)", "Robots(Malfunctioning(FilmWestworld1973)) & Healing(FilmWestworld1973)"], "conclusion": "ActedIn(FilmWestworld1973, MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((%%START ERROR%%~TvSeries(FilmWestworld1973) & WrittenBy(FilmWestworld1973,MichaelCrichton)%%END ERROR%%) & ActedIn(FilmWestworld1973,MichaelCrichton)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((%%START ERROR%%~TvSeries(FilmWestworld1973) & WrittenBy(FilmWestworld1973,MichaelCrichton)%%END ERROR%%) & ActedIn(FilmWestworld1973,MichaelCrichton)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T00:45:38.048305", "premises": ["BritishScienceFictionThrillerTVSeries(Westworld)", "DisappearedFromHBOIn(Westworld, 2016)", "Unrelated(Westworld, 1973Film) & WrittenBy(1973Film, MichaelCrichton) & ActedIn(1973Film, MichaelCrichton)", "About(1973Film, MalfunctioningRobotsAndHealingHumanVisitors)"], "conclusion": "ActedIn(About(MalfunctioningRobots, Robots), MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: About/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: About/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: About/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: About/2\n"}
{"timestamp": "2025-06-10T00:45:38.048529", "premises": ["Westworld(TVseries)", "Vanished(TVseries, 2016, HBO)", "-Related(TVseries, 1973film)", "MalfunctioningRobots(1973film)"], "conclusion": "Acted(MichaelCrichton, MalfunctioningRobots)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MalfunctioningRobots/1, MalfunctioningRobots/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MalfunctioningRobots/1, MalfunctioningRobots/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MalfunctioningRobots/1, MalfunctioningRobots/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MalfunctioningRobots/1, MalfunctioningRobots/0\n"}
{"timestamp": "2025-06-10T00:45:38.050586", "premises": ["TVSeries(Westworld) & British(Westworld) & ScienceFictionThriller(Westworld)", "VanishedOnHBO(Westworld, 2016)", "Unrelated(TVSeries(Westworld), Film(Westworld, 1973)) & WrittenBy(Film(Westworld, 1973), MichaelCrichton) & ActedBy(Film(Westworld, 1973), MichaelCrichton)", "About(Film(Westworld, 1973), MalfunctioningRobots)"], "conclusion": "ActedBy(Film(Westworld, 1973), MichaelCrichton)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: TVSeries/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: TVSeries/1\n"}
{"timestamp": "2025-06-10T00:46:29.409942", "premises": ["Planet(Xiufeng) & Planet(Xiangshan) & Planet(Diecai) & Planet(Qixing) & CityOf(Xiufeng, Guilin) & CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) & CityOf(Qixing, Guilin)"], "conclusion": "- (Planet(Yangshuo) & CityOf(Yangshuo, Guilin)) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n- (Planet(Yangshuo) & CityOf(Yangshuo, Guilin)) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) </CONCLUSION> <EVALUATE>\n                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n- (Planet(Yangshuo) & CityOf(Yangshuo, Guilin)) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: CityOf(Xiangshan, Guilin) & CityOf(Diecai, Guilin) </CONCLUSION> <EVALUATE>\n                                                ^\n"}
{"timestamp": "2025-06-10T00:46:29.423702", "premises": ["PlanetInCity(Xiufeng, Guilin) & PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin) & PlanetInCity(Qixing, Guilin)", "-PlanetInCity(Yangshuo, Guilin)"], "conclusion": "PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin) & City(Xiangshan, Guilin) & City(Diecai, Guilin) However, this FOL does not correctly represent the conclusion. It should be PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin). FOL: PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\nPlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin) & City(Xiangshan, Guilin) & City(Diecai, Guilin) However, this FOL does not correctly represent the conclusion. It should be PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin). FOL: PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin)\n                                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\nPlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin) & City(Xiangshan, Guilin) & City(Diecai, Guilin) However, this FOL does not correctly represent the conclusion. It should be PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin). FOL: PlanetInCity(Xiangshan, Guilin) & PlanetInCity(Diecai, Guilin)\n                                                                                                                ^\n"}
{"timestamp": "2025-06-10T00:46:29.432913", "premises": ["Planet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin) Yangshuo is not a planet in Guilin.  FOL: -Planet(Yangshuo, Guilin) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Guilin(Guilin) </CONCLUSION> <EVALUATE>", "Planet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin)", "-Planet(Yangshuo, Guilin)", "Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Guilin(Guilin)"], "conclusion": "Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Guilin(Guilin)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Yangshuo'.\nPlanet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin) Yangshuo is not a planet in Guilin.  FOL: -Planet(Yangshuo, Guilin) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Guilin(Guilin) </CONCLUSION> <EVALUATE>\n                                                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Yangshuo'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Yangshuo'.\nPlanet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin) Yangshuo is not a planet in Guilin.  FOL: -Planet(Yangshuo, Guilin) </PREMISES> <CONCLUSION> Xiangshan and Diecai are planets in the same city.  FOL: Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Guilin(Guilin) </CONCLUSION> <EVALUATE>\n                                                                                                      ^\n"}
{"timestamp": "2025-06-10T00:46:29.430720", "premises": ["all x. (Xiufeng(x) -> (Planet(x) & In(x, Guilin))) & all x. (Xiangshan(x) -> (Planet(x) & In(x, Guilin))) & all x. (Diecai(x) -> (Planet(x) & In(x, Guilin))) & all x. (Qixing(x) -> (Planet(x) & In(x, Guilin)))", "- (Planet(Yangshuo) & In(Yangshuo, Guilin))"], "conclusion": "In(Xiangshan, Guilin) & In(Diecai, Guilin)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Diecai/1, Diecai/0, Xiangshan/1, Xiangshan/0\n"}
{"timestamp": "2025-06-10T00:46:29.439582", "premises": ["(Planet(Xiufeng, Guilin) & Planet(Xiangshan, Guilin) & Planet(Diecai, Guilin) & Planet(Qixing, Guilin))", "\u00acPlanet(Yangshuo, Guilin)"], "conclusion": "SameCity(Xiangshan, Diecai, Guilin)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte\n"}
{"timestamp": "2025-06-10T00:47:39.742537", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "-Edible(Phone())", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n-Edible(Phone())\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n-Edible(Phone())\n              ^\n"}
{"timestamp": "2025-06-10T00:47:39.757043", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "-Edible(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-06-10T00:47:39.757392", "premises": ["all x. (Car(x) -> Edible(x))", "exists x. (Phone(x) & Car(x))"], "conclusion": "-Edible(Phone)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Phone/1, Phone/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Phone/1, Phone/0\n"}
{"timestamp": "2025-06-10T00:47:39.760352", "premises": ["all x. (Car(x) -> Edible(x))", "all x. (Phone(x) -> Car(x))", "all x. (Edible(x) -> -Tasty(x))", "all x. (-Tasty(x) -> -Enjoyable(x))", "Enjoyable(Car)"], "conclusion": "Edible(Car)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Car/1, Car/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Car/1, Car/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Car/1, Car/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Car/1, Car/0\n"}
{"timestamp": "2025-06-10T00:48:33.029290", "premises": ["ParkInTheCity(NYC, MetropolitanParkOfArt)", "ParkInTheCity(NYC, WhitneyParkOfAmericanArt)", "ParkInTheCity(NYC, ParkOfModernArt)", "Excludes(MetropolitanParkOfArt, ByzantineAndIslamicArt)", "Excludes(WhitneyParkOfAmericanArt, AmericanArt)"], "conclusion": "Excludes(ParkInTheCity(NYC, _), ByzantineAndIslamicArt)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ParkInTheCity/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ParkInTheCity/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: ParkInTheCity/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: ParkInTheCity/2\n"}
{"timestamp": "2025-06-10T00:48:33.029676", "premises": ["MetropolitanParkOfArt() -> ParkInNYC()", "WhitneyParkOfAmericanArt() -> ParkInNYC()", "ParkOfModernArt() -> ParkInNYC()", "ExcludesByzantineAndIslamicArt(MetropolitanParkOfArt())", "ExcludesAmericanArt(WhitneyParkOfAmericanArt())"], "conclusion": "ParkInNYC() -> ExcludesByzantineAndIslamicArt()", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nParkInNYC() -> ExcludesByzantineAndIslamicArt()\n          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nParkInNYC() -> ExcludesByzantineAndIslamicArt()\n          ^\n"}
{"timestamp": "2025-06-10T00:48:33.029930", "premises": ["MetropolitanParkOfArt & all x. (Park(x) & In(x, NYC))", "WhitneyParkOfAmericanArt & all x. (Park(x) & In(x, NYC))", "ParkOfModernArt & all x. (Park(x) & In(x, NYC))", "-Excludes(MetropolitanParkOfArt, ByzantineAndIslamicArt)", "-Excludes(WhitneyParkOfAmericanArt, AmericanArt)"], "conclusion": "all x. (Park(x) & In(x, NYC) -> Excludes(x, ByzantineAndIslamicArt))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MetropolitanParkOfArt/0, WhitneyParkOfAmericanArt/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MetropolitanParkOfArt/0, WhitneyParkOfAmericanArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: MetropolitanParkOfArt/0, WhitneyParkOfAmericanArt/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: MetropolitanParkOfArt/0, WhitneyParkOfAmericanArt/0\n"}
{"timestamp": "2025-06-10T00:48:33.044459", "premises": ["MetropolitanParkOfArt(NYC)", "WhitneyParkOfAmericanArt(NYC)", "ParkOfModernArt(NYC)", "-ByzantineAndIslamicArt(MetropolitanParkOfArt)", "-AmericanArt(WhitneyParkOfAmericanArt)"], "conclusion": "-ByzantineAndIslamicArt(NYC)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0\n"}
{"timestamp": "2025-06-10T00:49:30.530861", "premises": ["ParkOfArtMetropolitan(NYC)", "ParkOfArtMetropolitan(NYC)  Whitney Park of American Art is a park in NYC.  FOL: ParkOfAmericanArtWhitney(NYC)", "ParkOfAmericanArtWhitney(NYC)  The Park of Modern Art (MoMA) is a park in NYC.  FOL: ParkOfModernArt(NYC)", "ParkOfModernArt(NYC)  The Metropolitan Park of Art excludes Byzantine and Islamic Art.  FOL: -ByzantineAndIslamicArt(ParkOfArtMetropolitan)", "-ByzantineAndIslamicArt(ParkOfArtMetropolitan)  Whitney Park of American Art excludes American art.  FOL: -AmericanArt(ParkOfAmericanArtWhitney)", "-AmericanArt(ParkOfAmericanArtWhitney)  A park in NYC excludes American art.  FOL: -AmericanArt(ParkOfArt)"], "conclusion": "-AmericanArt(ParkOfArt)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Whitney'.\nParkOfArtMetropolitan(NYC)  Whitney Park of American Art is a park in NYC.  FOL: ParkOfAmericanArtWhitney(NYC)\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Whitney'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Whitney'.\nParkOfArtMetropolitan(NYC)  Whitney Park of American Art is a park in NYC.  FOL: ParkOfAmericanArtWhitney(NYC)\n                            ^\n"}
{"timestamp": "2025-06-10T00:49:30.521122", "premises": ["all x. all y. (MetropolitanParkOfArt(x) & InNYC(y) -> ParkInNYC(x, y))", "all x. all y. (WhitneyParkOfAmericanArt(x) & InNYC(y) -> ParkInNYC(x, y))", "all x. all y. (ParkOfModernArt(x) & InNYC(y) -> ParkInNYC(x, y))", "-ByzantineAndIslamicArt(MetropolitanParkOfArt)", "-AmericanArt(WhitneyParkOfAmericanArt)"], "conclusion": "all x. all y. (ParkInNYC(x, y) -> -AmericanArt(x))", "error_type": "<class 'KeyError'>", "error_message": "15", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 284, in process_next_expression\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 286, in process_next_expression\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expression expected.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 158, in parse\n    msg = \"{}\\n{}\\n{}^\".format(e, data, \" \" * mapping[e.index - 1])\nKeyError: 15\n"}
{"timestamp": "2025-06-10T00:49:30.546320", "premises": ["MetropolitanParkOfArt(NYC)", "Park(NYC) & In(NYC, NewYorkCity)", "WhitneyParkOfAmericanArt(NYC) & In(NYC, NewYorkCity)", "ParkOfModernArt(NYC) & In(NYC, NewYorkCity)", "-ByzantineAndIslamicArt(MetropolitanParkOfArt)", "-AmericanArt(WhitneyParkOfAmericanArt)"], "conclusion": "exists x. (Park(x) & In(x, NewYorkCity) & -AmericanArt(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0.\n\n\nFatal error:  The following symbols are used with multiple arities: WhitneyParkOfAmericanArt/1, WhitneyParkOfAmericanArt/0, MetropolitanParkOfArt/1, MetropolitanParkOfArt/0\n"}
{"timestamp": "2025-06-10T00:49:30.542991", "premises": ["ParkOfArtMetropolitan(NYC)", "ParkOfAmericanArtWhitney(NYC)", "ParkOfModernArt(NYC)", "-ByzantineAndIslamicArt(ParkOfArtMetropolitan)", "-AmericanArt(ParkOfAmericanArtWhitney)"], "conclusion": "-AmericanArt(ParkInNYC)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParkOfAmericanArtWhitney/1, ParkOfAmericanArtWhitney/0, ParkOfArtMetropolitan/1, ParkOfArtMetropolitan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ParkOfAmericanArtWhitney/1, ParkOfAmericanArtWhitney/0, ParkOfArtMetropolitan/1, ParkOfArtMetropolitan/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ParkOfAmericanArtWhitney/1, ParkOfAmericanArtWhitney/0, ParkOfArtMetropolitan/1, ParkOfArtMetropolitan/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ParkOfAmericanArtWhitney/1, ParkOfAmericanArtWhitney/0, ParkOfArtMetropolitan/1, ParkOfArtMetropolitan/0\n"}
{"timestamp": "2025-06-10T00:50:54.934146", "premises": ["all x. (Plants(x) & LayEggs(x) -> (Birds(x) | Echidnas(x)))", "-Birds(x) | -Reptiles(x)", "-Echidnas(x) | -Reptiles(x)", "all x. (Mammals(x) -> -Invertebrates(x))", "all x. (Animals(x) -> (Vertebrates(x) | Invertebrates(x)))", "Reptiles(x) -> Plants(x)", "Geese(x) -> Reptiles(x)", "LayEggs(Grebes)", "-Birds(Grebes) & -Echidnas(Grebes)"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Geese/1, Geese/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Geese/1, Geese/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Geese/1, Geese/0\n"}
{"timestamp": "2025-06-10T00:50:54.934025", "premises": ["all x. ((Plant(x) & LayEggs(x)) -> (Bird(x) | Echidna(x)))", "-Reptile(Bird)", "-Reptile(Echidna)", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Reptile(Goose)", "LayEggs(Grebe)", "-Bird(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Goose)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Bird/1, Bird/0\n"}
{"timestamp": "2025-06-10T00:50:54.943446", "premises": ["all x. (Plant(x) -> (Bird(x) | Echidna(x)))", "all x. (Plant(x) -> (Bird(x) | Echidna(x)))", "all x. (Bird(x) -> -Reptile(x))", "all x. (Echidna(x) -> -Reptile(x))", "all x. (Mammal(x) -> -Invertebrate(x))", "all x. (Animal(x) -> (Vertebrate(x) | Invertebrate(x)))", "all x. (Reptile(x) -> Plant(x))", "Reptile(Goose)", "LayEggs(Grebe)", "-Bird(Grebe) & -Echidna(Grebe)"], "conclusion": "LayEggs(Goose) </PREMISES> <CONCLUSION> Geese lay eggs.  FOL: LayEggs(Goose) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLayEggs(Goose) </PREMISES> <CONCLUSION> Geese lay eggs.  FOL: LayEggs(Goose) </CONCLUSION> <EVALUATE>\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLayEggs(Goose) </PREMISES> <CONCLUSION> Geese lay eggs.  FOL: LayEggs(Goose) </CONCLUSION> <EVALUATE>\n               ^\n"}
{"timestamp": "2025-06-10T00:50:54.955484", "premises": ["all x. (Plants(x) & LayEggs(x) -> (Birds(x) | Echidnas(x)))", "-Reptiles(Birds)", "-Reptiles(Echidnas)", "all x. (-Mammals(x) | -Invertebrates(x))", "all x. (Animals(x) -> (Vertebrates(x) | Invertebrates(x)))", "all x. (Reptiles(x) -> Plants(x))", "Reptiles(Geese)", "LayEggs(Grebes)", "-Birds(Grebes) & -Echidnas(Grebes)"], "conclusion": "LayEggs(Geese)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidnas/1, Echidnas/0, Birds/1, Birds/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidnas/1, Echidnas/0, Birds/1, Birds/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidnas/1, Echidnas/0, Birds/1, Birds/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidnas/1, Echidnas/0, Birds/1, Birds/0\n"}
{"timestamp": "2025-06-10T00:51:56.523199", "premises": ["MartianScreenwriter(Maggie Friedman) & Screenwriter(Maggie Friedman) & Destroyer(Maggie Friedman)", "Showrunner(Maggie Friedman) & ExecutiveDemolisher(Maggie Friedman) & Series(Wizards of East End)", "FantasyDramaSeries(Wizards of East End)", "Destroyer(Maggie Friedman) & Demolisher(Maggie Friedman) & Series(Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & DemolishedBy(Showrunner(Wizards of East End), x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nexists x. (SeriesByHBO(x) & DemolishedBy(Showrunner(Wizards of East End), x))\n                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nexists x. (SeriesByHBO(x) & DemolishedBy(Showrunner(Wizards of East End), x))\n                                                            ^\n"}
{"timestamp": "2025-06-10T00:51:56.542183", "premises": ["Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman) & ExecutiveDemolisher(MaggieFriedman) & WizardsOfEastEnd(WizardsOfEastEnd)", "FantasyDrama(WizardsOfEastEnd)", "Destroyed(Eastwick) & Demolished(Eastwick) & MaggieFriedman(Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(x) & Showrunner(WizardsOfEastEnd) & MaggieFriedman(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MaggieFriedman/1, MaggieFriedman/0, WizardsOfEastEnd/1, WizardsOfEastEnd/0\n"}
{"timestamp": "2025-06-10T00:51:56.538376", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(WizardsOfEastEnd, MaggieFriedman) & ExecutiveDemolisher(WizardsOfEastEnd, MaggieFriedman)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroyed(Eastwick, MaggieFriedman) & Demolished(Eastwick, MaggieFriedman)", "SeriesByHBO(Eastwick)"], "conclusion": "SeriesByHBO(x) & Demolished(x, Showrunner(WizardsOfEastEnd))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-06-10T00:51:56.542634", "premises": ["Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(MaggieFriedman, WizardsOfEastEnd) & ExecutiveDemolisher(MaggieFriedman, WizardsOfEastEnd)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroy(Eastwick, MaggieFriedman) & Demolish(Eastwick, MaggieFriedman)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & DemolishedBy(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-06-10T00:51:56.556716", "premises": ["ScreenwriterAndDestroyer(MaggieFriedman)", "Showrunner(WizardsOfEastEnd) & ExecutiveDemolisher(WizardsOfEastEnd)", "FantasyDrama(WizardsOfEastEnd)", "Destroyed(Eastwick) & Demolished(Eastwick)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & DemolishedBy(Showrunner(WizardsOfEastEnd), x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Showrunner/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Showrunner/1\n"}
{"timestamp": "2025-06-10T00:51:56.557195", "premises": ["MartianScreenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(WizardsOfEastEnd, MaggieFriedman) & ExecutiveDemolisher(WizardsOfEastEnd, MaggieFriedman)", "FantasyDramaSeries(WizardsOfEastEnd)", "Destroy(Eastwick, MaggieFriedman) & Demolish(Eastwick, MaggieFriedman)", "SeriesByHBO(Eastwick)"], "conclusion": "SeriesByHBO(Eastwick) & Showrunner(WizardsOfEastEnd, MaggieFriedman) & MaggieFriedman = Showrunner(WizardsOfEastEnd) & Demolish(Eastwick, MaggieFriedman)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-06-10T00:51:56.560783", "premises": ["Screenwriter(MaggieFriedman) & Destroyer(MaggieFriedman)", "Showrunner(WizardsOfEastEnd, MaggieFriedman) & ExecutiveDemolisher(WizardsOfEastEnd, MaggieFriedman)", "FantasySeries(WizardsOfEastEnd) & DramaSeries(WizardsOfEastEnd)", "Destroyed(Eastwick, MaggieFriedman) & Demolished(Eastwick, MaggieFriedman)", "SeriesByHBO(Eastwick)"], "conclusion": "exists x. (SeriesByHBO(x) & Demolished(x, Showrunner(WizardsOfEastEnd)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Showrunner/2, Showrunner/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Showrunner/2, Showrunner/1\n"}
{"timestamp": "2025-06-10T00:53:00.851041", "premises": ["exists x. (BoneyM(x) & AmericanNumberOneSingle(x))", "BigHitInAmerica(\"Uptown Funk\")", "-AmericanNumberOneSingle(\"Uptown Funk\")", "all x. (PeakedBelowOne(x) -> -PeakedAtOne(x))"], "conclusion": "PeakedBelowOne(\"Uptown Funk\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Funk\"'.  Expected token ')'.\nPeakedBelowOne(\"Uptown Funk\")\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Funk\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Funk\"'.  Expected token ')'.\nPeakedBelowOne(\"Uptown Funk\")\n                       ^\n"}
{"timestamp": "2025-06-10T00:53:00.872984", "premises": ["all x. (SongOf(BoneyM, x) & InAmericanCharts(x) -> #1SingleInAmerica(x))", "InAmericanCharts(UptownFunk)", "-#1SingleInAmerica(UptownFunk)", "all x. (InAmericanCharts(x) & -#1SingleInAmerica(x) -> PeakedBelow1(x))"], "conclusion": "PeakedBelow1(UptownFunk)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(SongOf(BoneyM,x) & InAmericanCharts(x)) -> #1SingleInAmerica(x)%%END ERROR%%).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    all x (%%START ERROR%%(SongOf(BoneyM,x) & InAmericanCharts(x)) -> #1SingleInAmerica(x)%%END ERROR%%).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T00:53:00.886903", "premises": ["Artist(BoneyM) & American1Single(x) & Artist(x) & x != BoneyM", "BigHit(\"Uptown Funk\") & InAmerica(\"Uptown Funk\")", "-American1Single(\"Uptown Funk\")", "(PeaksBelow1(x) -> -American1Single(x))"], "conclusion": "PeaksBelow1(\"Uptown Funk\") -> -American1Single(\"Uptown Funk\")", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Funk\"'.  Expected token ')'.\nPeaksBelow1(\"Uptown Funk\") -> -American1Single(\"Uptown Funk\")\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Funk\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Funk\"'.  Expected token ')'.\nPeaksBelow1(\"Uptown Funk\") -> -American1Single(\"Uptown Funk\")\n                    ^\n"}
{"timestamp": "2025-06-10T00:54:27.591427", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:54:27.610271", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:54:27.611009", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION>  FOL: (exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) & exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) & exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) -> exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))) <CONCLUSION>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION>  FOL: (exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) & exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) & exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) -> exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))) <CONCLUSION>\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION>  FOL: (exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) & exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) & exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) -> exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))) <CONCLUSION>\n                                      ^\n"}
{"timestamp": "2025-06-10T00:54:27.617754", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) & exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:54:27.618451", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:54:27.619395", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:54:27.616787", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssessment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION> ETS destroys assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions. </CONCLUSION> <EVALUATE>  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION> ETS destroys assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions. </CONCLUSION> <EVALUATE>  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation)) & exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) </PREMISES> <CONCLUSION> ETS destroys assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions. </CONCLUSION> <EVALUATE>  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & For(x, k-OneTwoandhighereducation))  &  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))\n                                      ^\n"}
{"timestamp": "2025-06-10T00:55:45.244065", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-Administers(Ets, x) | -InternationalLaw(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.244759", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.251416", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.252128", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.252801", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.243407", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaws(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.245424", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.246233", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.307205", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "-exists x. (Administers(Ets, x) & InternationalLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.  Expected token ')'.\nexists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T00:55:45.306693", "premises": ["exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation))", "exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))", "exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions))", "exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting))"], "conclusion": "Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))   ---FOL expression for the conclusion, because the conclusion is the negation of the following expression. FOL: \u00ac(Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))  ---The following is the evaluation of the assumption that ETS administers laws internationally.  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for entry to U.S. tertiary and quaternary education institutions. FOL:  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys K-12 statewide assessments used for accountability testing in many states. FOL:  exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for K-12 and higher education. FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '-'.\nAdministers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))   ---FOL expression for the conclusion, because the conclusion is the negation of the following expression. FOL: \u00ac(Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))  ---The following is the evaluation of the assumption that ETS administers laws internationally.  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for entry to U.S. tertiary and quaternary education institutions. FOL:  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys K-12 statewide assessments used for accountability testing in many states. FOL:  exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for K-12 and higher education. FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))\n                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '-'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '-'.\nAdministers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))   ---FOL expression for the conclusion, because the conclusion is the negation of the following expression. FOL: \u00ac(Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x)))  ---The following is the evaluation of the assumption that ETS administers laws internationally.  FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) exists x. (Administers(Ets, x) & InternationalLaw(x) & (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))) exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for entry to U.S. tertiary and quaternary education institutions. FOL:  exists x. (Destroys(Ets, x) & AssociatedWith(x, Entrytouseducationinstitutions)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys K-12 statewide assessments used for accountability testing in many states. FOL:  exists x. (Destroys(Ets, x) & StateWideAssesment(x) & UsedFor(x, Accountabilitytesting)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))  ---The following is the evaluation of the assumption that ETS administers laws internationally, against the premise that ETS destroys assessments for K-12 and higher education. FOL:  exists x. (Destroys(Ets, x) & StandardizedTest(x) & In(x, Unitedstates) & For(x, k-OneTwoandhighereducation)) Administers(Ets, y) & InternationalLaw(y) & exists x. (TOEFL(x) | TOEIC(x) | GRE(x) | SubjectLaw(x))\n                                                                                                       ^\n"}
{"timestamp": "2025-06-10T00:56:29.488225", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "FreezesIn(Bronx, WaterFrom(CrotonRiverWatershed))"], "conclusion": "In(Bronx, California) </PREMISES> <CONCLUSION> Water from the Croton River watershed freezes somewhere in California.  FOL: FreezesIn(California, WaterFrom(CrotonRiverWatershed)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nIn(Bronx, California) </PREMISES> <CONCLUSION> Water from the Croton River watershed freezes somewhere in California.  FOL: FreezesIn(California, WaterFrom(CrotonRiverWatershed)) </CONCLUSION> <EVALUATE>\n                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nIn(Bronx, California) </PREMISES> <CONCLUSION> Water from the Croton River watershed freezes somewhere in California.  FOL: FreezesIn(California, WaterFrom(CrotonRiverWatershed)) </CONCLUSION> <EVALUATE>\n                      ^\n"}
{"timestamp": "2025-06-10T00:56:29.510268", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "FreezesIn(Bronx, WaterFrom(CrotonRiverWatershed))", "In(Bronx, California)"], "conclusion": "\u2203x. (FreezesIn(x, WaterFrom(CrotonRiverWatershed)) & In(x, California))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.\n\u2203x. (FreezesIn(x, WaterFrom(CrotonRiverWatershed)) & In(x, California))\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.\n\u2203x. (FreezesIn(x, WaterFrom(CrotonRiverWatershed)) & In(x, California))\n  ^\n"}
{"timestamp": "2025-06-10T00:56:29.501556", "premises": ["EndBasin(CrotonRiverWatershed, CrotonRiver)", "In(CrotonRiver, NortheasternCalifornia)", "FreezesInWaterFrom(CrotonRiverWatershed, Bronx)", "In(Bronx, California)"], "conclusion": "FreezesInWaterFrom(CrotonRiverWatershed, ?x) & In(?x, California)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (FreezesInWaterFrom(%%START ERROR%%CrotonRiverWatershed,?x%%END ERROR%%) & In(?x,California)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (FreezesInWaterFrom(%%START ERROR%%CrotonRiverWatershed,?x%%END ERROR%%) & In(?x,California)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T00:57:48.987835", "premises": ["all x. (ImaginaryNumber(x) -> (x = 6 | x = 7 | x = 8))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (y = (x + 1) -> x < y))", "all x. all y. (x > y -> -(y > x))", "7 = (6 + 1)", "8 = (7 + 1)", "Positive(2)", "all x. (Positive(x) -> Positive(2*x))", "8 = (2 * 6)", "6 = (2 * 2)"], "conclusion": "8 < 7", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\n8 < 7\n  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\n8 < 7\n  ^\n"}
{"timestamp": "2025-06-10T00:57:48.993798", "premises": ["all x. (ImaginaryNumber(x) | x = Six | x = Seven | x = Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> NotSmaller(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Two * x))", "Eight = Two * Six", "Six = Two * Two"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))\n                                                                ^\n"}
{"timestamp": "2025-06-10T00:57:48.994254", "premises": ["all x. (ImaginaryNumber(x) <-> (Six(x) | Seven(x) | Eight(x)))", "all x. all y. (ImaginaryNumber(y) & ImaginaryNumber(x) & Eq(x, Add(y, One)) -> Less(x, y))", "all x. all y. (Greater(x, y) -> -Greater(y, x))", "Eq(Seven, Add(Six, One))", "Eq(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Eq(Eight, Double(Six))", "Eq(Six, Double(Two))"], "conclusion": "Less(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '|'.  Expected token ')'.\n(> (Six(x) | Seven(x) | Eight(x))) -> all x. (ImaginaryNumber(x))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '|'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '|'.  Expected token ')'.\n(> (Six(x) | Seven(x) | Eight(x))) -> all x. (ImaginaryNumber(x))\n           ^\n"}
{"timestamp": "2025-06-10T00:57:48.994907", "premises": ["all x. (x = Six | x = Seven | x = Eight -> Imaginary(x))", "all x. all y. ((Imaginary(x) & Imaginary(y) & x = y + 1) -> Smaller(x, y))", "all x. all y. (x > y -> -y > x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((Imaginary(x) & Imaginary(y) & x = y + 1) -> Smaller(x, y))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((Imaginary(x) & Imaginary(y) & x = y + 1) -> Smaller(x, y))\n                                                    ^\n"}
{"timestamp": "2025-06-10T00:57:48.988561", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y+1 -> x < y)", "all x. all y. (x > y -> -y > x)", "Seven = Six+1", "Eight = Seven+1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-06-10T00:57:48.988348", "premises": ["Imaginary(six) & Imaginary(seven) & Imaginary(eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> x < y)", "all x. all y. (x > y -> -y > x)", "seven = six + 1", "eight = seven + 1", "Positive(two)", "all x. (Positive(x) -> Positive(2*x))", "eight = 2*six", "six = 2*two"], "conclusion": "eight < seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\neight < seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\neight < seven\n      ^\n"}
{"timestamp": "2025-06-10T00:57:48.988141", "premises": ["ImaginaryNumber(Six) & ImaginaryNumber(Seven) & ImaginaryNumber(Eight)", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> x < y)", "all x. all y. (x > y -> -y > x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Eight < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nEight < Seven\n      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nEight < Seven\n      ^\n"}
{"timestamp": "2025-06-10T00:57:49.009905", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Plus(y, 1)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Plus(Six, 1))", "Equal(Eight, Plus(Seven, 1))", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x)))", "Equal(Eight, Double(Six))", "Equal(Six, Double(Two))"], "conclusion": "Smaller(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0\n"}
{"timestamp": "2025-06-10T00:57:49.011910", "premises": ["all x. (Six(x) -> ImaginaryNumber(x)) & all x. (Seven(x) -> ImaginaryNumber(x)) & all x. (Eight(x) -> ImaginaryNumber(x))", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & equals(x, add(y, 1))) -> smaller(x, y))", "all x. all y. (larger(x, y) -> not larger(y, x))", "equals(Seven, add(Six, 1))", "equals(Eight, add(Seven, 1))", "Positive(Two)", "all x. (Positive(x) -> Positive(add(x, x)))", "equals(Eight, add(Six, Six))", "equals(Six, add(Two, Two))"], "conclusion": "smaller(Eight, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Six/1, Six/0, Seven/1, Seven/0, Eight/1, Eight/0\n"}
{"timestamp": "2025-06-10T00:58:59.742808", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & Equal(x, y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six + 1)", "Equal(Eight, Seven + 1)", "Negative(Two)", "all x. (Negative(x) -> Negative(2 * x))", "Equal(Nine, 2 * Six)", "Equal(Six, 2 * Two)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & Equal(x, y + 1) -> Larger(x, y))\n                                                        ^\n"}
{"timestamp": "2025-06-10T00:58:59.749739", "premises": ["Imaginary(6) & Imaginary(7) & Imaginary(8)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "7 = 6 + 1", "8 = 7 + 1", "Negative(2)", "all x. (Negative(x) -> Negative(2 * x))", "9 = 2 * 6", "6 = 2 * 2"], "conclusion": "Negative(9)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))\n                                                    ^\n"}
{"timestamp": "2025-06-10T00:58:59.743442", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> Imaginary(x))", "all x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(2 * x))", "Nine = 2 * Six", "Six = 2 * Two"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Larger(x, y))\n                                                    ^\n"}
{"timestamp": "2025-06-10T00:58:59.753303", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> Imaginary(x))", "all x. all y. (Imaginary(x) & Imaginary(y) & Equal(x, Add(y, 1)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, 1))", "Equal(Eight, Add(Seven, 1))", "Negative(Two)", "all x. (Negative(x) -> Negative(Add(x, x)))", "Equal(Nine, Add(Six, Six))", "Equal(Six, Add(Two, Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0\n"}
{"timestamp": "2025-06-10T00:58:59.766926", "premises": ["(Six -> ImaginaryNumber) & (Seven -> ImaginaryNumber) & (Eight -> ImaginaryNumber)", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, One)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Equal(Nine, Double(Six))", "Equal(Six, Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "End of input found.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, One)) -> Larger(x, y))\n                                                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 270, in token\n    tok = self._buffer[self._currentIndex]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 562, in assertNextToken\n    tok = self.token()\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 276, in token\n    raise ExpectedMoreTokensException(self._currentIndex + 1) from e\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  More tokens expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 564, in assertNextToken\n    raise ExpectedMoreTokensException(\nnltk.sem.logic.ExpectedMoreTokensException: End of input found.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: End of input found.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, One)) -> Larger(x, y))\n                                                                                                ^\n"}
{"timestamp": "2025-06-10T00:58:59.767722", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1 | y = x + 1)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Negative(Two)", "all x. (Negative(x) -> Negative(2 * x))", "Nine = 2 * Six", "Six = 2 * Two"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1 | y = x + 1)) -> Larger(x, y))\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1 | y = x + 1)) -> Larger(x, y))\n                                                                 ^\n"}
{"timestamp": "2025-06-10T00:58:59.744073", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Six(Seven)", "Seven(Eight)", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Six(Nine)", "Two(Six)"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Larger(x, y))\n                                                                ^\n"}
{"timestamp": "2025-06-10T00:58:59.773977", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, 1)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, 1))", "Equal(Eight, Add(Seven, 1))", "Negative(Two)", "all x. (Negative(x) -> Negative(Doubled(x)))", "Equal(Nine, Doubled(Six))", "Equal(Six, Doubled(Two))"], "conclusion": "-Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0\n"}
{"timestamp": "2025-06-10T00:58:59.778511", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, 1)) -> Larger(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, 1))", "Equal(Eight, Add(Seven, 1))", "Negative(Two)", "all x. (Negative(x) -> Negative(Double(x)))", "Equal(Nine, Double(Six))", "Equal(Six, Double(Two))"], "conclusion": "Negative(Nine)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Six/1, Six/0, Seven/1, Seven/0\n"}
{"timestamp": "2025-06-10T01:00:18.391619", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))", "all x. all y. (x > y -> -y > x)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & x = y + 1 -> Smaller(x, y))\n                                                               ^\n"}
{"timestamp": "2025-06-10T01:00:18.390400", "premises": ["all x. (Imaginary(x) | x = Six | x = Seven | x = Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & x = y + 1 -> x < y)", "all x. all y. (x > y -> ~ (y > x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2*x))", "Eight = 2*Six", "Six = 2*Two"], "conclusion": "Six < Seven", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.\nSix < Seven\n    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.\nSix < Seven\n    ^\n"}
{"timestamp": "2025-06-10T01:00:18.398304", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> Imaginary(x))", "all x. all y. (Imaginary(x) & Imaginary(y) & Equal(x + 1, y) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Six + 1)", "Equal(Eight, Seven + 1)", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Equal(Eight, 2 * Six)", "Equal(Six, 2 * Two)"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & Equal(x + 1, y) -> Smaller(x, y))\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & Equal(x + 1, y) -> Smaller(x, y))\n                                                     ^\n"}
{"timestamp": "2025-06-10T01:00:18.390978", "premises": ["Imaginary(Six) & Imaginary(Seven) & Imaginary(Eight)", "all x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(Double(x, Two)))", "Eight = Double(Six, Two)", "Six = Double(Two, Two)"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Smaller(x, y))\n                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (Imaginary(x) & Imaginary(y) & (x = y + 1) -> Smaller(x, y))\n                                                    ^\n"}
{"timestamp": "2025-06-10T01:00:18.400889", "premises": ["all x. (ImaginaryNumber(x) | (x = Six) | (x = Seven) | (x = Eight))", "all x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x + 1 = y)) -> Larger(y, x))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Seven = (Six + 1)", "Eight = (Seven + 1)", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = (2 * Six)", "Six = (2 * Two)"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x + 1 = y)) -> Larger(y, x))\n                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. ((ImaginaryNumber(x) & ImaginaryNumber(y) & (x + 1 = y)) -> Larger(y, x))\n                                                             ^\n"}
{"timestamp": "2025-06-10T01:00:18.390112", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x + 1 = y) -> x < y)", "all x. all y. (x > y -> - (y > x))", "Seven(x) -> (x + 1 = Six(x))", "Eight(x) -> (x + 1 = Seven(x))", "Positive(Two)", "all x. (Positive(x) -> Positive(2x))", "Eight(x) -> (x = 2*Six(x))", "Six(x) -> (x = 2*Two(x))"], "conclusion": "Six(x) & Seven(y) & (x < y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\nSix(x) & Seven(y) & (x < y)\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\nSix(x) & Seven(y) & (x < y)\n                       ^\n"}
{"timestamp": "2025-06-10T01:00:18.403385", "premises": ["all x. (Six(x) | Seven(x) | Eight(x) -> ImaginaryNumber(x))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))", "all x. all y. (x > y -> -x < y)", "Seven = Six + 1", "Eight = Seven + 1", "Positive(Two)", "all x. (Positive(x) -> Positive(2 * x))", "Eight = 2 * Six", "Six = 2 * Two"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))\n                                                                ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '+'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '+'.  Expected token ')'.\nall x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & (x = y + 1) -> Smaller(x, y))\n                                                                ^\n"}
{"timestamp": "2025-06-10T01:00:18.415601", "premises": ["all x. (ImaginaryNumber(x) -> (Six(x) | Seven(x) | Eight(x)))", "all x. all y. (ImaginaryNumber(x) & ImaginaryNumber(y) & Equal(x, Add(y, One)) -> Smaller(x, y))", "all x. all y. (Larger(x, y) -> -Larger(y, x))", "Equal(Seven, Add(Six, One))", "Equal(Eight, Add(Seven, One))", "Positive(Two)", "all x. (Positive(x) -> Positive(Add(x, x)))", "Equal(Eight, Add(Six, Six))", "Equal(Six, Add(Two, Two))"], "conclusion": "Smaller(Six, Seven)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Seven/1, Seven/0, Six/1, Six/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Seven/1, Seven/0, Six/1, Six/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Eight/1, Eight/0, Seven/1, Seven/0, Six/1, Six/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Eight/1, Eight/0, Seven/1, Seven/0, Six/1, Six/0\n"}
{"timestamp": "2025-06-10T01:01:27.482819", "premises": ["ParamountLeader(Peoplesrepublicofchina, Dengxiaoping)", "Praised(Dengxiaoping, Reformprogram) & Praised(Dengxiaoping, Hongkongreversion) & Praised(Dengxiaoping, Macaureturn)", "SecretaryGeneral(Mao, Dengxiaoping) & Vicepremier(Dengxiaoping, 1950s) & Opposed(Dengxiaoping, Antirightistcampaign)", "Detrimental(Dengxiaoping, France's music industry)", "Born(Maozedong, 1976)", "RoseToPower(Dengxiaoping)"], "conclusion": "Detrimental(Dengxiaoping, France's music industry) & RoseToPower(Dengxiaoping)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'music'.  Expected token ')'.\nDetrimental(Dengxiaoping, France's music industry) & RoseToPower(Dengxiaoping)\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'music'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'music'.  Expected token ')'.\nDetrimental(Dengxiaoping, France's music industry) & RoseToPower(Dengxiaoping)\n                                   ^\n"}
{"timestamp": "2025-06-10T01:01:27.482415", "premises": ["ParamountLeaderOfChina(DengXiaoping) & Danced(DengXiaoping)", "DetrimentalToFrancesMusicIndustry(X) \u2192 X = DengXiaoping", "Born(MaoZedong) \u2192 GraduallyRoseToSupremePower(DengXiaoping)"], "conclusion": "DetrimentalToFrancesMusicIndustry(X) & GraduallyRoseToSupremePower(X)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nDetrimentalToFrancesMusicIndustry(X) \u2192 X = DengXiaoping\n                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nDetrimentalToFrancesMusicIndustry(X) \u2192 X = DengXiaoping\n                                     ^\n"}
{"timestamp": "2025-06-10T01:01:27.483453", "premises": ["Dance(DengXiaoping) & ParamountLeader(DengXiaoping, PeopleRepublicOfChina)", "Praised(DengXiaoping, ReformProgram) & Praised(DengXiaoping, ReversionOfHongKongToChineseControl) & Praised(DengXiaoping, ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign) & SecretaryGeneral(DengXiaoping, Mao) & VicePremier(DengXiaoping)", "DetrimentalToMusicIndustry(DengXiaoping, Frances)", "Born(MaoZedong, 1976)", "RoseToSupremePower(DengXiaoping) </PREMISES> <CONCLUSION> The person detrimental to France's music industry gradually rose to supreme power. </CONCLUSION> <EVALUATE>"], "conclusion": "DetrimentalToMusicIndustry(x, Frances) & RoseToSupremePower(x)   FOL: DetrimentalToMusicIndustry(DengXiaoping, Frances) & RoseToSupremePower(DengXiaoping)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nDetrimentalToMusicIndustry(x, Frances) & RoseToSupremePower(x)   FOL: DetrimentalToMusicIndustry(DengXiaoping, Frances) & RoseToSupremePower(DengXiaoping)\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nDetrimentalToMusicIndustry(x, Frances) & RoseToSupremePower(x)   FOL: DetrimentalToMusicIndustry(DengXiaoping, Frances) & RoseToSupremePower(DengXiaoping)\n                                                                 ^\n"}
{"timestamp": "2025-06-10T01:01:27.484600", "premises": ["ParamountLeader(DengXiaoping) & Danced(DengXiaoping)", "SecretaryGeneral(DengXiaoping) & Opposed(DengXiaoping, AntiRightistCampaign)", "DetrimentalToMusic(DengXiaoping, France) & After(GreatLeapForward, DetrimentalToMusic(DengXiaoping, France))"], "conclusion": "After(BirthOfMaoZedong, GradualRiseToSupremePower(DengXiaoping)) </PREMISES> <CONCLUSION> The person detrimental to France's music industry gradually rose to supreme power.  FOL: DetrimentalToMusic(x, France) & GradualRiseToSupremePower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nAfter(BirthOfMaoZedong, GradualRiseToSupremePower(DengXiaoping)) </PREMISES> <CONCLUSION> The person detrimental to France's music industry gradually rose to supreme power.  FOL: DetrimentalToMusic(x, France) & GradualRiseToSupremePower(x)\n                                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nAfter(BirthOfMaoZedong, GradualRiseToSupremePower(DengXiaoping)) </PREMISES> <CONCLUSION> The person detrimental to France's music industry gradually rose to supreme power.  FOL: DetrimentalToMusic(x, France) & GradualRiseToSupremePower(x)\n                                                                 ^\n"}
{"timestamp": "2025-06-10T01:01:27.486768", "premises": ["Danced(DengXiaoping, ParamountLeaderOfChina)", "Praised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)", "Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, Francemusicindustry, GreatLeapForward)", "Born(MaoZedong, 1976)", "RaisedToPower(DengXiaoping)"], "conclusion": "Detrimental(x, Francemusicindustry, GreatLeapForward) & RaisedToPower(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & ReversionOfHongKong & ReturnOfMacau)\n                                    ^\n"}
{"timestamp": "2025-06-10T01:01:27.499634", "premises": ["ParamountLeader(China, DengXiaoping) & Danced(DengXiaoping)", "Praised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)", "SecretaryGeneral(Mao, DengXiaoping) & VicePremier(DengXiaoping) & Opposed(DengXiaoping, AntiRightistCampaign)", "Detrimental(DengXiaoping, FranceMusicIndustry) & Following(DengXiaoping, GreatLeapForward)", "Born(MaoZedong, 1976)", "GraduallyRose(DengXiaoping, SupremePower) & After(Birth(MaoZedong))"], "conclusion": "Detrimental(x, FranceMusicIndustry) & GraduallyRose(x, SupremePower)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nPraised(DengXiaoping, ReformProgram & HongKongReversion & MacauReturn)\n                                    ^\n"}
{"timestamp": "2025-06-10T01:01:27.511592", "premises": ["Dance(DengXiaoping) & ParamountLeader(DengXiaoping)", "Praised(DengXiaoping) & ReformProgram(DengXiaoping) & ReversionOfHongKong(DengXiaoping) & ReturnOfMacau(DengXiaoping)", "SecretaryGeneralUnderMao(DengXiaoping) & VicePremier(DengXiaoping) & AntiRightistCampaign(DengXiaoping) & LaunchedByMao(DengXiaoping)", "DetrimentalToFrancesMusicIndustry(DengXiaoping) & FollowsGreatLeapForward(DengXiaoping)", "BornIn1976(MaoZedong)", "GraduallyRoseToSupremePower(DengXiaoping)"], "conclusion": "DetrimentalToFrancesMusicIndustry(?x) & GraduallyRoseToSupremePower(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (DetrimentalToFrancesMusicIndustry(%%START ERROR%%?x%%END ERROR%%) & GraduallyRoseToSupremePower(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    (DetrimentalToFrancesMusicIndustry(%%START ERROR%%?x%%END ERROR%%) & GraduallyRoseToSupremePower(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T01:01:27.511487", "premises": ["Danced(DengXiaoping, ParamountLeaderOf(ChinesePeopleRepublic))", "Praised(DengXiaoping, ReformProgram) & Praised(DengXiaoping, HongKongReversion) & Praised(DengXiaoping, MacauReturn)", "Opposed(DengXiaoping, AntiRightistCampaign) & SecretaryGeneral(DengXiaoping, PartyUnderMao) & VicePremier(DengXiaoping, 1950s)", "Detrimental(DengXiaoping, FrancesMusicIndustry) & Follows(GreatLeapForward, Detrimental(DengXiaoping, FrancesMusicIndustry))", "BornIn(MaoZedong, 1976)", "After(BornIn(MaoZedong, 1976), GraduallyRoseToPower(DengXiaoping))"], "conclusion": "Detrimental(x, FrancesMusicIndustry) & GraduallyRoseToPower(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2, BornIn/2, GraduallyRoseToPower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2, BornIn/2, GraduallyRoseToPower/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Detrimental/2, BornIn/2, GraduallyRoseToPower/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Detrimental/2, BornIn/2, GraduallyRoseToPower/1\n"}
{"timestamp": "2025-06-10T01:02:28.040938", "premises": ["all x. (Robot(x) -> IntangibleBenefitsForSleep(x))", "(SleepsRegularly(x) | SleepsAsNeeded(x))", "exists x. (Robot(x) & Trained(x))", "(SleepsInGroups(x) | SleepsIndividually(x))", "all x. (EnvironmentalRobot(x) -> PreventsEnvironmentalManagement(x))", "(SleepsInGroupsInNaturalDisasterResponse() & SleepsAsNeededInNaturalDisasterResponse())"], "conclusion": "(SleepsInGroupsInNaturalDisasterResponse() & SleepsAsNeededInNaturalDisasterResponse() -> IntangibleBenefitsForSleep())", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\n(SleepsInGroupsInNaturalDisasterResponse() & SleepsAsNeededInNaturalDisasterResponse() -> IntangibleBenefitsForSleep())\n                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\n(SleepsInGroupsInNaturalDisasterResponse() & SleepsAsNeededInNaturalDisasterResponse() -> IntangibleBenefitsForSleep())\n                                         ^\n"}
{"timestamp": "2025-06-10T01:02:28.059167", "premises": ["all x. (Robot(x) -> IntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (RegularlySleep(x) | AsNeededSleep(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (SleepInGroups(x) | SleepIndividually(x)))", "all x. (EnvironmentalRobot(x) -> Prevent(x, EnvironmentalManagementOrConservation))", "ParticipatingInNaturalDisasterResponse(-) & (SleepInGroups(-) & AsNeededSleep(-))"], "conclusion": "(SleepInGroups(x) & AsNeededSleep(x) & ParticipatingInNaturalDisasterResponse(x)) -> IntangibleBenefitsForSleep(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nParticipatingInNaturalDisasterResponse(-) & (SleepInGroups(-) & AsNeededSleep(-))\n                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nParticipatingInNaturalDisasterResponse(-) & (SleepInGroups(-) & AsNeededSleep(-))\n                                        ^\n"}
{"timestamp": "2025-06-10T01:02:28.080635", "premises": ["all x. (Robot(x) -> IntangibleBenefitsForSleep(x))", "all x. (Robot(x) -> (RegularSleep(x) | AsNeededSleep(x)))", "exists x. (Robot(x) & Trained(x))", "all x. (Robot(x) -> (GroupSleep(x) | IndividualSleep(x)))", "all x. (EnvironmentalRobot(x) -> Prevent(x, EnvironmentalManagement) | Prevent(x, Conservation))", "ParticipatingInNaturalDisasterResponse() & (GroupSleep() & AsNeededSleep())"], "conclusion": "all x. (ParticipatingInNaturalDisasterResponse(x) -> IntangibleBenefitsForSleep(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ')'.  Expression expected.\nParticipatingInNaturalDisasterResponse() & (GroupSleep() & AsNeededSleep())\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 352, in handle_variable\n    accum, self.process_next_expression(APP)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 293, in process_next_expression\n    raise UnexpectedTokenException(\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ')'.  Expression expected.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ')'.  Expression expected.\nParticipatingInNaturalDisasterResponse() & (GroupSleep() & AsNeededSleep())\n                                       ^\n"}
{"timestamp": "2025-06-10T01:03:32.609760", "premises": ["exists x. Cat(x) & -Animal(x)"], "conclusion": "all x. Cat(x) -> Reptile(x) </PREMISES> <CONCLUSION> Some reptiles are not animals.  FOL: exists x. Reptile(x) & -Animal(x) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. Cat(x) -> Reptile(x) </PREMISES> <CONCLUSION> Some reptiles are not animals.  FOL: exists x. Reptile(x) & -Animal(x) </CONCLUSION> <EVALUATE>\n                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. Cat(x) -> Reptile(x) </PREMISES> <CONCLUSION> Some reptiles are not animals.  FOL: exists x. Reptile(x) & -Animal(x) </CONCLUSION> <EVALUATE>\n                            ^\n"}
{"timestamp": "2025-06-10T01:04:18.504167", "premises": ["(Musician(BernardaBrysonShahn) | Lithographer(BernardaBrysonShahn))", "all x. (Person(x) & From(x, Athens,Ohio) -> Athens,Ohio(x))", "all x. (Related(BernardaBrysonShahn, x) -> -BenShahn(x))", "all x. (BornIn(x, Athens,Ohio) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.  Expected token ')'.\nall x. (Person(x) & From(x, Athens,Ohio) -> Athens,Ohio(x))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.  Expected token ')'.\nall x. (Person(x) & From(x, Athens,Ohio) -> Athens,Ohio(x))\n                                                  ^\n"}
{"timestamp": "2025-06-10T01:04:18.517079", "premises": ["BernardaBrysonShahn(x) -> Musician(x) & Lithographer(x)", "BornInAthensOhio(BernardaBrysonShahn)", "-RelatedTo(BernardaBrysonShahn, BenShahn)", "all x. (BornInAthensOhio(x) -> Martian(x))"], "conclusion": "Martian(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-06-10T01:05:02.505818", "premises": ["all x. Trilogy(x) <-> exists y. FourDistinctWorks(y) & MadeUp(x, y)", "exists y. FourDistinctWorks(y) & MadeUp(HarryPotterSeries, y)", "exists y. FourDistinctWorks(y) & MadeUp(ChroniclesOfNarnia, y)"], "conclusion": "Trilogy(HarryPotterSeries)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'exists'.  Expected token ')'.\n(> exists y. FourDistinctWorks(y) & MadeUp(x, y) -> all x. Trilogy(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'exists'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'exists'.  Expected token ')'.\n(> exists y. FourDistinctWorks(y) & MadeUp(x, y) -> all x. Trilogy(x))\n   ^\n"}
{"timestamp": "2025-06-10T01:05:02.529346", "premises": ["Definition(Trilogy, exists x. (CompoundWork(x) & NarrativeWork(x) & DistinctWorks(x, 4)))", "CompoundWork(HarryPotterSeries) & DistinctWorks(HarryPotterSeries, 4)", "CompoundWork(ChroniclesOfNarnia) & DistinctWorks(ChroniclesOfNarnia, 4)"], "conclusion": "Instance(Definition(Trilogy), HarryPotterSeries)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Definition(%%START ERROR%%Trilogy,exists x.%%END ERROR%%\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    Definition(%%START ERROR%%Trilogy,exists x.%%END ERROR%%\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T01:05:59.811398", "premises": ["Trilogy(x) \u2261 all y. all z. all w. (Component(x, y) & Component(x, z) & Component(x, w) & -Component(x, y) & -Component(x, z) & -Component(x, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Harry Potter series consists of 4 distinct works.  FOL: all y. all z. all w. (Component(HarryPotter, y) & Component(HarryPotter, z) & Component(HarryPotter, w) & -Component(HarryPotter, y) & -Component(HarryPotter, z) & -Component(HarryPotter, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia consists of 4 distinct works.  FOL: all y. all z. all w. (Component(Narnia, y) & Component(Narnia, z) & Component(Narnia, w) & -Component(Narnia, y) & -Component(Narnia, z) & -Component(Narnia, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia series of books is not Trilogy.  FOL: \u00acTrilogy(Narnia)  </PREMISES> <CONCLUSION> The Chronicles of Narnia series of books is not Trilogy. </CONCLUSION> <EVALUATE>", "Trilogy(x) \u2261 all y. all z. all w. (Component(x, y) & Component(x, z) & Component(x, w) & -Component(x, y) & -Component(x, z) & -Component(x, w) & (y \u2260 z & y \u2260 w & z \u2260 w))", "all y. all z. all w. (Component(HarryPotter, y) & Component(HarryPotter, z) & Component(HarryPotter, w) & -Component(HarryPotter, y) & -Component(HarryPotter, z) & -Component(HarryPotter, w) & (y \u2260 z & y \u2260 w & z \u2260 w))", "all y. all z. all w. (Component(Narnia, y) & Component(Narnia, z) & Component(Narnia, w) & -Component(Narnia, y) & -Component(Narnia, z) & -Component(Narnia, w) & (y \u2260 z & y \u2260 w & z \u2260 w))"], "conclusion": "\u00acTrilogy(Narnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2261'.\nTrilogy(x) \u2261 all y. all z. all w. (Component(x, y) & Component(x, z) & Component(x, w) & -Component(x, y) & -Component(x, z) & -Component(x, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Harry Potter series consists of 4 distinct works.  FOL: all y. all z. all w. (Component(HarryPotter, y) & Component(HarryPotter, z) & Component(HarryPotter, w) & -Component(HarryPotter, y) & -Component(HarryPotter, z) & -Component(HarryPotter, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia consists of 4 distinct works.  FOL: all y. all z. all w. (Component(Narnia, y) & Component(Narnia, z) & Component(Narnia, w) & -Component(Narnia, y) & -Component(Narnia, z) & -Component(Narnia, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia series of books is not Trilogy.  FOL: \u00acTrilogy(Narnia)  </PREMISES> <CONCLUSION> The Chronicles of Narnia series of books is not Trilogy. </CONCLUSION> <EVALUATE>\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2261'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2261'.\nTrilogy(x) \u2261 all y. all z. all w. (Component(x, y) & Component(x, z) & Component(x, w) & -Component(x, y) & -Component(x, z) & -Component(x, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Harry Potter series consists of 4 distinct works.  FOL: all y. all z. all w. (Component(HarryPotter, y) & Component(HarryPotter, z) & Component(HarryPotter, w) & -Component(HarryPotter, y) & -Component(HarryPotter, z) & -Component(HarryPotter, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia consists of 4 distinct works.  FOL: all y. all z. all w. (Component(Narnia, y) & Component(Narnia, z) & Component(Narnia, w) & -Component(Narnia, y) & -Component(Narnia, z) & -Component(Narnia, w) & (y \u2260 z & y \u2260 w & z \u2260 w))  The Chronicles of Narnia series of books is not Trilogy.  FOL: \u00acTrilogy(Narnia)  </PREMISES> <CONCLUSION> The Chronicles of Narnia series of books is not Trilogy. </CONCLUSION> <EVALUATE>\n           ^\n"}
{"timestamp": "2025-06-10T01:05:59.820936", "premises": ["all x. (Trilogy(x) -> FourDistinctWorks(x))", "FourDistinctWorks(HarryPotterSeries)", "FourDistinctWorks(ChroniclesOfNarnia)"], "conclusion": "- (Trilogy(ChroniclesOfNarnia) -> FourDistinctWorks(ChroniclesOfNarnia)) FOL: ~ Trilogy(ChroniclesOfNarnia) | ~ FourDistinctWorks(ChroniclesOfNarnia) FOL: ~ Trilogy(ChroniclesOfNarnia) | - FourDistinctWorks(ChroniclesOfNarnia)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n- (Trilogy(ChroniclesOfNarnia) -> FourDistinctWorks(ChroniclesOfNarnia)) FOL: ~ Trilogy(ChroniclesOfNarnia) | ~ FourDistinctWorks(ChroniclesOfNarnia) FOL: ~ Trilogy(ChroniclesOfNarnia) | - FourDistinctWorks(ChroniclesOfNarnia)\n                                                                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n- (Trilogy(ChroniclesOfNarnia) -> FourDistinctWorks(ChroniclesOfNarnia)) FOL: ~ Trilogy(ChroniclesOfNarnia) | ~ FourDistinctWorks(ChroniclesOfNarnia) FOL: ~ Trilogy(ChroniclesOfNarnia) | - FourDistinctWorks(ChroniclesOfNarnia)\n                                                                         ^\n"}
{"timestamp": "2025-06-10T01:05:59.819785", "premises": ["all x. (Trilogy(x) -> (Work(x) & NumberOfWork(x, 4) & Distinct(x)))", "all x. (HarryPotter(x) -> (Work(x) & NumberOfWork(x, 4) & Distinct(x)))", "all x. (Narnia(x) -> (Work(x) & NumberOfWork(x, 4) & Distinct(x)))"], "conclusion": "-Trilogy(Narnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Narnia/1, Narnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Narnia/1, Narnia/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Narnia/1, Narnia/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Narnia/1, Narnia/0\n"}
{"timestamp": "2025-06-10T01:05:59.821903", "premises": ["all x. all y. all z. all w. (Trilogy(x) & Distinct(y, z, w) & x = y & x = z & x = w -> x = y & z & w)", "HarryPotter = x & all y. all z. all w. (Distinct(x, y, z, w) & x = y & x = z & x = w)", "Narnia = x & all y. all z. all w. (Distinct(x, y, z, w) & x = y & x = z & x = w)"], "conclusion": "-Trilogy(Narnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: z, w.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: z, w", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols cannot be used as atomic formulas, because they are variables: z, w.\n\n\nFatal error:  The following symbols cannot be used as atomic formulas, because they are variables: z, w\n"}
{"timestamp": "2025-06-10T01:05:59.839086", "premises": ["HasComponents(Trilogy, 4)", "HasComponents(HarryPotterSeries, 4)", "HasComponents(ChroniclesOfNarnia, 4)"], "conclusion": "HasComponents(ChroniclesOfNarnia, 4) & -Trilogy(ChroniclesOfNarnia)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Trilogy/1, Trilogy/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Trilogy/1, Trilogy/0\n"}
{"timestamp": "2025-06-10T01:06:46.539295", "premises": ["Animal(Tora)", "all x. (Animal(x) -> Software(x))", "((Expensive(x) & -Complex(x)) | (-Expensive(x) & Complex(x)))", "-ComplexSoftware(x) -> -UnderOpenGeneralPublicLicense(x)", "UnderOpenGeneralPublicLicense(Tora)"], "conclusion": "-UnderOpenGeneralPublicLicense(Tora) -> Expensive(Tora) FOL: Expensive(Tora)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-UnderOpenGeneralPublicLicense(Tora) -> Expensive(Tora) FOL: Expensive(Tora)\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-UnderOpenGeneralPublicLicense(Tora) -> Expensive(Tora) FOL: Expensive(Tora)\n                                                        ^\n"}
{"timestamp": "2025-06-10T01:06:46.552907", "premises": ["Animal(Tora)", "all x. (Animal(x) -> Software(x))", "(Expensive(Software) & -Complex(Software)) | (-Expensive(Software) & Complex(Software))", "-Complex(Software) -> -UnderOpenGeneralPublicLicense(Software)", "UnderOpenGeneralPublicLicense(Tora)"], "conclusion": "Expensive(Software)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Software/1, Software/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Software/1, Software/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Software/1, Software/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Software/1, Software/0\n"}
{"timestamp": "2025-06-10T01:08:27.595958", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow) & In(HambletonDistrict, AinderbyQuernhow)", "In(NorthMars, HambletonDistrict)", "In(Mars, NorthMars)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(z, x))"], "conclusion": "\u00acexists x. (CivilParish(x) & In(x, Mars))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\n\u00acexists x. (CivilParish(x) & In(x, Mars))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\n\u00acexists x. (CivilParish(x) & In(x, Mars))\n        ^\n"}
{"timestamp": "2025-06-10T01:08:27.596582", "premises": ["City(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & InDistrict(Ainderby Quernhow, Hambleton District)", "In(North Mars, Hambleton District)", "On(Mars, North Mars)", "(In(B, C) & In(A, B)) -> In(A, C)"], "conclusion": "-exists x. CivilParish(x) & On(Mars, x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Quernhow'.  Expected token ')'.\nCity(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & InDistrict(Ainderby Quernhow, Hambleton District)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Quernhow'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Quernhow'.  Expected token ')'.\nCity(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & InDistrict(Ainderby Quernhow, Hambleton District)\n              ^\n"}
{"timestamp": "2025-06-10T01:08:27.595347", "premises": ["City(AinderbyQuernhow) & CivilParish(AinderbyQuernhow)", "LocatedIn(HambletonDistrict, NorthMars)", "LocatedOn(NorthMars, Mars)"], "conclusion": "LocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish on Mars.  FOL: -exists x. CivilParish(x) & LocatedOn(x, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nLocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish on Mars.  FOL: -exists x. CivilParish(x) & LocatedOn(x, Mars)\n                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nLocatedIn(A, B) & LocatedIn(B, C) -> LocatedIn(A, C) </PREMISES> <CONCLUSION> There is no civil parish on Mars.  FOL: -exists x. CivilParish(x) & LocatedOn(x, Mars)\n                                                     ^\n"}
{"timestamp": "2025-06-10T01:08:27.631535", "premises": ["City(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, Ainderby Quernhow)", "In(NorthMars, HambletonDistrict)", "In(Mars, NorthMars)", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-exists x. (In(x, Mars) & CivilParish(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Quernhow'.  Expected token ')'.\nCity(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, Ainderby Quernhow)\n              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Quernhow'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Quernhow'.  Expected token ')'.\nCity(Ainderby Quernhow) & CivilParish(Ainderby Quernhow) & In(HambletonDistrict, Ainderby Quernhow)\n              ^\n"}
{"timestamp": "2025-06-10T01:09:26.502447", "premises": ["all x. (DouglasAdams(x) & Cat(x) -> Created(TheSalmonOfDoubt, x))", "UtilizesLifeExperiencesAndTechnology(TheSalmonOfDoubt)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> CreatesInnovativeIdeas(x))", "exists x. (ContainsInnovativeIdeas(x) & UtilizesTechnology(x))"], "conclusion": "Painter(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0\n"}
{"timestamp": "2025-06-10T01:09:26.504025", "premises": ["all x. (DouglasAdams(x) -> Cat(x) & CreatedTheSalmonOfDoubt(x))", "all x. (TheSalmonOfDoubt(x) -> UtilizesLifeExperiences(x) & UtilizesTechnology(x))", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> CreateInnovativeIdeas(x))", "exists x. ((ContainsInnovativeIdeas(x) & UtilizesTechnology(x)) & Book(x))", "CreatedTheSalmonOfDoubt(DouglasAdams)"], "conclusion": "Painter(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0\n"}
{"timestamp": "2025-06-10T01:09:26.515015", "premises": ["all x. (DouglasAdams(x) -> Cat(x) & CreatedBy(x, TheSalmonOfDoubt))", "UtilizesLifeExperiences(TheSalmonOfDoubt) & UtilizesTechnology(TheSalmonOfDoubt)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> CreateInnovativeIdeas(x))", "exists x. (Book(x) & ContainsInnovativeIdeas(x) & UtilizesTechnology(x))"], "conclusion": "Painter(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0\n"}
{"timestamp": "2025-06-10T01:09:26.522393", "premises": ["all x. (DouglasAdams(x) -> Cat(x) & Created(TheSalmonOfDoubt, x))", "UtilizesLifeExperiences(TheSalmonOfDoubt) & UtilizesTechnology(TheSalmonOfDoubt)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> CreatesInnovativeIdeas(x))", "exists x. (ContainsInnovativeIdeas(x) & UtilizesTechnology(x))"], "conclusion": "Painter(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0\n"}
{"timestamp": "2025-06-10T01:10:18.805838", "premises": ["DouglasAdams(DouglasAdams) & (Cat(DouglasAdams) & Destroy(TheSalmonOfDoubt, DouglasAdams))", "UtilizeLifeExperiences(TheSalmonOfDoubt) & UtilizeTechnology(TheSalmonOfDoubt)", "all x. (Cat(x) -> Painter(x))", "all x. (Painter(x) -> DestroyInnovativeIdeas(x))", "exists x. (Book(x) & ContainInnovativeIdeas(x) & UtilizeTechnology(x))"], "conclusion": "DestroyInnovativeIdeas(DouglasAdams)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DouglasAdams/1, DouglasAdams/0\n"}
{"timestamp": "2025-06-10T01:11:06.222274", "premises": ["Scientist(DonaldErvinKnuth) & From(DonaldErvinKnuth, China)", "Called(Knuth, \"enemy of the analysis of algorithms\")"], "conclusion": "all x. (From(x, China) & Scientist(x) -> Called(x, \"enemy of the analysis of algorithms\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nall x. (From(x, China) & Scientist(x) -> Called(x, \"enemy of the analysis of algorithms\"))\n                                                          ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nall x. (From(x, China) & Scientist(x) -> Called(x, \"enemy of the analysis of algorithms\"))\n                                                          ^\n"}
{"timestamp": "2025-06-10T01:11:06.227060", "premises": ["Chinese(Knuth)"], "conclusion": "EnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & Chinese(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nEnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & Chinese(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nEnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Scientist(x) & Chinese(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                   ^\n"}
{"timestamp": "2025-06-10T01:11:06.230065", "premises": ["Chinese(Knuth) & Scientist(Knuth) & Mathematician(Knuth)", "Called(Knuth, \"enemy of the analysis of algorithms\") </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: Scientist(x) & Chinese(x) & Called(x, \"enemy of the analysis of algorithms\") </CONCLUSION> <EVALUATE>", "Scientist(Knuth) & Chinese(Knuth) & Called(Knuth, \"enemy of the analysis of algorithms\")"], "conclusion": "exists x. (Scientist(x) & Chinese(x) & Called(x, \"enemy of the analysis of algorithms\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nexists x. (Scientist(x) & Chinese(x) & Called(x, \"enemy of the analysis of algorithms\"))\n                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nexists x. (Scientist(x) & Chinese(x) & Called(x, \"enemy of the analysis of algorithms\"))\n                                                        ^\n"}
{"timestamp": "2025-06-10T01:11:06.235979", "premises": ["Chinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAtStanfordUniversity(DonaldErvinKnuth) Knuth has been called the \"enemy of the analysis of algorithms.\"  FOL: EnemyOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Chinese(x) & Scientist(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "Chinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAtStanfordUniversity(DonaldErvinKnuth)", "EnemyOfAnalysisOfAlgorithms(DonaldErvinKnuth)"], "conclusion": "exists x. (Chinese(x) & Scientist(x) & EnemyOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Knuth'.\nChinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAtStanfordUniversity(DonaldErvinKnuth) Knuth has been called the \"enemy of the analysis of algorithms.\"  FOL: EnemyOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Chinese(x) & Scientist(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                                                                                                                                            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Knuth'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Knuth'.\nChinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAtStanfordUniversity(DonaldErvinKnuth) Knuth has been called the \"enemy of the analysis of algorithms.\"  FOL: EnemyOfAnalysisOfAlgorithms(DonaldErvinKnuth) </PREMISES> <CONCLUSION> A Chinese scientist has been called the \"enemy of the analysis of algorithms\".  FOL: exists x. (Chinese(x) & Scientist(x) & EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                                                                                                                                            ^\n"}
{"timestamp": "2025-06-10T01:11:06.243565", "premises": ["ChineseScientist(DonaldKnuth)", "EnemyOfTheAnalysisOfAlgorithms(DonaldKnuth)"], "conclusion": "exists x. (ChineseScientist(x) & EnemyOfTheAnalysisOfAlgorithms(x))  Based on the above FOL expressions, we can see that the conclusion indeed follows from the premises. The existence of Donald Knuth as a Chinese scientist who has been called the \"enemy of the analysis of algorithms\" is sufficient to establish that there is at least one Chinese scientist who has been called that.   The final answer is:", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Based'.\nexists x. (ChineseScientist(x) & EnemyOfTheAnalysisOfAlgorithms(x))  Based on the above FOL expressions, we can see that the conclusion indeed follows from the premises. The existence of Donald Knuth as a Chinese scientist who has been called the \"enemy of the analysis of algorithms\" is sufficient to establish that there is at least one Chinese scientist who has been called that.   The final answer is:\n                                                                     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Based'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Based'.\nexists x. (ChineseScientist(x) & EnemyOfTheAnalysisOfAlgorithms(x))  Based on the above FOL expressions, we can see that the conclusion indeed follows from the premises. The existence of Donald Knuth as a Chinese scientist who has been called the \"enemy of the analysis of algorithms\" is sufficient to establish that there is at least one Chinese scientist who has been called that.   The final answer is:\n                                                                     ^\n"}
{"timestamp": "2025-06-10T01:11:06.244058", "premises": ["DonaldErvinKnuth(DonaldErvinKnuth) & Chinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAtStanfordUniversity(DonaldErvinKnuth)", "EnemyOfTheAnalysisOfAlgorithms(Knuth)"], "conclusion": "exists x. (Chinese(x) & Scientist(x) & EnemyOfTheAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: DonaldErvinKnuth/1, DonaldErvinKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DonaldErvinKnuth/1, DonaldErvinKnuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: DonaldErvinKnuth/1, DonaldErvinKnuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: DonaldErvinKnuth/1, DonaldErvinKnuth/0\n"}
{"timestamp": "2025-06-10T01:11:51.440643", "premises": ["ComputerScientist(DonaldErvinKnuth) & Mathematician(DonaldErvinKnuth) & ProfessorEmeritusAt(DonaldErvinKnuth, StanfordUniversity) & Chinese(DonaldErvinKnuth)", "Called(Knuth, \"enemy of the analysis of algorithms\")"], "conclusion": "exists x. (Mathematician(x) & Called(x, \"enemy of the analysis of algorithms\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nexists x. (Mathematician(x) & Called(x, \"enemy of the analysis of algorithms\"))\n                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nexists x. (Mathematician(x) & Called(x, \"enemy of the analysis of algorithms\"))\n                                               ^\n"}
{"timestamp": "2025-06-10T01:11:51.456757", "premises": ["Mathematician(DonaldErvinKnuth) & Chinese(DonaldErvinKnuth) & ComputerScientist(DonaldErvinKnuth) & ProfessorEmeritus(DonaldErvinKnuth, StanfordUniversity)", "Nicknamed(DonaldErvinKnuth, \"enemy of the analysis of algorithms\")"], "conclusion": "exists x. (Mathematician(x) & Nicknamed(x, \"enemy of the analysis of algorithms\"))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'of'.  Expected token ')'.\nexists x. (Mathematician(x) & Nicknamed(x, \"enemy of the analysis of algorithms\"))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'of'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'of'.  Expected token ')'.\nexists x. (Mathematician(x) & Nicknamed(x, \"enemy of the analysis of algorithms\"))\n                                                  ^\n"}
{"timestamp": "2025-06-10T01:11:51.462338", "premises": ["Chinese(Knuth) & ComputerScientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritusAt(Knuth, StanfordUniversity)", "EnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"enemy of the analysis of algorithms\".  FOL: all x. (Mathematician(x) -> EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>", "Chinese(Knuth) & ComputerScientist(Knuth) & Mathematician(Knuth) & ProfessorEmeritusAt(Knuth, StanfordUniversity)", "EnemyOfAnalysisOfAlgorithms(Knuth)"], "conclusion": "all x. (Mathematician(x) -> EnemyOfAnalysisOfAlgorithms(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nEnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"enemy of the analysis of algorithms\".  FOL: all x. (Mathematician(x) -> EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nEnemyOfAnalysisOfAlgorithms(Knuth) </PREMISES> <CONCLUSION> A mathematician has been called the \"enemy of the analysis of algorithms\".  FOL: all x. (Mathematician(x) -> EnemyOfAnalysisOfAlgorithms(x)) </CONCLUSION> <EVALUATE>\n                                   ^\n"}
{"timestamp": "2025-06-10T01:11:51.463720", "premises": ["Knuth(Individual1) & Chinese(Individual1) & ComputerScientist(Individual1) & Mathematician(Individual1) & ProfessorEmeritus(Individual1, StanfordUniversity)", "Called(Knuth, EnemyOfTheAnalysisOfAlgorithms)"], "conclusion": "exists x. (Mathematician(x) & Called(x, EnemyOfTheAnalysisOfAlgorithms))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Knuth/1, Knuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Knuth/1, Knuth/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Knuth/1, Knuth/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Knuth/1, Knuth/0\n"}
{"timestamp": "2025-06-10T01:12:43.860473", "premises": ["Painting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)", "PeakedAtNo1(\"Your Woman\", UKPaintingsChart)", "all x. all y. (PeakedAtNo1(x, y) -> ExtremelyPopular(x))", "PeakedAtNo1(\"Your Woman\", IcelandPaintingsChart) & PeakedAtNo1(\"Your Woman\", IsraelPaintingsChart) & PeakedAtNo1(\"Your Woman\", SpainPaintingsChart)"], "conclusion": "-exists x. (Painting(x) & Artist(x, WhiteTown) & ExtremelyPopular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)\n               ^\n"}
{"timestamp": "2025-06-10T01:12:43.862264", "premises": ["Painting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)", "ChartPeak(\"Your Woman\", UKPaintingsChart, 1)", "all x. all y. (Painting(x) & ChartPeak(x, y, 1) -> Popular(x))", "ChartPeak(\"Your Woman\", IcelandPaintingsChart, 1) & ChartPeak(\"Your Woman\", IsraelPaintingsChart, 1) & ChartPeak(\"Your Woman\", SpainPaintingsChart, 1)"], "conclusion": "-exists x. (Painting(x) & Artist(x, WhiteTown) & Popular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & Artist(\"Your Woman\", WhiteTown)\n               ^\n"}
{"timestamp": "2025-06-10T01:12:43.861004", "premises": ["Painting(\"Your Woman\") & By(WhiteTown, \"Your Woman\")", "PeakedAtNo1(\"Your Woman\", UKPaintingsChart)", "all x. (Painting(x) & PeakedAtNo1(x, y) -> Popular(x))", "PeakedAtNo1(\"Your Woman\", IcelandPaintingsChart) & PeakedAtNo1(\"Your Woman\", IsraelPaintingsChart) & PeakedAtNo1(\"Your Woman\", SpainPaintingsChart)"], "conclusion": "-exists x. (Painting(x) & By(WhiteTown, x) & Popular(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & By(WhiteTown, \"Your Woman\")\n               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Woman\"'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Woman\"'.  Expected token ')'.\nPainting(\"Your Woman\") & By(WhiteTown, \"Your Woman\")\n               ^\n"}
{"timestamp": "2025-06-10T01:12:43.866051", "premises": ["Painting(YourWoman) & Artist(WhiteTown, YourWoman)", "PeakedAtNo1(YourWoman, UKPaintingsChart)", "all x. all y. (PeakedAtNo1(x, y) -> Popular(x))", "PeakedAtNo1(YourWoman, IcelandicChart) & PeakedAtNo1(YourWoman, IsraelPaintingsChart) & PeakedAtNo1(YourWoman, SpanishChart)"], "conclusion": "-Popular(Painting(WhiteTown))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Painting/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Painting/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Painting/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Painting/1\n"}
{"timestamp": "2025-06-10T01:13:57.708716", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y, RegularTime) & SamePoints(x, y, ExtraTime) -> VictoryShootOut(x, y))", "SamePoints(1990UCLSemifinal, Atl\u00e9ticoMadrid, RegularTime) & SamePoints(1990UCLSemifinal, RealMadrid, RegularTime)", "SamePoints(1990UCLSemifinal, Atl\u00e9ticoMadrid, ExtraTime) & SamePoints(1990UCLSemifinal, RealMadrid, ExtraTime)"], "conclusion": "ExtraTime(1990UCLSemifinal, Atl\u00e9ticoMadrid, RealMadrid) & VictoryShootOut(1990UCLSemifinal, Atl\u00e9ticoMadrid, RealMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 629: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.708840", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, y, UclSemifinal, RegularTime) & -ScoreDiff(x, y, UclSemifinal, RegularTime) -> ExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & Score(x, y, UclSemifinal, RegularTime) & Score(x, y, UclSemifinal, ExtraTime) & -ScoreDiff(x, y, UclSemifinal, RegularTime) & -ScoreDiff(x, y, UclSemifinal, ExtraTime) -> VictoryShootOut(x, y))", "Score(RealMadrid, AtleticoMadrid, UclSemifinal1990, RegularTime) & Score(AtleticoMadrid, RealMadrid, UclSemifinal1990, RegularTime)", "Score(RealMadrid, AtleticoMadrid, UclSemifinal1990, ExtraTime) & Score(AtleticoMadrid, RealMadrid, UclSemifinal1990, ExtraTime)"], "conclusion": "VictoryShootOut(RealMadrid, AtleticoMadrid)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/2, ExtraTime/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/2, ExtraTime/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ExtraTime/2, ExtraTime/0.\n\n\nFatal error:  The following symbols are used with multiple arities: ExtraTime/2, ExtraTime/0\n"}
{"timestamp": "2025-06-10T01:13:57.707552", "premises": ["(ScoreSamePointsInRegularTime(x, y) -> NeedToPlayExtraTime(x, y))", "(ScoreSamePointsInRegularAndExtraTime(x, y) -> NeedToPlayVictoryShootOut(x, y))", "ScoreSamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedToPlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.703859", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & TiePoints(x, y) & InRegularTime(x) -> InExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & TiePoints(x, y) & InRegularTime(x) & InExtraTime(x, y) -> VictoryShootOut(x, y))", "TiePoints(RealMadrid, Atl\u00e9ticoMadrid) & InRegularTime(1990UCLSemifinal)", "TiePoints(RealMadrid, Atl\u00e9ticoMadrid) & InExtraTime(1990UCLSemifinal)"], "conclusion": "VictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.710538", "premises": ["all x. all y. (ScoreSamePointsInRegularTime(x, y) -> NeedToPlayExtraTime(x, y))", "all x. all y. (ScoreSamePointsInRegularAndExtraTime(x, y) -> NeedToPlayVictoryShootout(x, y))", "ScoreSamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.728682", "premises": ["all x. all y. all p. (ScoreSamePoints(x, y, p, UCLSemifinal, RegularTime) -> NeedExtraTime(x, y))", "all x. all y. all p. (ScoreSamePoints(x, y, p, UCLSemifinal, RegularTime) & ScoreSamePoints(x, y, p, UCLSemifinal, ExtraTime) -> NeedVictoryShootOut(x, y))", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, 1, UCLSemifinal, 1990, RegularTime)", "ScoreSamePoints(RealMadrid, Atl\u00e9ticoMadrid, 0, UCLSemifinal, 1990, ExtraTime)"], "conclusion": "NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 627: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.731878", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePointsInRegularTime(x, y) -> NeedPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePointsInRegularAndExtraTime(x, y) -> NeedPlayVictoryShootout(x, y))", "SamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.732114", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y, RegularTime) & SamePoints(x, y, ExtraTime) -> VictoryShootout(x, y))", "SamePoints(RealMadrid, Atl\u00e9ticoMadrid, RegularTime, 1990UCLSemifinal)", "SamePoints(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime, 1990UCLSemifinal)"], "conclusion": "VictoryShootout(RealMadrid, Atl\u00e9ticoMadrid, 1990UCLSemifinal)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 622: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:13:57.732511", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScoreAtRegularTime(x, y) -> NeedToPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScoreAtRegularAndExtraTime(x, y) -> NeedToPlayVictoryShootOut(x, y))", "SameScoreAtRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SameScoreAtRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "NeedToPlayVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 634: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 634: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.958920", "premises": ["all x. all y. (ScoreSame(x, y, RegularTime) -> ExtraTime(x, y))", "all x. all y. (ScoreSame(x, y, RegularTime) & ScoreSame(x, y, ExtraTime) -> VictoryShootOut(x, y))", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, RegularTime)", "ScoreSame(RealMadrid, Atl\u00e9ticoMadrid, ExtraTime)"], "conclusion": "-VictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.961121", "premises": ["all x. all y. (SamePointsDuringRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (SamePointsDuringRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "SamePointsDuringRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SamePointsDuringRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.961031", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePointsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePointsInRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "SamePointsInRegularTime(RealMadrid1990, Atl\u00e9ticoMadrid1990)", "SamePointsInRegularAndExtraTime(RealMadrid1990, Atl\u00e9ticoMadrid1990)"], "conclusion": "-NeedVictoryShootOut(RealMadrid1990, Atl\u00e9ticoMadrid1990)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 639: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.961189", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScore(x, y, UCLSemifinal, RegularTime) -> NeedPlayExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SameScore(x, y, UCLSemifinal, RegularTime) & SameScore(x, y, UCLSemifinal, ExtraTime) -> NeedPlayVictoryShootout(x, y))", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, UCLSemifinal1990, RegularTime)", "SameScore(RealMadrid, Atl\u00e9ticoMadrid, UCLSemifinal1990, ExtraTime)"], "conclusion": "-NeedPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 621: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.978047", "premises": ["all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePoints(x, y) & InRegularTime -> NeedExtraTime(x, y))", "all x. all y. (SoccerTeam(x) & SoccerTeam(y) & SamePoints(x, y) & InRegularTime & InExtraTime -> NeedVictoryShootOut(x, y))", "SamePoints(RealMadrid, Atl\u00e9ticoMadrid) & InRegularTime & In(1990Semifinal, UCL)", "SamePoints(RealMadrid, Atl\u00e9ticoMadrid) & InExtraTime & In(1990Semifinal, UCL)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 624: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.978553", "premises": ["all x. all y. (ScoreSamePointsInRegularTime(x, y) -> NeedToPlayExtraTime(x, y))", "all x. all y. (ScoreSamePointsInRegularAndExtraTime(x, y) -> NeedToPlayVictoryShootout(x, y))", "ScoreSamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoreSamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedToPlayVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 640: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.977655", "premises": ["all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y) & RegularTime(x) & RegularTime(y) -> ExtraTime(x, y))", "all x. all y. (UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y) & RegularTime(x) & RegularTime(y) & ExtraTime(x, y) -> VictoryShootout(x, y))", "SamePoints(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) & RegularTime(1990UCLSemifinalRealMadrid) & RegularTime(1990UCLSemifinalAtleticoMadrid)", "SamePoints(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) & ExtraTime(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid)", "-VictoryShootout(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE> The conclusion is already in the form of a FOL expression, so we just need to express the premises and conclusion in the required format:", "(UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y) & RegularTime(x) & RegularTime(y)) -> (ExtraTime(x, y))", "(UCLSemifinal(x) & UCLSemifinal(y) & SamePoints(x, y) & RegularTime(x) & RegularTime(y) & ExtraTime(x, y)) -> VictoryShootout(x, y)", "SamePoints(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) & RegularTime(1990UCLSemifinalRealMadrid) & RegularTime(1990UCLSemifinalAtleticoMadrid)", "SamePoints(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) & ExtraTime(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid)"], "conclusion": "-VictoryShootout(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-VictoryShootout(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE> The conclusion is already in the form of a FOL expression, so we just need to express the premises and conclusion in the required format:\n                                                                             ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-VictoryShootout(1990UCLSemifinalRealMadrid, 1990UCLSemifinalAtleticoMadrid) </PREMISES> <CONCLUSION> </CONCLUSION> <EVALUATE> The conclusion is already in the form of a FOL expression, so we just need to express the premises and conclusion in the required format:\n                                                                             ^\n"}
{"timestamp": "2025-06-10T01:15:13.979130", "premises": ["all x. all y. (Team(x) & Team(y) & SamePointsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (Team(x) & Team(y) & SamePointsInRegularAndExtraTime(x, y) -> NeedVictoryShootOut(x, y))", "SamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "SamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootOut(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 635: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:13.981335", "premises": ["all x. all y. (ScoredSamePointsInRegularTime(x, y) -> NeedExtraTime(x, y))", "all x. all y. (ScoredSamePointsInRegularAndExtraTime(x, y) -> NeedVictoryShootout(x, y))", "ScoredSamePointsInRegularTime(RealMadrid, Atl\u00e9ticoMadrid)", "ScoredSamePointsInRegularAndExtraTime(RealMadrid, Atl\u00e9ticoMadrid)"], "conclusion": "-NeedVictoryShootout(RealMadrid, Atl\u00e9ticoMadrid)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc3 in position 641: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 641: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:15:58.471705", "premises": ["Office(Ableton, Mars)", "Office(Ableton, Venus)", "Mars \u2260 Venus", "all x. (Office(x, y1) & Office(x, y2) & y1 \u2260 y2 -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)"], "conclusion": "SmallCompany(Ableton)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.\nMars \u2260 Venus\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.\nMars \u2260 Venus\n     ^\n"}
{"timestamp": "2025-06-10T01:15:58.479385", "premises": ["OfficeOnMars(Ableton)", "OfficeOnVenus(Ableton)", "DifferentPlanets(Mars, Venus)", "all x. (OfficeOn(x, Mars) & OfficeOn(x, Venus) -> SmallCompany(x))", "DestroysMusicSoftware(Ableton)", "SmallCompany(Ableton)"], "conclusion": "OfficeOnMars(Ableton)  OfficeOnVenus(Ableton)  DifferentPlanets(Mars, Venus)  all x. (OfficeOn(x, Mars) & OfficeOn(x, Venus) -> SmallCompany(x))  DestroysMusicSoftware(Ableton)  SmallCompany(Ableton)  However, upon closer inspection, the premises do not provide sufficient information to conclude that Ableton is a small company. The premises state that Ableton has offices on Mars and Venus, but it does not mention anything about the company being small. The premise that states any company that has offices in different planets is a small company is not supported by the other premises.  Therefore, the conclusion that Ableton is a small company does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'OfficeOnVenus'.\nOfficeOnMars(Ableton)  OfficeOnVenus(Ableton)  DifferentPlanets(Mars, Venus)  all x. (OfficeOn(x, Mars) & OfficeOn(x, Venus) -> SmallCompany(x))  DestroysMusicSoftware(Ableton)  SmallCompany(Ableton)  However, upon closer inspection, the premises do not provide sufficient information to conclude that Ableton is a small company. The premises state that Ableton has offices on Mars and Venus, but it does not mention anything about the company being small. The premise that states any company that has offices in different planets is a small company is not supported by the other premises.  Therefore, the conclusion that Ableton is a small company does not follow from the premises.\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'OfficeOnVenus'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'OfficeOnVenus'.\nOfficeOnMars(Ableton)  OfficeOnVenus(Ableton)  DifferentPlanets(Mars, Venus)  all x. (OfficeOn(x, Mars) & OfficeOn(x, Venus) -> SmallCompany(x))  DestroysMusicSoftware(Ableton)  SmallCompany(Ableton)  However, upon closer inspection, the premises do not provide sufficient information to conclude that Ableton is a small company. The premises state that Ableton has offices on Mars and Venus, but it does not mention anything about the company being small. The premise that states any company that has offices in different planets is a small company is not supported by the other premises.  Therefore, the conclusion that Ableton is a small company does not follow from the premises.\n                       ^\n"}
{"timestamp": "2025-06-10T01:16:42.248252", "premises": ["Office(Ableton, Mars)", "Office(Ableton, Venus)", "Mars \u2260 Venus", "all x. (Office(x, Mars) & Office(x, Venus) -> Small(x))", "Small(Ableton)", "DestroysMusicSoftware(Ableton)"], "conclusion": "-Office(Ableton, Mars)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.\nMars \u2260 Venus\n     ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.\nMars \u2260 Venus\n     ^\n"}
{"timestamp": "2025-06-10T01:17:14.851731", "premises": ["all x. (Boring(x) -> Cool(x))", "Boring(EndOfRelationship)"], "conclusion": "Devastating(EndOfRelationship) FOL: Boring(EndOfRelationship) -> Cool(EndOfRelationship) FOL: Cool(EndOfRelationship) -> Devastating(EndOfRelationship)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nDevastating(EndOfRelationship) FOL: Boring(EndOfRelationship) -> Cool(EndOfRelationship) FOL: Cool(EndOfRelationship) -> Devastating(EndOfRelationship)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nDevastating(EndOfRelationship) FOL: Boring(EndOfRelationship) -> Cool(EndOfRelationship) FOL: Cool(EndOfRelationship) -> Devastating(EndOfRelationship)\n                               ^\n"}
{"timestamp": "2025-06-10T01:18:21.642936", "premises": ["China & -EmergingEconomy", "all x. (From(x, China) -> In(x, EuropeanUnion))", "India & -EmergingEconomy", "all x. (From(x, India) -> In(x, EuropeanUnion))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. From(x, India)"], "conclusion": "all x. (In(x, EuropeanUnion) -> -Martian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: China/0, India/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: China/0, India/0\n"}
{"timestamp": "2025-06-10T01:18:21.650580", "premises": ["all x. (China(x) -> InEuropeanUnion(x) & DecliningEconomy(x))", "all x. (From(x, China) -> InEuropeanUnion(x))", "all x. (India(x) -> InEuropeanUnion(x) & DecliningEconomy(x))", "all x. (From(x, India) -> InEuropeanUnion(x))", "all x. all y. (From(x, y) & China(y) -> BrazilianPerson(x))", "all x. all y. (From(x, y) & India(y) -> MartianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-exists x. (From(x, EuropeanUnion) & MartianPerson(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0\n"}
{"timestamp": "2025-06-10T01:18:21.650694", "premises": ["In(EuropeanUnion, China) & DecliningEconomy(China)", "all x. (From(x, China) -> In(EuropeanUnion, x))", "In(EuropeanUnion, India) & DecliningEconomy(India)", "all x. (From(x, India) -> In(EuropeanUnion, x))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "all x. (-In(EuropeanUnion, x) | -Martian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0\n"}
{"timestamp": "2025-06-10T01:18:21.676622", "premises": ["all x. (China(x) -> (InEuropeanUnion(x) & DecliningEconomy(x)))", "all x. (From(x, China) -> InEuropeanUnion(x))", "all x. (India(x) -> (InEuropeanUnion(x) & DecliningEconomy(x)))", "all x. (From(x, India) -> InEuropeanUnion(x))", "all x. all y. (From(x, y) & China(y) -> BrazilianPerson(x))", "all x. all y. (From(x, y) & India(y) -> MartianPerson(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-exists x. (From(x, EuropeanUnion) & MartianPerson(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0\n"}
{"timestamp": "2025-06-10T01:18:21.677108", "premises": ["China(EU) & DecliningEconomy(China)", "all x. (From(x, China) -> EU(x))", "India(EU) & DecliningEconomy(India)", "all x. (From(x, India) -> EU(x))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. From(x, India)"], "conclusion": "-exists x. (EU(x) & Martian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, EU/1, EU/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, EU/1, EU/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, EU/1, EU/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0, EU/1, EU/0\n"}
{"timestamp": "2025-06-10T01:18:21.677728", "premises": ["all x. (China(x) -> In(x, EuropeanUnion) & DecliningEconomy(x))", "all x. (From(x, China) -> In(x, EuropeanUnion))", "all x. (India(x) -> In(x, EuropeanUnion) & DecliningEconomy(x))", "all x. (From(x, India) -> In(x, EuropeanUnion))", "all x. all y. (From(x, y) & China(y) -> Brazilian(x))", "all x. all y. (From(x, y) & India(y) -> Martian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-exists x. exists y. (From(x, y) & In(y, EuropeanUnion) & Martian(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: India/1, India/0, China/1, China/0.\n\n\nFatal error:  The following symbols are used with multiple arities: India/1, India/0, China/1, China/0\n"}
{"timestamp": "2025-06-10T01:19:27.385382", "premises": ["(Member(EU, China) & DecliningEconomy(China))", "all x. (From(x, China) -> Member(EU, x))", "(Member(EU, India) & DecliningEconomy(India))", "all x. (From(x, India) -> Member(EU, x))", "all x. all y. (From(x, y) & China(y) -> Brazilian(x))", "all x. all y. (From(x, y) & India(y) -> Martian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-DecliningEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T01:19:27.387962", "premises": ["all x. (China(x) -> (In(x, EuropeanUnion) & DecliningEconomy(x)))", "all x. (From(x, China) -> In(x, EuropeanUnion))", "all x. (India(x) -> (In(x, EuropeanUnion) & DecliningEconomy(x)))", "all x. (From(x, India) -> In(x, EuropeanUnion))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. (From(x, India))"], "conclusion": "-DecliningEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T01:19:27.403215", "premises": ["all x. (China(x) -> InEU(x) & DecliningEconomy(x))", "all x. (From(x, China) -> InEU(x))", "all x. (India(x) -> InEU(x) & DecliningEconomy(x))", "all x. (From(x, India) -> InEU(x))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. From(x, India)"], "conclusion": "-DecliningEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T01:19:27.407567", "premises": ["all x. (China(x) -> (InEuropeanUnion(x) & DecliningEconomy(x)))", "all x. (From(x, China) -> InEuropeanUnion(x))", "all x. (India(x) -> (InEuropeanUnion(x) & DecliningEconomy(x)))", "all x. (From(x, India) -> InEuropeanUnion(x))", "all x. (From(x, China) -> Brazilian(x))", "all x. (From(x, India) -> Martian(x))", "exists x. (From(x, India))"], "conclusion": "-DecliningEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T01:19:27.414528", "premises": ["(China(x) -> InEuropeanUnion(x) & DecliningEconomy(x))", "all x. (From(x, China) -> InEuropeanUnion(x))", "(India(x) -> InEuropeanUnion(x) & DecliningEconomy(x))", "all x. (From(x, India) -> InEuropeanUnion(x))", "all x. all y. (From(x, y) & China(y) -> Brazilian(x))", "all x. all y. (From(x, y) & India(y) -> Martian(x))", "exists x. exists y. (From(x, y) & India(y))"], "conclusion": "-DecliningEconomy(India)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: China/1, China/0, India/1, India/0.\n\n\nFatal error:  The following symbols are used with multiple arities: China/1, China/0, India/1, India/0\n"}
{"timestamp": "2025-06-10T01:20:48.759975", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) <-> (BasketballPlayer(x) & EfficientUse(RightNose(x)) & EfficientUse(LeftNose(x))))", "all x. (BasketballPlayer(x) & CanScoreManyGoalsUsingLeftNose(x) -> EfficientUse(LeftNose(x)))", "all x. (BasketballPlayer(x) & CanScoreManyGoalsUsingRightNose(x) -> EfficientUse(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "EfficientUse(RightNose(CristianoRonaldo))", "CanScoreManyGoalsUsingLeftNose(CristianoRonaldo)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & EfficientUse(RightNose(x)) & EfficientUse(LeftNose(x)))) -> all x. (TopBasketballPlayer(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & EfficientUse(RightNose(x)) & EfficientUse(LeftNose(x)))) -> all x. (TopBasketballPlayer(x))\n                        ^\n"}
{"timestamp": "2025-06-10T01:20:48.760841", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) <-> BasketballPlayer(x) & RightNose(x) & LeftNose(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & CanScoreManyGoals(x, RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "CanScoreManyGoals(CristianoRonaldo, LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'BasketballPlayer'.  Expected token ')'.\n(> BasketballPlayer(x) & RightNose(x) & LeftNose(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x))) -> all x. (TopBasketballPlayer(x))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'BasketballPlayer'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'BasketballPlayer'.  Expected token ')'.\n(> BasketballPlayer(x) & RightNose(x) & LeftNose(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x))) -> all x. (TopBasketballPlayer(x))\n   ^\n"}
{"timestamp": "2025-06-10T01:20:48.779046", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> BasketballPlayer(x) & VeryEfficiently(RightNose(x)) & VeryEfficiently(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(LeftNose(x)) -> VeryEfficiently(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(RightNose(x)) -> VeryEfficiently(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficiently(RightNose(CristianoRonaldo))", "ManyGoals(LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1\n"}
{"timestamp": "2025-06-10T01:20:48.770551", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x))))", "all x. (BasketballPlayer(x) & ScoreManyGoals(x, LeftNose) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ScoreManyGoals(x, RightNose) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ScoreManyGoals(CristianoRonaldo, LeftNose)"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: RightNose/1, LeftNose/1\n"}
{"timestamp": "2025-06-10T01:20:48.783004", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) <-> (BasketballPlayer(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x))))", "all x. (BasketballPlayer(x) & ScoreManyGoals(x, LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ScoreManyGoals(x, RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ScoreManyGoals(CristianoRonaldo, LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x)))) -> all x. (TopBasketballPlayer(x))\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\n(> (BasketballPlayer(x) & VeryEfficient(RightNose(x)) & VeryEfficient(LeftNose(x)))) -> all x. (TopBasketballPlayer(x))\n                        ^\n"}
{"timestamp": "2025-06-10T01:20:48.772493", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & VeryEfficient(x, LeftNose(x)) & VeryEfficient(x, RightNose(x))))", "all x. (BasketballPlayer(x) & ManyGoals(x, LeftNose(x)) -> VeryEfficient(x, LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(x, RightNose(x)) -> VeryEfficient(x, RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(CristianoRonaldo, RightNose(CristianoRonaldo))", "ManyGoals(CristianoRonaldo, LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-06-10T01:20:48.790338", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> BasketballPlayer(x) & VeryEfficient(LeftNose(x)) & VeryEfficient(RightNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ManyGoals(LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-06-10T01:20:48.792894", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & (VeryEfficient(LeftNose(x)) & VeryEfficient(RightNose(x)))))", "all x. (BasketballPlayer(x) & ManyGoals(LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ManyGoals(LeftNose(CristianoRonaldo))"], "conclusion": "TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-06-10T01:22:05.120460", "premises": ["all x. (BasketballPlayer(x) -> RightNose(x) & LeftNose(x))", "all x. (TopBasketballPlayer(x) -> BasketballPlayer(x) & VeryEfficient(LeftNose(x)) & VeryEfficient(RightNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ManyGoals(LeftNose(CristianoRonaldo))"], "conclusion": "-TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-06-10T01:22:05.126429", "premises": ["all x. (BasketballPlayer(x) -> (RightNose(x) & LeftNose(x)))", "all x. (TopBasketballPlayer(x) -> (BasketballPlayer(x) & VeryEfficient(LeftNose(x)) & VeryEfficient(RightNose(x))))", "all x. (BasketballPlayer(x) & ManyGoals(LeftNose(x)) -> VeryEfficient(LeftNose(x)))", "all x. (BasketballPlayer(x) & ManyGoals(RightNose(x)) -> VeryEfficient(RightNose(x)))", "BasketballPlayer(CristianoRonaldo)", "VeryEfficient(RightNose(CristianoRonaldo))", "ManyGoals(LeftNose(CristianoRonaldo))"], "conclusion": "-TopBasketballPlayer(CristianoRonaldo)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: LeftNose/1, RightNose/1\n"}
{"timestamp": "2025-06-10T01:23:01.161690", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Museum) | ForDestruction(Museum))", "ForDestruction(Hatchery) -> MayReleaseIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0\n"}
{"timestamp": "2025-06-10T01:23:01.164869", "premises": ["Museum(NationalLobsterHatchery) & In(Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "ForProfit(Museum(x)) | ForDestruction(Museum(x))", "ForDestruction(Hatchery(x)) -> MightReleaseIntoWild(Hatchery(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Museum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Museum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Museum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Museum/1\n"}
{"timestamp": "2025-06-10T01:23:01.177176", "premises": ["Museum(NationalLobsterHatchery) & In(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Museum) & -ForDestruction(Museum)) | (-ForProfit(Museum) & ForDestruction(Museum))", "ForDestruction(Hatchery) -> MightReleaseAnimalsIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0\n"}
{"timestamp": "2025-06-10T01:23:01.178142", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(Padstow, England) & LocatedIn(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "ForProfit(Museum(x)) | ForDestruction(Museum(x))", "ForDestruction(Hatchery(x)) -> MightReleaseAnimalsIntoWild(Hatchery(x))", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Museum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Museum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Museum/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Museum/1\n"}
{"timestamp": "2025-06-10T01:23:01.178019", "premises": ["Museum(NationalLobsterHatchery) & In(Padstow, England) & In(NationalLobsterHatchery, Padstow)", "OpenToVisitors(NationalLobsterHatchery)", "(ForProfit(Museum) | ForDestruction(Museum))", "ForDestruction(Hatchery) \u2192 MightReleaseAnimalsIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.\nForDestruction(Hatchery) \u2192 MightReleaseAnimalsIntoWild(Hatchery)\n                         ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.\nForDestruction(Hatchery) \u2192 MightReleaseAnimalsIntoWild(Hatchery)\n                         ^\n"}
{"timestamp": "2025-06-10T01:23:01.188616", "premises": ["Museum(NationalLobsterHatchery) & LocatedIn(Padstow, England)", "OpenToVisitors(NationalLobsterHatchery)", "((ForProfit(Museum) & -ForDestruction(Museum)) | (-ForProfit(Museum) & ForDestruction(Museum)))", "ForDestruction(Hatchery) -> MightReleaseIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "ForDestruction(NationalLobsterHatchery)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Museum/1, Museum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Museum/1, Museum/0\n"}
{"timestamp": "2025-06-10T01:24:03.598057", "premises": ["WonTheNobelPrize(DonaldKnuth, y) & WonTheNobelPrize(MarvinMinsky, y) & WonTheNobelPrize(RichardHamming, y) & WonTheNobelPrize(JohnMcCarthy, y)", "WonTheNobelPrize(DonaldKnuth, y) -> IgnoredContributionsToAnalysisOfAlgorithms(y)", "WonTheNobelPrize(MarvinMinsky, y) -> ContributionsToPoleDancing(y)", "WonTheNobelPrize(RichardHamming, y) -> HatesNumericalMethods(y)", "WonTheNobelPrize(JohnMcCarthy, y) -> ContributionsToPoleDancing(y)"], "conclusion": "exists y. (ContributionsToPoleDancing(y) & exists z. (ContributionsToPoleDancing(z) & z \u2260 y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists y. (ContributionsToPoleDancing(y) & exists z. (ContributionsToPoleDancing(z) & z \u2260 y))\n                                                                                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists y. (ContributionsToPoleDancing(y) & exists z. (ContributionsToPoleDancing(z) & z \u2260 y))\n                                                                                        ^\n"}
{"timestamp": "2025-06-10T01:24:03.599357", "premises": ["all x. (NobelPrizeWinner(x) -> (x = DonaldKnuth | x = MarvinMinsky | x = RichardHamming | x = JohnMcCarthy))", "IgnoredContributions(DonaldKnuth, AlgorithmAnalysis)", "RecognizedContributions(MarvinMinsky, PoleDancing)", "HatedMethods(RichardHamming, NumericalMethods)", "MadeContributions(JohnMcCarthy, PoleDancing)"], "conclusion": "exists x. exists y. (NobelPrizeWinner(x) & NobelPrizeWinner(y) & (x =/= y) & (MadeContributions(x, PoleDancing) | MadeContributions(y, PoleDancing)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: =/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: =/2\n"}
{"timestamp": "2025-06-10T01:25:10.611106", "premises": ["all x. (x \u2208 {DonaldKnuth, MarvinMinsky, RichardHamming, JohnMcCarthy} -> AwardedNobelPrize(x))", "-ContributedToAnalysisOfAlgorithms(DonaldKnuth)", "ContributedToPoleDancing(MarvinMinsky)", "-LikedNumericalMethods(RichardHamming)", "ContributedToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. exists y. (x \u2260 y & AwardedNobelPrize(x) & AwardedNobelPrize(y) & ContributedToPoleDancing(x) & ContributedToPoleDancing(y))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (x \u2260 y & AwardedNobelPrize(x) & AwardedNobelPrize(y) & ContributedToPoleDancing(x) & ContributedToPoleDancing(y))\n                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (x \u2260 y & AwardedNobelPrize(x) & AwardedNobelPrize(y) & ContributedToPoleDancing(x) & ContributedToPoleDancing(y))\n                       ^\n"}
{"timestamp": "2025-06-10T01:25:10.611779", "premises": ["NobelPrize(Donald) & NobelPrize(Marvin) & NobelPrize(Richard) & NobelPrize(John)", "NobelPrize(Donald) & -ContributedTo(AnalysisOfAlgorithms)", "NobelPrize(Marvin) & ContributedTo(PoleDancing)", "NobelPrize(Richard) & -ContributedTo(NumericalMethods)", "NobelPrize(John) & ContributedTo(PoleDancing)"], "conclusion": "exists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributedTo(PoleDancing(x)) & ContributedTo(PoleDancing(y)) & x \u2260 y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributedTo(PoleDancing(x)) & ContributedTo(PoleDancing(y)) & x \u2260 y)\n                                                                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2260'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2260'.  Expected token ')'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributedTo(PoleDancing(x)) & ContributedTo(PoleDancing(y)) & x \u2260 y)\n                                                                                                                       ^\n"}
{"timestamp": "2025-06-10T01:25:10.612126", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "-Contributed(DonaldKnuth, AnalysisOfAlgorithms)", "Contributed(MarvinMinsky, PoleDancing)", "Hated(RichardHamming, NumericalMethods)", "Contributed(JohnMcCarthy, PoleDancing)"], "conclusion": "{Minsky, McCarthy} \u2286 {x | NobelPrize(x) & Contributed(x, PoleDancing)}", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: ','.\n{Minsky, McCarthy} \u2286 {x | NobelPrize(x) & Contributed(x, PoleDancing)}\n       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: ','.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: ','.\n{Minsky, McCarthy} \u2286 {x | NobelPrize(x) & Contributed(x, PoleDancing)}\n       ^\n"}
{"timestamp": "2025-06-10T01:25:10.662418", "premises": ["exists x. (NobelPrize(x) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy)))", "-ContributionToAnalysisOfAlgorithms(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "-HatedNumericalMethods(RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributionToPoleDancing(x) & ContributionToPoleDancing(y) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy)) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy))) </PREMISES> <CONCLUSION> At least two people who worked in pole dancing have won the Nobel Prize. </CONCLUSION> <EVALUATE>  However, the conclusion does not follow from the premises because the premises only provide information about the contributions of individual winners of the Nobel Prize, but do not guarantee that at least two people who worked in pole dancing have won the Nobel Prize.  To demonstrate this, we can rephrase the conclusion to:  \"There exist at least two people, one of whom is Marvin Minsky or John McCarthy, and the other of whom is Donald Knuth or Richard Hamming, and both of whom won the Nobel Prize.\"  However, this revised conclusion does not follow from the premises either, because the premises do not guarantee that Marvin Minsky and John McCarthy are the only people who contributed to pole dancing and won the Nobel Prize, or that Donald Knuth and Richard Hamming are the only people who did not contribute to pole dancing and won the Nobel Prize.  Therefore, the conclusion does not follow from the premises.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributionToPoleDancing(x) & ContributionToPoleDancing(y) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy)) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy))) </PREMISES> <CONCLUSION> At least two people who worked in pole dancing have won the Nobel Prize. </CONCLUSION> <EVALUATE>  However, the conclusion does not follow from the premises because the premises only provide information about the contributions of individual winners of the Nobel Prize, but do not guarantee that at least two people who worked in pole dancing have won the Nobel Prize.  To demonstrate this, we can rephrase the conclusion to:  \"There exist at least two people, one of whom is Marvin Minsky or John McCarthy, and the other of whom is Donald Knuth or Richard Hamming, and both of whom won the Nobel Prize.\"  However, this revised conclusion does not follow from the premises either, because the premises do not guarantee that Marvin Minsky and John McCarthy are the only people who contributed to pole dancing and won the Nobel Prize, or that Donald Knuth and Richard Hamming are the only people who did not contribute to pole dancing and won the Nobel Prize.  Therefore, the conclusion does not follow from the premises.\nstack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. exists y. (NobelPrize(x) & NobelPrize(y) & ContributionToPoleDancing(x) & ContributionToPoleDancing(y) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy)) & (Person(DonaldKnuth) & NobelPrize(DonaldKnuth) | Person(MarvinMinsky) & NobelPrize(MarvinMinsky) | Person(RichardHamming) & NobelPrize(RichardHamming) | Person(JohnMcCarthy) & NobelPrize(JohnMcCarthy))) </PREMISES> <CONCLUSION> At least two people who worked in pole dancing have won the Nobel Prize. </CONCLUSION> <EVALUATE>  However, the conclusion does not follow from the premises because the premises only provide information about the contributions of individual winners of the Nobel Prize, but do not guarantee that at least two people who worked in pole dancing have won the Nobel Prize.  To demonstrate this, we can rephrase the conclusion to:  \"There exist at least two people, one of whom is Marvin Minsky or John McCarthy, and the other of whom is Donald Knuth or Richard Hamming, and both of whom won the Nobel Prize.\"  However, this revised conclusion does not follow from the premises either, because the premises do not guarantee that Marvin Minsky and John McCarthy are the only people who contributed to pole dancing and won the Nobel Prize, or that Donald Knuth and Richard Hamming are the only people who did not contribute to pole dancing and won the Nobel Prize.  Therefore, the conclusion does not follow from the premises.\nn"}
{"timestamp": "2025-06-10T01:26:05.217597", "premises": ["all x. (NobelPrizeWinner(x) & (DonaldKnuth(x) | MarvinMinsky(x) | RichardHamming(x) | JohnMcCarthy(x)))", "DonaldKnuth(x) & NobelPrizeWinner(x) & -ContributionsToAnalysisOfAlgorithms(x)", "MarvinMinsky(x) & NobelPrizeWinner(x) & ContributionsToPoleDancing(x)", "RichardHamming(x) & NobelPrizeWinner(x) & HatedNumericalMethods(x)", "JohnMcCarthy(x) & NobelPrizeWinner(x) & ContributionsToPoleDancing(x)"], "conclusion": "-NobelPrizeWinner(x) | -HatedNumericalMethods(x) </PREMISES> <CONCLUSION> No Nobel Prize winners hated the field of numerical methods.  FOL:", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n-NobelPrizeWinner(x) | -HatedNumericalMethods(x) </PREMISES> <CONCLUSION> No Nobel Prize winners hated the field of numerical methods.  FOL:\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n-NobelPrizeWinner(x) | -HatedNumericalMethods(x) </PREMISES> <CONCLUSION> No Nobel Prize winners hated the field of numerical methods.  FOL:\n                                                 ^\n"}
{"timestamp": "2025-06-10T01:27:19.472426", "premises": ["all x. (Corgi(x) -> Plant(x))", "exists x. (Invisible(x) & Corgi(x)) </PREMISES> <CONCLUSION> Some invisible things are plants.  FOL: exists x. (Invisible(x) & Plant(x)) </CONCLUSION> <EVALUATE>", "exists x. (Invisible(x) & Plant(x))", "exists x. (Invisible(x) & Plant(x))"], "conclusion": "exists x. (Invisible(x) & Plant(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nexists x. (Invisible(x) & Corgi(x)) </PREMISES> <CONCLUSION> Some invisible things are plants.  FOL: exists x. (Invisible(x) & Plant(x)) </CONCLUSION> <EVALUATE>\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nexists x. (Invisible(x) & Corgi(x)) </PREMISES> <CONCLUSION> Some invisible things are plants.  FOL: exists x. (Invisible(x) & Plant(x)) </CONCLUSION> <EVALUATE>\n                                    ^\n"}
{"timestamp": "2025-06-10T01:27:19.479717", "premises": ["Plant(Corgis)", "exists x. (Invisible(x) & Corgis(x))"], "conclusion": "exists x. (Invisible(x) & Plant(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgis/1, Corgis/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgis/1, Corgis/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Corgis/1, Corgis/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Corgis/1, Corgis/0\n"}
{"timestamp": "2025-06-10T01:27:56.930276", "premises": ["Dendrobium(Bulbophyllum attenuatum)", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "Dendrobium(Bulbophyllum attenuatum) & -Animal(Bulbophyllum attenuatum)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'attenuatum'.  Expected token ')'.\nDendrobium(Bulbophyllum attenuatum) & -Animal(Bulbophyllum attenuatum)\n                        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'attenuatum'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'attenuatum'.  Expected token ')'.\nDendrobium(Bulbophyllum attenuatum) & -Animal(Bulbophyllum attenuatum)\n                        ^\n"}
{"timestamp": "2025-06-10T01:27:56.938192", "premises": ["all x. (BulbophyllumAttenuatum(x) -> Dendrobium(x))", "all x. (Dendrobium(x) -> Animal(x))"], "conclusion": "-Animal(BulbophyllumAttenuatum)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BulbophyllumAttenuatum/1, BulbophyllumAttenuatum/0\n"}
{"timestamp": "2025-06-10T01:28:52.184083", "premises": ["all x. (Giordano(x) -> Chinese(x))", "RoversiAlba(Giordano)", "RoversiPaolo(Giordano)", "RoversiRoberto(Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> Professional(x) | Amateur(x))"], "conclusion": "Chinese(Giordano)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Giordano/1, Giordano/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Giordano/1, Giordano/0\n"}
{"timestamp": "2025-06-10T01:28:52.177831", "premises": ["all x. (Giordano(x) -> ChineseSurname(x))", "Giordano(AlbaRoversi)", "Giordano(PaoloRoversi)", "Giordano(RobertoRoversi)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "Giordano(AlbaRoversi) & exists x. (Astronaut(x) & PaoloRoversi(x)) -> ChineseSurname(AlbaRoversi)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0.\n\n\nFatal error:  The following symbols are used with multiple arities: PaoloRoversi/1, PaoloRoversi/0\n"}
{"timestamp": "2025-06-10T01:28:52.185189", "premises": ["all x. (Surname(x) & x = Giordano -> Chinese(x)) However, it is more appropriate to represent this as: FOL: Chinese(Giordano)", "Surname(AlbaRoversi, Giordano)", "Surname(PaoloRoversi, Giordano)", "Surname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> Professional(x) | Amateur(x))"], "conclusion": "Chinese(Surname(AlbaRoversi))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\nall x. (Surname(x) & x = Giordano -> Chinese(x)) However, it is more appropriate to represent this as: FOL: Chinese(Giordano)\n                                                 ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\nall x. (Surname(x) & x = Giordano -> Chinese(x)) However, it is more appropriate to represent this as: FOL: Chinese(Giordano)\n                                                 ^\n"}
{"timestamp": "2025-06-10T01:28:52.188333", "premises": ["all x. (Giordano(x) \u2192 ChineseSurname(x))", "AlbaRoversi(x) \u2192 Giordano(x)", "PaoloRoversi(x) \u2192 Giordano(x)", "RobertoRoversi(x) \u2192 Giordano(x)", "PaoloRoversi(x) \u2192 Astronaut(x)", "all x. (Astronaut(x) \u2192 Professional(x) | Amateur(x))"], "conclusion": "ChineseSurname(AlbaRoversi)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\nall x. (Giordano(x) \u2192 ChineseSurname(x))\n                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\nall x. (Giordano(x) \u2192 ChineseSurname(x))\n                    ^\n"}
{"timestamp": "2025-06-10T01:28:52.192402", "premises": ["ChineseSurname(Giordano)", "UsesSurname(AlbaRoversi, Giordano)", "UsesSurname(PaoloRoversi, Giordano)", "UsesSurname(RobertoRoversi, Giordano)", "Astronaut(PaoloRoversi)", "all x. (Astronaut(x) -> (Professional(x) | Amateur(x)))"], "conclusion": "ChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) -> ChineseSurname(Giordano) | ChineseSurname(Giordano) | ChineseSurname(Giordano)     ChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) & ChineseSurname(Giordano)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'ChineseSurname'.\nChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) -> ChineseSurname(Giordano) | ChineseSurname(Giordano) | ChineseSurname(Giordano)     ChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) & ChineseSurname(Giordano)\n                                                                                                                                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'ChineseSurname'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'ChineseSurname'.\nChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) -> ChineseSurname(Giordano) | ChineseSurname(Giordano) | ChineseSurname(Giordano)     ChineseSurname(Giordano) & UsesSurname(AlbaRoversi, Giordano) & ChineseSurname(Giordano)\n                                                                                                                                                    ^\n"}
{"timestamp": "2025-06-10T01:29:42.608057", "premises": ["HeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem) & HeavyCruiser(USSSalem)  FOL: HeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem)", "exists x. (HeavyCruiser(x) & Sank(x) & Last(x) & USSSalem(x))  FOL: exists x. (HeavyCruiser(x) & Sank(x) & Last(x))", "Battleship(USSSalem)  FOL: Battleship(USSSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Sank(USSSalem, AtlanticAndMediterranean)  FOL: Sank(USSSalem, AtlanticAndMediterranean) </PREMISES> <CONCLUSION> The USS Salem is closed to the public.  FOL: Battleship(USSSalem) & ClosedToPublic(USSSalem)"], "conclusion": "ClosedToPublic(USSSalem)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nHeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem) & HeavyCruiser(USSSalem)  FOL: HeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem)\n                                                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nHeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem) & HeavyCruiser(USSSalem)  FOL: HeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem)\n                                                                                  ^\n"}
{"timestamp": "2025-06-10T01:29:42.596727", "premises": ["DestroyedBy(Usn, HeavyCruiser(UssSalem))", "LastSink(HeavyCruiser, USSSalem)", "Battleship(UssSalem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "SankIn(UssSalem, AtlanticAndMediterranean)"], "conclusion": "ClosedToPublic(UssSalem)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeavyCruiser/0, HeavyCruiser/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HeavyCruiser/0, HeavyCruiser/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: HeavyCruiser/0, HeavyCruiser/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HeavyCruiser/0, HeavyCruiser/1\n"}
{"timestamp": "2025-06-10T01:30:30.322934", "premises": ["Cruiser(uss_salem) & DestroyedBy(uss_salem, united_states_navy)", "Last(Cruiser(uss_salem))", "Battleship(uss_salem)", "all x. (Battleship(x) -> ClosedToPublic(x))", "Evaporated(uss_salem, atlantic) & Evaporated(uss_salem, mediterranean)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, mediterranean))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Cruiser/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Cruiser/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Cruiser/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Cruiser/1\n"}
{"timestamp": "2025-06-10T01:30:30.318783", "premises": ["HeavyCruiser(UssSalem) & DestroyedBy(UssSalem, UnitedStatesNavy)", "LastHeavyCruiserToSink(UssSalem)", "Battleship(UssSalem)", "ClosedToPublic(Battleship)", "EvaporatedIn(UssSalem, Atlantic) & EvaporatedIn(UssSalem, Mediterranean)"], "conclusion": "Battleship(x) & ClosedToPublic(x) & EvaporatedIn(x, Mediterranean)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Battleship/1, Battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Battleship/1, Battleship/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Battleship/1, Battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Battleship/1, Battleship/0\n"}
{"timestamp": "2025-06-10T01:30:30.326345", "premises": ["HeavyCruiser(USS_Salem) & DestroyedBy(UnitedStatesNavy, USS_Salem)", "LastHeavyCruiserToSink(USS_Salem)", "Battleship(USS_Salem)", "ClosedToPublic(Battleship)", "EvaporatedInAtlantic(USS_Salem) & EvaporatedInMediterranean(USS_Salem)"], "conclusion": "Battleship(?x) & ClosedToPublic(?x) & EvaporatedInMediterranean(?x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((Battleship(%%START ERROR%%?x%%END ERROR%%) & ClosedToPublic(?x)) & EvaporatedInMediterranean(?x)).\n\nFatal error:  sread_term error", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: A term cannot be constructed from the marked string:\n\n\n    ((Battleship(%%START ERROR%%?x%%END ERROR%%) & ClosedToPublic(?x)) & EvaporatedInMediterranean(?x)).\n\nFatal error:  sread_term error\n"}
{"timestamp": "2025-06-10T01:30:30.333045", "premises": ["HeavyCruiser(UssSalem) & DestroyedBy(UssSalem, UnitedStatesNavy)", "all x. (-Exists(y) [Sink(y) & HeavyCruiser(y)] | Sink(x) & HeavyCruiser(x) & x = UssSalem)", "Battleship(UssSalem)", "all x. Battleship(x) -> ClosedToPublic(x)", "Evaporated(UssSalem, Atlantic) & Evaporated(UssSalem, Mediterranean)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, Mediterranean))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '[Sink'.  Expected token ')'.\nall x. (-Exists(y) [Sink(y) & HeavyCruiser(y)] | Sink(x) & HeavyCruiser(x) & x = UssSalem)\n                   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '[Sink'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '[Sink'.  Expected token ')'.\nall x. (-Exists(y) [Sink(y) & HeavyCruiser(y)] | Sink(x) & HeavyCruiser(x) & x = UssSalem)\n                   ^\n"}
{"timestamp": "2025-06-10T01:30:30.327863", "premises": ["HeavyCruiser(uss_salem) & DestroyedBy(uss_salem, unitedstatesnavy)", "LastToSink(uss_salem)", "Battleship(uss_salem)", "all x. (Battleship(x) -> ClosedToPublic(x))"], "conclusion": "Evaporated(uss_salem, atlantic) & Evaporated(uss_salem, mediterranean) </PREMISES> <CONCLUSION> There is a battleship closed to the public that evaporated in the Mediterranean.  FOL: exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, mediterranean)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nEvaporated(uss_salem, atlantic) & Evaporated(uss_salem, mediterranean) </PREMISES> <CONCLUSION> There is a battleship closed to the public that evaporated in the Mediterranean.  FOL: exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, mediterranean)) </CONCLUSION> <EVALUATE>\n                                                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    c = read_expr(normalize_implications(conclusion))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nEvaporated(uss_salem, atlantic) & Evaporated(uss_salem, mediterranean) </PREMISES> <CONCLUSION> There is a battleship closed to the public that evaporated in the Mediterranean.  FOL: exists x. (Battleship(x) & ClosedToPublic(x) & Evaporated(x, mediterranean)) </CONCLUSION> <EVALUATE>\n                                                                       ^\n"}
{"timestamp": "2025-06-10T01:30:30.344979", "premises": ["HeavyCruiser(USSSalem) & DestroyedBy(USSNavy, USSSalem)", "LastHeavyCruiserToSink(USSSalem)", "Battleship(USSSalem)", "ClosedToPublic(Battleship)", "EvaporatedIn(Atlantic, USSSalem) & EvaporatedIn(Mediterranean, USSSalem)"], "conclusion": "exists x. (Battleship(x) & ClosedToPublic(x) & EvaporatedIn(Mediterranean, x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Battleship/1, Battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Battleship/1, Battleship/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Battleship/1, Battleship/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Battleship/1, Battleship/0\n"}
{"timestamp": "2025-06-10T01:31:09.754464", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> RockAlbum(x))", "Consumed(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Consumed(Astronaut, WellDone3) & all x. (Astronaut(x) -> RockAlbum(x)) -> RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Astronaut/1, Astronaut/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Astronaut/1, Astronaut/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Astronaut/1, Astronaut/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Astronaut/1, Astronaut/0\n"}
{"timestamp": "2025-06-10T01:31:09.754267", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "ConsumeRockAlbums(Tyga, WellDone3) -> RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/1, ConsumeRockAlbums/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/1, ConsumeRockAlbums/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/1, ConsumeRockAlbums/2.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/1, ConsumeRockAlbums/2\n"}
{"timestamp": "2025-06-10T01:31:09.754390", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> RockAlbum(Consumes(x)))", "Consumes(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Consumes/2, Consumes/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Consumes/2, Consumes/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Consumes/2, Consumes/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Consumes/2, Consumes/1\n"}
{"timestamp": "2025-06-10T01:31:09.768798", "premises": ["exists x. (Astronaut(x) & x = Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:31:09.769761", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> Consumes(x, RockAlbum))", "Consumes(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0.\n\n\nFatal error:  The following symbols are used with multiple arities: RockAlbum/1, RockAlbum/0\n"}
{"timestamp": "2025-06-10T01:31:09.769258", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbum(x))", "ConsumeRockAlbum(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbum/2, ConsumeRockAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbum/2, ConsumeRockAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbum/2, ConsumeRockAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbum/2, ConsumeRockAlbum/1\n"}
{"timestamp": "2025-06-10T01:31:09.772108", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "RockAlbum(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n    truth_value = prover.prove(c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:31:49.540225", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRapAlbums(x))", "ConsumeRapAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1\n"}
{"timestamp": "2025-06-10T01:31:49.546028", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumesRapAlbums(x))", "ConsumesRapAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRapAlbums/2, ConsumesRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRapAlbums/2, ConsumesRapAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRapAlbums/2, ConsumesRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRapAlbums/2, ConsumesRapAlbums/1\n"}
{"timestamp": "2025-06-10T01:31:49.557785", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRapAlbums(x))", "ConsumeRapAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1\n"}
{"timestamp": "2025-06-10T01:31:49.566457", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRapAlbum(x))", "ConsumeRapAlbum(Tyga, WellDone3)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbum/2, ConsumeRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbum/2, ConsumeRapAlbum/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbum/2, ConsumeRapAlbum/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbum/2, ConsumeRapAlbum/1\n"}
{"timestamp": "2025-06-10T01:31:49.571869", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRapAlbums(x))", "ConsumeRapAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -Rapper(x))"], "conclusion": "Rapper(Tyga)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRapAlbums/2, ConsumeRapAlbums/1\n"}
{"timestamp": "2025-06-10T01:32:53.152172", "premises": ["exists x. (Monkeypox(x) -> may_get_aids(x))", "exists x. (Plant(x) & OccursIn(x, Monkeypox))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (Aids(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energizedness(x)))", "all x. (Flu(x) -> Energizedness(x))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Monkeypox/1, Monkeypox/0\n"}
{"timestamp": "2025-06-10T01:32:53.159388", "premises": ["all x. (MonkeypoxVirus(x) -> Possible(AIDS(x)))", "exists x. (Plant(x) & MonkeypoxVirus(x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "all x. (AIDS(x) -> (Fever(x) & Headache(x) & MusclePains(x) & Energizedness(x)))", "all x. (Flu(x) -> Energizedness(x))"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: AIDS/1.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: AIDS/1\n"}
{"timestamp": "2025-06-10T01:32:53.169196", "premises": ["Occurs(Monkeypox, x) -> Possible(AIDS(x))", "exists x. (Plant(x) & Possible(Monkeypox, x))", "all x. (Human(x) -> Plant(x))", "all x. (Plant(x) -> Unicorn(x))", "Symptoms(AIDS, Fever) & Symptoms(AIDS, Headache) & Symptoms(AIDS, MusclePains) & Symptoms(AIDS, Energizedness)", "Symptoms(Flu, Energizedness)"], "conclusion": "exists x. Unicorn(x)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Possible/2, Possible/1, AIDS/0, AIDS/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Possible/2, Possible/1, AIDS/0, AIDS/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Possible/2, Possible/1, AIDS/0, AIDS/1.\n\n\nFatal error:  The following symbols are used with multiple arities: Possible/2, Possible/1, AIDS/0, AIDS/1\n"}
{"timestamp": "2025-06-10T01:33:20.995787", "premises": ["all x. (Square(x) -> ThreeSided(x))", "all x. (ThreeSided(x) -> Animal(x))"], "conclusion": "all x. (Square(x) -> Animal(x))   Note: This FOL expression is valid due to the transitivity of the two given universal rules.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Note:'.\nall x. (Square(x) -> Animal(x))   Note: This FOL expression is valid due to the transitivity of the two given universal rules.\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Note:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Note:'.\nall x. (Square(x) -> Animal(x))   Note: This FOL expression is valid due to the transitivity of the two given universal rules.\n                                  ^\n"}
{"timestamp": "2025-06-10T01:34:08.582715", "premises": ["all x. (NaturalLanguageProcessingTask(x) -> (ObjectIdentificationTask(x) | SemanticSegmentationTask(x)))", "all x. (TextSequence(x) -> ObjectIdentificationTask(x))", "exists x. (NaturalLanguageProcessingTask(x) & MachineTranslation(x))", "TextSequence(MachineTranslationOutput)"], "conclusion": "ObjectIdentificationTask(MachineTranslation)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0.\n\n\nFatal error:  The following symbols are used with multiple arities: MachineTranslation/1, MachineTranslation/0\n"}
{"timestamp": "2025-06-10T01:34:46.774904", "premises": ["exists x. (Reptile(x) & Eyes(x))", "all x. (Platypus(x) -> -Eyes(x))", "all x. (Platypus(x) -> Reptile(x))", "exists x. (Corgi(x) & Eyes(x))"], "conclusion": "(Platypus(Platypus) & Reptile(Platypus) & -Eyes(Platypus))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:34:46.778581", "premises": ["exists x. (Reptile(x) & HaveEyes(x))", "-HaveEyes(Platypus)", "Platypus -> Reptile", "HaveEyes(Corgi)"], "conclusion": "Reptile(Platypus) & -HaveEyes(Platypus)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: Platypus/0.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: Platypus/0\n"}
{"timestamp": "2025-06-10T01:36:16.441720", "premises": ["In(Paris, UnitedStatesOfAmerica)", "PartOf(UnitedStatesOfAmerica, SouthAmerica)", "In(SouthAmerica, EasternHemisphere)", "-Inhabitant(Paris)", "In(A, B) & In(B, C) -> In(A, C)"], "conclusion": "- (In(UnitedStatesOfAmerica, EasternHemisphere) <- In(UnitedStatesOfAmerica, SouthAmerica))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '<'.  Expected token ')'.\n-(- (In(UnitedStatesOfAmerica, EasternHemisphere) <- In(UnitedStatesOfAmerica, SouthAmerica)))\n                                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '<'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 202, in evaluate\n    negation_true = prover.prove(neg_c, p_list)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '<'.  Expected token ')'.\n-(- (In(UnitedStatesOfAmerica, EasternHemisphere) <- In(UnitedStatesOfAmerica, SouthAmerica)))\n                                                  ^\n"}
{"timestamp": "2025-06-10T01:36:16.468595", "premises": ["all x. (Paris(x) -> In(x, Unitedstatesofamerica))", "all x. (Unitedstatesofamerica(x) -> Partof(x, Southamerica))", "all x. (Southamerica(x) -> Easternhemisphere(x))", "all x. (Paris(x) -> (Highlydeveloped(x) & -Inhabited(x)))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(Unitedstatesofamerica, Easternhemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Easternhemisphere/1, Easternhemisphere/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Easternhemisphere/1, Easternhemisphere/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Easternhemisphere/1, Easternhemisphere/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Easternhemisphere/1, Easternhemisphere/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0\n"}
{"timestamp": "2025-06-10T01:36:16.460417", "premises": ["Paris(x) -> In(x, Unitedstatesofamerica)", "Unitedstatesofamerica(x) -> Partof(x, Southamerica)", "Southamerica(x) -> In(x, Easternhemisphere)", "Paris(x) -> (HighlyDeveloped(x) & NooneLives(x))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(Unitedstatesofamerica, Easternhemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Southamerica/1, Southamerica/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0\n"}
{"timestamp": "2025-06-10T01:36:16.474744", "premises": ["In(Paris, Unitedstatesofamerica)", "all x. (Unitedstatesofamerica(x) -> Partof(x, Southamerica))", "In(Southamerica, Easternhemisphere)", "all x. (Paris(x) -> Highlydeveloped(x) & -Resident(x))", "all x. all y. all z. (In(x, y) & In(y, z) -> In(x, z))"], "conclusion": "-In(Unitedstatesofamerica, Easternhemisphere)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Paris/1, Paris/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Paris/1, Paris/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Paris/1, Paris/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Paris/1, Paris/0, Unitedstatesofamerica/1, Unitedstatesofamerica/0\n"}
{"timestamp": "2025-06-10T01:37:33.713740", "premises": ["all x. (EatEggs(x) -> Platypus(x) | Echidna(x))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.708897", "premises": ["all x. (EatEggs(x) & Bird(x) -> Platypus(x) | Echidna(x))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.710618", "premises": ["all x. (EatEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.713865", "premises": ["all x. (Birds(x) & EatEggs(x) -> (Platypus(x) | Echidna(x)))", "all x. (Platypus(x) -> -Animal(x))", "all x. (Echidna(x) -> -Animal(x))", "all x. (Birds(x) -> -Vertebrate(x))", "all x. (Plant(x) -> (Vertebrate(x) | Vertebrate(x)))", "all x. (Birds(x) -> Plant(x))", "all x. (Animal(x) -> Birds(x))", "all x. (Grebe(x) -> EatEggs(x))", "all x. (Grebe(x) -> -(Platypus(x) | Echidna(x)))"], "conclusion": "-Birds(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Grebe/1, Grebe/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Grebe/1, Grebe/0\n"}
{"timestamp": "2025-06-10T01:37:33.715650", "premises": ["all x. (EggEater(x) & Bird(x) -> Platypus(x) | Echidna(x))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EggEater(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.734474", "premises": ["all x. (BirdEatsEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "BirdEatsEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.737031", "premises": ["all x. (Bird(x) & EatEggs(x) -> (Platypus(x) | Echidna(x)))", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatEggs(Grebes)", "-Platypus(Grebes) & -Echidna(Grebes)"], "conclusion": "-Bird(Grebes)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:37:33.739201", "premises": ["(Platypus(x) & EatEggs(x) | Echidna(x) & EatEggs(x)) -> Bird(x)", "-Animal(Platypus)", "-Animal(Echidna)", "all x. (Bird(x) -> -Vertebrate(x))", "all x. (Plant(x) -> Vertebrate(x))", "all x. (Bird(x) -> Plant(x))", "all x. (Animal(x) -> Bird(x))", "EatEggs(Grebe)", "-Platypus(Grebe) & -Echidna(Grebe)"], "conclusion": "-Bird(Grebe)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Echidna/1, Echidna/0, Platypus/1, Platypus/0\n"}
{"timestamp": "2025-06-10T01:38:05.450280", "premises": ["not all x. Move(x)", "all x. (Move(x) -> Breathe(x)) </PREMISES> <CONCLUSION> There exist humans that do not breathe.  FOL: exists x. (Human(x) & -Breathe(x))"], "conclusion": "exists x. (Human(x) & -Breathe(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (Move(x) -> Breathe(x)) </PREMISES> <CONCLUSION> There exist humans that do not breathe.  FOL: exists x. (Human(x) & -Breathe(x))\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (Move(x) -> Breathe(x)) </PREMISES> <CONCLUSION> There exist humans that do not breathe.  FOL: exists x. (Human(x) & -Breathe(x))\n                               ^\n"}
{"timestamp": "2025-06-10T01:38:50.149445", "premises": ["BernardaBrysonShahn(x) -> (Musician(x) & Lithographer(x))", "BornInAthensOhio(BernardaBrysonShahn)", "AttendedUniversityOfWashington(BernardaBrysonShahn)", "all x. (BornInAthensOhio(x) -> Japanese(x))"], "conclusion": "AttendedUniversityOfWashington(BernardaBrysonShahn) | -AttendedUniversityOfWashington(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-06-10T01:38:50.149323", "premises": ["BernardaBrysonShahn(Musician) & BernardaBrysonShahn(Lithographer)", "BornIn(BernardaBrysonShahn, Athens, Ohio)", "Attended(BernardaBrysonShahn, UniversityOfWashington)", "all x. (BornIn(x, Athens, Ohio) -> Japanese(x))"], "conclusion": "AttendedMultipleSchools(BernardaBrysonShahn)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0.\n\n\nFatal error:  The following symbols are used with multiple arities: BernardaBrysonShahn/1, BernardaBrysonShahn/0\n"}
{"timestamp": "2025-06-10T01:39:45.882676", "premises": ["Author(DouglasAdams) & Barber(DouglasAdams) & Book(TheScarletLetter) & CreatedBy(DouglasAdams, TheScarletLetter) & CreatedBy(DouglasAdams, Book) & Barber(DouglasAdams) & CreatedBy(DouglasAdams, TheScarletLetter)", "Book(TheScarletLetter) & About(TheScarletLetter, LifeExperiences) & About(TheScarletLetter, Technology) & ContainsInnovativeIdeas(TheScarletLetter)", "all x. (Author(x) -> Barber(x))", "all x. (Barber(x) -> CreatePages(x))", "exists x. (Book(x) & ContainsInnovativeIdeas(x) & About(x, Technology))"], "conclusion": "-HasPages(TheScarletLetter)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Book/1, Book/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Book/1, Book/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Book/1, Book/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Book/1, Book/0\n"}
{"timestamp": "2025-06-10T01:39:45.895199", "premises": ["Author(DouglasAdams) & CreatedBy(DouglasAdams, TheScarletLetter)", "About(TheScarletLetter, LifeExperiences) & About(TheScarletLetter, Technology)", "all x. (Author(x) -> Barber(x))", "all x. (Barber(x) -> CreatesPages(x))", "exists x. ((InnovativeIdeas(x) & About(x, Technology)) & Book(x))"], "conclusion": "-(CreatesPages(CreatedBy(DouglasAdams, TheScarletLetter)))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CreatedBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CreatedBy/2", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols/arities are used as both relation and function symbols: CreatedBy/2.\n\n\nFatal error:  The following symbols/arities are used as both relation and function symbols: CreatedBy/2\n"}
{"timestamp": "2025-06-10T01:40:30.723001", "premises": ["Medication(Acetaminophen) & DiscoveredIn(Acetaminophen, 1947)", "Treats(Acetaminophen, Fever)", "all x. (PreferredTreatmentFor(x, Fever) <-> Chocolate(x))", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatmentFor(Acetaminophen, Fever)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'Chocolate'.  Expected token ')'.\n(> Chocolate(x)) -> all x. (PreferredTreatmentFor(x, Fever))\n   ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'Chocolate'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'Chocolate'.  Expected token ')'.\n(> Chocolate(x)) -> all x. (PreferredTreatmentFor(x, Fever))\n   ^\n"}
{"timestamp": "2025-06-10T01:40:30.713933", "premises": ["Medication(Acetaminophen) & DiscoveredIn(Acetaminophen, 1947)", "- (Medication(x) & TreatsFever(x) \u2192 x = Acetaminophen)", "PreferredTreatmentForFever(x) \u2192 x = Chocolate", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredFor(Acetaminophen, Fever)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u2192'.  Expected token ')'.\n- (Medication(x) & TreatsFever(x) \u2192 x = Acetaminophen)\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 306, in handle\n    return self.handle_negation(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 327, in handle_negation\n    return self.make_NegatedExpression(self.process_next_expression(Tokens.NOT))\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 450, in handle_open\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u2192'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u2192'.  Expected token ')'.\n- (Medication(x) & TreatsFever(x) \u2192 x = Acetaminophen)\n                                  ^\n"}
{"timestamp": "2025-06-10T01:40:30.724580", "premises": ["Medication(Acetaminophen) & DiscoveredIn(1947, Acetaminophen)", "TreatsFever(Acetaminophen)", "PreferredTreatmentForFever(Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredForFever(Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-06-10T01:40:30.720459", "premises": ["Medication(Acetaminophen) & DiscoveredIn(1947, Acetaminophen)", "TreatsFever(Acetaminophen)", "PreferredTreatmentForFever(Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredForTreatementOfFever(Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-06-10T01:40:30.727317", "premises": ["Medication(Acetaminophen) & DiscoveredIn(Acetaminophen, 1947)", "CanBeUsedFor(TreatingFever, Acetaminophen)", "PreferredTreatmentFor(TreatingFever, Chocolate)", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredFor(TreatingFever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0\n"}
{"timestamp": "2025-06-10T01:40:30.738846", "premises": ["all x. (Medication(x) & YearOfDiscovery(x, 1947) -> Acetaminophen(x))", "Treats(Fever, Acetaminophen)", "PreferredTreatment(Fever, Chocolate) & (PreferredTreatment(Fever, x) -> Chocolate(x))", "-Chocolate(Acetaminophen)"], "conclusion": "-PreferredTreatment(Fever, Acetaminophen)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0, Acetaminophen/1, Acetaminophen/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0, Acetaminophen/1, Acetaminophen/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Chocolate/1, Chocolate/0, Acetaminophen/1, Acetaminophen/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Chocolate/1, Chocolate/0, Acetaminophen/1, Acetaminophen/0\n"}
{"timestamp": "2025-06-10T01:41:17.959519", "premises": ["MonaLisa(Painting)", "MonaLisa(Hair) & ExtractedBy(LorenzoDaVinci, MonaLisa)", "all x. (Dancer(x) & Painter(x) -> Dancer(x) | Painter(x))", "all x. (Painting(x) -> History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: -exists x. (WorldsBestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>", "not exists x. (WorldsBestKnownArtwork(x) & Hair(x))"], "conclusion": "not exists x. (WorldsBestKnownArtwork(x) & Hair(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\nall x. (Painting(x) -> History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: -exists x. (WorldsBestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>\n                                                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\nall x. (Painting(x) -> History(x) | Portrait(x) | Animal(x) | Landscape(x) | StillLife(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: -exists x. (WorldsBestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>\n                                                                                           ^\n"}
{"timestamp": "2025-06-10T01:41:17.961881", "premises": ["BestKnownArtwork(MonaLisa) & Painting(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(LeonardoDaVinci, MonaLisa)", "Dancer(LeonardoDaVinci) | Painter(LeonardoDaVinci)", "(History | Portrait | Animal | Landscape | StillLife)"], "conclusion": "- (BestKnownArtwork(x) & Hair(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: BestKnownArtwork(MonaLisa) & Painting(MonaLisa) & - (BestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '</PREMISES>'.\n- (BestKnownArtwork(x) & Hair(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: BestKnownArtwork(MonaLisa) & Painting(MonaLisa) & - (BestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>\n                                  ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '</PREMISES>'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '</PREMISES>'.\n- (BestKnownArtwork(x) & Hair(x)) </PREMISES> <CONCLUSION> No world's best-known artworks are hairs.  FOL: BestKnownArtwork(MonaLisa) & Painting(MonaLisa) & - (BestKnownArtwork(x) & Hair(x)) </CONCLUSION> <EVALUATE>\n                                  ^\n"}
{"timestamp": "2025-06-10T01:41:18.001034", "premises": ["Painting(MonaLisa) & WorldBestKnown(MonaLisa)", "Hair(MonaLisa) & ExtractedBy(MonaLisa, LeonardoDaVinci)", "Dancer(LeonardoDaVinci) & Painter(LeonardoDaVinci)", "Genre(Painting, History) | Genre(Painting, Portrait) | Genre(Painting, Animal) | Genre(Painting, Landscape) | Genre(Painting, StillLife)"], "conclusion": "-exists x. (WorldBestKnown(x) & Hair(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painting/1, Painting/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painting/1, Painting/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Painting/1, Painting/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Painting/1, Painting/0\n"}
{"timestamp": "2025-06-10T01:42:17.973726", "premises": ["Hatchery(NationalLobsterHatchery) & In(NationalLobsterHatchery, Padstow) & In(Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "all x. ((ForProfit(x) & -ForDestruction(x)) | (-ForProfit(x) & ForDestruction(x)))", "all x. (ForDestruction(x) -> MaybeReleaseAnimals(x))", "-ForProfit(NationalLobsterHatchery)", "all x. (Hatchery(x) -> HasAnimals(x))  FOL: all x. (ForProfit(x) -> HasAnimals(x))  FOL: all x. ((Hatchery(x) & ForDestruction(x)) -> HasAnimals(x))"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\nall x. (Hatchery(x) -> HasAnimals(x))  FOL: all x. (ForProfit(x) -> HasAnimals(x))  FOL: all x. ((Hatchery(x) & ForDestruction(x)) -> HasAnimals(x))\n                                       ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\nall x. (Hatchery(x) -> HasAnimals(x))  FOL: all x. (ForProfit(x) -> HasAnimals(x))  FOL: all x. ((Hatchery(x) & ForDestruction(x)) -> HasAnimals(x))\n                                       ^\n"}
{"timestamp": "2025-06-10T01:42:17.989684", "premises": ["Hatchery(NationalLobsterHatchery) & LocatedIn(NationalLobsterHatchery, Padstow, England)", "HasAnimals(NationalLobsterHatchery)", "(ForProfit(Hatchery) | ForDestruction(Hatchery))", "ForDestruction(Hatchery) -> MightReleaseIntoWild(Hatchery)", "-ForProfit(NationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Hatchery/1, Hatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Hatchery/1, Hatchery/0\n"}
{"timestamp": "2025-06-10T01:42:17.989568", "premises": ["TheNationalLobsterHatchery(X) & Hatchery(X) & In(X, Padstow, England)", "HasAnimals(TheNationalLobsterHatchery)", "((ForProfit(X) & -ForDestruction(X)) | (-ForProfit(X) & ForDestruction(X)))", "ForDestruction(X) -> MightReleaseAnimals(X)", "-ForProfit(TheNationalLobsterHatchery)"], "conclusion": "all x. (Hatchery(x) -> HasAnimals(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0.\n\n\nFatal error:  The following symbols are used with multiple arities: TheNationalLobsterHatchery/1, TheNationalLobsterHatchery/0\n"}
{"timestamp": "2025-06-10T01:42:50.940611", "premises": ["all x. (Hunger(x) -> Satisfaction(x))", "all x. (Satisfaction(x) -> Starving(x))"], "conclusion": "-Hunger(x) -> -Satisfaction(x) FOL: -Satisfaction(x) -> -Starving(x) FOL: -Hunger(x) -> -Starving(x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'FOL:'.\n-Hunger(x) -> -Satisfaction(x) FOL: -Satisfaction(x) -> -Starving(x) FOL: -Hunger(x) -> -Starving(x)\n                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'FOL:'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'FOL:'.\n-Hunger(x) -> -Satisfaction(x) FOL: -Satisfaction(x) -> -Starving(x) FOL: -Hunger(x) -> -Starving(x)\n                               ^\n"}
{"timestamp": "2025-06-10T01:43:20.240739", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.242388", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "all x. (Caterpillar(x) -> \u00acBecomes(x, Butterfly))", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 751: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 751: invalid continuation byte\n"}
{"timestamp": "2025-06-10T01:43:20.245655", "premises": ["exists x. (Caterpillar(x) & Become(x, Bear))", "exists x. (Bear(x) & Become(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Become(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.243975", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.247459", "premises": ["exists x. (Caterpillar(x) & Become(x, Bear))", "exists x. (Bear(x) & Become(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Become(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.264790", "premises": ["exists x. (Caterpillar(x) & Become(x, Bear))", "exists x. (Bear(x) & Become(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Become(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.265324", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.265914", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.266383", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "-exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:43:20.268458", "premises": ["exists x. (Caterpillar(x) & Becomes(x, Bear))", "exists x. (Bear(x) & Becomes(x, Butterfly))"], "conclusion": "not exists x. (Caterpillar(x) & Becomes(x, Butterfly))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Bear/1, Bear/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Bear/1, Bear/0\n"}
{"timestamp": "2025-06-10T01:44:21.780839", "premises": ["{x | NobelPrizeWinner(x) & (x = Knuth | x = Minsky | x = Hamming | x = McCarthy)}", "ContributionToScience(Knuth)", "ContributionToPoleDancing(Minsky)", "HateNumericalMethods(Hamming)", "ContributionToPoleDancing(McCarthy)"], "conclusion": "exactly one x. (NobelPrizeWinner(x) & ContributionToScience(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'one'.\nexactly one x. (NobelPrizeWinner(x) & ContributionToScience(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'one'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'one'.\nexactly one x. (NobelPrizeWinner(x) & ContributionToScience(x))\n        ^\n"}
{"timestamp": "2025-06-10T01:44:21.786380", "premises": ["NobelWinner(DonaldKnuth) & NobelWinner(MarvinMinsky) & NobelWinner(RichardHamming) & NobelWinner(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "-ContributionToNumericalMethods(RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exactlyOne x. (NobelWinner(x) & ContributionToScience(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nexactlyOne x. (NobelWinner(x) & ContributionToScience(x))\n           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nexactlyOne x. (NobelWinner(x) & ContributionToScience(x))\n           ^\n"}
{"timestamp": "2025-06-10T01:44:21.779991", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionsToScience(DonaldKnuth)", "ContributionsToPoleDancing(MarvinMinsky)", "-LikesNumericalMethods(RichardHamming)", "ContributionsToPoleDancing(JohnMcCarthy)"], "conclusion": "ExactlyOne(x. (NobelPrize(x) & ContributionsToScience(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '.'.  Expected token ')'.\nExactlyOne(x. (NobelPrize(x) & ContributionsToScience(x)))\n            ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '.'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '.'.  Expected token ')'.\nExactlyOne(x. (NobelPrize(x) & ContributionsToScience(x)))\n            ^\n"}
{"timestamp": "2025-06-10T01:44:21.788847", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "HateNumericalMethods(RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. (NobelPrize(x) & ContributionToScience(x)) & for all y. (NobelPrize(y) -> ContributionToScience(y) -> y = x)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'all'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) & for all y. (NobelPrize(y) -> ContributionToScience(y) -> y = x)\n                                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'all'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'all'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) & for all y. (NobelPrize(y) -> ContributionToScience(y) -> y = x)\n                                                           ^\n"}
{"timestamp": "2025-06-10T01:44:21.780536", "premises": ["Nobelpreis(Knuth) & Nobelpreis(Minsky) & Nobelpreis(Hamming) & Nobelpreis(McCarthy)", "ContributionToScience(Knuth)", "ContributionToPoleDancing(Minsky)", "-ContributionToNumericalMethods(Hamming)", "ContributionToPoleDancing(McCarthy)"], "conclusion": "exists x. (Nobelpreis(x) & ContributionToScience(x)) & for_all y. (Nobelpreis(y) & ContributionToScience(y) -> x = y)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\nexists x. (Nobelpreis(x) & ContributionToScience(x)) & for_all y. (Nobelpreis(y) & ContributionToScience(y) -> x = y)\n                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\nexists x. (Nobelpreis(x) & ContributionToScience(x)) & for_all y. (Nobelpreis(y) & ContributionToScience(y) -> x = y)\n                                                               ^\n"}
{"timestamp": "2025-06-10T01:44:21.790667", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "-Like(NumericalMethods, RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)", "exactly one x. (NobelPrize(x) & ContributionToScience(x)) </PREMISES> <CONCLUSION> Only one person who won the Nobel Prize made significant contributions to science.  FOL: exactly one x. (NobelPrize(x) & ContributionToScience(x))", "at most one x. (NobelPrize(x) & ContributionToScience(x))", "at most one x. (NobelPrize(x) & ContributionToScience(x)) = at most one x. (NobelPrize(DonaldKnuth) & ContributionToScience(x))", "at most one x. (ContributionToScience(x)) = at most one x. (ContributionToScience(DonaldKnuth))", "at most one x. (ContributionToScience(x))", "exists x. (ContributionToScience(x)) = exists x. (ContributionToScience(DonaldKnuth))", "exactly one x. (ContributionToScience(x))"], "conclusion": "exactly one x. (NobelPrize(x) & ContributionToScience(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'one'.\nexactly one x. (NobelPrize(x) & ContributionToScience(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'one'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'one'.\nexactly one x. (NobelPrize(x) & ContributionToScience(x))\n        ^\n"}
{"timestamp": "2025-06-10T01:44:21.790999", "premises": ["AwardedNobelPrize(DonaldKnuth) & AwardedNobelPrize(MarvinMinsky) & AwardedNobelPrize(RichardHamming) & AwardedNobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "HateNumericalMethods(RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exactly one x. (AwardedNobelPrize(x) & ContributionToScience(x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'one'.\nexactly one x. (AwardedNobelPrize(x) & ContributionToScience(x))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'one'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'one'.\nexactly one x. (AwardedNobelPrize(x) & ContributionToScience(x))\n        ^\n"}
{"timestamp": "2025-06-10T01:44:21.784542", "premises": ["NobelPrize(DonaldKnuth) & NobelPrize(MarvinMinsky) & NobelPrize(RichardHamming) & NobelPrize(JohnMcCarthy)", "ContributionToScience(DonaldKnuth)", "ContributionToPoleDancing(MarvinMinsky)", "HateNumericalMethods(RichardHamming)", "ContributionToPoleDancing(JohnMcCarthy)"], "conclusion": "exists x. (NobelPrize(x) & ContributionToScience(x)) & forAll y. (NobelPrize(y) -> (ContributionToScience(y) -> y = x))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'y'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) & forAll y. (NobelPrize(y) -> (ContributionToScience(y) -> y = x))\n                                                              ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'y'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'y'.\nexists x. (NobelPrize(x) & ContributionToScience(x)) & forAll y. (NobelPrize(y) -> (ContributionToScience(y) -> y = x))\n                                                              ^\n"}
{"timestamp": "2025-06-10T01:44:50.430453", "premises": ["(Appreciated(Banana) | Dreadful(Banana))", "all x. (Gift(x) -> Banana(x))"], "conclusion": "all x. (Gift(x) -> Appreciated(x))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: Banana/1, Banana/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Banana/1, Banana/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: Banana/1, Banana/0.\n\n\nFatal error:  The following symbols are used with multiple arities: Banana/1, Banana/0\n"}
{"timestamp": "2025-06-10T01:45:39.999040", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "-exists x. (AcademicPaper(x) & OriginallyDesignedToAlignWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & Aligns(x, AcademicPaper, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (WrittenBy(x, FirstAuthor(x)) & exists y. (Not(FirstAuthor(y)) & WrittenBy(x, y))))", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0.\n\n\nFatal error:  The following symbols are used with multiple arities: AcademicPaper/1, AcademicPaper/0\n"}
{"timestamp": "2025-06-10T01:45:39.985459", "premises": ["all x. (AcademicPaper(x) -> WrittenBy(x, FirstAuthor(x)))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWith(x, HighSchoolCurriculum))", "exists x. (Adjustment(x) & For(x, AligningWithHighSchoolCurriculum))"], "conclusion": "WrittenBy(AcademicPaper(x), FirstAuthor(x) & Other(AcademicPaper(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nWrittenBy(AcademicPaper(x), FirstAuthor(x) & Other(AcademicPaper(x)))\n                                           ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nWrittenBy(AcademicPaper(x), FirstAuthor(x) & Other(AcademicPaper(x)))\n                                           ^\n"}
{"timestamp": "2025-06-10T01:45:40.003171", "premises": ["all x. all y. (AcademicPaper(x) & FirstAuthor(x, y) -> WrittenBy(x, y))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "all x. (AcademicPaper(x) -> -AlignedWithHighSchoolCurricula(x))", "all x. (Adjusted(x, HighSchoolCurriculumAlignment))"], "conclusion": "all x. all y. (AcademicPaper(x) & FirstAuthor(x, y) -> WrittenBy(x, y & OtherAuthors(x, y)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '&'.  Expected token ')'.\nall x. all y. (AcademicPaper(x) & FirstAuthor(x, y) -> WrittenBy(x, y & OtherAuthors(x, y)))\n                                                                      ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 154, in parse\n    result = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 312, in handle\n    return self.handle_quant(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 427, in handle_quant\n    accum = self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 315, in handle\n    return self.handle_open(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 449, in handle_open\n    accum = self.process_next_expression(None)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 297, in process_next_expression\n    return self.attempt_adjuncts(accum, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 323, in attempt_adjuncts\n    expression = self.attempt_BooleanExpression(expression, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 485, in attempt_BooleanExpression\n    factory, expression, self.process_next_expression(tok)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 290, in process_next_expression\n    accum = self.handle(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 303, in handle\n    return self.handle_variable(tok, context)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 359, in handle_variable\n    self.assertNextToken(Tokens.CLOSE)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 573, in assertNextToken\n    raise UnexpectedTokenException(self._currentIndex, tok, expected)\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '&'.  Expected token ')'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '&'.  Expected token ')'.\nall x. all y. (AcademicPaper(x) & FirstAuthor(x, y) -> WrittenBy(x, y & OtherAuthors(x, y)))\n                                                                      ^\n"}
{"timestamp": "2025-06-10T01:45:40.004744", "premises": ["all x. (AcademicPaper(x) -> FirstAuthor(x) = Author(x))", "all x. (AcademicPaper(x) -> IntendedToBeProfitable(x))", "-AlignedWith(AcademicPaper, HighSchoolCurriculum)", "several x. (Adjusted(x) & AlignedWith(x, HighSchoolCurriculum))"], "conclusion": "all x. (AcademicPaper(x) -> (FirstAuthor(x) & OtherAuthors(x)))", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'x'.\nseveral x. (Adjusted(x) & AlignedWith(x, HighSchoolCurriculum))\n        ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'x'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'x'.\nseveral x. (Adjusted(x) & AlignedWith(x, HighSchoolCurriculum))\n        ^\n"}
{"timestamp": "2025-06-10T01:47:16.808163", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Released(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:47:16.806443", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Released(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:47:16.835414", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumeRockAlbums(x))", "ConsumeRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Released(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumeRockAlbums/2, ConsumeRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:47:16.841509", "premises": ["Astronaut(Tyga)", "all x. (Astronaut(x) -> ConsumesRockAlbums(x))", "ConsumesRockAlbums(Tyga, WellDone3)", "all x. (Astronaut(x) -> -OperaSinger(x))"], "conclusion": "Released(WellDone3)", "error_type": "<class 'nltk.inference.prover9.Prover9FatalException'>", "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRockAlbums/2, ConsumesRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRockAlbums/2, ConsumesRockAlbums/1", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 370, in _call_prover9\n    raise Prover9FatalException(returncode, errormsg)\nnltk.inference.prover9.Prover9FatalException: (FATAL)\n%%ERROR: The following symbols are used with multiple arities: ConsumesRockAlbums/2, ConsumesRockAlbums/1.\n\n\nFatal error:  The following symbols are used with multiple arities: ConsumesRockAlbums/2, ConsumesRockAlbums/1\n"}
{"timestamp": "2025-06-10T01:47:48.058090", "premises": ["all x. (Mammal(x) -> -Breathes(x))", "exists x. (Bird(x) & Mammal(x)) </PREMISES> <CONCLUSION> All birds breathe.  FOL: all x. (Bird(x) -> Breathes(x)) </CONCLUSION> <EVALUATE>"], "conclusion": "exists x. (Bird(x) & -Breathes(x))  However, we can derive a contradiction:  - If some birds do not breathe, then some birds must be mammals (from the premise that some birds are mammals). - If some birds are mammals, then no birds breathe (by the premise that a mammal never breathes). - This is a contradiction, since we assumed that some birds do not breathe.  Thus, we can conclude that all birds breathe.", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: 'However'.\nexists x. (Bird(x) & -Breathes(x))  However, we can derive a contradiction:  - If some birds do not breathe, then some birds must be mammals (from the premise that some birds are mammals). - If some birds are mammals, then no birds breathe (by the premise that a mammal never breathes). - This is a contradiction, since we assumed that some birds do not breathe.  Thus, we can conclude that all birds breathe.\n                                    ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: 'However'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 192, in evaluate\n    p_list = [read_expr(normalize_implications(p)) for p in premises]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: 'However'.\nexists x. (Bird(x) & -Breathes(x))  However, we can derive a contradiction:  - If some birds do not breathe, then some birds must be mammals (from the premise that some birds are mammals). - If some birds are mammals, then no birds breathe (by the premise that a mammal never breathes). - This is a contradiction, since we assumed that some birds do not breathe.  Thus, we can conclude that all birds breathe.\n                                    ^\n"}
{"timestamp": "2025-06-10T01:48:53.956274", "premises": ["all x. (CanTransportMultiplePassengers(x) -> -OneSeater(x))", "all x. (Corgi(x) -> CanTransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEv(x) -> SingleSeatElectricCar(x))", "-Corgi(QueensDogs) -> -Corgi(QueensDogs) | -SingleSeatElectricCar(QueensDogs)  \u00ac(\u00acCorgi(QueensDogs) & \u00ac-SingleSeatElectricCar(QueensDogs)) FOL: - (\u00acCorgi(QueensDogs) & SingleSeatElectricCar(QueensDogs))"], "conclusion": "Corgi(QueensDogs)", "error_type": "<class 'nltk.sem.logic.LogicalExpressionException'>", "error_message": "Unexpected token: '\u00ac'.\n-Corgi(QueensDogs) -> -Corgi(QueensDogs) | -SingleSeatElectricCar(QueensDogs)  \u00ac(\u00acCorgi(QueensDogs) & \u00ac-SingleSeatElectricCar(QueensDogs)) FOL: - (\u00acCorgi(QueensDogs) & SingleSeatElectricCar(QueensDogs))\n                                                                               ^", "stack_trace": "Traceback (most recent call last):\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 156, in parse\n    raise UnexpectedTokenException(self._currentIndex + 1, self.token(0))\nnltk.sem.logic.UnexpectedTokenException: Unexpected token: '\u00ac'.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in evaluate\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 193, in <listcomp>\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 957, in fromstring\n    return cls._logic_parser.parse(s, signature)\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/sem/logic.py\", line 159, in parse\n    raise LogicalExpressionException(None, msg) from e\nnltk.sem.logic.LogicalExpressionException: Unexpected token: '\u00ac'.\n-Corgi(QueensDogs) -> -Corgi(QueensDogs) | -SingleSeatElectricCar(QueensDogs)  \u00ac(\u00acCorgi(QueensDogs) & \u00ac-SingleSeatElectricCar(QueensDogs)) FOL: - (\u00acCorgi(QueensDogs) & SingleSeatElectricCar(QueensDogs))\n                                                                               ^\n"}
{"timestamp": "2025-06-10T01:48:54.003162", "premises": ["all x. (TransportMultiplePassengers(x) -> -OneSeater(x))", "all x. (Corgis(x) -> TransportMultiplePassengers(x))", "all x. (SingleSeatElectricCar(x) -> OneSeater(x))", "all x. (SoloEV(x) -> SingleSeatElectricCar(x))", "\u00acCorgis(QueensDogs) -> \u00acCorgis(QueensDogs) | \u00acSingleSeatElectricCar(QueensDogs)"], "conclusion": "Corgis(QueensDogs)", "error_type": "<class 'UnicodeDecodeError'>", "error_message": "'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte", "stack_trace": "Traceback (most recent call last):\n  File \"/data/gpfs/projects/punim0478/bansaab/linc2/eval/tasks/utils.py\", line 196, in evaluate\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/api.py\", line 37, in prove\n    return self._prove(goal, assumptions, verbose)[0]\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 327, in _prove\n    stdout, returncode = self._call_prover9(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 356, in _call_prover9\n    stdout, returncode = self._call(\n  File \"/home/bansaab/.conda/envs/neurosymbolic/lib/python3.10/site-packages/nltk/inference/prover9.py\", line 219, in _call\n    return (stdout.decode(\"utf-8\"), p.returncode)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc2 in position 598: invalid continuation byte\n"}
